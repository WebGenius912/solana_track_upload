diff --git a/node_modules/libp2p-gossipsub/CHANGELOG.md b/node_modules/libp2p-gossipsub/CHANGELOG.md
new file mode 100644
index 0000000..328f192
--- /dev/null
+++ b/node_modules/libp2p-gossipsub/CHANGELOG.md
@@ -0,0 +1,331 @@
+# [0.13.2](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.13.2...v0.13.1) (2022-03-25)
+
+- Do not apply P3 penalty if peers are pruned from topic mesh
+- Fix flood publish behavior
+- Increase the default for seenTTL to match that of go-libp2p
+- _publish: Only compute score if peer stream has FloodsubID protocol
+- Migrate tests to Typescript
+- Prettier
+- Apply strict-boolean-expression eslint rule
+
+# [0.13.1](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.13.1...v0.13.0) (2022-02-14)
+
+- Fix async getFastMsgIdStr function
+
+# [0.13.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.12.2...v0.13.0) (2022-01-20)
+
+## [0.12.2](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.12.1...v0.12.2) (2022-01-20)
+
+### Features
+
+- async peerstore ([5c3491c](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/5c3491cc352670b32226e9d13e4289a473fa31d2))
+
+### BREAKING CHANGES
+
+- peerstore methods and pubsub start/stop are now all async
+
+### Features
+
+- Add optional fast message id cache via the `fastMsgIdFn` option
+  - In certain applications, computing the message id (`getMsgId`) is relatively expensive. This addition allows for an application to optionally define a "fast" message id function that will be used internally.
+- Add optional cached message id function via `getCachedMsgIdStr` method override
+  - Applications can maintain their own cache of message ids
+
+## [0.12.1](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.12.0...v0.12.1) (2021-12-03)
+
+# [0.12.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.11.4...v0.12.0) (2021-12-02)
+
+### chore
+
+- update peer-id ([#173](https://github.com/ChainSafe/js-libp2p-gossipsub/issues/173)) ([e61668e](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/e61668e6a11be3b633815960015124fb89f82f53))
+
+### BREAKING CHANGES
+
+- requires node 15+
+
+## [0.11.4](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.11.3...v0.11.4) (2021-09-20)
+
+### Bug Fixes
+
+- hearbeat tick handler rounding issue ([#166](https://github.com/ChainSafe/js-libp2p-gossipsub/issues/166)) ([a6d24de](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/a6d24de39fc87f5860c6f45df1e7529056684030))
+- ignore yarn lock ([b804758](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/b80475838753e2472c736617f6ebf8fe4820734d))
+- remove yarn.lock ([10e5dfe](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/10e5dfe3bb142bfc60cfe691205a591fd91f8b76))
+
+### Features
+
+- add more configuration options ([#165](https://github.com/ChainSafe/js-libp2p-gossipsub/issues/165)) ([ff67106](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/ff67106a98820f43511ac211f180e6761a689f1b))
+
+## [0.11.3](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.11.1...v0.11.3) (2021-09-03)
+
+## [0.11.2](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.11.1...v0.11.2) (2021-09-02)
+
+## [0.11.1](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.11.0...v0.11.1) (2021-08-24)
+
+# [0.11.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.10.0...v0.11.0) (2021-07-09)
+
+### chore
+
+- update deps ([#155](https://github.com/ChainSafe/js-libp2p-gossipsub/issues/155)) ([df69a90](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/df69a909db2a770f5a7d054a898bab72020946df))
+
+### BREAKING CHANGES
+
+- the new `peer-id` module uses the new `CID` class and not the old one
+
+# [0.10.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.9.2...v0.10.0) (2021-05-28)
+
+## [0.9.2](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.9.1...v0.9.2) (2021-05-28)
+
+### Reverts
+
+- Revert "chore: update pubsub interface to run subsystem tests (#148)" ([87607fb](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/87607fbcf0ed6c2c03f4d72fa1a888a3dff72d7a)), closes [#148](https://github.com/ChainSafe/js-libp2p-gossipsub/issues/148)
+
+## [0.9.1](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.9.0...v0.9.1) (2021-05-28)
+
+# [0.9.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.8.0...v0.9.0) (2021-04-28)
+
+# [0.8.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.7.0...v0.8.0) (2020-12-19)
+
+<a name="0.7.0"></a>
+
+# [0.7.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.6...v0.7.0) (2020-11-13)
+
+<a name="0.6.6"></a>
+
+## [0.6.6](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.5...v0.6.6) (2020-11-13)
+
+<a name="0.6.5"></a>
+
+## [0.6.5](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.4...v0.6.5) (2020-11-12)
+
+<a name="0.6.4"></a>
+
+## [0.6.4](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.3...v0.6.4) (2020-10-22)
+
+<a name="0.6.3"></a>
+
+## [0.6.3](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.2...v0.6.3) (2020-10-05)
+
+<a name="0.6.2"></a>
+
+## [0.6.2](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.1...v0.6.2) (2020-09-22)
+
+<a name="0.6.1"></a>
+
+## [0.6.1](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.6.0...v0.6.1) (2020-09-03)
+
+<a name="0.6.0"></a>
+
+# [0.6.0](https://github.com/ChainSafe/js-libp2p-gossipsub/compare/v0.5.0...v0.6.0) (2020-08-25)
+
+### Bug Fixes
+
+- pick uintarrays commit ([be47b50](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/be47b50))
+
+### Features
+
+- add \_acceptFrom filter ([1ff5816](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/1ff5816))
+- add adaptive gossip ([0c56763](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/0c56763))
+- add direct peer connections ([7103b83](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/7103b83))
+- add extended topic validators ([a1208b6](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/a1208b6))
+- add flood publishing ([5854d26](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/5854d26))
+- add invalid message spam protection ([27fe567](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/27fe567))
+- add iwant request tracking ([b3942e4](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/b3942e4))
+- add opportunistic grafting ([cbee3a2](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/cbee3a2))
+- add outbound mesh quota ([47bc4a7](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/47bc4a7))
+- add peer exchange ([a0a691b](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/a0a691b))
+- add prune backoff ([4eb492c](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/4eb492c))
+- libp2p as gossipsub parameter ([02dff12](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/02dff12))
+- track ihave/iwant counts ([8e04a11](https://github.com/ChainSafe/js-libp2p-gossipsub/commit/8e04a11))
+
+### BREAKING CHANGES
+
+- Gossipsub default export parameter changed, now accepts
+  (libp2p, options)
+
+<a name="0.5.0"></a>
+
+# [0.5.0](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.6...v0.5.0) (2020-08-12)
+
+### Bug Fixes
+
+- replace node buffers with uint8arrays ([#118](https://github.com/ChainSafe/gossipsub-js/issues/118)) ([2f50108](https://github.com/ChainSafe/gossipsub-js/commit/2f50108))
+
+### BREAKING CHANGES
+
+- - The `.data` and `.seq` properties of messages used to be node Buffers, now they are Uint8Arrays
+
+* All deps of this module now use Uint8Arrays instead of Buffers
+
+- chore: remove gh url from dep version
+
+<a name="0.4.6"></a>
+
+## [0.4.6](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.5...v0.4.6) (2020-07-07)
+
+### Bug Fixes
+
+- connected with a subscriber before a mesh is created should send messages ([060346a](https://github.com/ChainSafe/gossipsub-js/commit/060346a))
+
+<a name="0.4.5"></a>
+
+## [0.4.5](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.4...v0.4.5) (2020-06-04)
+
+### Bug Fixes
+
+- use unidirectional streams ([#78](https://github.com/ChainSafe/gossipsub-js/issues/78)) ([8118894](https://github.com/ChainSafe/gossipsub-js/commit/8118894))
+
+<a name="0.4.4"></a>
+
+## [0.4.4](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.3...v0.4.4) (2020-06-03)
+
+### Bug Fixes
+
+- add static member for multicodec ([#81](https://github.com/ChainSafe/gossipsub-js/issues/81)) ([dd86739](https://github.com/ChainSafe/gossipsub-js/commit/dd86739))
+
+<a name="0.4.3"></a>
+
+## [0.4.3](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.2...v0.4.3) (2020-06-03)
+
+<a name="0.4.2"></a>
+
+## [0.4.2](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.1...v0.4.2) (2020-05-27)
+
+### Features
+
+- add topic validators to pubsub ([5712fd1](https://github.com/ChainSafe/gossipsub-js/commit/5712fd1))
+
+<a name="0.4.1"></a>
+
+## [0.4.1](https://github.com/ChainSafe/gossipsub-js/compare/v0.4.0...v0.4.1) (2020-05-27)
+
+<a name="0.4.0"></a>
+
+# [0.4.0](https://github.com/ChainSafe/gossipsub-js/compare/v0.3.0...v0.4.0) (2020-04-23)
+
+### Chores
+
+- remove peer-info usage ([602ccaa](https://github.com/ChainSafe/gossipsub-js/commit/602ccaa))
+
+### BREAKING CHANGES
+
+- using new topology api with peer-id instead of peer-info and new pubsub internal peer data structure
+
+<a name="0.3.0"></a>
+
+# [0.3.0](https://github.com/ChainSafe/gossipsub-js/compare/v0.2.6...v0.3.0) (2020-04-23)
+
+### Bug Fixes
+
+- add buffer and update deps ([d8e9d1b](https://github.com/ChainSafe/gossipsub-js/commit/d8e9d1b))
+
+<a name="0.2.6"></a>
+
+## [0.2.6](https://github.com/ChainSafe/gossipsub-js/compare/v0.2.5...v0.2.6) (2020-04-04)
+
+<a name="0.2.5"></a>
+
+## [0.2.5](https://github.com/ChainSafe/gossipsub-js/compare/v0.2.4...v0.2.5) (2020-03-21)
+
+<a name="0.2.4"></a>
+
+## [0.2.4](https://github.com/ChainSafe/gossipsub-js/compare/v0.2.3...v0.2.4) (2020-02-14)
+
+### Bug Fixes
+
+- remove use of assert module ([#65](https://github.com/ChainSafe/gossipsub-js/issues/65)) ([e0a37cc](https://github.com/ChainSafe/gossipsub-js/commit/e0a37cc))
+
+<a name="0.2.3"></a>
+
+## [0.2.3](https://github.com/ChainSafe/gossipsub-js/compare/v0.0.5...v0.2.3) (2020-02-03)
+
+### Bug Fixes
+
+- bind is not needed ([7faae98](https://github.com/ChainSafe/gossipsub-js/commit/7faae98))
+- fix double publish bug ([519f868](https://github.com/ChainSafe/gossipsub-js/commit/519f868)), closes [/github.com/ChainSafe/gossipsub-js/blob/master/test/floodsub.spec.js#L21](https://github.com//github.com/ChainSafe/gossipsub-js/blob/master/test/floodsub.spec.js/issues/L21) [/travis-ci.com/ChainSafe/gossipsub-js/jobs/278427804#L270](https://github.com//travis-ci.com/ChainSafe/gossipsub-js/jobs/278427804/issues/L270)
+- fix heartbeat startup/shutdown timing bug ([a8302f9](https://github.com/ChainSafe/gossipsub-js/commit/a8302f9))
+- parameter to \_onPeerDisconnected ([d43ceb5](https://github.com/ChainSafe/gossipsub-js/commit/d43ceb5))
+
+### Chores
+
+- update dependencies ([7a44b66](https://github.com/ChainSafe/gossipsub-js/commit/7a44b66))
+
+### Code Refactoring
+
+- switch to async iterators ([3027835](https://github.com/ChainSafe/gossipsub-js/commit/3027835))
+
+### Performance Improvements
+
+- do not depend on floodsub ([#63](https://github.com/ChainSafe/gossipsub-js/issues/63)) ([f825e07](https://github.com/ChainSafe/gossipsub-js/commit/f825e07))
+
+### BREAKING CHANGES
+
+- getPeersSubscribed from parent class renamed to getSubscribers to remove redundant wording
+- Switch to using async/await and async iterators for all the API. Moreover, gossipsub does not need the libp2p instance anymore, receiving a registerar that enables it to receive the necessary events from libp2p
+
+<a name="0.2.2"></a>
+
+## [0.2.2](https://github.com/ChainSafe/gossipsub-js/compare/v0.0.5...v0.2.2) (2020-01-24)
+
+### Bug Fixes
+
+- bind is not needed ([7faae98](https://github.com/ChainSafe/gossipsub-js/commit/7faae98))
+- fix double publish bug ([519f868](https://github.com/ChainSafe/gossipsub-js/commit/519f868)), closes [/github.com/ChainSafe/gossipsub-js/blob/master/test/floodsub.spec.js#L21](https://github.com//github.com/ChainSafe/gossipsub-js/blob/master/test/floodsub.spec.js/issues/L21) [/travis-ci.com/ChainSafe/gossipsub-js/jobs/278427804#L270](https://github.com//travis-ci.com/ChainSafe/gossipsub-js/jobs/278427804/issues/L270)
+- fix heartbeat startup/shutdown timing bug ([a8302f9](https://github.com/ChainSafe/gossipsub-js/commit/a8302f9))
+- parameter to \_onPeerDisconnected ([d43ceb5](https://github.com/ChainSafe/gossipsub-js/commit/d43ceb5))
+
+### Chores
+
+- update dependencies ([7a44b66](https://github.com/ChainSafe/gossipsub-js/commit/7a44b66))
+
+### Code Refactoring
+
+- switch to async iterators ([3027835](https://github.com/ChainSafe/gossipsub-js/commit/3027835))
+
+### BREAKING CHANGES
+
+- getPeersSubscribed from parent class renamed to getSubscribers to remove redundant wording
+- Switch to using async/await and async iterators for all the API. Moreover, gossipsub does not need the libp2p instance anymore, receiving a registerar that enables it to receive the necessary events from libp2p
+
+<a name="0.2.1"></a>
+
+## 0.2.1 (2019-01-14)
+
+### Bug Fixes
+
+- bind is not needed ([7faae98](https://github.com/ChainSafe/gossipsub-js/commit/7faae98))
+
+<a name="0.2.0"></a>
+
+## [0.2.0](https://github.com/ChainSafe/gossipsub-js/compare/v0.0.5...v0.1.0) (2019-12-02)
+
+### Chores
+
+- update dependencies ([7a44b66](https://github.com/ChainSafe/gossipsub-js/commit/7a44b66))
+
+### BREAKING CHANGES
+
+- getPeersSubscribed from parent class renamed to getSubscribers to remove redundant wording.
+
+<a name="0.1.0"></a>
+
+## [0.1.0](https://github.com/ChainSafe/gossipsub-js/compare/v0.0.5...v0.1.0) (2019-19-14)
+
+### Code Refactoring
+
+- switch to async iterators ([ec8db51](https://github.com/ChainSafe/gossipsub-js/commit/2c32d25))
+
+### BREAKING CHANGES
+
+- Switch to using async/await and async iterators.
+
+<a name="0.0.2"></a>
+
+## [0.0.2](https://github.com/ChainSafe/gossipsub-js/compare/v0.0.1...v0.0.2) (2019-06-04)
+
+<a name="0.0.1"></a>
+
+## 0.0.1 (2019-06-04)
+
+### Bug Fixes
+
+- integration with js-libp2p ([f894281](https://github.com/ChainSafe/gossipsub-js/commit/f894281))
diff --git a/node_modules/libp2p-gossipsub/README.md b/node_modules/libp2p-gossipsub/README.md
index 2c00490..fe8cb61 100644
--- a/node_modules/libp2p-gossipsub/README.md
+++ b/node_modules/libp2p-gossipsub/README.md
@@ -1,5 +1,4 @@
-js-libp2p-gossipsub
-==================
+# js-libp2p-gossipsub
 
 [![](https://img.shields.io/badge/made%20by-ChainSafe-blue.svg?style=flat-square)](https://chainsafe.io/)
 [![Travis CI](https://flat.badgen.net/travis/ChainSafe/gossipsub-js)](https://travis-ci.com/ChainSafe/gossipsub-js)
@@ -12,14 +11,15 @@ js-libp2p-gossipsub
 
 ## Table of Contents
 
-* [Specs](#specs)
-* [Install](#Install)
-* [Usage](#Usage)
-* [API](#API)
-* [Contribute](#Contribute)
-* [License](#License)
+- [Specs](#specs)
+- [Install](#Install)
+- [Usage](#Usage)
+- [API](#API)
+- [Contribute](#Contribute)
+- [License](#License)
 
 ## Specs
+
 Gossipsub is an implementation of pubsub based on meshsub and floodsub. You can read the specification [here](https://github.com/libp2p/specs/tree/master/pubsub/gossipsub).
 
 `libp2p-gossipsub` currently implements the [`v1.1`](https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md) of the spec.
@@ -56,18 +56,18 @@ const gossipsub = new Gossipsub(libp2p, options)
 
 Options is an optional object with the following key-value pairs:
 
-* **`emitSelf`**: boolean identifying whether the node should emit to self on publish, in the event of the topic being subscribed (defaults to **false**).
-* **`gossipIncoming`**: boolean identifying if incoming messages on a subscribed topic should be automatically gossiped (defaults to **true**).
-* **`fallbackToFloodsub`**: boolean identifying whether the node should fallback to the floodsub protocol, if another connecting peer does not support gossipsub (defaults to **true**).
-* **`floodPublish`**: boolean identifying if self-published messages should be sent to all peers, (defaults to **true**).
-* **`doPX`**: boolean identifying whether PX is enabled; this should be enabled in bootstrappers and other well connected/trusted nodes (defaults to **false**).
-* **`msgIdFn`**: a function with signature `(message) => string` defining the message id given a message, used internally to deduplicate gossip (defaults to `(message) => message.from + message.seqno.toString('hex')`)
-* **`signMessages`**: boolean identifying if we want to sign outgoing messages or not (default: `true`)
-* **`strictSigning`**: boolean identifying if message signing is required for incoming messages or not (default: `true`)
-* **`messageCache`**: optional, a customized `MessageCache` instance, see the implementation for the interface.
-* **`scoreParams`**: optional, a customized peer score parameters Object.
-* **`scoreThresholds`**: optional, a customized peer score thresholds Object.
-* **`directPeers`**: optional, an array of `AddrInfo` of peers with which we will maintain direct connections.
+- **`emitSelf`**: boolean identifying whether the node should emit to self on publish, in the event of the topic being subscribed (defaults to **false**).
+- **`gossipIncoming`**: boolean identifying if incoming messages on a subscribed topic should be automatically gossiped (defaults to **true**).
+- **`fallbackToFloodsub`**: boolean identifying whether the node should fallback to the floodsub protocol, if another connecting peer does not support gossipsub (defaults to **true**).
+- **`floodPublish`**: boolean identifying if self-published messages should be sent to all peers, (defaults to **true**).
+- **`doPX`**: boolean identifying whether PX is enabled; this should be enabled in bootstrappers and other well connected/trusted nodes (defaults to **false**).
+- **`msgIdFn`**: a function with signature `(message) => string` defining the message id given a message, used internally to deduplicate gossip (defaults to `(message) => message.from + message.seqno.toString('hex')`)
+- **`signMessages`**: boolean identifying if we want to sign outgoing messages or not (default: `true`)
+- **`strictSigning`**: boolean identifying if message signing is required for incoming messages or not (default: `true`)
+- **`messageCache`**: optional, a customized `MessageCache` instance, see the implementation for the interface.
+- **`scoreParams`**: optional, a customized peer score parameters Object.
+- **`scoreThresholds`**: optional, a customized peer score thresholds Object.
+- **`directPeers`**: optional, an array of `AddrInfo` of peers with which we will maintain direct connections.
 
 For the remaining API, see [libp2p-interfaces/pubsub](https://github.com/libp2p/js-libp2p-interfaces/tree/master/packages/interfaces/src/pubsub).
 
diff --git a/node_modules/libp2p-gossipsub/dist/index.min.js b/node_modules/libp2p-gossipsub/dist/index.min.js
index a314f58..71f58e4 100644
--- a/node_modules/libp2p-gossipsub/dist/index.min.js
+++ b/node_modules/libp2p-gossipsub/dist/index.min.js
@@ -1,5 +1,5 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2pGossipsub = factory()}(typeof self !== 'undefined' ? self : this, function () {
-var Libp2pGossipsub=(()=>{var Tf=Object.defineProperty;var Sb=t=>Tf(t,"__esModule",{value:!0});var Rf=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,r)=>(typeof require!="undefined"?require:e)[r]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var Ee=(t,e)=>()=>(t&&(e=t(t=0)),e);var E=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),lt=(t,e)=>{Sb(t);for(var r in e)Tf(t,r,{get:e[r],enumerable:!0})};var Pf=E((gT,Df)=>{var Tn=1e3,Rn=Tn*60,Dn=Rn*60,$i=Dn*24,_b=$i*7,Ib=$i*365.25;Df.exports=function(t,e){e=e||{};var r=typeof t;if(r==="string"&&t.length>0)return Bb(t);if(r==="number"&&isFinite(t))return e.long?Cb(t):Ab(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))};function Bb(t){if(t=String(t),!(t.length>100)){var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(!!e){var r=parseFloat(e[1]),i=(e[2]||"ms").toLowerCase();switch(i){case"years":case"year":case"yrs":case"yr":case"y":return r*Ib;case"weeks":case"week":case"w":return r*_b;case"days":case"day":case"d":return r*$i;case"hours":case"hour":case"hrs":case"hr":case"h":return r*Dn;case"minutes":case"minute":case"mins":case"min":case"m":return r*Rn;case"seconds":case"second":case"secs":case"sec":case"s":return r*Tn;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function Ab(t){var e=Math.abs(t);return e>=$i?Math.round(t/$i)+"d":e>=Dn?Math.round(t/Dn)+"h":e>=Rn?Math.round(t/Rn)+"m":e>=Tn?Math.round(t/Tn)+"s":t+"ms"}function Cb(t){var e=Math.abs(t);return e>=$i?Ta(t,e,$i,"day"):e>=Dn?Ta(t,e,Dn,"hour"):e>=Rn?Ta(t,e,Rn,"minute"):e>=Tn?Ta(t,e,Tn,"second"):t+" ms"}function Ta(t,e,r,i){var n=e>=r*1.5;return Math.round(t/r)+" "+i+(n?"s":"")}});var Nf=E((vT,kf)=>{function Tb(t){r.debug=r,r.default=r,r.coerce=f,r.disable=s,r.enable=n,r.enabled=a,r.humanize=Pf(),r.destroy=u,Object.keys(t).forEach(c=>{r[c]=t[c]}),r.names=[],r.skips=[],r.formatters={};function e(c){let h=0;for(let l=0;l<c.length;l++)h=(h<<5)-h+c.charCodeAt(l),h|=0;return r.colors[Math.abs(h)%r.colors.length]}r.selectColor=e;function r(c){let h,l=null,d,p;function y(...g){if(!y.enabled)return;let v=y,x=Number(new Date),w=x-(h||x);v.diff=w,v.prev=h,v.curr=x,h=x,g[0]=r.coerce(g[0]),typeof g[0]!="string"&&g.unshift("%O");let P=0;g[0]=g[0].replace(/%([a-zA-Z%])/g,(S,G)=>{if(S==="%%")return"%";P++;let z=r.formatters[G];if(typeof z=="function"){let se=g[P];S=z.call(v,se),g.splice(P,1),P--}return S}),r.formatArgs.call(v,g),(v.log||r.log).apply(v,g)}return y.namespace=c,y.useColors=r.useColors(),y.color=r.selectColor(c),y.extend=i,y.destroy=r.destroy,Object.defineProperty(y,"enabled",{enumerable:!0,configurable:!1,get:()=>l!==null?l:(d!==r.namespaces&&(d=r.namespaces,p=r.enabled(c)),p),set:g=>{l=g}}),typeof r.init=="function"&&r.init(y),y}function i(c,h){let l=r(this.namespace+(typeof h=="undefined"?":":h)+c);return l.log=this.log,l}function n(c){r.save(c),r.namespaces=c,r.names=[],r.skips=[];let h,l=(typeof c=="string"?c:"").split(/[\s,]+/),d=l.length;for(h=0;h<d;h++)!l[h]||(c=l[h].replace(/\*/g,".*?"),c[0]==="-"?r.skips.push(new RegExp("^"+c.substr(1)+"$")):r.names.push(new RegExp("^"+c+"$")))}function s(){let c=[...r.names.map(o),...r.skips.map(o).map(h=>"-"+h)].join(",");return r.enable(""),c}function a(c){if(c[c.length-1]==="*")return!0;let h,l;for(h=0,l=r.skips.length;h<l;h++)if(r.skips[h].test(c))return!1;for(h=0,l=r.names.length;h<l;h++)if(r.names[h].test(c))return!0;return!1}function o(c){return c.toString().substring(2,c.toString().length-2).replace(/\.\*\?$/,"*")}function f(c){return c instanceof Error?c.stack||c.message:c}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return r.enable(r.load()),r}kf.exports=Tb});var Is=E((Lt,Ra)=>{Lt.formatArgs=Db;Lt.save=Pb;Lt.load=kb;Lt.useColors=Rb;Lt.storage=Nb();Lt.destroy=(()=>{let t=!1;return()=>{t||(t=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})();Lt.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function Rb(){return typeof window!="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document!="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function Db(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+Ra.exports.humanize(this.diff),!this.useColors)return;let e="color: "+this.color;t.splice(1,0,e,"color: inherit");let r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,n=>{n!=="%%"&&(r++,n==="%c"&&(i=r))}),t.splice(i,0,e)}Lt.log=console.debug||console.log||(()=>{});function Pb(t){try{t?Lt.storage.setItem("debug",t):Lt.storage.removeItem("debug")}catch(e){}}function kb(){let t;try{t=Lt.storage.getItem("debug")}catch(e){}return!t&&typeof process!="undefined"&&"env"in process&&(t=process.env.DEBUG),t}function Nb(){try{return localStorage}catch(t){}}Ra.exports=Nf()(Lt);var{formatters:Ob}=Ra.exports;Ob.j=function(t){try{return JSON.stringify(t)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}});var B0=E((xT,I0)=>{"use strict";var Pn=typeof Reflect=="object"?Reflect:null,Of=Pn&&typeof Pn.apply=="function"?Pn.apply:function(e,r,i){return Function.prototype.apply.call(e,r,i)},Da;Pn&&typeof Pn.ownKeys=="function"?Da=Pn.ownKeys:Object.getOwnPropertySymbols?Da=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Da=function(e){return Object.getOwnPropertyNames(e)};function Lb(t){console&&console.warn&&console.warn(t)}var Lf=Number.isNaN||function(e){return e!==e};function we(){we.init.call(this)}I0.exports=we;I0.exports.once=Ub;we.EventEmitter=we;we.prototype._events=void 0;we.prototype._eventsCount=0;we.prototype._maxListeners=void 0;var Mf=10;function Pa(t){if(typeof t!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}Object.defineProperty(we,"defaultMaxListeners",{enumerable:!0,get:function(){return Mf},set:function(t){if(typeof t!="number"||t<0||Lf(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");Mf=t}});we.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};we.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||Lf(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function Kf(t){return t._maxListeners===void 0?we.defaultMaxListeners:t._maxListeners}we.prototype.getMaxListeners=function(){return Kf(this)};we.prototype.emit=function(e){for(var r=[],i=1;i<arguments.length;i++)r.push(arguments[i]);var n=e==="error",s=this._events;if(s!==void 0)n=n&&s.error===void 0;else if(!n)return!1;if(n){var a;if(r.length>0&&(a=r[0]),a instanceof Error)throw a;var o=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw o.context=a,o}var f=s[e];if(f===void 0)return!1;if(typeof f=="function")Of(f,this,r);else for(var u=f.length,c=Gf(f,u),i=0;i<u;++i)Of(c[i],this,r);return!0};function Ff(t,e,r,i){var n,s,a;if(Pa(r),s=t._events,s===void 0?(s=t._events=Object.create(null),t._eventsCount=0):(s.newListener!==void 0&&(t.emit("newListener",e,r.listener?r.listener:r),s=t._events),a=s[e]),a===void 0)a=s[e]=r,++t._eventsCount;else if(typeof a=="function"?a=s[e]=i?[r,a]:[a,r]:i?a.unshift(r):a.push(r),n=Kf(t),n>0&&a.length>n&&!a.warned){a.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=t,o.type=e,o.count=a.length,Lb(o)}return t}we.prototype.addListener=function(e,r){return Ff(this,e,r,!1)};we.prototype.on=we.prototype.addListener;we.prototype.prependListener=function(e,r){return Ff(this,e,r,!0)};function Mb(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function Uf(t,e,r){var i={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},n=Mb.bind(i);return n.listener=r,i.wrapFn=n,n}we.prototype.once=function(e,r){return Pa(r),this.on(e,Uf(this,e,r)),this};we.prototype.prependOnceListener=function(e,r){return Pa(r),this.prependListener(e,Uf(this,e,r)),this};we.prototype.removeListener=function(e,r){var i,n,s,a,o;if(Pa(r),n=this._events,n===void 0)return this;if(i=n[e],i===void 0)return this;if(i===r||i.listener===r)--this._eventsCount==0?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,i.listener||r));else if(typeof i!="function"){for(s=-1,a=i.length-1;a>=0;a--)if(i[a]===r||i[a].listener===r){o=i[a].listener,s=a;break}if(s<0)return this;s===0?i.shift():Kb(i,s),i.length===1&&(n[e]=i[0]),n.removeListener!==void 0&&this.emit("removeListener",e,o||r)}return this};we.prototype.off=we.prototype.removeListener;we.prototype.removeAllListeners=function(e){var r,i,n;if(i=this._events,i===void 0)return this;if(i.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):i[e]!==void 0&&(--this._eventsCount==0?this._events=Object.create(null):delete i[e]),this;if(arguments.length===0){var s=Object.keys(i),a;for(n=0;n<s.length;++n)a=s[n],a!=="removeListener"&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(r=i[e],typeof r=="function")this.removeListener(e,r);else if(r!==void 0)for(n=r.length-1;n>=0;n--)this.removeListener(e,r[n]);return this};function qf(t,e,r){var i=t._events;if(i===void 0)return[];var n=i[e];return n===void 0?[]:typeof n=="function"?r?[n.listener||n]:[n]:r?Fb(n):Gf(n,n.length)}we.prototype.listeners=function(e){return qf(this,e,!0)};we.prototype.rawListeners=function(e){return qf(this,e,!1)};we.listenerCount=function(t,e){return typeof t.listenerCount=="function"?t.listenerCount(e):Vf.call(t,e)};we.prototype.listenerCount=Vf;function Vf(t){var e=this._events;if(e!==void 0){var r=e[t];if(typeof r=="function")return 1;if(r!==void 0)return r.length}return 0}we.prototype.eventNames=function(){return this._eventsCount>0?Da(this._events):[]};function Gf(t,e){for(var r=new Array(e),i=0;i<e;++i)r[i]=t[i];return r}function Kb(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}function Fb(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}function Ub(t,e){return new Promise(function(r,i){function n(a){t.removeListener(e,s),i(a)}function s(){typeof t.removeListener=="function"&&t.removeListener("error",n),r([].slice.call(arguments))}Hf(t,e,s,{once:!0}),e!=="error"&&qb(t,n,{once:!0})})}function qb(t,e,r){typeof t.on=="function"&&Hf(t,"error",e,r)}function Hf(t,e,r,i){if(typeof t.on=="function")i.once?t.once(e,r):t.on(e,r);else if(typeof t.addEventListener=="function")t.addEventListener(e,function n(s){i.once&&t.removeEventListener(e,n),r(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t)}});var Oe=E((bT,jf)=>{"use strict";function zf(t,e){for(let r in e)Object.defineProperty(t,r,{value:e[r],enumerable:!0,configurable:!0});return t}function Vb(t,e,r){if(!t||typeof t=="string")throw new TypeError("Please pass an Error to err-code");r||(r={}),typeof e=="object"&&(r=e,e=""),e&&(r.code=e);try{return zf(t,r)}catch(i){r.message=t.message,r.stack=t.stack;let n=function(){};return n.prototype=Object.create(Object.getPrototypeOf(t)),zf(new n,r)}}jf.exports=Vb});var C0=E((mT,kn)=>{var Wf=(...t)=>{let e;for(;t.length;)e=t.shift()(e);return e},A0=t=>t&&(typeof t[Symbol.asyncIterator]=="function"||typeof t[Symbol.iterator]=="function"||typeof t.next=="function"),ka=t=>t&&typeof t.sink=="function"&&A0(t.source),Gb=t=>e=>(t.sink(e),t.source),Yf=(...t)=>{if(ka(t[0])){let e=t[0];t[0]=()=>e.source}else if(A0(t[0])){let e=t[0];t[0]=()=>e}if(t.length>1&&ka(t[t.length-1])&&(t[t.length-1]=t[t.length-1].sink),t.length>2)for(let e=1;e<t.length-1;e++)ka(t[e])&&(t[e]=Gb(t[e]));return Wf(...t)};kn.exports=Yf;kn.exports.pipe=Yf;kn.exports.rawPipe=Wf;kn.exports.isIterable=A0;kn.exports.isDuplex=ka});var Qf=E((ET,T0)=>{"use strict";var Hb=Object.prototype.hasOwnProperty,St="~";function Bs(){}Object.create&&(Bs.prototype=Object.create(null),new Bs().__proto__||(St=!1));function zb(t,e,r){this.fn=t,this.context=e,this.once=r||!1}function $f(t,e,r,i,n){if(typeof r!="function")throw new TypeError("The listener must be a function");var s=new zb(r,i||t,n),a=St?St+e:e;return t._events[a]?t._events[a].fn?t._events[a]=[t._events[a],s]:t._events[a].push(s):(t._events[a]=s,t._eventsCount++),t}function Na(t,e){--t._eventsCount==0?t._events=new Bs:delete t._events[e]}function pt(){this._events=new Bs,this._eventsCount=0}pt.prototype.eventNames=function(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events)Hb.call(r,i)&&e.push(St?i.slice(1):i);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(r)):e};pt.prototype.listeners=function(e){var r=St?St+e:e,i=this._events[r];if(!i)return[];if(i.fn)return[i.fn];for(var n=0,s=i.length,a=new Array(s);n<s;n++)a[n]=i[n].fn;return a};pt.prototype.listenerCount=function(e){var r=St?St+e:e,i=this._events[r];return i?i.fn?1:i.length:0};pt.prototype.emit=function(e,r,i,n,s,a){var o=St?St+e:e;if(!this._events[o])return!1;var f=this._events[o],u=arguments.length,c,h;if(f.fn){switch(f.once&&this.removeListener(e,f.fn,void 0,!0),u){case 1:return f.fn.call(f.context),!0;case 2:return f.fn.call(f.context,r),!0;case 3:return f.fn.call(f.context,r,i),!0;case 4:return f.fn.call(f.context,r,i,n),!0;case 5:return f.fn.call(f.context,r,i,n,s),!0;case 6:return f.fn.call(f.context,r,i,n,s,a),!0}for(h=1,c=new Array(u-1);h<u;h++)c[h-1]=arguments[h];f.fn.apply(f.context,c)}else{var l=f.length,d;for(h=0;h<l;h++)switch(f[h].once&&this.removeListener(e,f[h].fn,void 0,!0),u){case 1:f[h].fn.call(f[h].context);break;case 2:f[h].fn.call(f[h].context,r);break;case 3:f[h].fn.call(f[h].context,r,i);break;case 4:f[h].fn.call(f[h].context,r,i,n);break;default:if(!c)for(d=1,c=new Array(u-1);d<u;d++)c[d-1]=arguments[d];f[h].fn.apply(f[h].context,c)}}return!0};pt.prototype.on=function(e,r,i){return $f(this,e,r,i,!1)};pt.prototype.once=function(e,r,i){return $f(this,e,r,i,!0)};pt.prototype.removeListener=function(e,r,i,n){var s=St?St+e:e;if(!this._events[s])return this;if(!r)return Na(this,s),this;var a=this._events[s];if(a.fn)a.fn===r&&(!n||a.once)&&(!i||a.context===i)&&Na(this,s);else{for(var o=0,f=[],u=a.length;o<u;o++)(a[o].fn!==r||n&&!a[o].once||i&&a[o].context!==i)&&f.push(a[o]);f.length?this._events[s]=f.length===1?f[0]:f:Na(this,s)}return this};pt.prototype.removeAllListeners=function(e){var r;return e?(r=St?St+e:e,this._events[r]&&Na(this,r)):(this._events=new Bs,this._eventsCount=0),this};pt.prototype.off=pt.prototype.removeListener;pt.prototype.addListener=pt.prototype.on;pt.prefixed=St;pt.EventEmitter=pt;typeof T0!="undefined"&&(T0.exports=pt)});var Xf=E((wT,Zf)=>{"use strict";Zf.exports=(t,e)=>(e=e||(()=>{}),t.then(r=>new Promise(i=>{i(e())}).then(()=>r),r=>new Promise(i=>{i(e())}).then(()=>{throw r})))});var eh=E((ST,Oa)=>{"use strict";var jb=Xf(),R0=class extends Error{constructor(e){super(e);this.name="TimeoutError"}},Jf=(t,e,r)=>new Promise((i,n)=>{if(typeof e!="number"||e<0)throw new TypeError("Expected `milliseconds` to be a positive number");if(e===1/0){i(t);return}let s=setTimeout(()=>{if(typeof r=="function"){try{i(r())}catch(f){n(f)}return}let a=typeof r=="string"?r:`Promise timed out after ${e} milliseconds`,o=r instanceof Error?r:new R0(a);typeof t.cancel=="function"&&t.cancel(),n(o)},e);jb(t.then(i,n),()=>{clearTimeout(s)})});Oa.exports=Jf;Oa.exports.default=Jf;Oa.exports.TimeoutError=R0});var th=E(D0=>{"use strict";Object.defineProperty(D0,"__esModule",{value:!0});function Wb(t,e,r){let i=0,n=t.length;for(;n>0;){let s=n/2|0,a=i+s;r(t[a],e)<=0?(i=++a,n-=s+1):n=s}return i}D0.default=Wb});var ih=E(P0=>{"use strict";Object.defineProperty(P0,"__esModule",{value:!0});var Yb=th(),rh=class{constructor(){this._queue=[]}enqueue(e,r){r=Object.assign({priority:0},r);let i={priority:r.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=r.priority){this._queue.push(i);return}let n=Yb.default(this._queue,i,(s,a)=>a.priority-s.priority);this._queue.splice(n,0,i)}dequeue(){let e=this._queue.shift();return e==null?void 0:e.run}filter(e){return this._queue.filter(r=>r.priority===e.priority).map(r=>r.run)}get size(){return this._queue.length}};P0.default=rh});var ah=E(k0=>{"use strict";Object.defineProperty(k0,"__esModule",{value:!0});var $b=Qf(),nh=eh(),Qb=ih(),La=()=>{},Zb=new nh.TimeoutError,sh=class extends $b{constructor(e){var r,i,n,s;super();if(this._intervalCount=0,this._intervalEnd=0,this._pendingCount=0,this._resolveEmpty=La,this._resolveIdle=La,e=Object.assign({carryoverConcurrencyCount:!1,intervalCap:1/0,interval:0,concurrency:1/0,autoStart:!0,queueClass:Qb.default},e),!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(i=(r=e.intervalCap)===null||r===void 0?void 0:r.toString())!==null&&i!==void 0?i:""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(s=(n=e.interval)===null||n===void 0?void 0:n.toString())!==null&&s!==void 0?s:""}\` (${typeof e.interval})`);this._carryoverConcurrencyCount=e.carryoverConcurrencyCount,this._isIntervalIgnored=e.intervalCap===1/0||e.interval===0,this._intervalCap=e.intervalCap,this._interval=e.interval,this._queue=new e.queueClass,this._queueClass=e.queueClass,this.concurrency=e.concurrency,this._timeout=e.timeout,this._throwOnTimeout=e.throwOnTimeout===!0,this._isPaused=e.autoStart===!1}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--,this._tryToStartAnother(),this.emit("next")}_resolvePromises(){this._resolveEmpty(),this._resolveEmpty=La,this._pendingCount===0&&(this._resolveIdle(),this._resolveIdle=La,this.emit("idle"))}_onResumeInterval(){this._onInterval(),this._initializeIntervalIfNeeded(),this._timeoutId=void 0}_isIntervalPaused(){let e=Date.now();if(this._intervalId===void 0){let r=this._intervalEnd-e;if(r<0)this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;else return this._timeoutId===void 0&&(this._timeoutId=setTimeout(()=>{this._onResumeInterval()},r)),!0}return!1}_tryToStartAnother(){if(this._queue.size===0)return this._intervalId&&clearInterval(this._intervalId),this._intervalId=void 0,this._resolvePromises(),!1;if(!this._isPaused){let e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){let r=this._queue.dequeue();return r?(this.emit("active"),r(),e&&this._initializeIntervalIfNeeded(),!0):!1}}return!1}_initializeIntervalIfNeeded(){this._isIntervalIgnored||this._intervalId!==void 0||(this._intervalId=setInterval(()=>{this._onInterval()},this._interval),this._intervalEnd=Date.now()+this._interval)}_onInterval(){this._intervalCount===0&&this._pendingCount===0&&this._intervalId&&(clearInterval(this._intervalId),this._intervalId=void 0),this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0,this._processQueue()}_processQueue(){for(;this._tryToStartAnother(););}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this._concurrency=e,this._processQueue()}async add(e,r={}){return new Promise((i,n)=>{let s=async()=>{this._pendingCount++,this._intervalCount++;try{let a=this._timeout===void 0&&r.timeout===void 0?e():nh.default(Promise.resolve(e()),r.timeout===void 0?this._timeout:r.timeout,()=>{(r.throwOnTimeout===void 0?this._throwOnTimeout:r.throwOnTimeout)&&n(Zb)});i(await a)}catch(a){n(a)}this._next()};this._queue.enqueue(s,r),this._tryToStartAnother(),this.emit("add")})}async addAll(e,r){return Promise.all(e.map(async i=>this.add(i,r)))}start(){return this._isPaused?(this._isPaused=!1,this._processQueue(),this):this}pause(){this._isPaused=!0}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size!==0)return new Promise(e=>{let r=this._resolveEmpty;this._resolveEmpty=()=>{r(),e()}})}async onIdle(){if(!(this._pendingCount===0&&this._queue.size===0))return new Promise(e=>{let r=this._resolveIdle;this._resolveIdle=()=>{r(),e()}})}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}};k0.default=sh});var hh=E((AT,fh)=>{"use strict";var oh=()=>{},uh=Symbol.for("@libp2p/js-interfaces/topology"),ch=class{constructor({min:e=0,max:r=1/0,handlers:i={}}){this.min=e,this.max=r,this._onConnect=i.onConnect||oh,this._onDisconnect=i.onDisconnect||oh,this.peers=new Set}get[Symbol.toStringTag](){return"Topology"}get[uh](){return!0}static isTopology(e){return Boolean(e&&e[uh])}async setRegistrar(e){this._registrar=e}disconnect(e){this._onDisconnect(e)}};fh.exports=ch});var vh=E((CT,gh)=>{"use strict";var Xb=hh(),lh=Symbol.for("@libp2p/js-interfaces/topology/multicodec-topology"),ph=Is(),dh=Object.assign(ph("libp2p:topology:multicodec-topology"),{error:ph("libp2p:topology:multicodec-topology:error")}),yh=class extends Xb{constructor({min:e,max:r,multicodecs:i,handlers:n}){super({min:e,max:r,handlers:n});if(!i)throw new Error("one or more multicodec should be provided");if(!n)throw new Error("the handlers should be provided");if(typeof n.onConnect!="function")throw new Error("the 'onConnect' handler must be provided");if(typeof n.onDisconnect!="function")throw new Error("the 'onDisconnect' handler must be provided");this.multicodecs=Array.isArray(i)?i:[i],this._registrar=void 0,this._onProtocolChange=this._onProtocolChange.bind(this),this._onPeerConnect=this._onPeerConnect.bind(this)}get[Symbol.toStringTag](){return"Topology"}get[lh](){return!0}static isMulticodecTopology(e){return Boolean(e&&e[lh])}async setRegistrar(e){this._registrar=e,this._registrar.peerStore.on("change:protocols",this._onProtocolChange),this._registrar.connectionManager.on("peer:connect",this._onPeerConnect),await this._updatePeers(this._registrar.peerStore.getPeers())}async _updatePeers(e){for await(let{id:r,protocols:i}of e)if(this.multicodecs.filter(n=>i.includes(n)).length){this.peers.add(r.toB58String());let n=this._registrar.getConnection(r);n&&this._onConnect(r,n)}else this.peers.delete(r.toB58String())}async _onProtocolChange({peerId:e,protocols:r}){try{let i=this.peers.has(e.toB58String()),n=r.filter(s=>this.multicodecs.includes(s));i&&n.length===0&&this._onDisconnect(e);for(let s of r)if(this.multicodecs.includes(s)){let a=await this._registrar.peerStore.get(e);await this._updatePeers([a]);return}}catch(i){dh.error(i)}}async _onPeerConnect(e){try{let r=e.remotePeer,i=await this._registrar.peerStore.protoBook.get(r);if(!i)return;this.multicodecs.find(n=>i.includes(n))&&(this.peers.add(r.toB58String()),this._onConnect(r,e))}catch(r){dh.error(r)}}};gh.exports=yh});var Ma=E(xh=>{"use strict";xh.codes={ERR_INVALID_SIGNATURE_POLICY:"ERR_INVALID_SIGNATURE_POLICY",ERR_UNHANDLED_SIGNATURE_POLICY:"ERR_UNHANDLED_SIGNATURE_POLICY",ERR_MISSING_SIGNATURE:"ERR_MISSING_SIGNATURE",ERR_MISSING_SEQNO:"ERR_MISSING_SEQNO",ERR_INVALID_SIGNATURE:"ERR_INVALID_SIGNATURE",ERR_UNEXPECTED_FROM:"ERR_UNEXPECTED_FROM",ERR_UNEXPECTED_SIGNATURE:"ERR_UNEXPECTED_SIGNATURE",ERR_UNEXPECTED_KEY:"ERR_UNEXPECTED_KEY",ERR_UNEXPECTED_SEQNO:"ERR_UNEXPECTED_SEQNO"}});var mh=E((RT,bh)=>{"use strict";bh.exports=Jb;function Jb(t,e){for(var r=new Array(arguments.length-1),i=0,n=2,s=!0;n<arguments.length;)r[i++]=arguments[n++];return new Promise(function(o,f){r[i]=function(c){if(s)if(s=!1,c)f(c);else{for(var h=new Array(arguments.length-1),l=0;l<h.length;)h[l++]=arguments[l];o.apply(null,h)}};try{t.apply(e||null,r)}catch(u){s&&(s=!1,f(u))}})}});var _h=E(Sh=>{"use strict";var Ka=Sh;Ka.length=function(e){var r=e.length;if(!r)return 0;for(var i=0;--r%4>1&&e.charAt(r)==="=";)++i;return Math.ceil(e.length*3)/4-i};var Nn=new Array(64),Eh=new Array(123);for(Jt=0;Jt<64;)Eh[Nn[Jt]=Jt<26?Jt+65:Jt<52?Jt+71:Jt<62?Jt-4:Jt-59|43]=Jt++;var Jt;Ka.encode=function(e,r,i){for(var n=null,s=[],a=0,o=0,f;r<i;){var u=e[r++];switch(o){case 0:s[a++]=Nn[u>>2],f=(u&3)<<4,o=1;break;case 1:s[a++]=Nn[f|u>>4],f=(u&15)<<2,o=2;break;case 2:s[a++]=Nn[f|u>>6],s[a++]=Nn[u&63],o=0;break}a>8191&&((n||(n=[])).push(String.fromCharCode.apply(String,s)),a=0)}return o&&(s[a++]=Nn[f],s[a++]=61,o===1&&(s[a++]=61)),n?(a&&n.push(String.fromCharCode.apply(String,s.slice(0,a))),n.join("")):String.fromCharCode.apply(String,s.slice(0,a))};var wh="invalid encoding";Ka.decode=function(e,r,i){for(var n=i,s=0,a,o=0;o<e.length;){var f=e.charCodeAt(o++);if(f===61&&s>1)break;if((f=Eh[f])===void 0)throw Error(wh);switch(s){case 0:a=f,s=1;break;case 1:r[i++]=a<<2|(f&48)>>4,a=f,s=2;break;case 2:r[i++]=(a&15)<<4|(f&60)>>2,a=f,s=3;break;case 3:r[i++]=(a&3)<<6|f,s=0;break}}if(s===1)throw Error(wh);return i-n};Ka.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Bh=E((PT,Ih)=>{"use strict";Ih.exports=Fa;function Fa(){this._listeners={}}Fa.prototype.on=function(e,r,i){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:r,ctx:i||this}),this};Fa.prototype.off=function(e,r){if(e===void 0)this._listeners={};else if(r===void 0)this._listeners[e]=[];else for(var i=this._listeners[e],n=0;n<i.length;)i[n].fn===r?i.splice(n,1):++n;return this};Fa.prototype.emit=function(e){var r=this._listeners[e];if(r){for(var i=[],n=1;n<arguments.length;)i.push(arguments[n++]);for(n=0;n<r.length;)r[n].fn.apply(r[n++].ctx,i)}return this}});var kh=E((kT,Ph)=>{"use strict";Ph.exports=Ah(Ah);function Ah(t){return typeof Float32Array!="undefined"?function(){var e=new Float32Array([-0]),r=new Uint8Array(e.buffer),i=r[3]===128;function n(f,u,c){e[0]=f,u[c]=r[0],u[c+1]=r[1],u[c+2]=r[2],u[c+3]=r[3]}function s(f,u,c){e[0]=f,u[c]=r[3],u[c+1]=r[2],u[c+2]=r[1],u[c+3]=r[0]}t.writeFloatLE=i?n:s,t.writeFloatBE=i?s:n;function a(f,u){return r[0]=f[u],r[1]=f[u+1],r[2]=f[u+2],r[3]=f[u+3],e[0]}function o(f,u){return r[3]=f[u],r[2]=f[u+1],r[1]=f[u+2],r[0]=f[u+3],e[0]}t.readFloatLE=i?a:o,t.readFloatBE=i?o:a}():function(){function e(i,n,s,a){var o=n<0?1:0;if(o&&(n=-n),n===0)i(1/n>0?0:2147483648,s,a);else if(isNaN(n))i(2143289344,s,a);else if(n>34028234663852886e22)i((o<<31|2139095040)>>>0,s,a);else if(n<11754943508222875e-54)i((o<<31|Math.round(n/1401298464324817e-60))>>>0,s,a);else{var f=Math.floor(Math.log(n)/Math.LN2),u=Math.round(n*Math.pow(2,-f)*8388608)&8388607;i((o<<31|f+127<<23|u)>>>0,s,a)}}t.writeFloatLE=e.bind(null,Ch),t.writeFloatBE=e.bind(null,Th);function r(i,n,s){var a=i(n,s),o=(a>>31)*2+1,f=a>>>23&255,u=a&8388607;return f===255?u?NaN:o*(1/0):f===0?o*1401298464324817e-60*u:o*Math.pow(2,f-150)*(u+8388608)}t.readFloatLE=r.bind(null,Rh),t.readFloatBE=r.bind(null,Dh)}(),typeof Float64Array!="undefined"?function(){var e=new Float64Array([-0]),r=new Uint8Array(e.buffer),i=r[7]===128;function n(f,u,c){e[0]=f,u[c]=r[0],u[c+1]=r[1],u[c+2]=r[2],u[c+3]=r[3],u[c+4]=r[4],u[c+5]=r[5],u[c+6]=r[6],u[c+7]=r[7]}function s(f,u,c){e[0]=f,u[c]=r[7],u[c+1]=r[6],u[c+2]=r[5],u[c+3]=r[4],u[c+4]=r[3],u[c+5]=r[2],u[c+6]=r[1],u[c+7]=r[0]}t.writeDoubleLE=i?n:s,t.writeDoubleBE=i?s:n;function a(f,u){return r[0]=f[u],r[1]=f[u+1],r[2]=f[u+2],r[3]=f[u+3],r[4]=f[u+4],r[5]=f[u+5],r[6]=f[u+6],r[7]=f[u+7],e[0]}function o(f,u){return r[7]=f[u],r[6]=f[u+1],r[5]=f[u+2],r[4]=f[u+3],r[3]=f[u+4],r[2]=f[u+5],r[1]=f[u+6],r[0]=f[u+7],e[0]}t.readDoubleLE=i?a:o,t.readDoubleBE=i?o:a}():function(){function e(i,n,s,a,o,f){var u=a<0?1:0;if(u&&(a=-a),a===0)i(0,o,f+n),i(1/a>0?0:2147483648,o,f+s);else if(isNaN(a))i(0,o,f+n),i(2146959360,o,f+s);else if(a>17976931348623157e292)i(0,o,f+n),i((u<<31|2146435072)>>>0,o,f+s);else{var c;if(a<22250738585072014e-324)c=a/5e-324,i(c>>>0,o,f+n),i((u<<31|c/4294967296)>>>0,o,f+s);else{var h=Math.floor(Math.log(a)/Math.LN2);h===1024&&(h=1023),c=a*Math.pow(2,-h),i(c*4503599627370496>>>0,o,f+n),i((u<<31|h+1023<<20|c*1048576&1048575)>>>0,o,f+s)}}}t.writeDoubleLE=e.bind(null,Ch,0,4),t.writeDoubleBE=e.bind(null,Th,4,0);function r(i,n,s,a,o){var f=i(a,o+n),u=i(a,o+s),c=(u>>31)*2+1,h=u>>>20&2047,l=4294967296*(u&1048575)+f;return h===2047?l?NaN:c*(1/0):h===0?c*5e-324*l:c*Math.pow(2,h-1075)*(l+4503599627370496)}t.readDoubleLE=r.bind(null,Rh,0,4),t.readDoubleBE=r.bind(null,Dh,4,0)}(),t}function Ch(t,e,r){e[r]=t&255,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}function Th(t,e,r){e[r]=t>>>24,e[r+1]=t>>>16&255,e[r+2]=t>>>8&255,e[r+3]=t&255}function Rh(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function Dh(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}});var Nh=E((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(t){}return null}});var Lh=E(Oh=>{"use strict";var N0=Oh;N0.length=function(e){for(var r=0,i=0,n=0;n<e.length;++n)i=e.charCodeAt(n),i<128?r+=1:i<2048?r+=2:(i&64512)==55296&&(e.charCodeAt(n+1)&64512)==56320?(++n,r+=4):r+=3;return r};N0.read=function(e,r,i){var n=i-r;if(n<1)return"";for(var s=null,a=[],o=0,f;r<i;)f=e[r++],f<128?a[o++]=f:f>191&&f<224?a[o++]=(f&31)<<6|e[r++]&63:f>239&&f<365?(f=((f&7)<<18|(e[r++]&63)<<12|(e[r++]&63)<<6|e[r++]&63)-65536,a[o++]=55296+(f>>10),a[o++]=56320+(f&1023)):a[o++]=(f&15)<<12|(e[r++]&63)<<6|e[r++]&63,o>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,a)),o=0);return s?(o&&s.push(String.fromCharCode.apply(String,a.slice(0,o))),s.join("")):String.fromCharCode.apply(String,a.slice(0,o))};N0.write=function(e,r,i){for(var n=i,s,a,o=0;o<e.length;++o)s=e.charCodeAt(o),s<128?r[i++]=s:s<2048?(r[i++]=s>>6|192,r[i++]=s&63|128):(s&64512)==55296&&((a=e.charCodeAt(o+1))&64512)==56320?(s=65536+((s&1023)<<10)+(a&1023),++o,r[i++]=s>>18|240,r[i++]=s>>12&63|128,r[i++]=s>>6&63|128,r[i++]=s&63|128):(r[i++]=s>>12|224,r[i++]=s>>6&63|128,r[i++]=s&63|128);return i-n}});var Kh=E((OT,Mh)=>{"use strict";Mh.exports=em;function em(t,e,r){var i=r||8192,n=i>>>1,s=null,a=i;return function(f){if(f<1||f>n)return t(f);a+f>i&&(s=t(i),a=0);var u=e.call(s,a,a+=f);return a&7&&(a=(a|7)+1),u}}});var Uh=E((LT,Fh)=>{"use strict";Fh.exports=tt;var As=pi();function tt(t,e){this.lo=t>>>0,this.hi=e>>>0}var Qi=tt.zero=new tt(0,0);Qi.toNumber=function(){return 0};Qi.zzEncode=Qi.zzDecode=function(){return this};Qi.length=function(){return 1};var tm=tt.zeroHash="\0\0\0\0\0\0\0\0";tt.fromNumber=function(e){if(e===0)return Qi;var r=e<0;r&&(e=-e);var i=e>>>0,n=(e-i)/4294967296>>>0;return r&&(n=~n>>>0,i=~i>>>0,++i>4294967295&&(i=0,++n>4294967295&&(n=0))),new tt(i,n)};tt.from=function(e){if(typeof e=="number")return tt.fromNumber(e);if(As.isString(e))if(As.Long)e=As.Long.fromString(e);else return tt.fromNumber(parseInt(e,10));return e.low||e.high?new tt(e.low>>>0,e.high>>>0):Qi};tt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var r=~this.lo+1>>>0,i=~this.hi>>>0;return r||(i=i+1>>>0),-(r+i*4294967296)}return this.lo+this.hi*4294967296};tt.prototype.toLong=function(e){return As.Long?new As.Long(this.lo|0,this.hi|0,Boolean(e)):{low:this.lo|0,high:this.hi|0,unsigned:Boolean(e)}};var li=String.prototype.charCodeAt;tt.fromHash=function(e){return e===tm?Qi:new tt((li.call(e,0)|li.call(e,1)<<8|li.call(e,2)<<16|li.call(e,3)<<24)>>>0,(li.call(e,4)|li.call(e,5)<<8|li.call(e,6)<<16|li.call(e,7)<<24)>>>0)};tt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};tt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};tt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};tt.prototype.length=function(){var e=this.lo,r=(this.lo>>>28|this.hi<<4)>>>0,i=this.hi>>>24;return i===0?r===0?e<16384?e<128?1:2:e<2097152?3:4:r<16384?r<128?5:6:r<2097152?7:8:i<128?9:10}});var pi=E(O0=>{"use strict";var j=O0;j.asPromise=mh();j.base64=_h();j.EventEmitter=Bh();j.float=kh();j.inquire=Nh();j.utf8=Lh();j.pool=Kh();j.LongBits=Uh();j.isNode=Boolean(typeof globalThis!="undefined"&&globalThis&&globalThis.process&&globalThis.process.versions&&globalThis.process.versions.node);j.global=j.isNode&&globalThis||typeof window!="undefined"&&window||typeof self!="undefined"&&self||O0;j.emptyArray=Object.freeze?Object.freeze([]):[];j.emptyObject=Object.freeze?Object.freeze({}):{};j.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};j.isString=function(e){return typeof e=="string"||e instanceof String};j.isObject=function(e){return e&&typeof e=="object"};j.isset=j.isSet=function(e,r){var i=e[r];return i!=null&&e.hasOwnProperty(r)?typeof i!="object"||(Array.isArray(i)?i.length:Object.keys(i).length)>0:!1};j.Buffer=function(){try{var t=j.inquire("buffer").Buffer;return t.prototype.utf8Write?t:null}catch(e){return null}}();j._Buffer_from=null;j._Buffer_allocUnsafe=null;j.newBuffer=function(e){return typeof e=="number"?j.Buffer?j._Buffer_allocUnsafe(e):new j.Array(e):j.Buffer?j._Buffer_from(e):typeof Uint8Array=="undefined"?e:new Uint8Array(e)};j.Array=typeof Uint8Array!="undefined"?Uint8Array:Array;j.Long=j.global.dcodeIO&&j.global.dcodeIO.Long||j.global.Long||j.inquire("long");j.key2Re=/^true|false|0|1$/;j.key32Re=/^-?(?:0|[1-9][0-9]*)$/;j.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;j.longToHash=function(e){return e?j.LongBits.from(e).toHash():j.LongBits.zeroHash};j.longFromHash=function(e,r){var i=j.LongBits.fromHash(e);return j.Long?j.Long.fromBits(i.lo,i.hi,r):i.toNumber(Boolean(r))};function qh(t,e,r){for(var i=Object.keys(e),n=0;n<i.length;++n)(t[i[n]]===void 0||!r)&&(t[i[n]]=e[i[n]]);return t}j.merge=qh;j.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Vh(t){function e(r,i){if(!(this instanceof e))return new e(r,i);Object.defineProperty(this,"message",{get:function(){return r}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),i&&qh(this,i)}return(e.prototype=Object.create(Error.prototype)).constructor=e,Object.defineProperty(e.prototype,"name",{get:function(){return t}}),e.prototype.toString=function(){return this.name+": "+this.message},e}j.newError=Vh;j.ProtocolError=Vh("ProtocolError");j.oneOfGetter=function(e){for(var r={},i=0;i<e.length;++i)r[e[i]]=1;return function(){for(var n=Object.keys(this),s=n.length-1;s>-1;--s)if(r[n[s]]===1&&this[n[s]]!==void 0&&this[n[s]]!==null)return n[s]}};j.oneOfSetter=function(e){return function(r){for(var i=0;i<e.length;++i)e[i]!==r&&delete this[e[i]]}};j.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};j._configure=function(){var t=j.Buffer;if(!t){j._Buffer_from=j._Buffer_allocUnsafe=null;return}j._Buffer_from=t.from!==Uint8Array.from&&t.from||function(r,i){return new t(r,i)},j._Buffer_allocUnsafe=t.allocUnsafe||function(r){return new t(r)}}});var V0=E((KT,jh)=>{"use strict";jh.exports=ce;var Ft=pi(),L0,Ua=Ft.LongBits,Gh=Ft.base64,Hh=Ft.utf8;function Cs(t,e,r){this.fn=t,this.len=e,this.next=void 0,this.val=r}function M0(){}function rm(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}function ce(){this.len=0,this.head=new Cs(M0,0,0),this.tail=this.head,this.states=null}var zh=function(){return Ft.Buffer?function(){return(ce.create=function(){return new L0})()}:function(){return new ce}};ce.create=zh();ce.alloc=function(e){return new Ft.Array(e)};Ft.Array!==Array&&(ce.alloc=Ft.pool(ce.alloc,Ft.Array.prototype.subarray));ce.prototype._push=function(e,r,i){return this.tail=this.tail.next=new Cs(e,r,i),this.len+=r,this};function K0(t,e,r){e[r]=t&255}function im(t,e,r){for(;t>127;)e[r++]=t&127|128,t>>>=7;e[r]=t}function F0(t,e){this.len=t,this.next=void 0,this.val=e}F0.prototype=Object.create(Cs.prototype);F0.prototype.fn=im;ce.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new F0((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};ce.prototype.int32=function(e){return e<0?this._push(U0,10,Ua.fromNumber(e)):this.uint32(e)};ce.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function U0(t,e,r){for(;t.hi;)e[r++]=t.lo&127|128,t.lo=(t.lo>>>7|t.hi<<25)>>>0,t.hi>>>=7;for(;t.lo>127;)e[r++]=t.lo&127|128,t.lo=t.lo>>>7;e[r++]=t.lo}ce.prototype.uint64=function(e){var r=Ua.from(e);return this._push(U0,r.length(),r)};ce.prototype.int64=ce.prototype.uint64;ce.prototype.sint64=function(e){var r=Ua.from(e).zzEncode();return this._push(U0,r.length(),r)};ce.prototype.bool=function(e){return this._push(K0,1,e?1:0)};function q0(t,e,r){e[r]=t&255,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}ce.prototype.fixed32=function(e){return this._push(q0,4,e>>>0)};ce.prototype.sfixed32=ce.prototype.fixed32;ce.prototype.fixed64=function(e){var r=Ua.from(e);return this._push(q0,4,r.lo)._push(q0,4,r.hi)};ce.prototype.sfixed64=ce.prototype.fixed64;ce.prototype.float=function(e){return this._push(Ft.float.writeFloatLE,4,e)};ce.prototype.double=function(e){return this._push(Ft.float.writeDoubleLE,8,e)};var nm=Ft.Array.prototype.set?function(e,r,i){r.set(e,i)}:function(e,r,i){for(var n=0;n<e.length;++n)r[i+n]=e[n]};ce.prototype.bytes=function(e){var r=e.length>>>0;if(!r)return this._push(K0,1,0);if(Ft.isString(e)){var i=ce.alloc(r=Gh.length(e));Gh.decode(e,i,0),e=i}return this.uint32(r)._push(nm,r,e)};ce.prototype.string=function(e){var r=Hh.length(e);return r?this.uint32(r)._push(Hh.write,r,e):this._push(K0,1,0)};ce.prototype.fork=function(){return this.states=new rm(this),this.head=this.tail=new Cs(M0,0,0),this.len=0,this};ce.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Cs(M0,0,0),this.len=0),this};ce.prototype.ldelim=function(){var e=this.head,r=this.tail,i=this.len;return this.reset().uint32(i),i&&(this.tail.next=e.next,this.tail=r,this.len+=i),this};ce.prototype.finish=function(){for(var e=this.head.next,r=this.constructor.alloc(this.len),i=0;e;)e.fn(e.val,r,i),i+=e.len,e=e.next;return r};ce._configure=function(t){L0=t,ce.create=zh(),L0._configure()}});var $h=E((FT,Yh)=>{"use strict";Yh.exports=dr;var Wh=V0();(dr.prototype=Object.create(Wh.prototype)).constructor=dr;var di=pi();function dr(){Wh.call(this)}dr._configure=function(){dr.alloc=di._Buffer_allocUnsafe,dr.writeBytesBuffer=di.Buffer&&di.Buffer.prototype instanceof Uint8Array&&di.Buffer.prototype.set.name==="set"?function(e,r,i){r.set(e,i)}:function(e,r,i){if(e.copy)e.copy(r,i,0,e.length);else for(var n=0;n<e.length;)r[i++]=e[n++]}};dr.prototype.bytes=function(e){di.isString(e)&&(e=di._Buffer_from(e,"base64"));var r=e.length>>>0;return this.uint32(r),r&&this._push(dr.writeBytesBuffer,r,e),this};function sm(t,e,r){t.length<40?di.utf8.write(t,e,r):e.utf8Write?e.utf8Write(t,r):e.write(t,r)}dr.prototype.string=function(e){var r=di.Buffer.byteLength(e);return this.uint32(r),r&&this._push(sm,r,e),this};dr._configure()});var z0=E((UT,el)=>{"use strict";el.exports=je;var yr=pi(),G0,Qh=yr.LongBits,am=yr.utf8;function er(t,e){return RangeError("index out of range: "+t.pos+" + "+(e||1)+" > "+t.len)}function je(t){this.buf=t,this.pos=0,this.len=t.length}var Zh=typeof Uint8Array!="undefined"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new je(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new je(e);throw Error("illegal buffer")},Xh=function(){return yr.Buffer?function(r){return(je.create=function(n){return yr.Buffer.isBuffer(n)?new G0(n):Zh(n)})(r)}:Zh};je.create=Xh();je.prototype._slice=yr.Array.prototype.subarray||yr.Array.prototype.slice;je.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,er(this,10);return e}}();je.prototype.int32=function(){return this.uint32()|0};je.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function H0(){var t=new Qh(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw er(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw er(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}je.prototype.bool=function(){return this.uint32()!==0};function qa(t,e){return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0}je.prototype.fixed32=function(){if(this.pos+4>this.len)throw er(this,4);return qa(this.buf,this.pos+=4)};je.prototype.sfixed32=function(){if(this.pos+4>this.len)throw er(this,4);return qa(this.buf,this.pos+=4)|0};function Jh(){if(this.pos+8>this.len)throw er(this,8);return new Qh(qa(this.buf,this.pos+=4),qa(this.buf,this.pos+=4))}je.prototype.float=function(){if(this.pos+4>this.len)throw er(this,4);var e=yr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};je.prototype.double=function(){if(this.pos+8>this.len)throw er(this,4);var e=yr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};je.prototype.bytes=function(){var e=this.uint32(),r=this.pos,i=this.pos+e;if(i>this.len)throw er(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(r,i):r===i?new this.buf.constructor(0):this._slice.call(this.buf,r,i)};je.prototype.string=function(){var e=this.bytes();return am.read(e,0,e.length)};je.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw er(this,e);this.pos+=e}else do if(this.pos>=this.len)throw er(this);while(this.buf[this.pos++]&128);return this};je.prototype.skipType=function(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!=4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+t+" at offset "+this.pos)}return this};je._configure=function(t){G0=t,je.create=Xh(),G0._configure();var e=yr.Long?"toLong":"toNumber";yr.merge(je.prototype,{int64:function(){return H0.call(this)[e](!1)},uint64:function(){return H0.call(this)[e](!0)},sint64:function(){return H0.call(this).zzDecode()[e](!1)},fixed64:function(){return Jh.call(this)[e](!0)},sfixed64:function(){return Jh.call(this)[e](!1)}})}});var nl=E((qT,il)=>{"use strict";il.exports=Zi;var tl=z0();(Zi.prototype=Object.create(tl.prototype)).constructor=Zi;var rl=pi();function Zi(t){tl.call(this,t)}Zi._configure=function(){rl.Buffer&&(Zi.prototype._slice=rl.Buffer.prototype.slice)};Zi.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Zi._configure()});var al=E((VT,sl)=>{"use strict";sl.exports=Ts;var j0=pi();(Ts.prototype=Object.create(j0.EventEmitter.prototype)).constructor=Ts;function Ts(t,e,r){if(typeof t!="function")throw TypeError("rpcImpl must be a function");j0.EventEmitter.call(this),this.rpcImpl=t,this.requestDelimited=Boolean(e),this.responseDelimited=Boolean(r)}Ts.prototype.rpcCall=function t(e,r,i,n,s){if(!n)throw TypeError("request must be specified");var a=this;if(!s)return j0.asPromise(t,a,e,r,i,n);if(!a.rpcImpl){setTimeout(function(){s(Error("already ended"))},0);return}try{return a.rpcImpl(e,r[a.requestDelimited?"encodeDelimited":"encode"](n).finish(),function(f,u){if(f)return a.emit("error",f,e),s(f);if(u===null){a.end(!0);return}if(!(u instanceof i))try{u=i[a.responseDelimited?"decodeDelimited":"decode"](u)}catch(c){return a.emit("error",c,e),s(c)}return a.emit("data",u,e),s(null,u)})}catch(o){a.emit("error",o,e),setTimeout(function(){s(o)},0);return}};Ts.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var ul=E(ol=>{"use strict";var om=ol;om.Service=al()});var fl=E((HT,cl)=>{"use strict";cl.exports={}});var pl=E(ll=>{"use strict";var Tt=ll;Tt.build="minimal";Tt.Writer=V0();Tt.BufferWriter=$h();Tt.Reader=z0();Tt.BufferReader=nl();Tt.util=pi();Tt.rpc=ul();Tt.roots=fl();Tt.configure=hl;function hl(){Tt.util._configure(),Tt.Writer._configure(Tt.BufferWriter),Tt.Reader._configure(Tt.BufferReader)}hl()});var Xi=E((jT,dl)=>{"use strict";dl.exports=pl()});var Y0=E((WT,yl)=>{"use strict";var yi=Xi(),On=yi.Reader,W0=yi.Writer,ee=yi.util,Xe=yi.roots["libp2p-pubsub-rpc"]||(yi.roots["libp2p-pubsub-rpc"]={});Xe.RPC=function(){function t(e){if(this.subscriptions=[],this.msgs=[],e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.subscriptions=ee.emptyArray,t.prototype.msgs=ee.emptyArray,t.encode=function(r,i){if(i||(i=W0.create()),r.subscriptions!=null&&r.subscriptions.length)for(var n=0;n<r.subscriptions.length;++n)Xe.RPC.SubOpts.encode(r.subscriptions[n],i.uint32(10).fork()).ldelim();if(r.msgs!=null&&r.msgs.length)for(var n=0;n<r.msgs.length;++n)Xe.RPC.Message.encode(r.msgs[n],i.uint32(18).fork()).ldelim();return i},t.decode=function(r,i){r instanceof On||(r=On.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Xe.RPC;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.subscriptions&&s.subscriptions.length||(s.subscriptions=[]),s.subscriptions.push(Xe.RPC.SubOpts.decode(r,r.uint32()));break;case 2:s.msgs&&s.msgs.length||(s.msgs=[]),s.msgs.push(Xe.RPC.Message.decode(r,r.uint32()));break;default:r.skipType(a&7);break}}return s},t.fromObject=function(r){if(r instanceof Xe.RPC)return r;var i=new Xe.RPC;if(r.subscriptions){if(!Array.isArray(r.subscriptions))throw TypeError(".RPC.subscriptions: array expected");i.subscriptions=[];for(var n=0;n<r.subscriptions.length;++n){if(typeof r.subscriptions[n]!="object")throw TypeError(".RPC.subscriptions: object expected");i.subscriptions[n]=Xe.RPC.SubOpts.fromObject(r.subscriptions[n])}}if(r.msgs){if(!Array.isArray(r.msgs))throw TypeError(".RPC.msgs: array expected");i.msgs=[];for(var n=0;n<r.msgs.length;++n){if(typeof r.msgs[n]!="object")throw TypeError(".RPC.msgs: object expected");i.msgs[n]=Xe.RPC.Message.fromObject(r.msgs[n])}}return i},t.toObject=function(r,i){i||(i={});var n={};if((i.arrays||i.defaults)&&(n.subscriptions=[],n.msgs=[]),r.subscriptions&&r.subscriptions.length){n.subscriptions=[];for(var s=0;s<r.subscriptions.length;++s)n.subscriptions[s]=Xe.RPC.SubOpts.toObject(r.subscriptions[s],i)}if(r.msgs&&r.msgs.length){n.msgs=[];for(var s=0;s<r.msgs.length;++s)n.msgs[s]=Xe.RPC.Message.toObject(r.msgs[s],i)}return n},t.prototype.toJSON=function(){return this.constructor.toObject(this,yi.util.toJSONOptions)},t.SubOpts=function(){function e(i){if(i)for(var n=Object.keys(i),s=0;s<n.length;++s)i[n[s]]!=null&&(this[n[s]]=i[n[s]])}e.prototype.subscribe=null,e.prototype.topicID=null;var r;return Object.defineProperty(e.prototype,"_subscribe",{get:ee.oneOfGetter(r=["subscribe"]),set:ee.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_topicID",{get:ee.oneOfGetter(r=["topicID"]),set:ee.oneOfSetter(r)}),e.encode=function(n,s){return s||(s=W0.create()),n.subscribe!=null&&Object.hasOwnProperty.call(n,"subscribe")&&s.uint32(8).bool(n.subscribe),n.topicID!=null&&Object.hasOwnProperty.call(n,"topicID")&&s.uint32(18).string(n.topicID),s},e.decode=function(n,s){n instanceof On||(n=On.create(n));for(var a=s===void 0?n.len:n.pos+s,o=new Xe.RPC.SubOpts;n.pos<a;){var f=n.uint32();switch(f>>>3){case 1:o.subscribe=n.bool();break;case 2:o.topicID=n.string();break;default:n.skipType(f&7);break}}return o},e.fromObject=function(n){if(n instanceof Xe.RPC.SubOpts)return n;var s=new Xe.RPC.SubOpts;return n.subscribe!=null&&(s.subscribe=Boolean(n.subscribe)),n.topicID!=null&&(s.topicID=String(n.topicID)),s},e.toObject=function(n,s){s||(s={});var a={};return n.subscribe!=null&&n.hasOwnProperty("subscribe")&&(a.subscribe=n.subscribe,s.oneofs&&(a._subscribe="subscribe")),n.topicID!=null&&n.hasOwnProperty("topicID")&&(a.topicID=n.topicID,s.oneofs&&(a._topicID="topicID")),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,yi.util.toJSONOptions)},e}(),t.Message=function(){function e(i){if(this.topicIDs=[],i)for(var n=Object.keys(i),s=0;s<n.length;++s)i[n[s]]!=null&&(this[n[s]]=i[n[s]])}e.prototype.from=null,e.prototype.data=null,e.prototype.seqno=null,e.prototype.topicIDs=ee.emptyArray,e.prototype.signature=null,e.prototype.key=null;var r;return Object.defineProperty(e.prototype,"_from",{get:ee.oneOfGetter(r=["from"]),set:ee.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_data",{get:ee.oneOfGetter(r=["data"]),set:ee.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_seqno",{get:ee.oneOfGetter(r=["seqno"]),set:ee.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_signature",{get:ee.oneOfGetter(r=["signature"]),set:ee.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_key",{get:ee.oneOfGetter(r=["key"]),set:ee.oneOfSetter(r)}),e.encode=function(n,s){if(s||(s=W0.create()),n.from!=null&&Object.hasOwnProperty.call(n,"from")&&s.uint32(10).bytes(n.from),n.data!=null&&Object.hasOwnProperty.call(n,"data")&&s.uint32(18).bytes(n.data),n.seqno!=null&&Object.hasOwnProperty.call(n,"seqno")&&s.uint32(26).bytes(n.seqno),n.topicIDs!=null&&n.topicIDs.length)for(var a=0;a<n.topicIDs.length;++a)s.uint32(34).string(n.topicIDs[a]);return n.signature!=null&&Object.hasOwnProperty.call(n,"signature")&&s.uint32(42).bytes(n.signature),n.key!=null&&Object.hasOwnProperty.call(n,"key")&&s.uint32(50).bytes(n.key),s},e.decode=function(n,s){n instanceof On||(n=On.create(n));for(var a=s===void 0?n.len:n.pos+s,o=new Xe.RPC.Message;n.pos<a;){var f=n.uint32();switch(f>>>3){case 1:o.from=n.bytes();break;case 2:o.data=n.bytes();break;case 3:o.seqno=n.bytes();break;case 4:o.topicIDs&&o.topicIDs.length||(o.topicIDs=[]),o.topicIDs.push(n.string());break;case 5:o.signature=n.bytes();break;case 6:o.key=n.bytes();break;default:n.skipType(f&7);break}}return o},e.fromObject=function(n){if(n instanceof Xe.RPC.Message)return n;var s=new Xe.RPC.Message;if(n.from!=null&&(typeof n.from=="string"?ee.base64.decode(n.from,s.from=ee.newBuffer(ee.base64.length(n.from)),0):n.from.length&&(s.from=n.from)),n.data!=null&&(typeof n.data=="string"?ee.base64.decode(n.data,s.data=ee.newBuffer(ee.base64.length(n.data)),0):n.data.length&&(s.data=n.data)),n.seqno!=null&&(typeof n.seqno=="string"?ee.base64.decode(n.seqno,s.seqno=ee.newBuffer(ee.base64.length(n.seqno)),0):n.seqno.length&&(s.seqno=n.seqno)),n.topicIDs){if(!Array.isArray(n.topicIDs))throw TypeError(".RPC.Message.topicIDs: array expected");s.topicIDs=[];for(var a=0;a<n.topicIDs.length;++a)s.topicIDs[a]=String(n.topicIDs[a])}return n.signature!=null&&(typeof n.signature=="string"?ee.base64.decode(n.signature,s.signature=ee.newBuffer(ee.base64.length(n.signature)),0):n.signature.length&&(s.signature=n.signature)),n.key!=null&&(typeof n.key=="string"?ee.base64.decode(n.key,s.key=ee.newBuffer(ee.base64.length(n.key)),0):n.key.length&&(s.key=n.key)),s},e.toObject=function(n,s){s||(s={});var a={};if((s.arrays||s.defaults)&&(a.topicIDs=[]),n.from!=null&&n.hasOwnProperty("from")&&(a.from=s.bytes===String?ee.base64.encode(n.from,0,n.from.length):s.bytes===Array?Array.prototype.slice.call(n.from):n.from,s.oneofs&&(a._from="from")),n.data!=null&&n.hasOwnProperty("data")&&(a.data=s.bytes===String?ee.base64.encode(n.data,0,n.data.length):s.bytes===Array?Array.prototype.slice.call(n.data):n.data,s.oneofs&&(a._data="data")),n.seqno!=null&&n.hasOwnProperty("seqno")&&(a.seqno=s.bytes===String?ee.base64.encode(n.seqno,0,n.seqno.length):s.bytes===Array?Array.prototype.slice.call(n.seqno):n.seqno,s.oneofs&&(a._seqno="seqno")),n.topicIDs&&n.topicIDs.length){a.topicIDs=[];for(var o=0;o<n.topicIDs.length;++o)a.topicIDs[o]=n.topicIDs[o]}return n.signature!=null&&n.hasOwnProperty("signature")&&(a.signature=s.bytes===String?ee.base64.encode(n.signature,0,n.signature.length):s.bytes===Array?Array.prototype.slice.call(n.signature):n.signature,s.oneofs&&(a._signature="signature")),n.key!=null&&n.hasOwnProperty("key")&&(a.key=s.bytes===String?ee.base64.encode(n.key,0,n.key.length):s.bytes===Array?Array.prototype.slice.call(n.key):n.key,s.oneofs&&(a._key="key")),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,yi.util.toJSONOptions)},e}(),t}();yl.exports=Xe});var Q0=E(Va=>{"use strict";Va.byteLength=cm;Va.toByteArray=hm;Va.fromByteArray=dm;var gr=[],Ut=[],um=typeof Uint8Array!="undefined"?Uint8Array:Array,$0="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(Ji=0,gl=$0.length;Ji<gl;++Ji)gr[Ji]=$0[Ji],Ut[$0.charCodeAt(Ji)]=Ji;var Ji,gl;Ut["-".charCodeAt(0)]=62;Ut["_".charCodeAt(0)]=63;function vl(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");r===-1&&(r=e);var i=r===e?0:4-r%4;return[r,i]}function cm(t){var e=vl(t),r=e[0],i=e[1];return(r+i)*3/4-i}function fm(t,e,r){return(e+r)*3/4-r}function hm(t){var e,r=vl(t),i=r[0],n=r[1],s=new um(fm(t,i,n)),a=0,o=n>0?i-4:i,f;for(f=0;f<o;f+=4)e=Ut[t.charCodeAt(f)]<<18|Ut[t.charCodeAt(f+1)]<<12|Ut[t.charCodeAt(f+2)]<<6|Ut[t.charCodeAt(f+3)],s[a++]=e>>16&255,s[a++]=e>>8&255,s[a++]=e&255;return n===2&&(e=Ut[t.charCodeAt(f)]<<2|Ut[t.charCodeAt(f+1)]>>4,s[a++]=e&255),n===1&&(e=Ut[t.charCodeAt(f)]<<10|Ut[t.charCodeAt(f+1)]<<4|Ut[t.charCodeAt(f+2)]>>2,s[a++]=e>>8&255,s[a++]=e&255),s}function lm(t){return gr[t>>18&63]+gr[t>>12&63]+gr[t>>6&63]+gr[t&63]}function pm(t,e,r){for(var i,n=[],s=e;s<r;s+=3)i=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(t[s+2]&255),n.push(lm(i));return n.join("")}function dm(t){for(var e,r=t.length,i=r%3,n=[],s=16383,a=0,o=r-i;a<o;a+=s)n.push(pm(t,a,a+s>o?o:a+s));return i===1?(e=t[r-1],n.push(gr[e>>2]+gr[e<<4&63]+"==")):i===2&&(e=(t[r-2]<<8)+t[r-1],n.push(gr[e>>10]+gr[e>>4&63]+gr[e<<2&63]+"=")),n.join("")}});var xl=E(Z0=>{Z0.read=function(t,e,r,i,n){var s,a,o=n*8-i-1,f=(1<<o)-1,u=f>>1,c=-7,h=r?n-1:0,l=r?-1:1,d=t[e+h];for(h+=l,s=d&(1<<-c)-1,d>>=-c,c+=o;c>0;s=s*256+t[e+h],h+=l,c-=8);for(a=s&(1<<-c)-1,s>>=-c,c+=i;c>0;a=a*256+t[e+h],h+=l,c-=8);if(s===0)s=1-u;else{if(s===f)return a?NaN:(d?-1:1)*(1/0);a=a+Math.pow(2,i),s=s-u}return(d?-1:1)*a*Math.pow(2,s-i)};Z0.write=function(t,e,r,i,n,s){var a,o,f,u=s*8-n-1,c=(1<<u)-1,h=c>>1,l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,d=i?0:s-1,p=i?1:-1,y=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,a=c):(a=Math.floor(Math.log(e)/Math.LN2),e*(f=Math.pow(2,-a))<1&&(a--,f*=2),a+h>=1?e+=l/f:e+=l*Math.pow(2,1-h),e*f>=2&&(a++,f/=2),a+h>=c?(o=0,a=c):a+h>=1?(o=(e*f-1)*Math.pow(2,n),a=a+h):(o=e*Math.pow(2,h-1)*Math.pow(2,n),a=0));n>=8;t[r+d]=o&255,d+=p,o/=256,n-=8);for(a=a<<n|o,u+=n;u>0;t[r+d]=a&255,d+=p,a/=256,u-=8);t[r+d-p]|=y*128}});var Un=E(Fn=>{"use strict";var X0=Q0(),Ln=xl(),bl=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;Fn.Buffer=A;Fn.SlowBuffer=mm;Fn.INSPECT_MAX_BYTES=50;var Ga=2147483647;Fn.kMaxLength=Ga;A.TYPED_ARRAY_SUPPORT=ym();!A.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function ym(){try{let t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),t.foo()===42}catch(t){return!1}}Object.defineProperty(A.prototype,"parent",{enumerable:!0,get:function(){if(!!A.isBuffer(this))return this.buffer}});Object.defineProperty(A.prototype,"offset",{enumerable:!0,get:function(){if(!!A.isBuffer(this))return this.byteOffset}});function zr(t){if(t>Ga)throw new RangeError('The value "'+t+'" is invalid for option "size"');let e=new Uint8Array(t);return Object.setPrototypeOf(e,A.prototype),e}function A(t,e,r){if(typeof t=="number"){if(typeof e=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return J0(t)}return ml(t,e,r)}A.poolSize=8192;function ml(t,e,r){if(typeof t=="string")return vm(t,e);if(ArrayBuffer.isView(t))return xm(t);if(t==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(vr(t,ArrayBuffer)||t&&vr(t.buffer,ArrayBuffer)||typeof SharedArrayBuffer!="undefined"&&(vr(t,SharedArrayBuffer)||t&&vr(t.buffer,SharedArrayBuffer)))return tu(t,e,r);if(typeof t=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');let i=t.valueOf&&t.valueOf();if(i!=null&&i!==t)return A.from(i,e,r);let n=bm(t);if(n)return n;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof t[Symbol.toPrimitive]=="function")return A.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}A.from=function(t,e,r){return ml(t,e,r)};Object.setPrototypeOf(A.prototype,Uint8Array.prototype);Object.setPrototypeOf(A,Uint8Array);function El(t){if(typeof t!="number")throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function gm(t,e,r){return El(t),t<=0?zr(t):e!==void 0?typeof r=="string"?zr(t).fill(e,r):zr(t).fill(e):zr(t)}A.alloc=function(t,e,r){return gm(t,e,r)};function J0(t){return El(t),zr(t<0?0:ru(t)|0)}A.allocUnsafe=function(t){return J0(t)};A.allocUnsafeSlow=function(t){return J0(t)};function vm(t,e){if((typeof e!="string"||e==="")&&(e="utf8"),!A.isEncoding(e))throw new TypeError("Unknown encoding: "+e);let r=wl(t,e)|0,i=zr(r),n=i.write(t,e);return n!==r&&(i=i.slice(0,n)),i}function eu(t){let e=t.length<0?0:ru(t.length)|0,r=zr(e);for(let i=0;i<e;i+=1)r[i]=t[i]&255;return r}function xm(t){if(vr(t,Uint8Array)){let e=new Uint8Array(t);return tu(e.buffer,e.byteOffset,e.byteLength)}return eu(t)}function tu(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let i;return e===void 0&&r===void 0?i=new Uint8Array(t):r===void 0?i=new Uint8Array(t,e):i=new Uint8Array(t,e,r),Object.setPrototypeOf(i,A.prototype),i}function bm(t){if(A.isBuffer(t)){let e=ru(t.length)|0,r=zr(e);return r.length===0||t.copy(r,0,0,e),r}if(t.length!==void 0)return typeof t.length!="number"||su(t.length)?zr(0):eu(t);if(t.type==="Buffer"&&Array.isArray(t.data))return eu(t.data)}function ru(t){if(t>=Ga)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Ga.toString(16)+" bytes");return t|0}function mm(t){return+t!=t&&(t=0),A.alloc(+t)}A.isBuffer=function(e){return e!=null&&e._isBuffer===!0&&e!==A.prototype};A.compare=function(e,r){if(vr(e,Uint8Array)&&(e=A.from(e,e.offset,e.byteLength)),vr(r,Uint8Array)&&(r=A.from(r,r.offset,r.byteLength)),!A.isBuffer(e)||!A.isBuffer(r))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===r)return 0;let i=e.length,n=r.length;for(let s=0,a=Math.min(i,n);s<a;++s)if(e[s]!==r[s]){i=e[s],n=r[s];break}return i<n?-1:n<i?1:0};A.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};A.concat=function(e,r){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(e.length===0)return A.alloc(0);let i;if(r===void 0)for(r=0,i=0;i<e.length;++i)r+=e[i].length;let n=A.allocUnsafe(r),s=0;for(i=0;i<e.length;++i){let a=e[i];if(vr(a,Uint8Array))s+a.length>n.length?(A.isBuffer(a)||(a=A.from(a)),a.copy(n,s)):Uint8Array.prototype.set.call(n,a,s);else if(A.isBuffer(a))a.copy(n,s);else throw new TypeError('"list" argument must be an Array of Buffers');s+=a.length}return n};function wl(t,e){if(A.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||vr(t,ArrayBuffer))return t.byteLength;if(typeof t!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);let r=t.length,i=arguments.length>2&&arguments[2]===!0;if(!i&&r===0)return 0;let n=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return nu(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return r*2;case"hex":return r>>>1;case"base64":return Nl(t).length;default:if(n)return i?-1:nu(t).length;e=(""+e).toLowerCase(),n=!0}}A.byteLength=wl;function Em(t,e,r){let i=!1;if((e===void 0||e<0)&&(e=0),e>this.length||((r===void 0||r>this.length)&&(r=this.length),r<=0)||(r>>>=0,e>>>=0,r<=e))return"";for(t||(t="utf8");;)switch(t){case"hex":return Dm(this,e,r);case"utf8":case"utf-8":return Il(this,e,r);case"ascii":return Tm(this,e,r);case"latin1":case"binary":return Rm(this,e,r);case"base64":return Am(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Pm(this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}A.prototype._isBuffer=!0;function en(t,e,r){let i=t[e];t[e]=t[r],t[r]=i}A.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let r=0;r<e;r+=2)en(this,r,r+1);return this};A.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let r=0;r<e;r+=4)en(this,r,r+3),en(this,r+1,r+2);return this};A.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let r=0;r<e;r+=8)en(this,r,r+7),en(this,r+1,r+6),en(this,r+2,r+5),en(this,r+3,r+4);return this};A.prototype.toString=function(){let e=this.length;return e===0?"":arguments.length===0?Il(this,0,e):Em.apply(this,arguments)};A.prototype.toLocaleString=A.prototype.toString;A.prototype.equals=function(e){if(!A.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?!0:A.compare(this,e)===0};A.prototype.inspect=function(){let e="",r=Fn.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"};bl&&(A.prototype[bl]=A.prototype.inspect);A.prototype.compare=function(e,r,i,n,s){if(vr(e,Uint8Array)&&(e=A.from(e,e.offset,e.byteLength)),!A.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(r===void 0&&(r=0),i===void 0&&(i=e?e.length:0),n===void 0&&(n=0),s===void 0&&(s=this.length),r<0||i>e.length||n<0||s>this.length)throw new RangeError("out of range index");if(n>=s&&r>=i)return 0;if(n>=s)return-1;if(r>=i)return 1;if(r>>>=0,i>>>=0,n>>>=0,s>>>=0,this===e)return 0;let a=s-n,o=i-r,f=Math.min(a,o),u=this.slice(n,s),c=e.slice(r,i);for(let h=0;h<f;++h)if(u[h]!==c[h]){a=u[h],o=c[h];break}return a<o?-1:o<a?1:0};function Sl(t,e,r,i,n){if(t.length===0)return-1;if(typeof r=="string"?(i=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,su(r)&&(r=n?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(n)return-1;r=t.length-1}else if(r<0)if(n)r=0;else return-1;if(typeof e=="string"&&(e=A.from(e,i)),A.isBuffer(e))return e.length===0?-1:_l(t,e,r,i,n);if(typeof e=="number")return e=e&255,typeof Uint8Array.prototype.indexOf=="function"?n?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):_l(t,[e],r,i,n);throw new TypeError("val must be string, number or Buffer")}function _l(t,e,r,i,n){let s=1,a=t.length,o=e.length;if(i!==void 0&&(i=String(i).toLowerCase(),i==="ucs2"||i==="ucs-2"||i==="utf16le"||i==="utf-16le")){if(t.length<2||e.length<2)return-1;s=2,a/=2,o/=2,r/=2}function f(c,h){return s===1?c[h]:c.readUInt16BE(h*s)}let u;if(n){let c=-1;for(u=r;u<a;u++)if(f(t,u)===f(e,c===-1?0:u-c)){if(c===-1&&(c=u),u-c+1===o)return c*s}else c!==-1&&(u-=u-c),c=-1}else for(r+o>a&&(r=a-o),u=r;u>=0;u--){let c=!0;for(let h=0;h<o;h++)if(f(t,u+h)!==f(e,h)){c=!1;break}if(c)return u}return-1}A.prototype.includes=function(e,r,i){return this.indexOf(e,r,i)!==-1};A.prototype.indexOf=function(e,r,i){return Sl(this,e,r,i,!0)};A.prototype.lastIndexOf=function(e,r,i){return Sl(this,e,r,i,!1)};function wm(t,e,r,i){r=Number(r)||0;let n=t.length-r;i?(i=Number(i),i>n&&(i=n)):i=n;let s=e.length;i>s/2&&(i=s/2);let a;for(a=0;a<i;++a){let o=parseInt(e.substr(a*2,2),16);if(su(o))return a;t[r+a]=o}return a}function Sm(t,e,r,i){return Ha(nu(e,t.length-r),t,r,i)}function _m(t,e,r,i){return Ha(Lm(e),t,r,i)}function Im(t,e,r,i){return Ha(Nl(e),t,r,i)}function Bm(t,e,r,i){return Ha(Mm(e,t.length-r),t,r,i)}A.prototype.write=function(e,r,i,n){if(r===void 0)n="utf8",i=this.length,r=0;else if(i===void 0&&typeof r=="string")n=r,i=this.length,r=0;else if(isFinite(r))r=r>>>0,isFinite(i)?(i=i>>>0,n===void 0&&(n="utf8")):(n=i,i=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let s=this.length-r;if((i===void 0||i>s)&&(i=s),e.length>0&&(i<0||r<0)||r>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let a=!1;for(;;)switch(n){case"hex":return wm(this,e,r,i);case"utf8":case"utf-8":return Sm(this,e,r,i);case"ascii":case"latin1":case"binary":return _m(this,e,r,i);case"base64":return Im(this,e,r,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Bm(this,e,r,i);default:if(a)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),a=!0}};A.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Am(t,e,r){return e===0&&r===t.length?X0.fromByteArray(t):X0.fromByteArray(t.slice(e,r))}function Il(t,e,r){r=Math.min(t.length,r);let i=[],n=e;for(;n<r;){let s=t[n],a=null,o=s>239?4:s>223?3:s>191?2:1;if(n+o<=r){let f,u,c,h;switch(o){case 1:s<128&&(a=s);break;case 2:f=t[n+1],(f&192)==128&&(h=(s&31)<<6|f&63,h>127&&(a=h));break;case 3:f=t[n+1],u=t[n+2],(f&192)==128&&(u&192)==128&&(h=(s&15)<<12|(f&63)<<6|u&63,h>2047&&(h<55296||h>57343)&&(a=h));break;case 4:f=t[n+1],u=t[n+2],c=t[n+3],(f&192)==128&&(u&192)==128&&(c&192)==128&&(h=(s&15)<<18|(f&63)<<12|(u&63)<<6|c&63,h>65535&&h<1114112&&(a=h))}}a===null?(a=65533,o=1):a>65535&&(a-=65536,i.push(a>>>10&1023|55296),a=56320|a&1023),i.push(a),n+=o}return Cm(i)}var Bl=4096;function Cm(t){let e=t.length;if(e<=Bl)return String.fromCharCode.apply(String,t);let r="",i=0;for(;i<e;)r+=String.fromCharCode.apply(String,t.slice(i,i+=Bl));return r}function Tm(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]&127);return i}function Rm(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]);return i}function Dm(t,e,r){let i=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>i)&&(r=i);let n="";for(let s=e;s<r;++s)n+=Km[t[s]];return n}function Pm(t,e,r){let i=t.slice(e,r),n="";for(let s=0;s<i.length-1;s+=2)n+=String.fromCharCode(i[s]+i[s+1]*256);return n}A.prototype.slice=function(e,r){let i=this.length;e=~~e,r=r===void 0?i:~~r,e<0?(e+=i,e<0&&(e=0)):e>i&&(e=i),r<0?(r+=i,r<0&&(r=0)):r>i&&(r=i),r<e&&(r=e);let n=this.subarray(e,r);return Object.setPrototypeOf(n,A.prototype),n};function rt(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}A.prototype.readUintLE=A.prototype.readUIntLE=function(e,r,i){e=e>>>0,r=r>>>0,i||rt(e,r,this.length);let n=this[e],s=1,a=0;for(;++a<r&&(s*=256);)n+=this[e+a]*s;return n};A.prototype.readUintBE=A.prototype.readUIntBE=function(e,r,i){e=e>>>0,r=r>>>0,i||rt(e,r,this.length);let n=this[e+--r],s=1;for(;r>0&&(s*=256);)n+=this[e+--r]*s;return n};A.prototype.readUint8=A.prototype.readUInt8=function(e,r){return e=e>>>0,r||rt(e,1,this.length),this[e]};A.prototype.readUint16LE=A.prototype.readUInt16LE=function(e,r){return e=e>>>0,r||rt(e,2,this.length),this[e]|this[e+1]<<8};A.prototype.readUint16BE=A.prototype.readUInt16BE=function(e,r){return e=e>>>0,r||rt(e,2,this.length),this[e]<<8|this[e+1]};A.prototype.readUint32LE=A.prototype.readUInt32LE=function(e,r){return e=e>>>0,r||rt(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};A.prototype.readUint32BE=A.prototype.readUInt32BE=function(e,r){return e=e>>>0,r||rt(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};A.prototype.readBigUInt64LE=gi(function(e){e=e>>>0,Kn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Rs(e,this.length-8);let n=r+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24,s=this[++e]+this[++e]*2**8+this[++e]*2**16+i*2**24;return BigInt(n)+(BigInt(s)<<BigInt(32))});A.prototype.readBigUInt64BE=gi(function(e){e=e>>>0,Kn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Rs(e,this.length-8);let n=r*2**24+this[++e]*2**16+this[++e]*2**8+this[++e],s=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+i;return(BigInt(n)<<BigInt(32))+BigInt(s)});A.prototype.readIntLE=function(e,r,i){e=e>>>0,r=r>>>0,i||rt(e,r,this.length);let n=this[e],s=1,a=0;for(;++a<r&&(s*=256);)n+=this[e+a]*s;return s*=128,n>=s&&(n-=Math.pow(2,8*r)),n};A.prototype.readIntBE=function(e,r,i){e=e>>>0,r=r>>>0,i||rt(e,r,this.length);let n=r,s=1,a=this[e+--n];for(;n>0&&(s*=256);)a+=this[e+--n]*s;return s*=128,a>=s&&(a-=Math.pow(2,8*r)),a};A.prototype.readInt8=function(e,r){return e=e>>>0,r||rt(e,1,this.length),this[e]&128?(255-this[e]+1)*-1:this[e]};A.prototype.readInt16LE=function(e,r){e=e>>>0,r||rt(e,2,this.length);let i=this[e]|this[e+1]<<8;return i&32768?i|4294901760:i};A.prototype.readInt16BE=function(e,r){e=e>>>0,r||rt(e,2,this.length);let i=this[e+1]|this[e]<<8;return i&32768?i|4294901760:i};A.prototype.readInt32LE=function(e,r){return e=e>>>0,r||rt(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};A.prototype.readInt32BE=function(e,r){return e=e>>>0,r||rt(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};A.prototype.readBigInt64LE=gi(function(e){e=e>>>0,Kn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Rs(e,this.length-8);let n=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(i<<24);return(BigInt(n)<<BigInt(32))+BigInt(r+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)});A.prototype.readBigInt64BE=gi(function(e){e=e>>>0,Kn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Rs(e,this.length-8);let n=(r<<24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+i)});A.prototype.readFloatLE=function(e,r){return e=e>>>0,r||rt(e,4,this.length),Ln.read(this,e,!0,23,4)};A.prototype.readFloatBE=function(e,r){return e=e>>>0,r||rt(e,4,this.length),Ln.read(this,e,!1,23,4)};A.prototype.readDoubleLE=function(e,r){return e=e>>>0,r||rt(e,8,this.length),Ln.read(this,e,!0,52,8)};A.prototype.readDoubleBE=function(e,r){return e=e>>>0,r||rt(e,8,this.length),Ln.read(this,e,!1,52,8)};function Rt(t,e,r,i,n,s){if(!A.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>n||e<s)throw new RangeError('"value" argument is out of bounds');if(r+i>t.length)throw new RangeError("Index out of range")}A.prototype.writeUintLE=A.prototype.writeUIntLE=function(e,r,i,n){if(e=+e,r=r>>>0,i=i>>>0,!n){let o=Math.pow(2,8*i)-1;Rt(this,e,r,i,o,0)}let s=1,a=0;for(this[r]=e&255;++a<i&&(s*=256);)this[r+a]=e/s&255;return r+i};A.prototype.writeUintBE=A.prototype.writeUIntBE=function(e,r,i,n){if(e=+e,r=r>>>0,i=i>>>0,!n){let o=Math.pow(2,8*i)-1;Rt(this,e,r,i,o,0)}let s=i-1,a=1;for(this[r+s]=e&255;--s>=0&&(a*=256);)this[r+s]=e/a&255;return r+i};A.prototype.writeUint8=A.prototype.writeUInt8=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,1,255,0),this[r]=e&255,r+1};A.prototype.writeUint16LE=A.prototype.writeUInt16LE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,2,65535,0),this[r]=e&255,this[r+1]=e>>>8,r+2};A.prototype.writeUint16BE=A.prototype.writeUInt16BE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,2,65535,0),this[r]=e>>>8,this[r+1]=e&255,r+2};A.prototype.writeUint32LE=A.prototype.writeUInt32LE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,4,4294967295,0),this[r+3]=e>>>24,this[r+2]=e>>>16,this[r+1]=e>>>8,this[r]=e&255,r+4};A.prototype.writeUint32BE=A.prototype.writeUInt32BE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,4,4294967295,0),this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=e&255,r+4};function Al(t,e,r,i,n){kl(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r++]=s,s=s>>8,t[r++]=s,s=s>>8,t[r++]=s,s=s>>8,t[r++]=s;let a=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=a,a=a>>8,t[r++]=a,a=a>>8,t[r++]=a,a=a>>8,t[r++]=a,r}function Cl(t,e,r,i,n){kl(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r+7]=s,s=s>>8,t[r+6]=s,s=s>>8,t[r+5]=s,s=s>>8,t[r+4]=s;let a=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=a,a=a>>8,t[r+2]=a,a=a>>8,t[r+1]=a,a=a>>8,t[r]=a,r+8}A.prototype.writeBigUInt64LE=gi(function(e,r=0){return Al(this,e,r,BigInt(0),BigInt("0xffffffffffffffff"))});A.prototype.writeBigUInt64BE=gi(function(e,r=0){return Cl(this,e,r,BigInt(0),BigInt("0xffffffffffffffff"))});A.prototype.writeIntLE=function(e,r,i,n){if(e=+e,r=r>>>0,!n){let f=Math.pow(2,8*i-1);Rt(this,e,r,i,f-1,-f)}let s=0,a=1,o=0;for(this[r]=e&255;++s<i&&(a*=256);)e<0&&o===0&&this[r+s-1]!==0&&(o=1),this[r+s]=(e/a>>0)-o&255;return r+i};A.prototype.writeIntBE=function(e,r,i,n){if(e=+e,r=r>>>0,!n){let f=Math.pow(2,8*i-1);Rt(this,e,r,i,f-1,-f)}let s=i-1,a=1,o=0;for(this[r+s]=e&255;--s>=0&&(a*=256);)e<0&&o===0&&this[r+s+1]!==0&&(o=1),this[r+s]=(e/a>>0)-o&255;return r+i};A.prototype.writeInt8=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,1,127,-128),e<0&&(e=255+e+1),this[r]=e&255,r+1};A.prototype.writeInt16LE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,2,32767,-32768),this[r]=e&255,this[r+1]=e>>>8,r+2};A.prototype.writeInt16BE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,2,32767,-32768),this[r]=e>>>8,this[r+1]=e&255,r+2};A.prototype.writeInt32LE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,4,2147483647,-2147483648),this[r]=e&255,this[r+1]=e>>>8,this[r+2]=e>>>16,this[r+3]=e>>>24,r+4};A.prototype.writeInt32BE=function(e,r,i){return e=+e,r=r>>>0,i||Rt(this,e,r,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=e&255,r+4};A.prototype.writeBigInt64LE=gi(function(e,r=0){return Al(this,e,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});A.prototype.writeBigInt64BE=gi(function(e,r=0){return Cl(this,e,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Tl(t,e,r,i,n,s){if(r+i>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function Rl(t,e,r,i,n){return e=+e,r=r>>>0,n||Tl(t,e,r,4,34028234663852886e22,-34028234663852886e22),Ln.write(t,e,r,i,23,4),r+4}A.prototype.writeFloatLE=function(e,r,i){return Rl(this,e,r,!0,i)};A.prototype.writeFloatBE=function(e,r,i){return Rl(this,e,r,!1,i)};function Dl(t,e,r,i,n){return e=+e,r=r>>>0,n||Tl(t,e,r,8,17976931348623157e292,-17976931348623157e292),Ln.write(t,e,r,i,52,8),r+8}A.prototype.writeDoubleLE=function(e,r,i){return Dl(this,e,r,!0,i)};A.prototype.writeDoubleBE=function(e,r,i){return Dl(this,e,r,!1,i)};A.prototype.copy=function(e,r,i,n){if(!A.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),!n&&n!==0&&(n=this.length),r>=e.length&&(r=e.length),r||(r=0),n>0&&n<i&&(n=i),n===i||e.length===0||this.length===0)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-r<n-i&&(n=e.length-r+i);let s=n-i;return this===e&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(r,i,n):Uint8Array.prototype.set.call(e,this.subarray(i,n),r),s};A.prototype.fill=function(e,r,i,n){if(typeof e=="string"){if(typeof r=="string"?(n=r,r=0,i=this.length):typeof i=="string"&&(n=i,i=this.length),n!==void 0&&typeof n!="string")throw new TypeError("encoding must be a string");if(typeof n=="string"&&!A.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(e.length===1){let a=e.charCodeAt(0);(n==="utf8"&&a<128||n==="latin1")&&(e=a)}}else typeof e=="number"?e=e&255:typeof e=="boolean"&&(e=Number(e));if(r<0||this.length<r||this.length<i)throw new RangeError("Out of range index");if(i<=r)return this;r=r>>>0,i=i===void 0?this.length:i>>>0,e||(e=0);let s;if(typeof e=="number")for(s=r;s<i;++s)this[s]=e;else{let a=A.isBuffer(e)?e:A.from(e,n),o=a.length;if(o===0)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<i-r;++s)this[s+r]=a[s%o]}return this};var Mn={};function iu(t,e,r){Mn[t]=class extends r{constructor(){super();Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(n){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:n,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}iu("ERR_BUFFER_OUT_OF_BOUNDS",function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError);iu("ERR_INVALID_ARG_TYPE",function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`},TypeError);iu("ERR_OUT_OF_RANGE",function(t,e,r){let i=`The value of "${t}" is out of range.`,n=r;return Number.isInteger(r)&&Math.abs(r)>2**32?n=Pl(String(r)):typeof r=="bigint"&&(n=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(n=Pl(n)),n+="n"),i+=` It must be ${e}. Received ${n}`,i},RangeError);function Pl(t){let e="",r=t.length,i=t[0]==="-"?1:0;for(;r>=i+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function km(t,e,r){Kn(e,"offset"),(t[e]===void 0||t[e+r]===void 0)&&Rs(e,t.length-(r+1))}function kl(t,e,r,i,n,s){if(t>r||t<e){let a=typeof e=="bigint"?"n":"",o;throw s>3?e===0||e===BigInt(0)?o=`>= 0${a} and < 2${a} ** ${(s+1)*8}${a}`:o=`>= -(2${a} ** ${(s+1)*8-1}${a}) and < 2 ** ${(s+1)*8-1}${a}`:o=`>= ${e}${a} and <= ${r}${a}`,new Mn.ERR_OUT_OF_RANGE("value",o,t)}km(i,n,s)}function Kn(t,e){if(typeof t!="number")throw new Mn.ERR_INVALID_ARG_TYPE(e,"number",t)}function Rs(t,e,r){throw Math.floor(t)!==t?(Kn(t,r),new Mn.ERR_OUT_OF_RANGE(r||"offset","an integer",t)):e<0?new Mn.ERR_BUFFER_OUT_OF_BOUNDS:new Mn.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${e}`,t)}var Nm=/[^+/0-9A-Za-z-_]/g;function Om(t){if(t=t.split("=")[0],t=t.trim().replace(Nm,""),t.length<2)return"";for(;t.length%4!=0;)t=t+"=";return t}function nu(t,e){e=e||1/0;let r,i=t.length,n=null,s=[];for(let a=0;a<i;++a){if(r=t.charCodeAt(a),r>55295&&r<57344){if(!n){if(r>56319){(e-=3)>-1&&s.push(239,191,189);continue}else if(a+1===i){(e-=3)>-1&&s.push(239,191,189);continue}n=r;continue}if(r<56320){(e-=3)>-1&&s.push(239,191,189),n=r;continue}r=(n-55296<<10|r-56320)+65536}else n&&(e-=3)>-1&&s.push(239,191,189);if(n=null,r<128){if((e-=1)<0)break;s.push(r)}else if(r<2048){if((e-=2)<0)break;s.push(r>>6|192,r&63|128)}else if(r<65536){if((e-=3)<0)break;s.push(r>>12|224,r>>6&63|128,r&63|128)}else if(r<1114112){if((e-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,r&63|128)}else throw new Error("Invalid code point")}return s}function Lm(t){let e=[];for(let r=0;r<t.length;++r)e.push(t.charCodeAt(r)&255);return e}function Mm(t,e){let r,i,n,s=[];for(let a=0;a<t.length&&!((e-=2)<0);++a)r=t.charCodeAt(a),i=r>>8,n=r%256,s.push(n),s.push(i);return s}function Nl(t){return X0.toByteArray(Om(t))}function Ha(t,e,r,i){let n;for(n=0;n<i&&!(n+r>=e.length||n>=t.length);++n)e[n+r]=t[n];return n}function vr(t,e){return t instanceof e||t!=null&&t.constructor!=null&&t.constructor.name!=null&&t.constructor.name===e.name}function su(t){return t!==t}var Km=function(){let t="0123456789abcdef",e=new Array(256);for(let r=0;r<16;++r){let i=r*16;for(let n=0;n<16;++n)e[i+n]=t[r]+t[n]}return e}();function gi(t){return typeof BigInt=="undefined"?Fm:t}function Fm(){throw new Error("BigInt not supported")}});var Ol=E(au=>{au.read=function(t,e,r,i,n){var s,a,o=n*8-i-1,f=(1<<o)-1,u=f>>1,c=-7,h=r?n-1:0,l=r?-1:1,d=t[e+h];for(h+=l,s=d&(1<<-c)-1,d>>=-c,c+=o;c>0;s=s*256+t[e+h],h+=l,c-=8);for(a=s&(1<<-c)-1,s>>=-c,c+=i;c>0;a=a*256+t[e+h],h+=l,c-=8);if(s===0)s=1-u;else{if(s===f)return a?NaN:(d?-1:1)*(1/0);a=a+Math.pow(2,i),s=s-u}return(d?-1:1)*a*Math.pow(2,s-i)};au.write=function(t,e,r,i,n,s){var a,o,f,u=s*8-n-1,c=(1<<u)-1,h=c>>1,l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,d=i?0:s-1,p=i?1:-1,y=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,a=c):(a=Math.floor(Math.log(e)/Math.LN2),e*(f=Math.pow(2,-a))<1&&(a--,f*=2),a+h>=1?e+=l/f:e+=l*Math.pow(2,1-h),e*f>=2&&(a++,f/=2),a+h>=c?(o=0,a=c):a+h>=1?(o=(e*f-1)*Math.pow(2,n),a=a+h):(o=e*Math.pow(2,h-1)*Math.pow(2,n),a=0));n>=8;t[r+d]=o&255,d+=p,o/=256,n-=8);for(a=a<<n|o,u+=n;u>0;t[r+d]=a&255,d+=p,a/=256,u-=8);t[r+d-p]|=y*128}});var Xl=E(Hn=>{"use strict";var ou=Q0(),qn=Ol(),Ll=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;Hn.Buffer=C;Hn.SlowBuffer=zm;Hn.INSPECT_MAX_BYTES=50;var za=2147483647;Hn.kMaxLength=za;C.TYPED_ARRAY_SUPPORT=Um();!C.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function Um(){try{let t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),t.foo()===42}catch(t){return!1}}Object.defineProperty(C.prototype,"parent",{enumerable:!0,get:function(){if(!!C.isBuffer(this))return this.buffer}});Object.defineProperty(C.prototype,"offset",{enumerable:!0,get:function(){if(!!C.isBuffer(this))return this.byteOffset}});function jr(t){if(t>za)throw new RangeError('The value "'+t+'" is invalid for option "size"');let e=new Uint8Array(t);return Object.setPrototypeOf(e,C.prototype),e}function C(t,e,r){if(typeof t=="number"){if(typeof e=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return uu(t)}return Ml(t,e,r)}C.poolSize=8192;function Ml(t,e,r){if(typeof t=="string")return Vm(t,e);if(ArrayBuffer.isView(t))return Gm(t);if(t==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(xr(t,ArrayBuffer)||t&&xr(t.buffer,ArrayBuffer)||typeof SharedArrayBuffer!="undefined"&&(xr(t,SharedArrayBuffer)||t&&xr(t.buffer,SharedArrayBuffer)))return fu(t,e,r);if(typeof t=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');let i=t.valueOf&&t.valueOf();if(i!=null&&i!==t)return C.from(i,e,r);let n=Hm(t);if(n)return n;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof t[Symbol.toPrimitive]=="function")return C.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}C.from=function(t,e,r){return Ml(t,e,r)};Object.setPrototypeOf(C.prototype,Uint8Array.prototype);Object.setPrototypeOf(C,Uint8Array);function Kl(t){if(typeof t!="number")throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function qm(t,e,r){return Kl(t),t<=0?jr(t):e!==void 0?typeof r=="string"?jr(t).fill(e,r):jr(t).fill(e):jr(t)}C.alloc=function(t,e,r){return qm(t,e,r)};function uu(t){return Kl(t),jr(t<0?0:hu(t)|0)}C.allocUnsafe=function(t){return uu(t)};C.allocUnsafeSlow=function(t){return uu(t)};function Vm(t,e){if((typeof e!="string"||e==="")&&(e="utf8"),!C.isEncoding(e))throw new TypeError("Unknown encoding: "+e);let r=Fl(t,e)|0,i=jr(r),n=i.write(t,e);return n!==r&&(i=i.slice(0,n)),i}function cu(t){let e=t.length<0?0:hu(t.length)|0,r=jr(e);for(let i=0;i<e;i+=1)r[i]=t[i]&255;return r}function Gm(t){if(xr(t,Uint8Array)){let e=new Uint8Array(t);return fu(e.buffer,e.byteOffset,e.byteLength)}return cu(t)}function fu(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let i;return e===void 0&&r===void 0?i=new Uint8Array(t):r===void 0?i=new Uint8Array(t,e):i=new Uint8Array(t,e,r),Object.setPrototypeOf(i,C.prototype),i}function Hm(t){if(C.isBuffer(t)){let e=hu(t.length)|0,r=jr(e);return r.length===0||t.copy(r,0,0,e),r}if(t.length!==void 0)return typeof t.length!="number"||du(t.length)?jr(0):cu(t);if(t.type==="Buffer"&&Array.isArray(t.data))return cu(t.data)}function hu(t){if(t>=za)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+za.toString(16)+" bytes");return t|0}function zm(t){return+t!=t&&(t=0),C.alloc(+t)}C.isBuffer=function(e){return e!=null&&e._isBuffer===!0&&e!==C.prototype};C.compare=function(e,r){if(xr(e,Uint8Array)&&(e=C.from(e,e.offset,e.byteLength)),xr(r,Uint8Array)&&(r=C.from(r,r.offset,r.byteLength)),!C.isBuffer(e)||!C.isBuffer(r))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===r)return 0;let i=e.length,n=r.length;for(let s=0,a=Math.min(i,n);s<a;++s)if(e[s]!==r[s]){i=e[s],n=r[s];break}return i<n?-1:n<i?1:0};C.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};C.concat=function(e,r){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(e.length===0)return C.alloc(0);let i;if(r===void 0)for(r=0,i=0;i<e.length;++i)r+=e[i].length;let n=C.allocUnsafe(r),s=0;for(i=0;i<e.length;++i){let a=e[i];if(xr(a,Uint8Array))s+a.length>n.length?(C.isBuffer(a)||(a=C.from(a)),a.copy(n,s)):Uint8Array.prototype.set.call(n,a,s);else if(C.isBuffer(a))a.copy(n,s);else throw new TypeError('"list" argument must be an Array of Buffers');s+=a.length}return n};function Fl(t,e){if(C.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||xr(t,ArrayBuffer))return t.byteLength;if(typeof t!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);let r=t.length,i=arguments.length>2&&arguments[2]===!0;if(!i&&r===0)return 0;let n=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return pu(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return r*2;case"hex":return r>>>1;case"base64":return Zl(t).length;default:if(n)return i?-1:pu(t).length;e=(""+e).toLowerCase(),n=!0}}C.byteLength=Fl;function jm(t,e,r){let i=!1;if((e===void 0||e<0)&&(e=0),e>this.length||((r===void 0||r>this.length)&&(r=this.length),r<=0)||(r>>>=0,e>>>=0,r<=e))return"";for(t||(t="utf8");;)switch(t){case"hex":return rE(this,e,r);case"utf8":case"utf-8":return Vl(this,e,r);case"ascii":return eE(this,e,r);case"latin1":case"binary":return tE(this,e,r);case"base64":return Xm(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return iE(this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}C.prototype._isBuffer=!0;function tn(t,e,r){let i=t[e];t[e]=t[r],t[r]=i}C.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let r=0;r<e;r+=2)tn(this,r,r+1);return this};C.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let r=0;r<e;r+=4)tn(this,r,r+3),tn(this,r+1,r+2);return this};C.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let r=0;r<e;r+=8)tn(this,r,r+7),tn(this,r+1,r+6),tn(this,r+2,r+5),tn(this,r+3,r+4);return this};C.prototype.toString=function(){let e=this.length;return e===0?"":arguments.length===0?Vl(this,0,e):jm.apply(this,arguments)};C.prototype.toLocaleString=C.prototype.toString;C.prototype.equals=function(e){if(!C.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?!0:C.compare(this,e)===0};C.prototype.inspect=function(){let e="",r=Hn.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"};Ll&&(C.prototype[Ll]=C.prototype.inspect);C.prototype.compare=function(e,r,i,n,s){if(xr(e,Uint8Array)&&(e=C.from(e,e.offset,e.byteLength)),!C.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(r===void 0&&(r=0),i===void 0&&(i=e?e.length:0),n===void 0&&(n=0),s===void 0&&(s=this.length),r<0||i>e.length||n<0||s>this.length)throw new RangeError("out of range index");if(n>=s&&r>=i)return 0;if(n>=s)return-1;if(r>=i)return 1;if(r>>>=0,i>>>=0,n>>>=0,s>>>=0,this===e)return 0;let a=s-n,o=i-r,f=Math.min(a,o),u=this.slice(n,s),c=e.slice(r,i);for(let h=0;h<f;++h)if(u[h]!==c[h]){a=u[h],o=c[h];break}return a<o?-1:o<a?1:0};function Ul(t,e,r,i,n){if(t.length===0)return-1;if(typeof r=="string"?(i=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,du(r)&&(r=n?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(n)return-1;r=t.length-1}else if(r<0)if(n)r=0;else return-1;if(typeof e=="string"&&(e=C.from(e,i)),C.isBuffer(e))return e.length===0?-1:ql(t,e,r,i,n);if(typeof e=="number")return e=e&255,typeof Uint8Array.prototype.indexOf=="function"?n?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):ql(t,[e],r,i,n);throw new TypeError("val must be string, number or Buffer")}function ql(t,e,r,i,n){let s=1,a=t.length,o=e.length;if(i!==void 0&&(i=String(i).toLowerCase(),i==="ucs2"||i==="ucs-2"||i==="utf16le"||i==="utf-16le")){if(t.length<2||e.length<2)return-1;s=2,a/=2,o/=2,r/=2}function f(c,h){return s===1?c[h]:c.readUInt16BE(h*s)}let u;if(n){let c=-1;for(u=r;u<a;u++)if(f(t,u)===f(e,c===-1?0:u-c)){if(c===-1&&(c=u),u-c+1===o)return c*s}else c!==-1&&(u-=u-c),c=-1}else for(r+o>a&&(r=a-o),u=r;u>=0;u--){let c=!0;for(let h=0;h<o;h++)if(f(t,u+h)!==f(e,h)){c=!1;break}if(c)return u}return-1}C.prototype.includes=function(e,r,i){return this.indexOf(e,r,i)!==-1};C.prototype.indexOf=function(e,r,i){return Ul(this,e,r,i,!0)};C.prototype.lastIndexOf=function(e,r,i){return Ul(this,e,r,i,!1)};function Wm(t,e,r,i){r=Number(r)||0;let n=t.length-r;i?(i=Number(i),i>n&&(i=n)):i=n;let s=e.length;i>s/2&&(i=s/2);let a;for(a=0;a<i;++a){let o=parseInt(e.substr(a*2,2),16);if(du(o))return a;t[r+a]=o}return a}function Ym(t,e,r,i){return ja(pu(e,t.length-r),t,r,i)}function $m(t,e,r,i){return ja(oE(e),t,r,i)}function Qm(t,e,r,i){return ja(Zl(e),t,r,i)}function Zm(t,e,r,i){return ja(uE(e,t.length-r),t,r,i)}C.prototype.write=function(e,r,i,n){if(r===void 0)n="utf8",i=this.length,r=0;else if(i===void 0&&typeof r=="string")n=r,i=this.length,r=0;else if(isFinite(r))r=r>>>0,isFinite(i)?(i=i>>>0,n===void 0&&(n="utf8")):(n=i,i=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let s=this.length-r;if((i===void 0||i>s)&&(i=s),e.length>0&&(i<0||r<0)||r>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let a=!1;for(;;)switch(n){case"hex":return Wm(this,e,r,i);case"utf8":case"utf-8":return Ym(this,e,r,i);case"ascii":case"latin1":case"binary":return $m(this,e,r,i);case"base64":return Qm(this,e,r,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Zm(this,e,r,i);default:if(a)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),a=!0}};C.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Xm(t,e,r){return e===0&&r===t.length?ou.fromByteArray(t):ou.fromByteArray(t.slice(e,r))}function Vl(t,e,r){r=Math.min(t.length,r);let i=[],n=e;for(;n<r;){let s=t[n],a=null,o=s>239?4:s>223?3:s>191?2:1;if(n+o<=r){let f,u,c,h;switch(o){case 1:s<128&&(a=s);break;case 2:f=t[n+1],(f&192)==128&&(h=(s&31)<<6|f&63,h>127&&(a=h));break;case 3:f=t[n+1],u=t[n+2],(f&192)==128&&(u&192)==128&&(h=(s&15)<<12|(f&63)<<6|u&63,h>2047&&(h<55296||h>57343)&&(a=h));break;case 4:f=t[n+1],u=t[n+2],c=t[n+3],(f&192)==128&&(u&192)==128&&(c&192)==128&&(h=(s&15)<<18|(f&63)<<12|(u&63)<<6|c&63,h>65535&&h<1114112&&(a=h))}}a===null?(a=65533,o=1):a>65535&&(a-=65536,i.push(a>>>10&1023|55296),a=56320|a&1023),i.push(a),n+=o}return Jm(i)}var Gl=4096;function Jm(t){let e=t.length;if(e<=Gl)return String.fromCharCode.apply(String,t);let r="",i=0;for(;i<e;)r+=String.fromCharCode.apply(String,t.slice(i,i+=Gl));return r}function eE(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]&127);return i}function tE(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]);return i}function rE(t,e,r){let i=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>i)&&(r=i);let n="";for(let s=e;s<r;++s)n+=cE[t[s]];return n}function iE(t,e,r){let i=t.slice(e,r),n="";for(let s=0;s<i.length-1;s+=2)n+=String.fromCharCode(i[s]+i[s+1]*256);return n}C.prototype.slice=function(e,r){let i=this.length;e=~~e,r=r===void 0?i:~~r,e<0?(e+=i,e<0&&(e=0)):e>i&&(e=i),r<0?(r+=i,r<0&&(r=0)):r>i&&(r=i),r<e&&(r=e);let n=this.subarray(e,r);return Object.setPrototypeOf(n,C.prototype),n};function it(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}C.prototype.readUintLE=C.prototype.readUIntLE=function(e,r,i){e=e>>>0,r=r>>>0,i||it(e,r,this.length);let n=this[e],s=1,a=0;for(;++a<r&&(s*=256);)n+=this[e+a]*s;return n};C.prototype.readUintBE=C.prototype.readUIntBE=function(e,r,i){e=e>>>0,r=r>>>0,i||it(e,r,this.length);let n=this[e+--r],s=1;for(;r>0&&(s*=256);)n+=this[e+--r]*s;return n};C.prototype.readUint8=C.prototype.readUInt8=function(e,r){return e=e>>>0,r||it(e,1,this.length),this[e]};C.prototype.readUint16LE=C.prototype.readUInt16LE=function(e,r){return e=e>>>0,r||it(e,2,this.length),this[e]|this[e+1]<<8};C.prototype.readUint16BE=C.prototype.readUInt16BE=function(e,r){return e=e>>>0,r||it(e,2,this.length),this[e]<<8|this[e+1]};C.prototype.readUint32LE=C.prototype.readUInt32LE=function(e,r){return e=e>>>0,r||it(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};C.prototype.readUint32BE=C.prototype.readUInt32BE=function(e,r){return e=e>>>0,r||it(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};C.prototype.readBigUInt64LE=vi(function(e){e=e>>>0,Gn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Ds(e,this.length-8);let n=r+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24,s=this[++e]+this[++e]*2**8+this[++e]*2**16+i*2**24;return BigInt(n)+(BigInt(s)<<BigInt(32))});C.prototype.readBigUInt64BE=vi(function(e){e=e>>>0,Gn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Ds(e,this.length-8);let n=r*2**24+this[++e]*2**16+this[++e]*2**8+this[++e],s=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+i;return(BigInt(n)<<BigInt(32))+BigInt(s)});C.prototype.readIntLE=function(e,r,i){e=e>>>0,r=r>>>0,i||it(e,r,this.length);let n=this[e],s=1,a=0;for(;++a<r&&(s*=256);)n+=this[e+a]*s;return s*=128,n>=s&&(n-=Math.pow(2,8*r)),n};C.prototype.readIntBE=function(e,r,i){e=e>>>0,r=r>>>0,i||it(e,r,this.length);let n=r,s=1,a=this[e+--n];for(;n>0&&(s*=256);)a+=this[e+--n]*s;return s*=128,a>=s&&(a-=Math.pow(2,8*r)),a};C.prototype.readInt8=function(e,r){return e=e>>>0,r||it(e,1,this.length),this[e]&128?(255-this[e]+1)*-1:this[e]};C.prototype.readInt16LE=function(e,r){e=e>>>0,r||it(e,2,this.length);let i=this[e]|this[e+1]<<8;return i&32768?i|4294901760:i};C.prototype.readInt16BE=function(e,r){e=e>>>0,r||it(e,2,this.length);let i=this[e+1]|this[e]<<8;return i&32768?i|4294901760:i};C.prototype.readInt32LE=function(e,r){return e=e>>>0,r||it(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};C.prototype.readInt32BE=function(e,r){return e=e>>>0,r||it(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};C.prototype.readBigInt64LE=vi(function(e){e=e>>>0,Gn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Ds(e,this.length-8);let n=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(i<<24);return(BigInt(n)<<BigInt(32))+BigInt(r+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)});C.prototype.readBigInt64BE=vi(function(e){e=e>>>0,Gn(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Ds(e,this.length-8);let n=(r<<24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+i)});C.prototype.readFloatLE=function(e,r){return e=e>>>0,r||it(e,4,this.length),qn.read(this,e,!0,23,4)};C.prototype.readFloatBE=function(e,r){return e=e>>>0,r||it(e,4,this.length),qn.read(this,e,!1,23,4)};C.prototype.readDoubleLE=function(e,r){return e=e>>>0,r||it(e,8,this.length),qn.read(this,e,!0,52,8)};C.prototype.readDoubleBE=function(e,r){return e=e>>>0,r||it(e,8,this.length),qn.read(this,e,!1,52,8)};function Dt(t,e,r,i,n,s){if(!C.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>n||e<s)throw new RangeError('"value" argument is out of bounds');if(r+i>t.length)throw new RangeError("Index out of range")}C.prototype.writeUintLE=C.prototype.writeUIntLE=function(e,r,i,n){if(e=+e,r=r>>>0,i=i>>>0,!n){let o=Math.pow(2,8*i)-1;Dt(this,e,r,i,o,0)}let s=1,a=0;for(this[r]=e&255;++a<i&&(s*=256);)this[r+a]=e/s&255;return r+i};C.prototype.writeUintBE=C.prototype.writeUIntBE=function(e,r,i,n){if(e=+e,r=r>>>0,i=i>>>0,!n){let o=Math.pow(2,8*i)-1;Dt(this,e,r,i,o,0)}let s=i-1,a=1;for(this[r+s]=e&255;--s>=0&&(a*=256);)this[r+s]=e/a&255;return r+i};C.prototype.writeUint8=C.prototype.writeUInt8=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,1,255,0),this[r]=e&255,r+1};C.prototype.writeUint16LE=C.prototype.writeUInt16LE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,2,65535,0),this[r]=e&255,this[r+1]=e>>>8,r+2};C.prototype.writeUint16BE=C.prototype.writeUInt16BE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,2,65535,0),this[r]=e>>>8,this[r+1]=e&255,r+2};C.prototype.writeUint32LE=C.prototype.writeUInt32LE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,4,4294967295,0),this[r+3]=e>>>24,this[r+2]=e>>>16,this[r+1]=e>>>8,this[r]=e&255,r+4};C.prototype.writeUint32BE=C.prototype.writeUInt32BE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,4,4294967295,0),this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=e&255,r+4};function Hl(t,e,r,i,n){Ql(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r++]=s,s=s>>8,t[r++]=s,s=s>>8,t[r++]=s,s=s>>8,t[r++]=s;let a=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=a,a=a>>8,t[r++]=a,a=a>>8,t[r++]=a,a=a>>8,t[r++]=a,r}function zl(t,e,r,i,n){Ql(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r+7]=s,s=s>>8,t[r+6]=s,s=s>>8,t[r+5]=s,s=s>>8,t[r+4]=s;let a=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=a,a=a>>8,t[r+2]=a,a=a>>8,t[r+1]=a,a=a>>8,t[r]=a,r+8}C.prototype.writeBigUInt64LE=vi(function(e,r=0){return Hl(this,e,r,BigInt(0),BigInt("0xffffffffffffffff"))});C.prototype.writeBigUInt64BE=vi(function(e,r=0){return zl(this,e,r,BigInt(0),BigInt("0xffffffffffffffff"))});C.prototype.writeIntLE=function(e,r,i,n){if(e=+e,r=r>>>0,!n){let f=Math.pow(2,8*i-1);Dt(this,e,r,i,f-1,-f)}let s=0,a=1,o=0;for(this[r]=e&255;++s<i&&(a*=256);)e<0&&o===0&&this[r+s-1]!==0&&(o=1),this[r+s]=(e/a>>0)-o&255;return r+i};C.prototype.writeIntBE=function(e,r,i,n){if(e=+e,r=r>>>0,!n){let f=Math.pow(2,8*i-1);Dt(this,e,r,i,f-1,-f)}let s=i-1,a=1,o=0;for(this[r+s]=e&255;--s>=0&&(a*=256);)e<0&&o===0&&this[r+s+1]!==0&&(o=1),this[r+s]=(e/a>>0)-o&255;return r+i};C.prototype.writeInt8=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,1,127,-128),e<0&&(e=255+e+1),this[r]=e&255,r+1};C.prototype.writeInt16LE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,2,32767,-32768),this[r]=e&255,this[r+1]=e>>>8,r+2};C.prototype.writeInt16BE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,2,32767,-32768),this[r]=e>>>8,this[r+1]=e&255,r+2};C.prototype.writeInt32LE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,4,2147483647,-2147483648),this[r]=e&255,this[r+1]=e>>>8,this[r+2]=e>>>16,this[r+3]=e>>>24,r+4};C.prototype.writeInt32BE=function(e,r,i){return e=+e,r=r>>>0,i||Dt(this,e,r,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=e&255,r+4};C.prototype.writeBigInt64LE=vi(function(e,r=0){return Hl(this,e,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});C.prototype.writeBigInt64BE=vi(function(e,r=0){return zl(this,e,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function jl(t,e,r,i,n,s){if(r+i>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function Wl(t,e,r,i,n){return e=+e,r=r>>>0,n||jl(t,e,r,4,34028234663852886e22,-34028234663852886e22),qn.write(t,e,r,i,23,4),r+4}C.prototype.writeFloatLE=function(e,r,i){return Wl(this,e,r,!0,i)};C.prototype.writeFloatBE=function(e,r,i){return Wl(this,e,r,!1,i)};function Yl(t,e,r,i,n){return e=+e,r=r>>>0,n||jl(t,e,r,8,17976931348623157e292,-17976931348623157e292),qn.write(t,e,r,i,52,8),r+8}C.prototype.writeDoubleLE=function(e,r,i){return Yl(this,e,r,!0,i)};C.prototype.writeDoubleBE=function(e,r,i){return Yl(this,e,r,!1,i)};C.prototype.copy=function(e,r,i,n){if(!C.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),!n&&n!==0&&(n=this.length),r>=e.length&&(r=e.length),r||(r=0),n>0&&n<i&&(n=i),n===i||e.length===0||this.length===0)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-r<n-i&&(n=e.length-r+i);let s=n-i;return this===e&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(r,i,n):Uint8Array.prototype.set.call(e,this.subarray(i,n),r),s};C.prototype.fill=function(e,r,i,n){if(typeof e=="string"){if(typeof r=="string"?(n=r,r=0,i=this.length):typeof i=="string"&&(n=i,i=this.length),n!==void 0&&typeof n!="string")throw new TypeError("encoding must be a string");if(typeof n=="string"&&!C.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(e.length===1){let a=e.charCodeAt(0);(n==="utf8"&&a<128||n==="latin1")&&(e=a)}}else typeof e=="number"?e=e&255:typeof e=="boolean"&&(e=Number(e));if(r<0||this.length<r||this.length<i)throw new RangeError("Out of range index");if(i<=r)return this;r=r>>>0,i=i===void 0?this.length:i>>>0,e||(e=0);let s;if(typeof e=="number")for(s=r;s<i;++s)this[s]=e;else{let a=C.isBuffer(e)?e:C.from(e,n),o=a.length;if(o===0)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<i-r;++s)this[s+r]=a[s%o]}return this};var Vn={};function lu(t,e,r){Vn[t]=class extends r{constructor(){super();Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(n){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:n,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}lu("ERR_BUFFER_OUT_OF_BOUNDS",function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError);lu("ERR_INVALID_ARG_TYPE",function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`},TypeError);lu("ERR_OUT_OF_RANGE",function(t,e,r){let i=`The value of "${t}" is out of range.`,n=r;return Number.isInteger(r)&&Math.abs(r)>2**32?n=$l(String(r)):typeof r=="bigint"&&(n=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(n=$l(n)),n+="n"),i+=` It must be ${e}. Received ${n}`,i},RangeError);function $l(t){let e="",r=t.length,i=t[0]==="-"?1:0;for(;r>=i+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function nE(t,e,r){Gn(e,"offset"),(t[e]===void 0||t[e+r]===void 0)&&Ds(e,t.length-(r+1))}function Ql(t,e,r,i,n,s){if(t>r||t<e){let a=typeof e=="bigint"?"n":"",o;throw s>3?e===0||e===BigInt(0)?o=`>= 0${a} and < 2${a} ** ${(s+1)*8}${a}`:o=`>= -(2${a} ** ${(s+1)*8-1}${a}) and < 2 ** ${(s+1)*8-1}${a}`:o=`>= ${e}${a} and <= ${r}${a}`,new Vn.ERR_OUT_OF_RANGE("value",o,t)}nE(i,n,s)}function Gn(t,e){if(typeof t!="number")throw new Vn.ERR_INVALID_ARG_TYPE(e,"number",t)}function Ds(t,e,r){throw Math.floor(t)!==t?(Gn(t,r),new Vn.ERR_OUT_OF_RANGE(r||"offset","an integer",t)):e<0?new Vn.ERR_BUFFER_OUT_OF_BOUNDS:new Vn.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${e}`,t)}var sE=/[^+/0-9A-Za-z-_]/g;function aE(t){if(t=t.split("=")[0],t=t.trim().replace(sE,""),t.length<2)return"";for(;t.length%4!=0;)t=t+"=";return t}function pu(t,e){e=e||1/0;let r,i=t.length,n=null,s=[];for(let a=0;a<i;++a){if(r=t.charCodeAt(a),r>55295&&r<57344){if(!n){if(r>56319){(e-=3)>-1&&s.push(239,191,189);continue}else if(a+1===i){(e-=3)>-1&&s.push(239,191,189);continue}n=r;continue}if(r<56320){(e-=3)>-1&&s.push(239,191,189),n=r;continue}r=(n-55296<<10|r-56320)+65536}else n&&(e-=3)>-1&&s.push(239,191,189);if(n=null,r<128){if((e-=1)<0)break;s.push(r)}else if(r<2048){if((e-=2)<0)break;s.push(r>>6|192,r&63|128)}else if(r<65536){if((e-=3)<0)break;s.push(r>>12|224,r>>6&63|128,r&63|128)}else if(r<1114112){if((e-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,r&63|128)}else throw new Error("Invalid code point")}return s}function oE(t){let e=[];for(let r=0;r<t.length;++r)e.push(t.charCodeAt(r)&255);return e}function uE(t,e){let r,i,n,s=[];for(let a=0;a<t.length&&!((e-=2)<0);++a)r=t.charCodeAt(a),i=r>>8,n=r%256,s.push(n),s.push(i);return s}function Zl(t){return ou.toByteArray(aE(t))}function ja(t,e,r,i){let n;for(n=0;n<i&&!(n+r>=e.length||n>=t.length);++n)e[n+r]=t[n];return n}function xr(t,e){return t instanceof e||t!=null&&t.constructor!=null&&t.constructor.name!=null&&t.constructor.name===e.name}function du(t){return t!==t}var cE=function(){let t="0123456789abcdef",e=new Array(256);for(let r=0;r<16;++r){let i=r*16;for(let n=0;n<16;++n)e[i+n]=t[r]+t[n]}return e}();function vi(t){return typeof BigInt=="undefined"?fE:t}function fE(){throw new Error("BigInt not supported")}});var yu=E((tR,ep)=>{"use strict";var{Buffer:tr}=Xl(),Jl=Symbol.for("BufferList");function Re(t){if(!(this instanceof Re))return new Re(t);Re._init.call(this,t)}Re._init=function(e){Object.defineProperty(this,Jl,{value:!0}),this._bufs=[],this.length=0,e&&this.append(e)};Re.prototype._new=function(e){return new Re(e)};Re.prototype._offset=function(e){if(e===0)return[0,0];let r=0;for(let i=0;i<this._bufs.length;i++){let n=r+this._bufs[i].length;if(e<n||i===this._bufs.length-1)return[i,e-r];r=n}};Re.prototype._reverseOffset=function(t){let e=t[0],r=t[1];for(let i=0;i<e;i++)r+=this._bufs[i].length;return r};Re.prototype.get=function(e){if(e>this.length||e<0)return;let r=this._offset(e);return this._bufs[r[0]][r[1]]};Re.prototype.slice=function(e,r){return typeof e=="number"&&e<0&&(e+=this.length),typeof r=="number"&&r<0&&(r+=this.length),this.copy(null,0,e,r)};Re.prototype.copy=function(e,r,i,n){if((typeof i!="number"||i<0)&&(i=0),(typeof n!="number"||n>this.length)&&(n=this.length),i>=this.length||n<=0)return e||tr.alloc(0);let s=!!e,a=this._offset(i),o=n-i,f=o,u=s&&r||0,c=a[1];if(i===0&&n===this.length){if(!s)return this._bufs.length===1?this._bufs[0]:tr.concat(this._bufs,this.length);for(let h=0;h<this._bufs.length;h++)this._bufs[h].copy(e,u),u+=this._bufs[h].length;return e}if(f<=this._bufs[a[0]].length-c)return s?this._bufs[a[0]].copy(e,r,c,c+f):this._bufs[a[0]].slice(c,c+f);s||(e=tr.allocUnsafe(o));for(let h=a[0];h<this._bufs.length;h++){let l=this._bufs[h].length-c;if(f>l)this._bufs[h].copy(e,u,c),u+=l;else{this._bufs[h].copy(e,u,c,c+f),u+=l;break}f-=l,c&&(c=0)}return e.length>u?e.slice(0,u):e};Re.prototype.shallowSlice=function(e,r){if(e=e||0,r=typeof r!="number"?this.length:r,e<0&&(e+=this.length),r<0&&(r+=this.length),e===r)return this._new();let i=this._offset(e),n=this._offset(r),s=this._bufs.slice(i[0],n[0]+1);return n[1]===0?s.pop():s[s.length-1]=s[s.length-1].slice(0,n[1]),i[1]!==0&&(s[0]=s[0].slice(i[1])),this._new(s)};Re.prototype.toString=function(e,r,i){return this.slice(r,i).toString(e)};Re.prototype.consume=function(e){if(e=Math.trunc(e),Number.isNaN(e)||e<=0)return this;for(;this._bufs.length;)if(e>=this._bufs[0].length)e-=this._bufs[0].length,this.length-=this._bufs[0].length,this._bufs.shift();else{this._bufs[0]=this._bufs[0].slice(e),this.length-=e;break}return this};Re.prototype.duplicate=function(){let e=this._new();for(let r=0;r<this._bufs.length;r++)e.append(this._bufs[r]);return e};Re.prototype.append=function(e){if(e==null)return this;if(e.buffer)this._appendBuffer(tr.from(e.buffer,e.byteOffset,e.byteLength));else if(Array.isArray(e))for(let r=0;r<e.length;r++)this.append(e[r]);else if(this._isBufferList(e))for(let r=0;r<e._bufs.length;r++)this.append(e._bufs[r]);else typeof e=="number"&&(e=e.toString()),this._appendBuffer(tr.from(e));return this};Re.prototype._appendBuffer=function(e){this._bufs.push(e),this.length+=e.length};Re.prototype.indexOf=function(t,e,r){if(r===void 0&&typeof e=="string"&&(r=e,e=void 0),typeof t=="function"||Array.isArray(t))throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');if(typeof t=="number"?t=tr.from([t]):typeof t=="string"?t=tr.from(t,r):this._isBufferList(t)?t=t.slice():Array.isArray(t.buffer)?t=tr.from(t.buffer,t.byteOffset,t.byteLength):tr.isBuffer(t)||(t=tr.from(t)),e=Number(e||0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let i=this._offset(e),n=i[0],s=i[1];for(;n<this._bufs.length;n++){let a=this._bufs[n];for(;s<a.length;)if(a.length-s>=t.length){let f=a.indexOf(t,s);if(f!==-1)return this._reverseOffset([n,f]);s=a.length-t.length+1}else{let f=this._reverseOffset([n,s]);if(this._match(f,t))return f;s++}s=0}return-1};Re.prototype._match=function(t,e){if(this.length-t<e.length)return!1;for(let r=0;r<e.length;r++)if(this.get(t+r)!==e[r])return!1;return!0};(function(){let t={readDoubleBE:8,readDoubleLE:8,readFloatBE:4,readFloatLE:4,readInt32BE:4,readInt32LE:4,readUInt32BE:4,readUInt32LE:4,readInt16BE:2,readInt16LE:2,readUInt16BE:2,readUInt16LE:2,readInt8:1,readUInt8:1,readIntBE:null,readIntLE:null,readUIntBE:null,readUIntLE:null};for(let e in t)(function(r){t[r]===null?Re.prototype[r]=function(i,n){return this.slice(i,i+n)[r](0,n)}:Re.prototype[r]=function(i=0){return this.slice(i,i+t[r])[r](0)}})(e)})();Re.prototype._isBufferList=function(e){return e instanceof Re||Re.isBufferList(e)};Re.isBufferList=function(e){return e!=null&&e[Jl]};ep.exports=Re});var ip=E((rR,rp)=>{rp.exports=gu;var tp=128,hE=127,lE=~hE,pE=Math.pow(2,31);function gu(t,e,r){if(Number.MAX_SAFE_INTEGER&&t>Number.MAX_SAFE_INTEGER)throw gu.bytes=0,new RangeError("Could not encode varint");e=e||[],r=r||0;for(var i=r;t>=pE;)e[r++]=t&255|tp,t/=128;for(;t&lE;)e[r++]=t&255|tp,t>>>=7;return e[r]=t|0,gu.bytes=r-i+1,e}});var ap=E((iR,sp)=>{sp.exports=vu;var dE=128,np=127;function vu(t,e){var r=0,e=e||0,i=0,n=e,s,a=t.length;do{if(n>=a||i>49)throw vu.bytes=0,new RangeError("Could not decode varint");s=t[n++],r+=i<28?(s&np)<<i:(s&np)*Math.pow(2,i),i+=7}while(s>=dE);return vu.bytes=n-e,r}});var up=E((nR,op)=>{var yE=Math.pow(2,7),gE=Math.pow(2,14),vE=Math.pow(2,21),xE=Math.pow(2,28),bE=Math.pow(2,35),mE=Math.pow(2,42),EE=Math.pow(2,49),wE=Math.pow(2,56),SE=Math.pow(2,63);op.exports=function(t){return t<yE?1:t<gE?2:t<vE?3:t<xE?4:t<bE?5:t<mE?6:t<EE?7:t<wE?8:t<SE?9:10}});var Wa=E((sR,cp)=>{cp.exports={encode:ip(),decode:ap(),encodingLength:up()}});var xu=E((aR,lp)=>{"use strict";var fp=Wa(),{Buffer:_E}=Un(),hp=(t,e,r)=>{let i=fp.encode(t,e,r);return hp.bytes=fp.encode.bytes,e||_E.from(i)};lp.exports=hp});var xp=E((oR,Ya)=>{"use strict";var{Buffer:pp}=Un(),dp=yu(),yp=xu(),bu=8,gp=10*1024;function vp(t){t=t||{};let e=Math.max(t.poolSize||gp,t.minPoolSize||bu),r=t.lengthEncoder||yp;return async function*(n){let s=pp.alloc(e),a=0;for await(let o of n){r(o.length,s,a);let f=s.slice(a,a+r.bytes);a+=r.bytes,s.length-a<bu&&(s=pp.alloc(e),a=0),yield new dp().append(f).append(o)}}}vp.single=(t,e)=>{e=e||{};let r=e.lengthEncoder||yp;return new dp([r(t.length),t.slice()])};Ya.exports=vp;Ya.exports.MIN_POOL_SIZE=bu;Ya.exports.DEFAULT_POOL_SIZE=gp});var mu=E((uR,Ep)=>{"use strict";var bp=Wa(),{Buffer:IE}=Un(),BE=t=>new Proxy({},{get:(e,r)=>r[0]==="l"?t[r]:t.get(parseInt(r))}),mp=t=>{let e=bp.decode(IE.isBuffer(t)?t:BE(t));return mp.bytes=bp.decode.bytes,e};Ep.exports=mp});var Ip=E((cR,$a)=>{"use strict";var{Buffer:AE}=Un(),Eu=yu(),CE=mu(),wp=8,Sp=1024*1024*4,_p=AE.alloc(0),xi={LENGTH:"readLength",DATA:"readData"},TE={[xi.LENGTH]:(t,e,r,i)=>{e=e.append(t);let n;try{n=i.lengthDecoder(e)}catch(s){if(e.length>i.maxLengthLength)throw Object.assign(s,{message:"message length too long",code:"ERR_MSG_LENGTH_TOO_LONG"});if(s instanceof RangeError)return{mode:xi.LENGTH,buffer:e,chunk:void 0,state:void 0,data:void 0};throw s}if(n>i.maxDataLength)throw Object.assign(new Error("message data too long"),{code:"ERR_MSG_DATA_TOO_LONG"});return t=e.shallowSlice(i.lengthDecoder.bytes),e=new Eu,i.onLength&&i.onLength(n),n<=0?(i.onData&&i.onData(_p),{mode:xi.LENGTH,chunk:t,buffer:e,data:_p}):{mode:xi.DATA,chunk:t,buffer:e,state:{dataLength:n},data:void 0}},[xi.DATA]:(t,e,r,i)=>{if(e=e.append(t),!r)throw new Error("state is required");if(e.length<r.dataLength)return{mode:xi.DATA,buffer:e,state:r,chunk:void 0,data:void 0};let{dataLength:n}=r,s=e.shallowSlice(0,n),a=e.length>n?e.shallowSlice(n):void 0;return e=new Eu,i.onData&&i.onData(s),{mode:xi.LENGTH,chunk:a,buffer:e,state:void 0,data:s}}};function wu(t){t=t||{};let e={lengthDecoder:t.lengthDecoder||CE,maxLengthLength:t.maxLengthLength||wp,maxDataLength:t.maxDataLength||Sp,onLength:t.onLength,onData:t.onData};return async function*(i){let n=new Eu,s=xi.LENGTH,a;for await(let o of i){let f=o;for(;f;){let u=TE[s](f,n,a,e);s=u.mode,f=u.chunk,n=u.buffer,a=u.state,u.data&&(yield u.data)}}if(n.length)throw Object.assign(new Error("unexpected end of input"),{code:"ERR_UNEXPECTED_EOF"})}}wu.fromReader=(t,e)=>{let r=1,i={[Symbol.asyncIterator](){return this},next:async()=>{try{return await t.next(r)}catch(s){if(s.code==="ERR_UNDER_READ")return{done:!0,value:null};throw s}finally{r=1}}};return wu({...e||{},onLength:s=>{r=s}})(i)};$a.exports=wu;$a.exports.MAX_LENGTH_LENGTH=wp;$a.exports.MAX_DATA_LENGTH=Sp});var Cp=E((fR,Ap)=>{"use strict";var{Buffer:RE}=Un(),Bp=(t,e,r)=>(e=e||RE.allocUnsafe(4),e.writeInt32BE(t,r),e);Bp.bytes=4;Ap.exports=Bp});var Dp=E((hR,Rp)=>{"use strict";var Tp=t=>{if(t.length<4)throw RangeError("Could not decode int32BE");return t.readInt32BE(0)};Tp.bytes=4;Rp.exports=Tp});var Pp=E(rn=>{"use strict";rn.encode=xp();rn.decode=Ip();rn.varintEncode=xu();rn.varintDecode=mu();rn.int32BEEncode=Cp();rn.int32BEDecode=Dp()});var Np=E((dR,kp)=>{kp.exports=class{constructor(e){if(!(e>0)||(e-1&e)!=0)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}}});var Mp=E((gR,Lp)=>{var Op=Np();Lp.exports=class{constructor(e){this.hwm=e||16,this.head=new Op(this.hwm),this.tail=this.head}push(e){if(!this.head.push(e)){let r=this.head;this.head=r.next=new Op(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next){let r=this.tail.next;return this.tail.next=null,this.tail=r,this.tail.shift()}return e}isEmpty(){return this.head.isEmpty()}}});var Fp=E((vR,Kp)=>{var Su=Mp();Kp.exports=t=>{t=t||{};let e;typeof t=="function"?(e=t,t={}):e=t.onEnd;let r=new Su,i,n,s,a=()=>{if(!r.isEmpty()){if(t.writev){let y,g=[];for(;!r.isEmpty();){if(y=r.shift(),y.error)throw y.error;g.push(y.value)}return{done:y.done,value:g}}let p=r.shift();if(p.error)throw p.error;return p}return s?{done:!0}:new Promise((p,y)=>{n=g=>(n=null,g.error?y(g.error):t.writev&&!g.done?p({done:g.done,value:[g.value]}):p(g),i)})},o=p=>n?n(p):(r.push(p),i),f=p=>(r=new Su,n?n({error:p}):(r.push({error:p}),i)),u=p=>s?i:o({done:!1,value:p}),c=p=>s?i:(s=!0,p?f(p):o({done:!0})),h=()=>(r=new Su,c(),{done:!0}),l=p=>(c(p),{done:!0});if(i={[Symbol.asyncIterator](){return this},next:a,return:h,throw:l,push:u,end:c},!e)return i;let d=i;return i={[Symbol.asyncIterator](){return this},next(){return d.next()},throw(p){return d.throw(p),e&&(e(p),e=null),{done:!0}},return(){return d.return(),e&&(e(),e=null),{done:!0}},push:u,end(p){return d.end(p),e&&(e(p),e=null),i}},i}});var qp=E((xR,Up)=>{Up.exports=function(e){if(e){if(typeof e[Symbol.iterator]=="function")return e[Symbol.iterator]();if(typeof e[Symbol.asyncIterator]=="function")return e[Symbol.asyncIterator]();if(typeof e.next=="function")return e}throw new Error("argument is not an iterator or iterable")}});var Gp=E((mR,Vp)=>{Vp.exports=class extends Error{constructor(e,r){super(e||"The operation was aborted");this.type="aborted",this.code=r||"ABORT_ERR"}}});var Wp=E((ER,nn)=>{var DE=qp(),_u=Gp(),Hp=(t,e,r)=>Iu(t,Array.isArray(e)?e:[{signal:e,options:r}]),Iu=(t,e)=>{t=DE(t),e=e.map(({signal:i,options:n})=>({signal:i,options:n||{}}));async function*r(){let i,n=()=>{i&&i()};for(let{signal:s}of e)s.addEventListener("abort",n);for(;;){let s;try{for(let{signal:o,options:f}of e)if(o.aborted){let{abortMessage:u,abortCode:c}=f;throw new _u(u,c)}let a=new Promise((o,f)=>{i=()=>{let{options:u}=e.find(({signal:l})=>l.aborted),{abortMessage:c,abortCode:h}=u;f(new _u(c,h))}});s=await Promise.race([a,t.next()]),i=null}catch(a){for(let{signal:u}of e)u.removeEventListener("abort",n);let o=e.find(({signal:u})=>u.aborted),f=a.type==="aborted"&&o;if(f&&o.options.onAbort&&await o.options.onAbort(t),typeof t.return=="function")try{let u=t.return();u instanceof Promise&&u.catch(c=>{o.options.onReturnError!=null&&o.options.onReturnError(c)})}catch(u){o.options.onReturnError!=null&&o.options.onReturnError(u)}if(f&&o.options.returnOnAbort)return;throw a}if(s.done)break;yield s.value}for(let{signal:s}of e)s.removeEventListener("abort",n)}return r()},zp=(t,e,r)=>jp(t,Array.isArray(e)?e:[{signal:e,options:r}]),jp=(t,e)=>r=>t(Iu(r,e)),PE=(t,e,r)=>kE(t,Array.isArray(e)?e:[{signal:e,options:r}]),kE=(t,e)=>({sink:jp(t.sink,e),source:Iu(t.source,e)});nn.exports=Hp;nn.exports.AbortError=_u;nn.exports.source=Hp;nn.exports.sink=zp;nn.exports.transform=zp;nn.exports.duplex=PE});var Jp=E((wR,Xp)=>{"use strict";var Yp=Is(),NE=Object.assign(Yp("libp2p-pubsub:peer-streams"),{error:Yp("libp2p-pubsub:peer-streams:err")}),{EventEmitter:OE}=B0(),$p=Pp(),LE=Fp(),{pipe:Qp}=C0(),{source:ME}=Wp(),Zp=class extends OE{constructor({id:e,protocol:r}){super();this.id=e,this.protocol=r,this._rawOutboundStream=null,this._rawInboundStream=null,this._inboundAbortController=new AbortController,this.outboundStream=null,this.inboundStream=null}get isReadable(){return Boolean(this.inboundStream)}get isWritable(){return Boolean(this.outboundStream)}write(e){if(!this.outboundStream){let r=this.id.toB58String();throw new Error("No writable connection to "+r)}this.outboundStream.push(e)}attachInboundStream(e){return this._rawInboundStream=e,this.inboundStream=ME(Qp(this._rawInboundStream,$p.decode()),this._inboundAbortController.signal,{returnOnAbort:!0}),this.emit("stream:inbound"),this.inboundStream}async attachOutboundStream(e){let r=this.outboundStream;this.outboundStream&&await this.outboundStream.end(),this._rawOutboundStream=e,this.outboundStream=LE({onEnd:i=>{this._rawOutboundStream&&this._rawOutboundStream.reset&&this._rawOutboundStream.reset(),this._rawOutboundStream=null,this.outboundStream=null,i&&this.emit("close")}}),Qp(this.outboundStream,$p.encode(),this._rawOutboundStream).catch(i=>{NE.error(i)}),r||this.emit("stream:outbound")}close(){this.outboundStream&&this.outboundStream.end(),this.inboundStream&&this._inboundAbortController.abort(),this._rawOutboundStream=null,this.outboundStream=null,this._rawInboundStream=null,this.inboundStream=null,this.emit("close")}};Xp.exports=Zp});var td=E(ed=>{"use strict";var KE={StrictSign:"StrictSign",StrictNoSign:"StrictNoSign"};ed.SignaturePolicy=KE});var Za=E((_R,rd)=>{"use strict";var Qa=65536;function FE(t){let e=new Uint8Array(t),r=0;if(t>0)if(t>Qa)for(;r<t;)r+Qa>t?(crypto.getRandomValues(e.subarray(r,r+(t-r))),r+=t-r):(crypto.getRandomValues(e.subarray(r,r+Qa)),r+=Qa);else crypto.getRandomValues(e);return e}rd.exports=FE});var nd=E((IR,id)=>{"use strict";var UE=Za(),qE=Oe();id.exports=function(t){if(isNaN(t)||t<=0)throw qE(new Error("random bytes length must be a Number bigger than 0"),"ERR_INVALID_LENGTH");return UE(t)}});function VE(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),i=0;i<r.length;i++)r[i]=255;for(var n=0;n<t.length;n++){var s=t.charAt(n),a=s.charCodeAt(0);if(r[a]!==255)throw new TypeError(s+" is ambiguous");r[a]=n}var o=t.length,f=t.charAt(0),u=Math.log(o)/Math.log(256),c=Math.log(256)/Math.log(o);function h(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var y=0,g=0,v=0,x=p.length;v!==x&&p[v]===0;)v++,y++;for(var w=(x-v)*c+1>>>0,P=new Uint8Array(w);v!==x;){for(var B=p[v],S=0,G=w-1;(B!==0||S<g)&&G!==-1;G--,S++)B+=256*P[G]>>>0,P[G]=B%o>>>0,B=B/o>>>0;if(B!==0)throw new Error("Non-zero carry");g=S,v++}for(var z=w-g;z!==w&&P[z]===0;)z++;for(var se=f.repeat(y);z<w;++z)se+=t.charAt(P[z]);return se}function l(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var y=0;if(p[y]!==" "){for(var g=0,v=0;p[y]===f;)g++,y++;for(var x=(p.length-y)*u+1>>>0,w=new Uint8Array(x);p[y];){var P=r[p.charCodeAt(y)];if(P===255)return;for(var B=0,S=x-1;(P!==0||B<v)&&S!==-1;S--,B++)P+=o*w[S]>>>0,w[S]=P%256>>>0,P=P/256>>>0;if(P!==0)throw new Error("Non-zero carry");v=B,y++}if(p[y]!==" "){for(var G=x-v;G!==x&&w[G]===0;)G++;for(var z=new Uint8Array(g+(x-G)),se=g;G!==x;)z[se++]=w[G++];return z}}}function d(p){var y=l(p);if(y)return y;throw new Error(`Non-${e} character`)}return{encode:h,decodeUnsafe:l,decode:d}}var GE,HE,sd,ad=Ee(()=>{GE=VE,HE=GE,sd=HE});var AR,od,Wr,ud,cd,bi=Ee(()=>{AR=new Uint8Array(0),od=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},Wr=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},ud=t=>new TextEncoder().encode(t),cd=t=>new TextDecoder().decode(t)});var hd,ld,pd,dd,yd,Xa,mi,zE,jE,Ge,br=Ee(()=>{ad();bi();hd=class{constructor(e,r,i){this.name=e,this.prefix=r,this.baseEncode=i}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},ld=class{constructor(e,r,i){this.name=e,this.prefix=r,this.baseDecode=i}decode(e){if(typeof e=="string")switch(e[0]){case this.prefix:return this.baseDecode(e.slice(1));default:throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)}else throw Error("Can only multibase decode strings")}or(e){return dd(this,e)}},pd=class{constructor(e){this.decoders=e}or(e){return dd(this,e)}decode(e){let r=e[0],i=this.decoders[r];if(i)return i.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},dd=(t,e)=>new pd({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}}),yd=class{constructor(e,r,i,n){this.name=e,this.prefix=r,this.baseEncode=i,this.baseDecode=n,this.encoder=new hd(e,r,i),this.decoder=new ld(e,r,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},Xa=({name:t,prefix:e,encode:r,decode:i})=>new yd(t,e,r,i),mi=({prefix:t,name:e,alphabet:r})=>{let{encode:i,decode:n}=sd(r,e);return Xa({prefix:t,name:e,encode:i,decode:s=>Wr(n(s))})},zE=(t,e,r,i)=>{let n={};for(let c=0;c<e.length;++c)n[e[c]]=c;let s=t.length;for(;t[s-1]==="=";)--s;let a=new Uint8Array(s*r/8|0),o=0,f=0,u=0;for(let c=0;c<s;++c){let h=n[t[c]];if(h===void 0)throw new SyntaxError(`Non-${i} character`);f=f<<r|h,o+=r,o>=8&&(o-=8,a[u++]=255&f>>o)}if(o>=r||255&f<<8-o)throw new SyntaxError("Unexpected end of data");return a},jE=(t,e,r)=>{let i=e[e.length-1]==="=",n=(1<<r)-1,s="",a=0,o=0;for(let f=0;f<t.length;++f)for(o=o<<8|t[f],a+=8;a>r;)a-=r,s+=e[n&o>>a];if(a&&(s+=e[n&o<<r-a]),i)for(;s.length*r&7;)s+="=";return s},Ge=({name:t,prefix:e,bitsPerChar:r,alphabet:i})=>Xa({prefix:e,name:t,encode(n){return jE(n,i,r)},decode(n){return zE(n,i,r,t)}})});var Bu={};lt(Bu,{identity:()=>WE});var WE,gd=Ee(()=>{br();bi();WE=Xa({prefix:"\0",name:"identity",encode:t=>cd(t),decode:t=>ud(t)})});var Au={};lt(Au,{base2:()=>YE});var YE,vd=Ee(()=>{br();YE=Ge({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1})});var Cu={};lt(Cu,{base8:()=>$E});var $E,xd=Ee(()=>{br();$E=Ge({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3})});var Tu={};lt(Tu,{base10:()=>QE});var QE,bd=Ee(()=>{br();QE=mi({prefix:"9",name:"base10",alphabet:"0123456789"})});var Ja={};lt(Ja,{base16:()=>ZE,base16upper:()=>XE});var ZE,XE,Ru=Ee(()=>{br();ZE=Ge({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),XE=Ge({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4})});var Ps={};lt(Ps,{base32:()=>zn,base32hex:()=>rw,base32hexpad:()=>nw,base32hexpadupper:()=>sw,base32hexupper:()=>iw,base32pad:()=>ew,base32padupper:()=>tw,base32upper:()=>JE,base32z:()=>aw});var zn,JE,ew,tw,rw,iw,nw,sw,aw,ks=Ee(()=>{br();zn=Ge({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),JE=Ge({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),ew=Ge({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),tw=Ge({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rw=Ge({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),iw=Ge({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),nw=Ge({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),sw=Ge({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),aw=Ge({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5})});var eo={};lt(eo,{base36:()=>ow,base36upper:()=>uw});var ow,uw,Du=Ee(()=>{br();ow=mi({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),uw=mi({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"})});var sn={};lt(sn,{base58btc:()=>mr,base58flickr:()=>cw});var mr,cw,an=Ee(()=>{br();mr=mi({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),cw=mi({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"})});var Ei={};lt(Ei,{base64:()=>fw,base64pad:()=>hw,base64url:()=>lw,base64urlpad:()=>pw});var fw,hw,lw,pw,on=Ee(()=>{br();fw=Ge({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),hw=Ge({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),lw=Ge({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),pw=Ge({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6})});function Ed(t,e,r){e=e||[],r=r||0;for(var i=r;t>=vw;)e[r++]=t&255|md,t/=128;for(;t&gw;)e[r++]=t&255|md,t>>>=7;return e[r]=t|0,Ed.bytes=r-i+1,e}function Pu(t,e){var r=0,e=e||0,i=0,n=e,s,a=t.length;do{if(n>=a)throw Pu.bytes=0,new RangeError("Could not decode varint");s=t[n++],r+=i<28?(s&wd)<<i:(s&wd)*Math.pow(2,i),i+=7}while(s>=bw);return Pu.bytes=n-e,r}var dw,md,yw,gw,vw,xw,bw,wd,mw,Ew,ww,Sw,_w,Iw,Bw,Aw,Cw,Tw,Rw,Dw,Ns,Sd=Ee(()=>{dw=Ed,md=128,yw=127,gw=~yw,vw=Math.pow(2,31);xw=Pu,bw=128,wd=127;mw=Math.pow(2,7),Ew=Math.pow(2,14),ww=Math.pow(2,21),Sw=Math.pow(2,28),_w=Math.pow(2,35),Iw=Math.pow(2,42),Bw=Math.pow(2,49),Aw=Math.pow(2,56),Cw=Math.pow(2,63),Tw=function(t){return t<mw?1:t<Ew?2:t<ww?3:t<Sw?4:t<_w?5:t<Iw?6:t<Bw?7:t<Aw?8:t<Cw?9:10},Rw={encode:dw,decode:xw,encodingLength:Tw},Dw=Rw,Ns=Dw});var Os,jn,Wn,to=Ee(()=>{Sd();Os=t=>[Ns.decode(t),Ns.decode.bytes],jn=(t,e,r=0)=>(Ns.encode(t,e,r),e),Wn=t=>Ns.encodingLength(t)});var ro={};lt(ro,{Digest:()=>Yn,create:()=>wi,decode:()=>ku,equals:()=>Nu});var wi,ku,Nu,Yn,$n=Ee(()=>{bi();to();wi=(t,e)=>{let r=e.byteLength,i=Wn(t),n=i+Wn(r),s=new Uint8Array(n+r);return jn(t,s,0),jn(r,s,i),s.set(e,n),new Yn(t,r,e,s)},ku=t=>{let e=Wr(t),[r,i]=Os(e),[n,s]=Os(e.subarray(i)),a=e.subarray(i+s);if(a.byteLength!==n)throw new Error("Incorrect length");return new Yn(r,n,a,e)},Nu=(t,e)=>t===e?!0:t.code===e.code&&t.size===e.size&&od(t.bytes,e.bytes),Yn=class{constructor(e,r,i,n){this.code=e,this.size=r,this.digest=i,this.bytes=n}}});var Ou,Id,Lu=Ee(()=>{$n();Ou=({name:t,code:e,encode:r})=>new Id(t,e,r),Id=class{constructor(e,r,i){this.name=e,this.code=r,this.encode=i}digest(e){if(e instanceof Uint8Array){let r=this.encode(e);return r instanceof Uint8Array?wi(this.code,r):r.then(i=>wi(this.code,i))}else throw Error("Unknown type, must be binary type")}}});var qt={};lt(qt,{sha256:()=>Pw,sha512:()=>kw});var Ad,Pw,kw,rr=Ee(()=>{Lu();Ad=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),Pw=Ou({name:"sha2-256",code:18,encode:Ad("SHA-256")}),kw=Ou({name:"sha2-512",code:19,encode:Ad("SHA-512")})});var Qn={};lt(Qn,{identity:()=>Lw});var Cd,Nw,Ow,Lw,Ls=Ee(()=>{bi();$n();Cd=0,Nw="identity",Ow=t=>wi(Cd,Wr(t)),Lw={code:Cd,name:Nw,digest:Ow}});var Td=Ee(()=>{bi()});var QR,ZR,Rd=Ee(()=>{QR=new TextEncoder,ZR=new TextDecoder});var kd={};lt(kd,{CID:()=>Je});var Je,Fw,Uw,qw,Ms,Vw,Dd,Pd,io,no,Gw,Hw,zw,Mu=Ee(()=>{to();$n();an();ks();bi();Je=class{constructor(e,r,i,n){this.code=r,this.version=e,this.multihash=i,this.bytes=n,this.byteOffset=n.byteOffset,this.byteLength=n.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:no,byteLength:no,code:io,version:io,multihash:io,bytes:io,_baseCache:no,asCID:no})}toV0(){switch(this.version){case 0:return this;default:{let{code:e,multihash:r}=this;if(e!==Ms)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==Vw)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Je.createV0(r)}}}toV1(){switch(this.version){case 0:{let{code:e,digest:r}=this.multihash,i=wi(e,r);return Je.createV1(this.code,i)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&Nu(this.multihash,e.multihash)}toString(e){let{bytes:r,version:i,_baseCache:n}=this;switch(i){case 0:return Uw(r,n,e||mr.encoder);default:return qw(r,n,e||zn.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return Hw(/^0\.0/,zw),!!(e&&(e[Pd]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof Je)return e;if(e!=null&&e.asCID===e){let{version:r,code:i,multihash:n,bytes:s}=e;return new Je(r,i,n,s||Dd(r,i,n.bytes))}else if(e!=null&&e[Pd]===!0){let{version:r,multihash:i,code:n}=e,s=ku(i);return Je.create(r,n,s)}else return null}static create(e,r,i){if(typeof r!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(r!==Ms)throw new Error(`Version 0 CID must use dag-pb (code: ${Ms}) block encoding`);return new Je(e,r,i,i.bytes)}case 1:{let n=Dd(e,r,i.bytes);return new Je(e,r,i,n)}default:throw new Error("Invalid version")}}static createV0(e){return Je.create(0,Ms,e)}static createV1(e,r){return Je.create(1,e,r)}static decode(e){let[r,i]=Je.decodeFirst(e);if(i.length)throw new Error("Incorrect length");return r}static decodeFirst(e){let r=Je.inspectBytes(e),i=r.size-r.multihashSize,n=Wr(e.subarray(i,i+r.multihashSize));if(n.byteLength!==r.multihashSize)throw new Error("Incorrect length");let s=n.subarray(r.multihashSize-r.digestSize),a=new Yn(r.multihashCode,r.digestSize,s,n);return[r.version===0?Je.createV0(a):Je.createV1(r.codec,a),e.subarray(r.size)]}static inspectBytes(e){let r=0,i=()=>{let[h,l]=Os(e.subarray(r));return r+=l,h},n=i(),s=Ms;if(n===18?(n=0,r=0):n===1&&(s=i()),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);let a=r,o=i(),f=i(),u=r+f,c=u-a;return{version:n,codec:s,multihashCode:o,digestSize:f,multihashSize:c,size:u}}static parse(e,r){let[i,n]=Fw(e,r),s=Je.decode(n);return s._baseCache.set(i,e),s}},Fw=(t,e)=>{switch(t[0]){case"Q":{let r=e||mr;return[mr.prefix,r.decode(`${mr.prefix}${t}`)]}case mr.prefix:{let r=e||mr;return[mr.prefix,r.decode(t)]}case zn.prefix:{let r=e||zn;return[zn.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},Uw=(t,e,r)=>{let{prefix:i}=r;if(i!==mr.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);let n=e.get(i);if(n==null){let s=r.encode(t).slice(1);return e.set(i,s),s}else return n},qw=(t,e,r)=>{let{prefix:i}=r,n=e.get(i);if(n==null){let s=r.encode(t);return e.set(i,s),s}else return n},Ms=112,Vw=18,Dd=(t,e,r)=>{let i=Wn(t),n=i+Wn(e),s=new Uint8Array(n+r.byteLength);return jn(t,s,0),jn(e,s,i),s.set(r,n),s},Pd=Symbol.for("@ipld/js-cid/CID"),io={writable:!1,configurable:!1,enumerable:!0},no={writable:!1,enumerable:!1,configurable:!1},Gw="0.0.0-dev",Hw=(t,e)=>{if(t.test(Gw))console.warn(e);else throw new Error(e)},zw=`CID.isCID(v) is deprecated and will be removed in the next major release.
+var Libp2pGossipsub=(()=>{var vc=Object.defineProperty;var my=t=>vc(t,"__esModule",{value:!0});var mc=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,r)=>(typeof require!="undefined"?require:e)[r]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var re=(t,e)=>()=>(t&&(e=t(t=0)),e);var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Ne=(t,e)=>{my(t);for(var r in e)vc(t,r,{get:e[r],enumerable:!0})};var Ec=x((iw,xc)=>{var Xr=1e3,Jr=Xr*60,ei=Jr*60,Cr=ei*24,xy=Cr*7,Ey=Cr*365.25;xc.exports=function(t,e){e=e||{};var r=typeof t;if(r==="string"&&t.length>0)return wy(t);if(r==="number"&&isFinite(t))return e.long?Sy(t):_y(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))};function wy(t){if(t=String(t),!(t.length>100)){var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(!!e){var r=parseFloat(e[1]),i=(e[2]||"ms").toLowerCase();switch(i){case"years":case"year":case"yrs":case"yr":case"y":return r*Ey;case"weeks":case"week":case"w":return r*xy;case"days":case"day":case"d":return r*Cr;case"hours":case"hour":case"hrs":case"hr":case"h":return r*ei;case"minutes":case"minute":case"mins":case"min":case"m":return r*Jr;case"seconds":case"second":case"secs":case"sec":case"s":return r*Xr;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function _y(t){var e=Math.abs(t);return e>=Cr?Math.round(t/Cr)+"d":e>=ei?Math.round(t/ei)+"h":e>=Jr?Math.round(t/Jr)+"m":e>=Xr?Math.round(t/Xr)+"s":t+"ms"}function Sy(t){var e=Math.abs(t);return e>=Cr?Tn(t,e,Cr,"day"):e>=ei?Tn(t,e,ei,"hour"):e>=Jr?Tn(t,e,Jr,"minute"):e>=Xr?Tn(t,e,Xr,"second"):t+" ms"}function Tn(t,e,r,i){var n=e>=r*1.5;return Math.round(t/r)+" "+i+(n?"s":"")}});var _c=x((nw,wc)=>{function Iy(t){r.debug=r,r.default=r,r.coerce=f,r.disable=s,r.enable=n,r.enabled=o,r.humanize=Ec(),r.destroy=u,Object.keys(t).forEach(c=>{r[c]=t[c]}),r.names=[],r.skips=[],r.formatters={};function e(c){let h=0;for(let l=0;l<c.length;l++)h=(h<<5)-h+c.charCodeAt(l),h|=0;return r.colors[Math.abs(h)%r.colors.length]}r.selectColor=e;function r(c){let h,l=null,d,p;function y(...v){if(!y.enabled)return;let b=y,E=Number(new Date),I=E-(h||E);b.diff=I,b.prev=h,b.curr=E,h=E,v[0]=r.coerce(v[0]),typeof v[0]!="string"&&v.unshift("%O");let D=0;v[0]=v[0].replace(/%([a-zA-Z%])/g,(R,F)=>{if(R==="%%")return"%";D++;let z=r.formatters[F];if(typeof z=="function"){let me=v[D];R=z.call(b,me),v.splice(D,1),D--}return R}),r.formatArgs.call(b,v),(b.log||r.log).apply(b,v)}return y.namespace=c,y.useColors=r.useColors(),y.color=r.selectColor(c),y.extend=i,y.destroy=r.destroy,Object.defineProperty(y,"enabled",{enumerable:!0,configurable:!1,get:()=>l!==null?l:(d!==r.namespaces&&(d=r.namespaces,p=r.enabled(c)),p),set:v=>{l=v}}),typeof r.init=="function"&&r.init(y),y}function i(c,h){let l=r(this.namespace+(typeof h=="undefined"?":":h)+c);return l.log=this.log,l}function n(c){r.save(c),r.namespaces=c,r.names=[],r.skips=[];let h,l=(typeof c=="string"?c:"").split(/[\s,]+/),d=l.length;for(h=0;h<d;h++)!l[h]||(c=l[h].replace(/\*/g,".*?"),c[0]==="-"?r.skips.push(new RegExp("^"+c.slice(1)+"$")):r.names.push(new RegExp("^"+c+"$")))}function s(){let c=[...r.names.map(a),...r.skips.map(a).map(h=>"-"+h)].join(",");return r.enable(""),c}function o(c){if(c[c.length-1]==="*")return!0;let h,l;for(h=0,l=r.skips.length;h<l;h++)if(r.skips[h].test(c))return!1;for(h=0,l=r.names.length;h<l;h++)if(r.names[h].test(c))return!0;return!1}function a(c){return c.toString().substring(2,c.toString().length-2).replace(/\.\*\?$/,"*")}function f(c){return c instanceof Error?c.stack||c.message:c}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return r.enable(r.load()),r}wc.exports=Iy});var Ui=x((et,Dn)=>{et.formatArgs=Cy;et.save=Ry;et.load=By;et.useColors=Ay;et.storage=Ty();et.destroy=(()=>{let t=!1;return()=>{t||(t=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})();et.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function Ay(){return typeof window!="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document!="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function Cy(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+Dn.exports.humanize(this.diff),!this.useColors)return;let e="color: "+this.color;t.splice(1,0,e,"color: inherit");let r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,n=>{n!=="%%"&&(r++,n==="%c"&&(i=r))}),t.splice(i,0,e)}et.log=console.debug||console.log||(()=>{});function Ry(t){try{t?et.storage.setItem("debug",t):et.storage.removeItem("debug")}catch(e){}}function By(){let t;try{t=et.storage.getItem("debug")}catch(e){}return!t&&typeof process!="undefined"&&"env"in process&&(t=process.env.DEBUG),t}function Ty(){try{return localStorage}catch(t){}}Dn.exports=_c()(et);var{formatters:Dy}=Dn.exports;Dy.j=function(t){try{return JSON.stringify(t)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}});var io=x((sw,ro)=>{"use strict";var ti=typeof Reflect=="object"?Reflect:null,Sc=ti&&typeof ti.apply=="function"?ti.apply:function(e,r,i){return Function.prototype.apply.call(e,r,i)},Pn;ti&&typeof ti.ownKeys=="function"?Pn=ti.ownKeys:Object.getOwnPropertySymbols?Pn=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Pn=function(e){return Object.getOwnPropertyNames(e)};function Py(t){console&&console.warn&&console.warn(t)}var Ic=Number.isNaN||function(e){return e!==e};function ie(){ie.init.call(this)}ro.exports=ie;ro.exports.once=Ly;ie.EventEmitter=ie;ie.prototype._events=void 0;ie.prototype._eventsCount=0;ie.prototype._maxListeners=void 0;var Ac=10;function On(t){if(typeof t!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}Object.defineProperty(ie,"defaultMaxListeners",{enumerable:!0,get:function(){return Ac},set:function(t){if(typeof t!="number"||t<0||Ic(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");Ac=t}});ie.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};ie.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||Ic(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function Cc(t){return t._maxListeners===void 0?ie.defaultMaxListeners:t._maxListeners}ie.prototype.getMaxListeners=function(){return Cc(this)};ie.prototype.emit=function(e){for(var r=[],i=1;i<arguments.length;i++)r.push(arguments[i]);var n=e==="error",s=this._events;if(s!==void 0)n=n&&s.error===void 0;else if(!n)return!1;if(n){var o;if(r.length>0&&(o=r[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var f=s[e];if(f===void 0)return!1;if(typeof f=="function")Sc(f,this,r);else for(var u=f.length,c=Pc(f,u),i=0;i<u;++i)Sc(c[i],this,r);return!0};function Rc(t,e,r,i){var n,s,o;if(On(r),s=t._events,s===void 0?(s=t._events=Object.create(null),t._eventsCount=0):(s.newListener!==void 0&&(t.emit("newListener",e,r.listener?r.listener:r),s=t._events),o=s[e]),o===void 0)o=s[e]=r,++t._eventsCount;else if(typeof o=="function"?o=s[e]=i?[r,o]:[o,r]:i?o.unshift(r):o.push(r),n=Cc(t),n>0&&o.length>n&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=t,a.type=e,a.count=o.length,Py(a)}return t}ie.prototype.addListener=function(e,r){return Rc(this,e,r,!1)};ie.prototype.on=ie.prototype.addListener;ie.prototype.prependListener=function(e,r){return Rc(this,e,r,!0)};function Oy(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function Bc(t,e,r){var i={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},n=Oy.bind(i);return n.listener=r,i.wrapFn=n,n}ie.prototype.once=function(e,r){return On(r),this.on(e,Bc(this,e,r)),this};ie.prototype.prependOnceListener=function(e,r){return On(r),this.prependListener(e,Bc(this,e,r)),this};ie.prototype.removeListener=function(e,r){var i,n,s,o,a;if(On(r),n=this._events,n===void 0)return this;if(i=n[e],i===void 0)return this;if(i===r||i.listener===r)--this._eventsCount==0?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,i.listener||r));else if(typeof i!="function"){for(s=-1,o=i.length-1;o>=0;o--)if(i[o]===r||i[o].listener===r){a=i[o].listener,s=o;break}if(s<0)return this;s===0?i.shift():Ny(i,s),i.length===1&&(n[e]=i[0]),n.removeListener!==void 0&&this.emit("removeListener",e,a||r)}return this};ie.prototype.off=ie.prototype.removeListener;ie.prototype.removeAllListeners=function(e){var r,i,n;if(i=this._events,i===void 0)return this;if(i.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):i[e]!==void 0&&(--this._eventsCount==0?this._events=Object.create(null):delete i[e]),this;if(arguments.length===0){var s=Object.keys(i),o;for(n=0;n<s.length;++n)o=s[n],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(r=i[e],typeof r=="function")this.removeListener(e,r);else if(r!==void 0)for(n=r.length-1;n>=0;n--)this.removeListener(e,r[n]);return this};function Tc(t,e,r){var i=t._events;if(i===void 0)return[];var n=i[e];return n===void 0?[]:typeof n=="function"?r?[n.listener||n]:[n]:r?ky(n):Pc(n,n.length)}ie.prototype.listeners=function(e){return Tc(this,e,!0)};ie.prototype.rawListeners=function(e){return Tc(this,e,!1)};ie.listenerCount=function(t,e){return typeof t.listenerCount=="function"?t.listenerCount(e):Dc.call(t,e)};ie.prototype.listenerCount=Dc;function Dc(t){var e=this._events;if(e!==void 0){var r=e[t];if(typeof r=="function")return 1;if(r!==void 0)return r.length}return 0}ie.prototype.eventNames=function(){return this._eventsCount>0?Pn(this._events):[]};function Pc(t,e){for(var r=new Array(e),i=0;i<e;++i)r[i]=t[i];return r}function Ny(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}function ky(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}function Ly(t,e){return new Promise(function(r,i){function n(o){t.removeListener(e,s),i(o)}function s(){typeof t.removeListener=="function"&&t.removeListener("error",n),r([].slice.call(arguments))}Oc(t,e,s,{once:!0}),e!=="error"&&My(t,n,{once:!0})})}function My(t,e,r){typeof t.on=="function"&&Oc(t,"error",e,r)}function Oc(t,e,r,i){if(typeof t.on=="function")i.once?t.once(e,r):t.on(e,r);else if(typeof t.addEventListener=="function")t.addEventListener(e,function n(s){i.once&&t.removeEventListener(e,n),r(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t)}});var We=x((ow,kc)=>{"use strict";function Nc(t,e){for(let r in e)Object.defineProperty(t,r,{value:e[r],enumerable:!0,configurable:!0});return t}function Fy(t,e,r){if(!t||typeof t=="string")throw new TypeError("Please pass an Error to err-code");r||(r={}),typeof e=="object"&&(r=e,e=""),e&&(r.code=e);try{return Nc(t,r)}catch(i){r.message=t.message,r.stack=t.stack;let n=function(){};return n.prototype=Object.create(Object.getPrototypeOf(t)),Nc(new n,r)}}kc.exports=Fy});var so=x((aw,ri)=>{var Lc=(...t)=>{let e;for(;t.length;)e=t.shift()(e);return e},no=t=>t&&(typeof t[Symbol.asyncIterator]=="function"||typeof t[Symbol.iterator]=="function"||typeof t.next=="function"),Nn=t=>t&&typeof t.sink=="function"&&no(t.source),Uy=t=>e=>(t.sink(e),t.source),Mc=(...t)=>{if(Nn(t[0])){let e=t[0];t[0]=()=>e.source}else if(no(t[0])){let e=t[0];t[0]=()=>e}if(t.length>1&&Nn(t[t.length-1])&&(t[t.length-1]=t[t.length-1].sink),t.length>2)for(let e=1;e<t.length-1;e++)Nn(t[e])&&(t[e]=Uy(t[e]));return Lc(...t)};ri.exports=Mc;ri.exports.pipe=Mc;ri.exports.rawPipe=Lc;ri.exports.isIterable=no;ri.exports.isDuplex=Nn});var Uc=x((cw,oo)=>{"use strict";var Ky=Object.prototype.hasOwnProperty,Ge="~";function Ki(){}Object.create&&(Ki.prototype=Object.create(null),new Ki().__proto__||(Ge=!1));function qy(t,e,r){this.fn=t,this.context=e,this.once=r||!1}function Fc(t,e,r,i,n){if(typeof r!="function")throw new TypeError("The listener must be a function");var s=new qy(r,i||t,n),o=Ge?Ge+e:e;return t._events[o]?t._events[o].fn?t._events[o]=[t._events[o],s]:t._events[o].push(s):(t._events[o]=s,t._eventsCount++),t}function kn(t,e){--t._eventsCount==0?t._events=new Ki:delete t._events[e]}function Le(){this._events=new Ki,this._eventsCount=0}Le.prototype.eventNames=function(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events)Ky.call(r,i)&&e.push(Ge?i.slice(1):i);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(r)):e};Le.prototype.listeners=function(e){var r=Ge?Ge+e:e,i=this._events[r];if(!i)return[];if(i.fn)return[i.fn];for(var n=0,s=i.length,o=new Array(s);n<s;n++)o[n]=i[n].fn;return o};Le.prototype.listenerCount=function(e){var r=Ge?Ge+e:e,i=this._events[r];return i?i.fn?1:i.length:0};Le.prototype.emit=function(e,r,i,n,s,o){var a=Ge?Ge+e:e;if(!this._events[a])return!1;var f=this._events[a],u=arguments.length,c,h;if(f.fn){switch(f.once&&this.removeListener(e,f.fn,void 0,!0),u){case 1:return f.fn.call(f.context),!0;case 2:return f.fn.call(f.context,r),!0;case 3:return f.fn.call(f.context,r,i),!0;case 4:return f.fn.call(f.context,r,i,n),!0;case 5:return f.fn.call(f.context,r,i,n,s),!0;case 6:return f.fn.call(f.context,r,i,n,s,o),!0}for(h=1,c=new Array(u-1);h<u;h++)c[h-1]=arguments[h];f.fn.apply(f.context,c)}else{var l=f.length,d;for(h=0;h<l;h++)switch(f[h].once&&this.removeListener(e,f[h].fn,void 0,!0),u){case 1:f[h].fn.call(f[h].context);break;case 2:f[h].fn.call(f[h].context,r);break;case 3:f[h].fn.call(f[h].context,r,i);break;case 4:f[h].fn.call(f[h].context,r,i,n);break;default:if(!c)for(d=1,c=new Array(u-1);d<u;d++)c[d-1]=arguments[d];f[h].fn.apply(f[h].context,c)}}return!0};Le.prototype.on=function(e,r,i){return Fc(this,e,r,i,!1)};Le.prototype.once=function(e,r,i){return Fc(this,e,r,i,!0)};Le.prototype.removeListener=function(e,r,i,n){var s=Ge?Ge+e:e;if(!this._events[s])return this;if(!r)return kn(this,s),this;var o=this._events[s];if(o.fn)o.fn===r&&(!n||o.once)&&(!i||o.context===i)&&kn(this,s);else{for(var a=0,f=[],u=o.length;a<u;a++)(o[a].fn!==r||n&&!o[a].once||i&&o[a].context!==i)&&f.push(o[a]);f.length?this._events[s]=f.length===1?f[0]:f:kn(this,s)}return this};Le.prototype.removeAllListeners=function(e){var r;return e?(r=Ge?Ge+e:e,this._events[r]&&kn(this,r)):(this._events=new Ki,this._eventsCount=0),this};Le.prototype.off=Le.prototype.removeListener;Le.prototype.addListener=Le.prototype.on;Le.prefixed=Ge;Le.EventEmitter=Le;typeof oo!="undefined"&&(oo.exports=Le)});var qc=x((uw,Kc)=>{"use strict";Kc.exports=(t,e)=>(e=e||(()=>{}),t.then(r=>new Promise(i=>{i(e())}).then(()=>r),r=>new Promise(i=>{i(e())}).then(()=>{throw r})))});var Vc=x((fw,Ln)=>{"use strict";var Gy=qc(),ao=class extends Error{constructor(e){super(e);this.name="TimeoutError"}},Gc=(t,e,r)=>new Promise((i,n)=>{if(typeof e!="number"||e<0)throw new TypeError("Expected `milliseconds` to be a positive number");if(e===1/0){i(t);return}let s=setTimeout(()=>{if(typeof r=="function"){try{i(r())}catch(f){n(f)}return}let o=typeof r=="string"?r:`Promise timed out after ${e} milliseconds`,a=r instanceof Error?r:new ao(o);typeof t.cancel=="function"&&t.cancel(),n(a)},e);Gy(t.then(i,n),()=>{clearTimeout(s)})});Ln.exports=Gc;Ln.exports.default=Gc;Ln.exports.TimeoutError=ao});var Hc=x(co=>{"use strict";Object.defineProperty(co,"__esModule",{value:!0});function Vy(t,e,r){let i=0,n=t.length;for(;n>0;){let s=n/2|0,o=i+s;r(t[o],e)<=0?(i=++o,n-=s+1):n=s}return i}co.default=Vy});var jc=x(uo=>{"use strict";Object.defineProperty(uo,"__esModule",{value:!0});var Hy=Hc(),zc=class{constructor(){this._queue=[]}enqueue(e,r){r=Object.assign({priority:0},r);let i={priority:r.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=r.priority){this._queue.push(i);return}let n=Hy.default(this._queue,i,(s,o)=>o.priority-s.priority);this._queue.splice(n,0,i)}dequeue(){let e=this._queue.shift();return e==null?void 0:e.run}filter(e){return this._queue.filter(r=>r.priority===e.priority).map(r=>r.run)}get size(){return this._queue.length}};uo.default=zc});var $c=x(fo=>{"use strict";Object.defineProperty(fo,"__esModule",{value:!0});var zy=Uc(),Wc=Vc(),jy=jc(),Mn=()=>{},Wy=new Wc.TimeoutError,Yc=class extends zy{constructor(e){var r,i,n,s;super();if(this._intervalCount=0,this._intervalEnd=0,this._pendingCount=0,this._resolveEmpty=Mn,this._resolveIdle=Mn,e=Object.assign({carryoverConcurrencyCount:!1,intervalCap:1/0,interval:0,concurrency:1/0,autoStart:!0,queueClass:jy.default},e),!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(i=(r=e.intervalCap)===null||r===void 0?void 0:r.toString())!==null&&i!==void 0?i:""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(s=(n=e.interval)===null||n===void 0?void 0:n.toString())!==null&&s!==void 0?s:""}\` (${typeof e.interval})`);this._carryoverConcurrencyCount=e.carryoverConcurrencyCount,this._isIntervalIgnored=e.intervalCap===1/0||e.interval===0,this._intervalCap=e.intervalCap,this._interval=e.interval,this._queue=new e.queueClass,this._queueClass=e.queueClass,this.concurrency=e.concurrency,this._timeout=e.timeout,this._throwOnTimeout=e.throwOnTimeout===!0,this._isPaused=e.autoStart===!1}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--,this._tryToStartAnother(),this.emit("next")}_resolvePromises(){this._resolveEmpty(),this._resolveEmpty=Mn,this._pendingCount===0&&(this._resolveIdle(),this._resolveIdle=Mn,this.emit("idle"))}_onResumeInterval(){this._onInterval(),this._initializeIntervalIfNeeded(),this._timeoutId=void 0}_isIntervalPaused(){let e=Date.now();if(this._intervalId===void 0){let r=this._intervalEnd-e;if(r<0)this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;else return this._timeoutId===void 0&&(this._timeoutId=setTimeout(()=>{this._onResumeInterval()},r)),!0}return!1}_tryToStartAnother(){if(this._queue.size===0)return this._intervalId&&clearInterval(this._intervalId),this._intervalId=void 0,this._resolvePromises(),!1;if(!this._isPaused){let e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){let r=this._queue.dequeue();return r?(this.emit("active"),r(),e&&this._initializeIntervalIfNeeded(),!0):!1}}return!1}_initializeIntervalIfNeeded(){this._isIntervalIgnored||this._intervalId!==void 0||(this._intervalId=setInterval(()=>{this._onInterval()},this._interval),this._intervalEnd=Date.now()+this._interval)}_onInterval(){this._intervalCount===0&&this._pendingCount===0&&this._intervalId&&(clearInterval(this._intervalId),this._intervalId=void 0),this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0,this._processQueue()}_processQueue(){for(;this._tryToStartAnother(););}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this._concurrency=e,this._processQueue()}async add(e,r={}){return new Promise((i,n)=>{let s=async()=>{this._pendingCount++,this._intervalCount++;try{let o=this._timeout===void 0&&r.timeout===void 0?e():Wc.default(Promise.resolve(e()),r.timeout===void 0?this._timeout:r.timeout,()=>{(r.throwOnTimeout===void 0?this._throwOnTimeout:r.throwOnTimeout)&&n(Wy)});i(await o)}catch(o){n(o)}this._next()};this._queue.enqueue(s,r),this._tryToStartAnother(),this.emit("add")})}async addAll(e,r){return Promise.all(e.map(async i=>this.add(i,r)))}start(){return this._isPaused?(this._isPaused=!1,this._processQueue(),this):this}pause(){this._isPaused=!0}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size!==0)return new Promise(e=>{let r=this._resolveEmpty;this._resolveEmpty=()=>{r(),e()}})}async onIdle(){if(!(this._pendingCount===0&&this._queue.size===0))return new Promise(e=>{let r=this._resolveIdle;this._resolveIdle=()=>{r(),e()}})}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}};fo.default=Yc});var eu=x((dw,Jc)=>{"use strict";var Zc=()=>{},Qc=Symbol.for("@libp2p/js-interfaces/topology"),Xc=class{constructor({min:e=0,max:r=1/0,handlers:i={}}){this.min=e,this.max=r,this._onConnect=i.onConnect||Zc,this._onDisconnect=i.onDisconnect||Zc,this.peers=new Set}get[Symbol.toStringTag](){return"Topology"}get[Qc](){return!0}static isTopology(e){return Boolean(e&&e[Qc])}async setRegistrar(e){this._registrar=e}disconnect(e){this._onDisconnect(e)}};Jc.exports=Xc});var ou=x((yw,su)=>{"use strict";var Yy=eu(),tu=Symbol.for("@libp2p/js-interfaces/topology/multicodec-topology"),ru=Ui(),iu=Object.assign(ru("libp2p:topology:multicodec-topology"),{error:ru("libp2p:topology:multicodec-topology:error")}),nu=class extends Yy{constructor({min:e,max:r,multicodecs:i,handlers:n}){super({min:e,max:r,handlers:n});if(!i)throw new Error("one or more multicodec should be provided");if(!n)throw new Error("the handlers should be provided");if(typeof n.onConnect!="function")throw new Error("the 'onConnect' handler must be provided");if(typeof n.onDisconnect!="function")throw new Error("the 'onDisconnect' handler must be provided");this.multicodecs=Array.isArray(i)?i:[i],this._registrar=void 0,this._onProtocolChange=this._onProtocolChange.bind(this),this._onPeerConnect=this._onPeerConnect.bind(this)}get[Symbol.toStringTag](){return"Topology"}get[tu](){return!0}static isMulticodecTopology(e){return Boolean(e&&e[tu])}async setRegistrar(e){this._registrar=e,this._registrar.peerStore.on("change:protocols",this._onProtocolChange),this._registrar.connectionManager.on("peer:connect",this._onPeerConnect),await this._updatePeers(this._registrar.peerStore.getPeers())}async _updatePeers(e){for await(let{id:r,protocols:i}of e)if(this.multicodecs.filter(n=>i.includes(n)).length){this.peers.add(r.toB58String());let n=this._registrar.getConnection(r);n&&this._onConnect(r,n)}else this.peers.delete(r.toB58String())}async _onProtocolChange({peerId:e,protocols:r}){try{let i=this.peers.has(e.toB58String()),n=r.filter(s=>this.multicodecs.includes(s));i&&n.length===0&&this._onDisconnect(e);for(let s of r)if(this.multicodecs.includes(s)){let o=await this._registrar.peerStore.get(e);await this._updatePeers([o]);return}}catch(i){iu.error(i)}}async _onPeerConnect(e){try{let r=e.remotePeer,i=await this._registrar.peerStore.protoBook.get(r);if(!i)return;this.multicodecs.find(n=>i.includes(n))&&(this.peers.add(r.toB58String()),this._onConnect(r,e))}catch(r){iu.error(r)}}};su.exports=nu});var Fn=x(au=>{"use strict";au.codes={ERR_INVALID_SIGNATURE_POLICY:"ERR_INVALID_SIGNATURE_POLICY",ERR_UNHANDLED_SIGNATURE_POLICY:"ERR_UNHANDLED_SIGNATURE_POLICY",ERR_MISSING_SIGNATURE:"ERR_MISSING_SIGNATURE",ERR_MISSING_SEQNO:"ERR_MISSING_SEQNO",ERR_INVALID_SIGNATURE:"ERR_INVALID_SIGNATURE",ERR_UNEXPECTED_FROM:"ERR_UNEXPECTED_FROM",ERR_UNEXPECTED_SIGNATURE:"ERR_UNEXPECTED_SIGNATURE",ERR_UNEXPECTED_KEY:"ERR_UNEXPECTED_KEY",ERR_UNEXPECTED_SEQNO:"ERR_UNEXPECTED_SEQNO"}});var uu=x((bw,cu)=>{"use strict";cu.exports=$y;function $y(t,e){for(var r=new Array(arguments.length-1),i=0,n=2,s=!0;n<arguments.length;)r[i++]=arguments[n++];return new Promise(function(a,f){r[i]=function(c){if(s)if(s=!1,c)f(c);else{for(var h=new Array(arguments.length-1),l=0;l<h.length;)h[l++]=arguments[l];a.apply(null,h)}};try{t.apply(e||null,r)}catch(u){s&&(s=!1,f(u))}})}});var pu=x(lu=>{"use strict";var Un=lu;Un.length=function(e){var r=e.length;if(!r)return 0;for(var i=0;--r%4>1&&e.charAt(r)==="=";)++i;return Math.ceil(e.length*3)/4-i};var ii=new Array(64),fu=new Array(123);for(pt=0;pt<64;)fu[ii[pt]=pt<26?pt+65:pt<52?pt+71:pt<62?pt-4:pt-59|43]=pt++;var pt;Un.encode=function(e,r,i){for(var n=null,s=[],o=0,a=0,f;r<i;){var u=e[r++];switch(a){case 0:s[o++]=ii[u>>2],f=(u&3)<<4,a=1;break;case 1:s[o++]=ii[f|u>>4],f=(u&15)<<2,a=2;break;case 2:s[o++]=ii[f|u>>6],s[o++]=ii[u&63],a=0;break}o>8191&&((n||(n=[])).push(String.fromCharCode.apply(String,s)),o=0)}return a&&(s[o++]=ii[f],s[o++]=61,a===1&&(s[o++]=61)),n?(o&&n.push(String.fromCharCode.apply(String,s.slice(0,o))),n.join("")):String.fromCharCode.apply(String,s.slice(0,o))};var hu="invalid encoding";Un.decode=function(e,r,i){for(var n=i,s=0,o,a=0;a<e.length;){var f=e.charCodeAt(a++);if(f===61&&s>1)break;if((f=fu[f])===void 0)throw Error(hu);switch(s){case 0:o=f,s=1;break;case 1:r[i++]=o<<2|(f&48)>>4,o=f,s=2;break;case 2:r[i++]=(o&15)<<4|(f&60)>>2,o=f,s=3;break;case 3:r[i++]=(o&3)<<6|f,s=0;break}}if(s===1)throw Error(hu);return i-n};Un.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var yu=x((mw,du)=>{"use strict";du.exports=Kn;function Kn(){this._listeners={}}Kn.prototype.on=function(e,r,i){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:r,ctx:i||this}),this};Kn.prototype.off=function(e,r){if(e===void 0)this._listeners={};else if(r===void 0)this._listeners[e]=[];else for(var i=this._listeners[e],n=0;n<i.length;)i[n].fn===r?i.splice(n,1):++n;return this};Kn.prototype.emit=function(e){var r=this._listeners[e];if(r){for(var i=[],n=1;n<arguments.length;)i.push(arguments[n++]);for(n=0;n<r.length;)r[n].fn.apply(r[n++].ctx,i)}return this}});var wu=x((xw,Eu)=>{"use strict";Eu.exports=gu(gu);function gu(t){return typeof Float32Array!="undefined"?function(){var e=new Float32Array([-0]),r=new Uint8Array(e.buffer),i=r[3]===128;function n(f,u,c){e[0]=f,u[c]=r[0],u[c+1]=r[1],u[c+2]=r[2],u[c+3]=r[3]}function s(f,u,c){e[0]=f,u[c]=r[3],u[c+1]=r[2],u[c+2]=r[1],u[c+3]=r[0]}t.writeFloatLE=i?n:s,t.writeFloatBE=i?s:n;function o(f,u){return r[0]=f[u],r[1]=f[u+1],r[2]=f[u+2],r[3]=f[u+3],e[0]}function a(f,u){return r[3]=f[u],r[2]=f[u+1],r[1]=f[u+2],r[0]=f[u+3],e[0]}t.readFloatLE=i?o:a,t.readFloatBE=i?a:o}():function(){function e(i,n,s,o){var a=n<0?1:0;if(a&&(n=-n),n===0)i(1/n>0?0:2147483648,s,o);else if(isNaN(n))i(2143289344,s,o);else if(n>34028234663852886e22)i((a<<31|2139095040)>>>0,s,o);else if(n<11754943508222875e-54)i((a<<31|Math.round(n/1401298464324817e-60))>>>0,s,o);else{var f=Math.floor(Math.log(n)/Math.LN2),u=Math.round(n*Math.pow(2,-f)*8388608)&8388607;i((a<<31|f+127<<23|u)>>>0,s,o)}}t.writeFloatLE=e.bind(null,bu),t.writeFloatBE=e.bind(null,vu);function r(i,n,s){var o=i(n,s),a=(o>>31)*2+1,f=o>>>23&255,u=o&8388607;return f===255?u?NaN:a*(1/0):f===0?a*1401298464324817e-60*u:a*Math.pow(2,f-150)*(u+8388608)}t.readFloatLE=r.bind(null,mu),t.readFloatBE=r.bind(null,xu)}(),typeof Float64Array!="undefined"?function(){var e=new Float64Array([-0]),r=new Uint8Array(e.buffer),i=r[7]===128;function n(f,u,c){e[0]=f,u[c]=r[0],u[c+1]=r[1],u[c+2]=r[2],u[c+3]=r[3],u[c+4]=r[4],u[c+5]=r[5],u[c+6]=r[6],u[c+7]=r[7]}function s(f,u,c){e[0]=f,u[c]=r[7],u[c+1]=r[6],u[c+2]=r[5],u[c+3]=r[4],u[c+4]=r[3],u[c+5]=r[2],u[c+6]=r[1],u[c+7]=r[0]}t.writeDoubleLE=i?n:s,t.writeDoubleBE=i?s:n;function o(f,u){return r[0]=f[u],r[1]=f[u+1],r[2]=f[u+2],r[3]=f[u+3],r[4]=f[u+4],r[5]=f[u+5],r[6]=f[u+6],r[7]=f[u+7],e[0]}function a(f,u){return r[7]=f[u],r[6]=f[u+1],r[5]=f[u+2],r[4]=f[u+3],r[3]=f[u+4],r[2]=f[u+5],r[1]=f[u+6],r[0]=f[u+7],e[0]}t.readDoubleLE=i?o:a,t.readDoubleBE=i?a:o}():function(){function e(i,n,s,o,a,f){var u=o<0?1:0;if(u&&(o=-o),o===0)i(0,a,f+n),i(1/o>0?0:2147483648,a,f+s);else if(isNaN(o))i(0,a,f+n),i(2146959360,a,f+s);else if(o>17976931348623157e292)i(0,a,f+n),i((u<<31|2146435072)>>>0,a,f+s);else{var c;if(o<22250738585072014e-324)c=o/5e-324,i(c>>>0,a,f+n),i((u<<31|c/4294967296)>>>0,a,f+s);else{var h=Math.floor(Math.log(o)/Math.LN2);h===1024&&(h=1023),c=o*Math.pow(2,-h),i(c*4503599627370496>>>0,a,f+n),i((u<<31|h+1023<<20|c*1048576&1048575)>>>0,a,f+s)}}}t.writeDoubleLE=e.bind(null,bu,0,4),t.writeDoubleBE=e.bind(null,vu,4,0);function r(i,n,s,o,a){var f=i(o,a+n),u=i(o,a+s),c=(u>>31)*2+1,h=u>>>20&2047,l=4294967296*(u&1048575)+f;return h===2047?l?NaN:c*(1/0):h===0?c*5e-324*l:c*Math.pow(2,h-1075)*(l+4503599627370496)}t.readDoubleLE=r.bind(null,mu,0,4),t.readDoubleBE=r.bind(null,xu,4,0)}(),t}function bu(t,e,r){e[r]=t&255,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}function vu(t,e,r){e[r]=t>>>24,e[r+1]=t>>>16&255,e[r+2]=t>>>8&255,e[r+3]=t&255}function mu(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function xu(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}});var _u=x((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(t){}return null}});var Iu=x(Su=>{"use strict";var ho=Su;ho.length=function(e){for(var r=0,i=0,n=0;n<e.length;++n)i=e.charCodeAt(n),i<128?r+=1:i<2048?r+=2:(i&64512)==55296&&(e.charCodeAt(n+1)&64512)==56320?(++n,r+=4):r+=3;return r};ho.read=function(e,r,i){var n=i-r;if(n<1)return"";for(var s=null,o=[],a=0,f;r<i;)f=e[r++],f<128?o[a++]=f:f>191&&f<224?o[a++]=(f&31)<<6|e[r++]&63:f>239&&f<365?(f=((f&7)<<18|(e[r++]&63)<<12|(e[r++]&63)<<6|e[r++]&63)-65536,o[a++]=55296+(f>>10),o[a++]=56320+(f&1023)):o[a++]=(f&15)<<12|(e[r++]&63)<<6|e[r++]&63,a>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,o)),a=0);return s?(a&&s.push(String.fromCharCode.apply(String,o.slice(0,a))),s.join("")):String.fromCharCode.apply(String,o.slice(0,a))};ho.write=function(e,r,i){for(var n=i,s,o,a=0;a<e.length;++a)s=e.charCodeAt(a),s<128?r[i++]=s:s<2048?(r[i++]=s>>6|192,r[i++]=s&63|128):(s&64512)==55296&&((o=e.charCodeAt(a+1))&64512)==56320?(s=65536+((s&1023)<<10)+(o&1023),++a,r[i++]=s>>18|240,r[i++]=s>>12&63|128,r[i++]=s>>6&63|128,r[i++]=s&63|128):(r[i++]=s>>12|224,r[i++]=s>>6&63|128,r[i++]=s&63|128);return i-n}});var Cu=x((ww,Au)=>{"use strict";Au.exports=Zy;function Zy(t,e,r){var i=r||8192,n=i>>>1,s=null,o=i;return function(f){if(f<1||f>n)return t(f);o+f>i&&(s=t(i),o=0);var u=e.call(s,o,o+=f);return o&7&&(o=(o|7)+1),u}}});var Bu=x((_w,Ru)=>{"use strict";Ru.exports=Be;var qi=nr();function Be(t,e){this.lo=t>>>0,this.hi=e>>>0}var Rr=Be.zero=new Be(0,0);Rr.toNumber=function(){return 0};Rr.zzEncode=Rr.zzDecode=function(){return this};Rr.length=function(){return 1};var Qy=Be.zeroHash="\0\0\0\0\0\0\0\0";Be.fromNumber=function(e){if(e===0)return Rr;var r=e<0;r&&(e=-e);var i=e>>>0,n=(e-i)/4294967296>>>0;return r&&(n=~n>>>0,i=~i>>>0,++i>4294967295&&(i=0,++n>4294967295&&(n=0))),new Be(i,n)};Be.from=function(e){if(typeof e=="number")return Be.fromNumber(e);if(qi.isString(e))if(qi.Long)e=qi.Long.fromString(e);else return Be.fromNumber(parseInt(e,10));return e.low||e.high?new Be(e.low>>>0,e.high>>>0):Rr};Be.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var r=~this.lo+1>>>0,i=~this.hi>>>0;return r||(i=i+1>>>0),-(r+i*4294967296)}return this.lo+this.hi*4294967296};Be.prototype.toLong=function(e){return qi.Long?new qi.Long(this.lo|0,this.hi|0,Boolean(e)):{low:this.lo|0,high:this.hi|0,unsigned:Boolean(e)}};var ir=String.prototype.charCodeAt;Be.fromHash=function(e){return e===Qy?Rr:new Be((ir.call(e,0)|ir.call(e,1)<<8|ir.call(e,2)<<16|ir.call(e,3)<<24)>>>0,(ir.call(e,4)|ir.call(e,5)<<8|ir.call(e,6)<<16|ir.call(e,7)<<24)>>>0)};Be.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};Be.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};Be.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};Be.prototype.length=function(){var e=this.lo,r=(this.lo>>>28|this.hi<<4)>>>0,i=this.hi>>>24;return i===0?r===0?e<16384?e<128?1:2:e<2097152?3:4:r<16384?r<128?5:6:r<2097152?7:8:i<128?9:10}});var nr=x(lo=>{"use strict";var k=lo;k.asPromise=uu();k.base64=pu();k.EventEmitter=yu();k.float=wu();k.inquire=_u();k.utf8=Iu();k.pool=Cu();k.LongBits=Bu();k.isNode=Boolean(typeof globalThis!="undefined"&&globalThis&&globalThis.process&&globalThis.process.versions&&globalThis.process.versions.node);k.global=k.isNode&&globalThis||typeof window!="undefined"&&window||typeof self!="undefined"&&self||lo;k.emptyArray=Object.freeze?Object.freeze([]):[];k.emptyObject=Object.freeze?Object.freeze({}):{};k.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};k.isString=function(e){return typeof e=="string"||e instanceof String};k.isObject=function(e){return e&&typeof e=="object"};k.isset=k.isSet=function(e,r){var i=e[r];return i!=null&&e.hasOwnProperty(r)?typeof i!="object"||(Array.isArray(i)?i.length:Object.keys(i).length)>0:!1};k.Buffer=function(){try{var t=k.inquire("buffer").Buffer;return t.prototype.utf8Write?t:null}catch(e){return null}}();k._Buffer_from=null;k._Buffer_allocUnsafe=null;k.newBuffer=function(e){return typeof e=="number"?k.Buffer?k._Buffer_allocUnsafe(e):new k.Array(e):k.Buffer?k._Buffer_from(e):typeof Uint8Array=="undefined"?e:new Uint8Array(e)};k.Array=typeof Uint8Array!="undefined"?Uint8Array:Array;k.Long=k.global.dcodeIO&&k.global.dcodeIO.Long||k.global.Long||k.inquire("long");k.key2Re=/^true|false|0|1$/;k.key32Re=/^-?(?:0|[1-9][0-9]*)$/;k.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;k.longToHash=function(e){return e?k.LongBits.from(e).toHash():k.LongBits.zeroHash};k.longFromHash=function(e,r){var i=k.LongBits.fromHash(e);return k.Long?k.Long.fromBits(i.lo,i.hi,r):i.toNumber(Boolean(r))};function Tu(t,e,r){for(var i=Object.keys(e),n=0;n<i.length;++n)(t[i[n]]===void 0||!r)&&(t[i[n]]=e[i[n]]);return t}k.merge=Tu;k.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Du(t){function e(r,i){if(!(this instanceof e))return new e(r,i);Object.defineProperty(this,"message",{get:function(){return r}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),i&&Tu(this,i)}return(e.prototype=Object.create(Error.prototype)).constructor=e,Object.defineProperty(e.prototype,"name",{get:function(){return t}}),e.prototype.toString=function(){return this.name+": "+this.message},e}k.newError=Du;k.ProtocolError=Du("ProtocolError");k.oneOfGetter=function(e){for(var r={},i=0;i<e.length;++i)r[e[i]]=1;return function(){for(var n=Object.keys(this),s=n.length-1;s>-1;--s)if(r[n[s]]===1&&this[n[s]]!==void 0&&this[n[s]]!==null)return n[s]}};k.oneOfSetter=function(e){return function(r){for(var i=0;i<e.length;++i)e[i]!==r&&delete this[e[i]]}};k.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};k._configure=function(){var t=k.Buffer;if(!t){k._Buffer_from=k._Buffer_allocUnsafe=null;return}k._Buffer_from=t.from!==Uint8Array.from&&t.from||function(r,i){return new t(r,i)},k._Buffer_allocUnsafe=t.allocUnsafe||function(r){return new t(r)}}});var xo=x((Iw,ku)=>{"use strict";ku.exports=Z;var rt=nr(),po,qn=rt.LongBits,Pu=rt.base64,Ou=rt.utf8;function Gi(t,e,r){this.fn=t,this.len=e,this.next=void 0,this.val=r}function yo(){}function Xy(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}function Z(){this.len=0,this.head=new Gi(yo,0,0),this.tail=this.head,this.states=null}var Nu=function(){return rt.Buffer?function(){return(Z.create=function(){return new po})()}:function(){return new Z}};Z.create=Nu();Z.alloc=function(e){return new rt.Array(e)};rt.Array!==Array&&(Z.alloc=rt.pool(Z.alloc,rt.Array.prototype.subarray));Z.prototype._push=function(e,r,i){return this.tail=this.tail.next=new Gi(e,r,i),this.len+=r,this};function go(t,e,r){e[r]=t&255}function Jy(t,e,r){for(;t>127;)e[r++]=t&127|128,t>>>=7;e[r]=t}function bo(t,e){this.len=t,this.next=void 0,this.val=e}bo.prototype=Object.create(Gi.prototype);bo.prototype.fn=Jy;Z.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new bo((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Z.prototype.int32=function(e){return e<0?this._push(vo,10,qn.fromNumber(e)):this.uint32(e)};Z.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function vo(t,e,r){for(;t.hi;)e[r++]=t.lo&127|128,t.lo=(t.lo>>>7|t.hi<<25)>>>0,t.hi>>>=7;for(;t.lo>127;)e[r++]=t.lo&127|128,t.lo=t.lo>>>7;e[r++]=t.lo}Z.prototype.uint64=function(e){var r=qn.from(e);return this._push(vo,r.length(),r)};Z.prototype.int64=Z.prototype.uint64;Z.prototype.sint64=function(e){var r=qn.from(e).zzEncode();return this._push(vo,r.length(),r)};Z.prototype.bool=function(e){return this._push(go,1,e?1:0)};function mo(t,e,r){e[r]=t&255,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}Z.prototype.fixed32=function(e){return this._push(mo,4,e>>>0)};Z.prototype.sfixed32=Z.prototype.fixed32;Z.prototype.fixed64=function(e){var r=qn.from(e);return this._push(mo,4,r.lo)._push(mo,4,r.hi)};Z.prototype.sfixed64=Z.prototype.fixed64;Z.prototype.float=function(e){return this._push(rt.float.writeFloatLE,4,e)};Z.prototype.double=function(e){return this._push(rt.float.writeDoubleLE,8,e)};var eg=rt.Array.prototype.set?function(e,r,i){r.set(e,i)}:function(e,r,i){for(var n=0;n<e.length;++n)r[i+n]=e[n]};Z.prototype.bytes=function(e){var r=e.length>>>0;if(!r)return this._push(go,1,0);if(rt.isString(e)){var i=Z.alloc(r=Pu.length(e));Pu.decode(e,i,0),e=i}return this.uint32(r)._push(eg,r,e)};Z.prototype.string=function(e){var r=Ou.length(e);return r?this.uint32(r)._push(Ou.write,r,e):this._push(go,1,0)};Z.prototype.fork=function(){return this.states=new Xy(this),this.head=this.tail=new Gi(yo,0,0),this.len=0,this};Z.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Gi(yo,0,0),this.len=0),this};Z.prototype.ldelim=function(){var e=this.head,r=this.tail,i=this.len;return this.reset().uint32(i),i&&(this.tail.next=e.next,this.tail=r,this.len+=i),this};Z.prototype.finish=function(){for(var e=this.head.next,r=this.constructor.alloc(this.len),i=0;e;)e.fn(e.val,r,i),i+=e.len,e=e.next;return r};Z._configure=function(t){po=t,Z.create=Nu(),po._configure()}});var Fu=x((Aw,Mu)=>{"use strict";Mu.exports=wt;var Lu=xo();(wt.prototype=Object.create(Lu.prototype)).constructor=wt;var sr=nr();function wt(){Lu.call(this)}wt._configure=function(){wt.alloc=sr._Buffer_allocUnsafe,wt.writeBytesBuffer=sr.Buffer&&sr.Buffer.prototype instanceof Uint8Array&&sr.Buffer.prototype.set.name==="set"?function(e,r,i){r.set(e,i)}:function(e,r,i){if(e.copy)e.copy(r,i,0,e.length);else for(var n=0;n<e.length;)r[i++]=e[n++]}};wt.prototype.bytes=function(e){sr.isString(e)&&(e=sr._Buffer_from(e,"base64"));var r=e.length>>>0;return this.uint32(r),r&&this._push(wt.writeBytesBuffer,r,e),this};function tg(t,e,r){t.length<40?sr.utf8.write(t,e,r):e.utf8Write?e.utf8Write(t,r):e.write(t,r)}wt.prototype.string=function(e){var r=sr.Buffer.byteLength(e);return this.uint32(r),r&&this._push(tg,r,e),this};wt._configure()});var _o=x((Cw,Vu)=>{"use strict";Vu.exports=we;var _t=nr(),Eo,Uu=_t.LongBits,rg=_t.utf8;function dt(t,e){return RangeError("index out of range: "+t.pos+" + "+(e||1)+" > "+t.len)}function we(t){this.buf=t,this.pos=0,this.len=t.length}var Ku=typeof Uint8Array!="undefined"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new we(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new we(e);throw Error("illegal buffer")},qu=function(){return _t.Buffer?function(r){return(we.create=function(n){return _t.Buffer.isBuffer(n)?new Eo(n):Ku(n)})(r)}:Ku};we.create=qu();we.prototype._slice=_t.Array.prototype.subarray||_t.Array.prototype.slice;we.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,dt(this,10);return e}}();we.prototype.int32=function(){return this.uint32()|0};we.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function wo(){var t=new Uu(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw dt(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw dt(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}we.prototype.bool=function(){return this.uint32()!==0};function Gn(t,e){return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0}we.prototype.fixed32=function(){if(this.pos+4>this.len)throw dt(this,4);return Gn(this.buf,this.pos+=4)};we.prototype.sfixed32=function(){if(this.pos+4>this.len)throw dt(this,4);return Gn(this.buf,this.pos+=4)|0};function Gu(){if(this.pos+8>this.len)throw dt(this,8);return new Uu(Gn(this.buf,this.pos+=4),Gn(this.buf,this.pos+=4))}we.prototype.float=function(){if(this.pos+4>this.len)throw dt(this,4);var e=_t.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};we.prototype.double=function(){if(this.pos+8>this.len)throw dt(this,4);var e=_t.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};we.prototype.bytes=function(){var e=this.uint32(),r=this.pos,i=this.pos+e;if(i>this.len)throw dt(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(r,i):r===i?new this.buf.constructor(0):this._slice.call(this.buf,r,i)};we.prototype.string=function(){var e=this.bytes();return rg.read(e,0,e.length)};we.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw dt(this,e);this.pos+=e}else do if(this.pos>=this.len)throw dt(this);while(this.buf[this.pos++]&128);return this};we.prototype.skipType=function(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!=4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+t+" at offset "+this.pos)}return this};we._configure=function(t){Eo=t,we.create=qu(),Eo._configure();var e=_t.Long?"toLong":"toNumber";_t.merge(we.prototype,{int64:function(){return wo.call(this)[e](!1)},uint64:function(){return wo.call(this)[e](!0)},sint64:function(){return wo.call(this).zzDecode()[e](!1)},fixed64:function(){return Gu.call(this)[e](!0)},sfixed64:function(){return Gu.call(this)[e](!1)}})}});var Wu=x((Rw,ju)=>{"use strict";ju.exports=Br;var Hu=_o();(Br.prototype=Object.create(Hu.prototype)).constructor=Br;var zu=nr();function Br(t){Hu.call(this,t)}Br._configure=function(){zu.Buffer&&(Br.prototype._slice=zu.Buffer.prototype.slice)};Br.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Br._configure()});var $u=x((Bw,Yu)=>{"use strict";Yu.exports=Vi;var So=nr();(Vi.prototype=Object.create(So.EventEmitter.prototype)).constructor=Vi;function Vi(t,e,r){if(typeof t!="function")throw TypeError("rpcImpl must be a function");So.EventEmitter.call(this),this.rpcImpl=t,this.requestDelimited=Boolean(e),this.responseDelimited=Boolean(r)}Vi.prototype.rpcCall=function t(e,r,i,n,s){if(!n)throw TypeError("request must be specified");var o=this;if(!s)return So.asPromise(t,o,e,r,i,n);if(!o.rpcImpl){setTimeout(function(){s(Error("already ended"))},0);return}try{return o.rpcImpl(e,r[o.requestDelimited?"encodeDelimited":"encode"](n).finish(),function(f,u){if(f)return o.emit("error",f,e),s(f);if(u===null){o.end(!0);return}if(!(u instanceof i))try{u=i[o.responseDelimited?"decodeDelimited":"decode"](u)}catch(c){return o.emit("error",c,e),s(c)}return o.emit("data",u,e),s(null,u)})}catch(a){o.emit("error",a,e),setTimeout(function(){s(a)},0);return}};Vi.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var Qu=x(Zu=>{"use strict";var ig=Zu;ig.Service=$u()});var Ju=x((Dw,Xu)=>{"use strict";Xu.exports={}});var rf=x(tf=>{"use strict";var Ye=tf;Ye.build="minimal";Ye.Writer=xo();Ye.BufferWriter=Fu();Ye.Reader=_o();Ye.BufferReader=Wu();Ye.util=nr();Ye.rpc=Qu();Ye.roots=Ju();Ye.configure=ef;function ef(){Ye.util._configure(),Ye.Writer._configure(Ye.BufferWriter),Ye.Reader._configure(Ye.BufferReader)}ef()});var ni=x((Ow,nf)=>{"use strict";nf.exports=rf()});var Ao=x((Nw,sf)=>{"use strict";var or=ni(),si=or.Reader,Io=or.Writer,G=or.util,Ae=or.roots["libp2p-pubsub-rpc"]||(or.roots["libp2p-pubsub-rpc"]={});Ae.RPC=function(){function t(e){if(this.subscriptions=[],this.msgs=[],e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.subscriptions=G.emptyArray,t.prototype.msgs=G.emptyArray,t.encode=function(r,i){if(i||(i=Io.create()),r.subscriptions!=null&&r.subscriptions.length)for(var n=0;n<r.subscriptions.length;++n)Ae.RPC.SubOpts.encode(r.subscriptions[n],i.uint32(10).fork()).ldelim();if(r.msgs!=null&&r.msgs.length)for(var n=0;n<r.msgs.length;++n)Ae.RPC.Message.encode(r.msgs[n],i.uint32(18).fork()).ldelim();return i},t.decode=function(r,i){r instanceof si||(r=si.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Ae.RPC;r.pos<n;){var o=r.uint32();switch(o>>>3){case 1:s.subscriptions&&s.subscriptions.length||(s.subscriptions=[]),s.subscriptions.push(Ae.RPC.SubOpts.decode(r,r.uint32()));break;case 2:s.msgs&&s.msgs.length||(s.msgs=[]),s.msgs.push(Ae.RPC.Message.decode(r,r.uint32()));break;default:r.skipType(o&7);break}}return s},t.fromObject=function(r){if(r instanceof Ae.RPC)return r;var i=new Ae.RPC;if(r.subscriptions){if(!Array.isArray(r.subscriptions))throw TypeError(".RPC.subscriptions: array expected");i.subscriptions=[];for(var n=0;n<r.subscriptions.length;++n){if(typeof r.subscriptions[n]!="object")throw TypeError(".RPC.subscriptions: object expected");i.subscriptions[n]=Ae.RPC.SubOpts.fromObject(r.subscriptions[n])}}if(r.msgs){if(!Array.isArray(r.msgs))throw TypeError(".RPC.msgs: array expected");i.msgs=[];for(var n=0;n<r.msgs.length;++n){if(typeof r.msgs[n]!="object")throw TypeError(".RPC.msgs: object expected");i.msgs[n]=Ae.RPC.Message.fromObject(r.msgs[n])}}return i},t.toObject=function(r,i){i||(i={});var n={};if((i.arrays||i.defaults)&&(n.subscriptions=[],n.msgs=[]),r.subscriptions&&r.subscriptions.length){n.subscriptions=[];for(var s=0;s<r.subscriptions.length;++s)n.subscriptions[s]=Ae.RPC.SubOpts.toObject(r.subscriptions[s],i)}if(r.msgs&&r.msgs.length){n.msgs=[];for(var s=0;s<r.msgs.length;++s)n.msgs[s]=Ae.RPC.Message.toObject(r.msgs[s],i)}return n},t.prototype.toJSON=function(){return this.constructor.toObject(this,or.util.toJSONOptions)},t.SubOpts=function(){function e(i){if(i)for(var n=Object.keys(i),s=0;s<n.length;++s)i[n[s]]!=null&&(this[n[s]]=i[n[s]])}e.prototype.subscribe=null,e.prototype.topicID=null;var r;return Object.defineProperty(e.prototype,"_subscribe",{get:G.oneOfGetter(r=["subscribe"]),set:G.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_topicID",{get:G.oneOfGetter(r=["topicID"]),set:G.oneOfSetter(r)}),e.encode=function(n,s){return s||(s=Io.create()),n.subscribe!=null&&Object.hasOwnProperty.call(n,"subscribe")&&s.uint32(8).bool(n.subscribe),n.topicID!=null&&Object.hasOwnProperty.call(n,"topicID")&&s.uint32(18).string(n.topicID),s},e.decode=function(n,s){n instanceof si||(n=si.create(n));for(var o=s===void 0?n.len:n.pos+s,a=new Ae.RPC.SubOpts;n.pos<o;){var f=n.uint32();switch(f>>>3){case 1:a.subscribe=n.bool();break;case 2:a.topicID=n.string();break;default:n.skipType(f&7);break}}return a},e.fromObject=function(n){if(n instanceof Ae.RPC.SubOpts)return n;var s=new Ae.RPC.SubOpts;return n.subscribe!=null&&(s.subscribe=Boolean(n.subscribe)),n.topicID!=null&&(s.topicID=String(n.topicID)),s},e.toObject=function(n,s){s||(s={});var o={};return n.subscribe!=null&&n.hasOwnProperty("subscribe")&&(o.subscribe=n.subscribe,s.oneofs&&(o._subscribe="subscribe")),n.topicID!=null&&n.hasOwnProperty("topicID")&&(o.topicID=n.topicID,s.oneofs&&(o._topicID="topicID")),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,or.util.toJSONOptions)},e}(),t.Message=function(){function e(i){if(this.topicIDs=[],i)for(var n=Object.keys(i),s=0;s<n.length;++s)i[n[s]]!=null&&(this[n[s]]=i[n[s]])}e.prototype.from=null,e.prototype.data=null,e.prototype.seqno=null,e.prototype.topicIDs=G.emptyArray,e.prototype.signature=null,e.prototype.key=null;var r;return Object.defineProperty(e.prototype,"_from",{get:G.oneOfGetter(r=["from"]),set:G.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_data",{get:G.oneOfGetter(r=["data"]),set:G.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_seqno",{get:G.oneOfGetter(r=["seqno"]),set:G.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_signature",{get:G.oneOfGetter(r=["signature"]),set:G.oneOfSetter(r)}),Object.defineProperty(e.prototype,"_key",{get:G.oneOfGetter(r=["key"]),set:G.oneOfSetter(r)}),e.encode=function(n,s){if(s||(s=Io.create()),n.from!=null&&Object.hasOwnProperty.call(n,"from")&&s.uint32(10).bytes(n.from),n.data!=null&&Object.hasOwnProperty.call(n,"data")&&s.uint32(18).bytes(n.data),n.seqno!=null&&Object.hasOwnProperty.call(n,"seqno")&&s.uint32(26).bytes(n.seqno),n.topicIDs!=null&&n.topicIDs.length)for(var o=0;o<n.topicIDs.length;++o)s.uint32(34).string(n.topicIDs[o]);return n.signature!=null&&Object.hasOwnProperty.call(n,"signature")&&s.uint32(42).bytes(n.signature),n.key!=null&&Object.hasOwnProperty.call(n,"key")&&s.uint32(50).bytes(n.key),s},e.decode=function(n,s){n instanceof si||(n=si.create(n));for(var o=s===void 0?n.len:n.pos+s,a=new Ae.RPC.Message;n.pos<o;){var f=n.uint32();switch(f>>>3){case 1:a.from=n.bytes();break;case 2:a.data=n.bytes();break;case 3:a.seqno=n.bytes();break;case 4:a.topicIDs&&a.topicIDs.length||(a.topicIDs=[]),a.topicIDs.push(n.string());break;case 5:a.signature=n.bytes();break;case 6:a.key=n.bytes();break;default:n.skipType(f&7);break}}return a},e.fromObject=function(n){if(n instanceof Ae.RPC.Message)return n;var s=new Ae.RPC.Message;if(n.from!=null&&(typeof n.from=="string"?G.base64.decode(n.from,s.from=G.newBuffer(G.base64.length(n.from)),0):n.from.length&&(s.from=n.from)),n.data!=null&&(typeof n.data=="string"?G.base64.decode(n.data,s.data=G.newBuffer(G.base64.length(n.data)),0):n.data.length&&(s.data=n.data)),n.seqno!=null&&(typeof n.seqno=="string"?G.base64.decode(n.seqno,s.seqno=G.newBuffer(G.base64.length(n.seqno)),0):n.seqno.length&&(s.seqno=n.seqno)),n.topicIDs){if(!Array.isArray(n.topicIDs))throw TypeError(".RPC.Message.topicIDs: array expected");s.topicIDs=[];for(var o=0;o<n.topicIDs.length;++o)s.topicIDs[o]=String(n.topicIDs[o])}return n.signature!=null&&(typeof n.signature=="string"?G.base64.decode(n.signature,s.signature=G.newBuffer(G.base64.length(n.signature)),0):n.signature.length&&(s.signature=n.signature)),n.key!=null&&(typeof n.key=="string"?G.base64.decode(n.key,s.key=G.newBuffer(G.base64.length(n.key)),0):n.key.length&&(s.key=n.key)),s},e.toObject=function(n,s){s||(s={});var o={};if((s.arrays||s.defaults)&&(o.topicIDs=[]),n.from!=null&&n.hasOwnProperty("from")&&(o.from=s.bytes===String?G.base64.encode(n.from,0,n.from.length):s.bytes===Array?Array.prototype.slice.call(n.from):n.from,s.oneofs&&(o._from="from")),n.data!=null&&n.hasOwnProperty("data")&&(o.data=s.bytes===String?G.base64.encode(n.data,0,n.data.length):s.bytes===Array?Array.prototype.slice.call(n.data):n.data,s.oneofs&&(o._data="data")),n.seqno!=null&&n.hasOwnProperty("seqno")&&(o.seqno=s.bytes===String?G.base64.encode(n.seqno,0,n.seqno.length):s.bytes===Array?Array.prototype.slice.call(n.seqno):n.seqno,s.oneofs&&(o._seqno="seqno")),n.topicIDs&&n.topicIDs.length){o.topicIDs=[];for(var a=0;a<n.topicIDs.length;++a)o.topicIDs[a]=n.topicIDs[a]}return n.signature!=null&&n.hasOwnProperty("signature")&&(o.signature=s.bytes===String?G.base64.encode(n.signature,0,n.signature.length):s.bytes===Array?Array.prototype.slice.call(n.signature):n.signature,s.oneofs&&(o._signature="signature")),n.key!=null&&n.hasOwnProperty("key")&&(o.key=s.bytes===String?G.base64.encode(n.key,0,n.key.length):s.bytes===Array?Array.prototype.slice.call(n.key):n.key,s.oneofs&&(o._key="key")),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,or.util.toJSONOptions)},e}(),t}();sf.exports=Ae});var cf=x(Vn=>{"use strict";Vn.byteLength=sg;Vn.toByteArray=ag;Vn.fromByteArray=fg;var St=[],it=[],ng=typeof Uint8Array!="undefined"?Uint8Array:Array,Co="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(Tr=0,of=Co.length;Tr<of;++Tr)St[Tr]=Co[Tr],it[Co.charCodeAt(Tr)]=Tr;var Tr,of;it["-".charCodeAt(0)]=62;it["_".charCodeAt(0)]=63;function af(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");r===-1&&(r=e);var i=r===e?0:4-r%4;return[r,i]}function sg(t){var e=af(t),r=e[0],i=e[1];return(r+i)*3/4-i}function og(t,e,r){return(e+r)*3/4-r}function ag(t){var e,r=af(t),i=r[0],n=r[1],s=new ng(og(t,i,n)),o=0,a=n>0?i-4:i,f;for(f=0;f<a;f+=4)e=it[t.charCodeAt(f)]<<18|it[t.charCodeAt(f+1)]<<12|it[t.charCodeAt(f+2)]<<6|it[t.charCodeAt(f+3)],s[o++]=e>>16&255,s[o++]=e>>8&255,s[o++]=e&255;return n===2&&(e=it[t.charCodeAt(f)]<<2|it[t.charCodeAt(f+1)]>>4,s[o++]=e&255),n===1&&(e=it[t.charCodeAt(f)]<<10|it[t.charCodeAt(f+1)]<<4|it[t.charCodeAt(f+2)]>>2,s[o++]=e>>8&255,s[o++]=e&255),s}function cg(t){return St[t>>18&63]+St[t>>12&63]+St[t>>6&63]+St[t&63]}function ug(t,e,r){for(var i,n=[],s=e;s<r;s+=3)i=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(t[s+2]&255),n.push(cg(i));return n.join("")}function fg(t){for(var e,r=t.length,i=r%3,n=[],s=16383,o=0,a=r-i;o<a;o+=s)n.push(ug(t,o,o+s>a?a:o+s));return i===1?(e=t[r-1],n.push(St[e>>2]+St[e<<4&63]+"==")):i===2&&(e=(t[r-2]<<8)+t[r-1],n.push(St[e>>10]+St[e>>4&63]+St[e<<2&63]+"=")),n.join("")}});var uf=x(Ro=>{Ro.read=function(t,e,r,i,n){var s,o,a=n*8-i-1,f=(1<<a)-1,u=f>>1,c=-7,h=r?n-1:0,l=r?-1:1,d=t[e+h];for(h+=l,s=d&(1<<-c)-1,d>>=-c,c+=a;c>0;s=s*256+t[e+h],h+=l,c-=8);for(o=s&(1<<-c)-1,s>>=-c,c+=i;c>0;o=o*256+t[e+h],h+=l,c-=8);if(s===0)s=1-u;else{if(s===f)return o?NaN:(d?-1:1)*(1/0);o=o+Math.pow(2,i),s=s-u}return(d?-1:1)*o*Math.pow(2,s-i)};Ro.write=function(t,e,r,i,n,s){var o,a,f,u=s*8-n-1,c=(1<<u)-1,h=c>>1,l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,d=i?0:s-1,p=i?1:-1,y=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=c):(o=Math.floor(Math.log(e)/Math.LN2),e*(f=Math.pow(2,-o))<1&&(o--,f*=2),o+h>=1?e+=l/f:e+=l*Math.pow(2,1-h),e*f>=2&&(o++,f/=2),o+h>=c?(a=0,o=c):o+h>=1?(a=(e*f-1)*Math.pow(2,n),o=o+h):(a=e*Math.pow(2,h-1)*Math.pow(2,n),o=0));n>=8;t[r+d]=a&255,d+=p,a/=256,n-=8);for(o=o<<n|a,u+=n;u>0;t[r+d]=o&255,d+=p,o/=256,u-=8);t[r+d-p]|=y*128}});var Pr=x(ui=>{"use strict";var Bo=cf(),oi=uf(),ff=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;ui.Buffer=w;ui.SlowBuffer=gg;ui.INSPECT_MAX_BYTES=50;var Hn=2147483647;ui.kMaxLength=Hn;w.TYPED_ARRAY_SUPPORT=hg();!w.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function hg(){try{let t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),t.foo()===42}catch(t){return!1}}Object.defineProperty(w.prototype,"parent",{enumerable:!0,get:function(){if(!!w.isBuffer(this))return this.buffer}});Object.defineProperty(w.prototype,"offset",{enumerable:!0,get:function(){if(!!w.isBuffer(this))return this.byteOffset}});function zt(t){if(t>Hn)throw new RangeError('The value "'+t+'" is invalid for option "size"');let e=new Uint8Array(t);return Object.setPrototypeOf(e,w.prototype),e}function w(t,e,r){if(typeof t=="number"){if(typeof e=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return To(t)}return hf(t,e,r)}w.poolSize=8192;function hf(t,e,r){if(typeof t=="string")return pg(t,e);if(ArrayBuffer.isView(t))return dg(t);if(t==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(It(t,ArrayBuffer)||t&&It(t.buffer,ArrayBuffer)||typeof SharedArrayBuffer!="undefined"&&(It(t,SharedArrayBuffer)||t&&It(t.buffer,SharedArrayBuffer)))return Po(t,e,r);if(typeof t=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');let i=t.valueOf&&t.valueOf();if(i!=null&&i!==t)return w.from(i,e,r);let n=yg(t);if(n)return n;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof t[Symbol.toPrimitive]=="function")return w.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}w.from=function(t,e,r){return hf(t,e,r)};Object.setPrototypeOf(w.prototype,Uint8Array.prototype);Object.setPrototypeOf(w,Uint8Array);function lf(t){if(typeof t!="number")throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function lg(t,e,r){return lf(t),t<=0?zt(t):e!==void 0?typeof r=="string"?zt(t).fill(e,r):zt(t).fill(e):zt(t)}w.alloc=function(t,e,r){return lg(t,e,r)};function To(t){return lf(t),zt(t<0?0:Oo(t)|0)}w.allocUnsafe=function(t){return To(t)};w.allocUnsafeSlow=function(t){return To(t)};function pg(t,e){if((typeof e!="string"||e==="")&&(e="utf8"),!w.isEncoding(e))throw new TypeError("Unknown encoding: "+e);let r=pf(t,e)|0,i=zt(r),n=i.write(t,e);return n!==r&&(i=i.slice(0,n)),i}function Do(t){let e=t.length<0?0:Oo(t.length)|0,r=zt(e);for(let i=0;i<e;i+=1)r[i]=t[i]&255;return r}function dg(t){if(It(t,Uint8Array)){let e=new Uint8Array(t);return Po(e.buffer,e.byteOffset,e.byteLength)}return Do(t)}function Po(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let i;return e===void 0&&r===void 0?i=new Uint8Array(t):r===void 0?i=new Uint8Array(t,e):i=new Uint8Array(t,e,r),Object.setPrototypeOf(i,w.prototype),i}function yg(t){if(w.isBuffer(t)){let e=Oo(t.length)|0,r=zt(e);return r.length===0||t.copy(r,0,0,e),r}if(t.length!==void 0)return typeof t.length!="number"||Lo(t.length)?zt(0):Do(t);if(t.type==="Buffer"&&Array.isArray(t.data))return Do(t.data)}function Oo(t){if(t>=Hn)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Hn.toString(16)+" bytes");return t|0}function gg(t){return+t!=t&&(t=0),w.alloc(+t)}w.isBuffer=function(e){return e!=null&&e._isBuffer===!0&&e!==w.prototype};w.compare=function(e,r){if(It(e,Uint8Array)&&(e=w.from(e,e.offset,e.byteLength)),It(r,Uint8Array)&&(r=w.from(r,r.offset,r.byteLength)),!w.isBuffer(e)||!w.isBuffer(r))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===r)return 0;let i=e.length,n=r.length;for(let s=0,o=Math.min(i,n);s<o;++s)if(e[s]!==r[s]){i=e[s],n=r[s];break}return i<n?-1:n<i?1:0};w.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}};w.concat=function(e,r){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(e.length===0)return w.alloc(0);let i;if(r===void 0)for(r=0,i=0;i<e.length;++i)r+=e[i].length;let n=w.allocUnsafe(r),s=0;for(i=0;i<e.length;++i){let o=e[i];if(It(o,Uint8Array))s+o.length>n.length?(w.isBuffer(o)||(o=w.from(o)),o.copy(n,s)):Uint8Array.prototype.set.call(n,o,s);else if(w.isBuffer(o))o.copy(n,s);else throw new TypeError('"list" argument must be an Array of Buffers');s+=o.length}return n};function pf(t,e){if(w.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||It(t,ArrayBuffer))return t.byteLength;if(typeof t!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);let r=t.length,i=arguments.length>2&&arguments[2]===!0;if(!i&&r===0)return 0;let n=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return ko(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return r*2;case"hex":return r>>>1;case"base64":return If(t).length;default:if(n)return i?-1:ko(t).length;e=(""+e).toLowerCase(),n=!0}}w.byteLength=pf;function bg(t,e,r){let i=!1;if((e===void 0||e<0)&&(e=0),e>this.length||((r===void 0||r>this.length)&&(r=this.length),r<=0)||(r>>>=0,e>>>=0,r<=e))return"";for(t||(t="utf8");;)switch(t){case"hex":return Cg(this,e,r);case"utf8":case"utf-8":return gf(this,e,r);case"ascii":return Ig(this,e,r);case"latin1":case"binary":return Ag(this,e,r);case"base64":return _g(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Rg(this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}w.prototype._isBuffer=!0;function Dr(t,e,r){let i=t[e];t[e]=t[r],t[r]=i}w.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let r=0;r<e;r+=2)Dr(this,r,r+1);return this};w.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let r=0;r<e;r+=4)Dr(this,r,r+3),Dr(this,r+1,r+2);return this};w.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let r=0;r<e;r+=8)Dr(this,r,r+7),Dr(this,r+1,r+6),Dr(this,r+2,r+5),Dr(this,r+3,r+4);return this};w.prototype.toString=function(){let e=this.length;return e===0?"":arguments.length===0?gf(this,0,e):bg.apply(this,arguments)};w.prototype.toLocaleString=w.prototype.toString;w.prototype.equals=function(e){if(!w.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?!0:w.compare(this,e)===0};w.prototype.inspect=function(){let e="",r=ui.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"};ff&&(w.prototype[ff]=w.prototype.inspect);w.prototype.compare=function(e,r,i,n,s){if(It(e,Uint8Array)&&(e=w.from(e,e.offset,e.byteLength)),!w.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(r===void 0&&(r=0),i===void 0&&(i=e?e.length:0),n===void 0&&(n=0),s===void 0&&(s=this.length),r<0||i>e.length||n<0||s>this.length)throw new RangeError("out of range index");if(n>=s&&r>=i)return 0;if(n>=s)return-1;if(r>=i)return 1;if(r>>>=0,i>>>=0,n>>>=0,s>>>=0,this===e)return 0;let o=s-n,a=i-r,f=Math.min(o,a),u=this.slice(n,s),c=e.slice(r,i);for(let h=0;h<f;++h)if(u[h]!==c[h]){o=u[h],a=c[h];break}return o<a?-1:a<o?1:0};function df(t,e,r,i,n){if(t.length===0)return-1;if(typeof r=="string"?(i=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,Lo(r)&&(r=n?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(n)return-1;r=t.length-1}else if(r<0)if(n)r=0;else return-1;if(typeof e=="string"&&(e=w.from(e,i)),w.isBuffer(e))return e.length===0?-1:yf(t,e,r,i,n);if(typeof e=="number")return e=e&255,typeof Uint8Array.prototype.indexOf=="function"?n?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):yf(t,[e],r,i,n);throw new TypeError("val must be string, number or Buffer")}function yf(t,e,r,i,n){let s=1,o=t.length,a=e.length;if(i!==void 0&&(i=String(i).toLowerCase(),i==="ucs2"||i==="ucs-2"||i==="utf16le"||i==="utf-16le")){if(t.length<2||e.length<2)return-1;s=2,o/=2,a/=2,r/=2}function f(c,h){return s===1?c[h]:c.readUInt16BE(h*s)}let u;if(n){let c=-1;for(u=r;u<o;u++)if(f(t,u)===f(e,c===-1?0:u-c)){if(c===-1&&(c=u),u-c+1===a)return c*s}else c!==-1&&(u-=u-c),c=-1}else for(r+a>o&&(r=o-a),u=r;u>=0;u--){let c=!0;for(let h=0;h<a;h++)if(f(t,u+h)!==f(e,h)){c=!1;break}if(c)return u}return-1}w.prototype.includes=function(e,r,i){return this.indexOf(e,r,i)!==-1};w.prototype.indexOf=function(e,r,i){return df(this,e,r,i,!0)};w.prototype.lastIndexOf=function(e,r,i){return df(this,e,r,i,!1)};function vg(t,e,r,i){r=Number(r)||0;let n=t.length-r;i?(i=Number(i),i>n&&(i=n)):i=n;let s=e.length;i>s/2&&(i=s/2);let o;for(o=0;o<i;++o){let a=parseInt(e.substr(o*2,2),16);if(Lo(a))return o;t[r+o]=a}return o}function mg(t,e,r,i){return zn(ko(e,t.length-r),t,r,i)}function xg(t,e,r,i){return zn(Pg(e),t,r,i)}function Eg(t,e,r,i){return zn(If(e),t,r,i)}function wg(t,e,r,i){return zn(Og(e,t.length-r),t,r,i)}w.prototype.write=function(e,r,i,n){if(r===void 0)n="utf8",i=this.length,r=0;else if(i===void 0&&typeof r=="string")n=r,i=this.length,r=0;else if(isFinite(r))r=r>>>0,isFinite(i)?(i=i>>>0,n===void 0&&(n="utf8")):(n=i,i=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let s=this.length-r;if((i===void 0||i>s)&&(i=s),e.length>0&&(i<0||r<0)||r>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let o=!1;for(;;)switch(n){case"hex":return vg(this,e,r,i);case"utf8":case"utf-8":return mg(this,e,r,i);case"ascii":case"latin1":case"binary":return xg(this,e,r,i);case"base64":return Eg(this,e,r,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return wg(this,e,r,i);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}};w.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function _g(t,e,r){return e===0&&r===t.length?Bo.fromByteArray(t):Bo.fromByteArray(t.slice(e,r))}function gf(t,e,r){r=Math.min(t.length,r);let i=[],n=e;for(;n<r;){let s=t[n],o=null,a=s>239?4:s>223?3:s>191?2:1;if(n+a<=r){let f,u,c,h;switch(a){case 1:s<128&&(o=s);break;case 2:f=t[n+1],(f&192)==128&&(h=(s&31)<<6|f&63,h>127&&(o=h));break;case 3:f=t[n+1],u=t[n+2],(f&192)==128&&(u&192)==128&&(h=(s&15)<<12|(f&63)<<6|u&63,h>2047&&(h<55296||h>57343)&&(o=h));break;case 4:f=t[n+1],u=t[n+2],c=t[n+3],(f&192)==128&&(u&192)==128&&(c&192)==128&&(h=(s&15)<<18|(f&63)<<12|(u&63)<<6|c&63,h>65535&&h<1114112&&(o=h))}}o===null?(o=65533,a=1):o>65535&&(o-=65536,i.push(o>>>10&1023|55296),o=56320|o&1023),i.push(o),n+=a}return Sg(i)}var bf=4096;function Sg(t){let e=t.length;if(e<=bf)return String.fromCharCode.apply(String,t);let r="",i=0;for(;i<e;)r+=String.fromCharCode.apply(String,t.slice(i,i+=bf));return r}function Ig(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]&127);return i}function Ag(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]);return i}function Cg(t,e,r){let i=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>i)&&(r=i);let n="";for(let s=e;s<r;++s)n+=Ng[t[s]];return n}function Rg(t,e,r){let i=t.slice(e,r),n="";for(let s=0;s<i.length-1;s+=2)n+=String.fromCharCode(i[s]+i[s+1]*256);return n}w.prototype.slice=function(e,r){let i=this.length;e=~~e,r=r===void 0?i:~~r,e<0?(e+=i,e<0&&(e=0)):e>i&&(e=i),r<0?(r+=i,r<0&&(r=0)):r>i&&(r=i),r<e&&(r=e);let n=this.subarray(e,r);return Object.setPrototypeOf(n,w.prototype),n};function Te(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}w.prototype.readUintLE=w.prototype.readUIntLE=function(e,r,i){e=e>>>0,r=r>>>0,i||Te(e,r,this.length);let n=this[e],s=1,o=0;for(;++o<r&&(s*=256);)n+=this[e+o]*s;return n};w.prototype.readUintBE=w.prototype.readUIntBE=function(e,r,i){e=e>>>0,r=r>>>0,i||Te(e,r,this.length);let n=this[e+--r],s=1;for(;r>0&&(s*=256);)n+=this[e+--r]*s;return n};w.prototype.readUint8=w.prototype.readUInt8=function(e,r){return e=e>>>0,r||Te(e,1,this.length),this[e]};w.prototype.readUint16LE=w.prototype.readUInt16LE=function(e,r){return e=e>>>0,r||Te(e,2,this.length),this[e]|this[e+1]<<8};w.prototype.readUint16BE=w.prototype.readUInt16BE=function(e,r){return e=e>>>0,r||Te(e,2,this.length),this[e]<<8|this[e+1]};w.prototype.readUint32LE=w.prototype.readUInt32LE=function(e,r){return e=e>>>0,r||Te(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};w.prototype.readUint32BE=w.prototype.readUInt32BE=function(e,r){return e=e>>>0,r||Te(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};w.prototype.readBigUInt64LE=ar(function(e){e=e>>>0,ci(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Hi(e,this.length-8);let n=r+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24,s=this[++e]+this[++e]*2**8+this[++e]*2**16+i*2**24;return BigInt(n)+(BigInt(s)<<BigInt(32))});w.prototype.readBigUInt64BE=ar(function(e){e=e>>>0,ci(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Hi(e,this.length-8);let n=r*2**24+this[++e]*2**16+this[++e]*2**8+this[++e],s=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+i;return(BigInt(n)<<BigInt(32))+BigInt(s)});w.prototype.readIntLE=function(e,r,i){e=e>>>0,r=r>>>0,i||Te(e,r,this.length);let n=this[e],s=1,o=0;for(;++o<r&&(s*=256);)n+=this[e+o]*s;return s*=128,n>=s&&(n-=Math.pow(2,8*r)),n};w.prototype.readIntBE=function(e,r,i){e=e>>>0,r=r>>>0,i||Te(e,r,this.length);let n=r,s=1,o=this[e+--n];for(;n>0&&(s*=256);)o+=this[e+--n]*s;return s*=128,o>=s&&(o-=Math.pow(2,8*r)),o};w.prototype.readInt8=function(e,r){return e=e>>>0,r||Te(e,1,this.length),this[e]&128?(255-this[e]+1)*-1:this[e]};w.prototype.readInt16LE=function(e,r){e=e>>>0,r||Te(e,2,this.length);let i=this[e]|this[e+1]<<8;return i&32768?i|4294901760:i};w.prototype.readInt16BE=function(e,r){e=e>>>0,r||Te(e,2,this.length);let i=this[e+1]|this[e]<<8;return i&32768?i|4294901760:i};w.prototype.readInt32LE=function(e,r){return e=e>>>0,r||Te(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};w.prototype.readInt32BE=function(e,r){return e=e>>>0,r||Te(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};w.prototype.readBigInt64LE=ar(function(e){e=e>>>0,ci(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Hi(e,this.length-8);let n=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(i<<24);return(BigInt(n)<<BigInt(32))+BigInt(r+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)});w.prototype.readBigInt64BE=ar(function(e){e=e>>>0,ci(e,"offset");let r=this[e],i=this[e+7];(r===void 0||i===void 0)&&Hi(e,this.length-8);let n=(r<<24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+i)});w.prototype.readFloatLE=function(e,r){return e=e>>>0,r||Te(e,4,this.length),oi.read(this,e,!0,23,4)};w.prototype.readFloatBE=function(e,r){return e=e>>>0,r||Te(e,4,this.length),oi.read(this,e,!1,23,4)};w.prototype.readDoubleLE=function(e,r){return e=e>>>0,r||Te(e,8,this.length),oi.read(this,e,!0,52,8)};w.prototype.readDoubleBE=function(e,r){return e=e>>>0,r||Te(e,8,this.length),oi.read(this,e,!1,52,8)};function $e(t,e,r,i,n,s){if(!w.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>n||e<s)throw new RangeError('"value" argument is out of bounds');if(r+i>t.length)throw new RangeError("Index out of range")}w.prototype.writeUintLE=w.prototype.writeUIntLE=function(e,r,i,n){if(e=+e,r=r>>>0,i=i>>>0,!n){let a=Math.pow(2,8*i)-1;$e(this,e,r,i,a,0)}let s=1,o=0;for(this[r]=e&255;++o<i&&(s*=256);)this[r+o]=e/s&255;return r+i};w.prototype.writeUintBE=w.prototype.writeUIntBE=function(e,r,i,n){if(e=+e,r=r>>>0,i=i>>>0,!n){let a=Math.pow(2,8*i)-1;$e(this,e,r,i,a,0)}let s=i-1,o=1;for(this[r+s]=e&255;--s>=0&&(o*=256);)this[r+s]=e/o&255;return r+i};w.prototype.writeUint8=w.prototype.writeUInt8=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,1,255,0),this[r]=e&255,r+1};w.prototype.writeUint16LE=w.prototype.writeUInt16LE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,2,65535,0),this[r]=e&255,this[r+1]=e>>>8,r+2};w.prototype.writeUint16BE=w.prototype.writeUInt16BE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,2,65535,0),this[r]=e>>>8,this[r+1]=e&255,r+2};w.prototype.writeUint32LE=w.prototype.writeUInt32LE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,4,4294967295,0),this[r+3]=e>>>24,this[r+2]=e>>>16,this[r+1]=e>>>8,this[r]=e&255,r+4};w.prototype.writeUint32BE=w.prototype.writeUInt32BE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,4,4294967295,0),this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=e&255,r+4};function vf(t,e,r,i,n){Sf(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r++]=s,s=s>>8,t[r++]=s,s=s>>8,t[r++]=s,s=s>>8,t[r++]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=o,o=o>>8,t[r++]=o,o=o>>8,t[r++]=o,o=o>>8,t[r++]=o,r}function mf(t,e,r,i,n){Sf(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r+7]=s,s=s>>8,t[r+6]=s,s=s>>8,t[r+5]=s,s=s>>8,t[r+4]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=o,o=o>>8,t[r+2]=o,o=o>>8,t[r+1]=o,o=o>>8,t[r]=o,r+8}w.prototype.writeBigUInt64LE=ar(function(e,r=0){return vf(this,e,r,BigInt(0),BigInt("0xffffffffffffffff"))});w.prototype.writeBigUInt64BE=ar(function(e,r=0){return mf(this,e,r,BigInt(0),BigInt("0xffffffffffffffff"))});w.prototype.writeIntLE=function(e,r,i,n){if(e=+e,r=r>>>0,!n){let f=Math.pow(2,8*i-1);$e(this,e,r,i,f-1,-f)}let s=0,o=1,a=0;for(this[r]=e&255;++s<i&&(o*=256);)e<0&&a===0&&this[r+s-1]!==0&&(a=1),this[r+s]=(e/o>>0)-a&255;return r+i};w.prototype.writeIntBE=function(e,r,i,n){if(e=+e,r=r>>>0,!n){let f=Math.pow(2,8*i-1);$e(this,e,r,i,f-1,-f)}let s=i-1,o=1,a=0;for(this[r+s]=e&255;--s>=0&&(o*=256);)e<0&&a===0&&this[r+s+1]!==0&&(a=1),this[r+s]=(e/o>>0)-a&255;return r+i};w.prototype.writeInt8=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,1,127,-128),e<0&&(e=255+e+1),this[r]=e&255,r+1};w.prototype.writeInt16LE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,2,32767,-32768),this[r]=e&255,this[r+1]=e>>>8,r+2};w.prototype.writeInt16BE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,2,32767,-32768),this[r]=e>>>8,this[r+1]=e&255,r+2};w.prototype.writeInt32LE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,4,2147483647,-2147483648),this[r]=e&255,this[r+1]=e>>>8,this[r+2]=e>>>16,this[r+3]=e>>>24,r+4};w.prototype.writeInt32BE=function(e,r,i){return e=+e,r=r>>>0,i||$e(this,e,r,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[r]=e>>>24,this[r+1]=e>>>16,this[r+2]=e>>>8,this[r+3]=e&255,r+4};w.prototype.writeBigInt64LE=ar(function(e,r=0){return vf(this,e,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});w.prototype.writeBigInt64BE=ar(function(e,r=0){return mf(this,e,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function xf(t,e,r,i,n,s){if(r+i>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function Ef(t,e,r,i,n){return e=+e,r=r>>>0,n||xf(t,e,r,4,34028234663852886e22,-34028234663852886e22),oi.write(t,e,r,i,23,4),r+4}w.prototype.writeFloatLE=function(e,r,i){return Ef(this,e,r,!0,i)};w.prototype.writeFloatBE=function(e,r,i){return Ef(this,e,r,!1,i)};function wf(t,e,r,i,n){return e=+e,r=r>>>0,n||xf(t,e,r,8,17976931348623157e292,-17976931348623157e292),oi.write(t,e,r,i,52,8),r+8}w.prototype.writeDoubleLE=function(e,r,i){return wf(this,e,r,!0,i)};w.prototype.writeDoubleBE=function(e,r,i){return wf(this,e,r,!1,i)};w.prototype.copy=function(e,r,i,n){if(!w.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),!n&&n!==0&&(n=this.length),r>=e.length&&(r=e.length),r||(r=0),n>0&&n<i&&(n=i),n===i||e.length===0||this.length===0)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-r<n-i&&(n=e.length-r+i);let s=n-i;return this===e&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(r,i,n):Uint8Array.prototype.set.call(e,this.subarray(i,n),r),s};w.prototype.fill=function(e,r,i,n){if(typeof e=="string"){if(typeof r=="string"?(n=r,r=0,i=this.length):typeof i=="string"&&(n=i,i=this.length),n!==void 0&&typeof n!="string")throw new TypeError("encoding must be a string");if(typeof n=="string"&&!w.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(e.length===1){let o=e.charCodeAt(0);(n==="utf8"&&o<128||n==="latin1")&&(e=o)}}else typeof e=="number"?e=e&255:typeof e=="boolean"&&(e=Number(e));if(r<0||this.length<r||this.length<i)throw new RangeError("Out of range index");if(i<=r)return this;r=r>>>0,i=i===void 0?this.length:i>>>0,e||(e=0);let s;if(typeof e=="number")for(s=r;s<i;++s)this[s]=e;else{let o=w.isBuffer(e)?e:w.from(e,n),a=o.length;if(a===0)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<i-r;++s)this[s+r]=o[s%a]}return this};var ai={};function No(t,e,r){ai[t]=class extends r{constructor(){super();Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(n){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:n,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}No("ERR_BUFFER_OUT_OF_BOUNDS",function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError);No("ERR_INVALID_ARG_TYPE",function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`},TypeError);No("ERR_OUT_OF_RANGE",function(t,e,r){let i=`The value of "${t}" is out of range.`,n=r;return Number.isInteger(r)&&Math.abs(r)>2**32?n=_f(String(r)):typeof r=="bigint"&&(n=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(n=_f(n)),n+="n"),i+=` It must be ${e}. Received ${n}`,i},RangeError);function _f(t){let e="",r=t.length,i=t[0]==="-"?1:0;for(;r>=i+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function Bg(t,e,r){ci(e,"offset"),(t[e]===void 0||t[e+r]===void 0)&&Hi(e,t.length-(r+1))}function Sf(t,e,r,i,n,s){if(t>r||t<e){let o=typeof e=="bigint"?"n":"",a;throw s>3?e===0||e===BigInt(0)?a=`>= 0${o} and < 2${o} ** ${(s+1)*8}${o}`:a=`>= -(2${o} ** ${(s+1)*8-1}${o}) and < 2 ** ${(s+1)*8-1}${o}`:a=`>= ${e}${o} and <= ${r}${o}`,new ai.ERR_OUT_OF_RANGE("value",a,t)}Bg(i,n,s)}function ci(t,e){if(typeof t!="number")throw new ai.ERR_INVALID_ARG_TYPE(e,"number",t)}function Hi(t,e,r){throw Math.floor(t)!==t?(ci(t,r),new ai.ERR_OUT_OF_RANGE(r||"offset","an integer",t)):e<0?new ai.ERR_BUFFER_OUT_OF_BOUNDS:new ai.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${e}`,t)}var Tg=/[^+/0-9A-Za-z-_]/g;function Dg(t){if(t=t.split("=")[0],t=t.trim().replace(Tg,""),t.length<2)return"";for(;t.length%4!=0;)t=t+"=";return t}function ko(t,e){e=e||1/0;let r,i=t.length,n=null,s=[];for(let o=0;o<i;++o){if(r=t.charCodeAt(o),r>55295&&r<57344){if(!n){if(r>56319){(e-=3)>-1&&s.push(239,191,189);continue}else if(o+1===i){(e-=3)>-1&&s.push(239,191,189);continue}n=r;continue}if(r<56320){(e-=3)>-1&&s.push(239,191,189),n=r;continue}r=(n-55296<<10|r-56320)+65536}else n&&(e-=3)>-1&&s.push(239,191,189);if(n=null,r<128){if((e-=1)<0)break;s.push(r)}else if(r<2048){if((e-=2)<0)break;s.push(r>>6|192,r&63|128)}else if(r<65536){if((e-=3)<0)break;s.push(r>>12|224,r>>6&63|128,r&63|128)}else if(r<1114112){if((e-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,r&63|128)}else throw new Error("Invalid code point")}return s}function Pg(t){let e=[];for(let r=0;r<t.length;++r)e.push(t.charCodeAt(r)&255);return e}function Og(t,e){let r,i,n,s=[];for(let o=0;o<t.length&&!((e-=2)<0);++o)r=t.charCodeAt(o),i=r>>8,n=r%256,s.push(n),s.push(i);return s}function If(t){return Bo.toByteArray(Dg(t))}function zn(t,e,r,i){let n;for(n=0;n<i&&!(n+r>=e.length||n>=t.length);++n)e[n+r]=t[n];return n}function It(t,e){return t instanceof e||t!=null&&t.constructor!=null&&t.constructor.name!=null&&t.constructor.name===e.name}function Lo(t){return t!==t}var Ng=function(){let t="0123456789abcdef",e=new Array(256);for(let r=0;r<16;++r){let i=r*16;for(let n=0;n<16;++n)e[i+n]=t[r]+t[n]}return e}();function ar(t){return typeof BigInt=="undefined"?kg:t}function kg(){throw new Error("BigInt not supported")}});var Mo=x((Uw,Cf)=>{"use strict";var{Buffer:yt}=Pr(),Af=Symbol.for("BufferList");function ue(t){if(!(this instanceof ue))return new ue(t);ue._init.call(this,t)}ue._init=function(e){Object.defineProperty(this,Af,{value:!0}),this._bufs=[],this.length=0,e&&this.append(e)};ue.prototype._new=function(e){return new ue(e)};ue.prototype._offset=function(e){if(e===0)return[0,0];let r=0;for(let i=0;i<this._bufs.length;i++){let n=r+this._bufs[i].length;if(e<n||i===this._bufs.length-1)return[i,e-r];r=n}};ue.prototype._reverseOffset=function(t){let e=t[0],r=t[1];for(let i=0;i<e;i++)r+=this._bufs[i].length;return r};ue.prototype.get=function(e){if(e>this.length||e<0)return;let r=this._offset(e);return this._bufs[r[0]][r[1]]};ue.prototype.slice=function(e,r){return typeof e=="number"&&e<0&&(e+=this.length),typeof r=="number"&&r<0&&(r+=this.length),this.copy(null,0,e,r)};ue.prototype.copy=function(e,r,i,n){if((typeof i!="number"||i<0)&&(i=0),(typeof n!="number"||n>this.length)&&(n=this.length),i>=this.length||n<=0)return e||yt.alloc(0);let s=!!e,o=this._offset(i),a=n-i,f=a,u=s&&r||0,c=o[1];if(i===0&&n===this.length){if(!s)return this._bufs.length===1?this._bufs[0]:yt.concat(this._bufs,this.length);for(let h=0;h<this._bufs.length;h++)this._bufs[h].copy(e,u),u+=this._bufs[h].length;return e}if(f<=this._bufs[o[0]].length-c)return s?this._bufs[o[0]].copy(e,r,c,c+f):this._bufs[o[0]].slice(c,c+f);s||(e=yt.allocUnsafe(a));for(let h=o[0];h<this._bufs.length;h++){let l=this._bufs[h].length-c;if(f>l)this._bufs[h].copy(e,u,c),u+=l;else{this._bufs[h].copy(e,u,c,c+f),u+=l;break}f-=l,c&&(c=0)}return e.length>u?e.slice(0,u):e};ue.prototype.shallowSlice=function(e,r){if(e=e||0,r=typeof r!="number"?this.length:r,e<0&&(e+=this.length),r<0&&(r+=this.length),e===r)return this._new();let i=this._offset(e),n=this._offset(r),s=this._bufs.slice(i[0],n[0]+1);return n[1]===0?s.pop():s[s.length-1]=s[s.length-1].slice(0,n[1]),i[1]!==0&&(s[0]=s[0].slice(i[1])),this._new(s)};ue.prototype.toString=function(e,r,i){return this.slice(r,i).toString(e)};ue.prototype.consume=function(e){if(e=Math.trunc(e),Number.isNaN(e)||e<=0)return this;for(;this._bufs.length;)if(e>=this._bufs[0].length)e-=this._bufs[0].length,this.length-=this._bufs[0].length,this._bufs.shift();else{this._bufs[0]=this._bufs[0].slice(e),this.length-=e;break}return this};ue.prototype.duplicate=function(){let e=this._new();for(let r=0;r<this._bufs.length;r++)e.append(this._bufs[r]);return e};ue.prototype.append=function(e){if(e==null)return this;if(e.buffer)this._appendBuffer(yt.from(e.buffer,e.byteOffset,e.byteLength));else if(Array.isArray(e))for(let r=0;r<e.length;r++)this.append(e[r]);else if(this._isBufferList(e))for(let r=0;r<e._bufs.length;r++)this.append(e._bufs[r]);else typeof e=="number"&&(e=e.toString()),this._appendBuffer(yt.from(e));return this};ue.prototype._appendBuffer=function(e){this._bufs.push(e),this.length+=e.length};ue.prototype.indexOf=function(t,e,r){if(r===void 0&&typeof e=="string"&&(r=e,e=void 0),typeof t=="function"||Array.isArray(t))throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');if(typeof t=="number"?t=yt.from([t]):typeof t=="string"?t=yt.from(t,r):this._isBufferList(t)?t=t.slice():Array.isArray(t.buffer)?t=yt.from(t.buffer,t.byteOffset,t.byteLength):yt.isBuffer(t)||(t=yt.from(t)),e=Number(e||0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let i=this._offset(e),n=i[0],s=i[1];for(;n<this._bufs.length;n++){let o=this._bufs[n];for(;s<o.length;)if(o.length-s>=t.length){let f=o.indexOf(t,s);if(f!==-1)return this._reverseOffset([n,f]);s=o.length-t.length+1}else{let f=this._reverseOffset([n,s]);if(this._match(f,t))return f;s++}s=0}return-1};ue.prototype._match=function(t,e){if(this.length-t<e.length)return!1;for(let r=0;r<e.length;r++)if(this.get(t+r)!==e[r])return!1;return!0};(function(){let t={readDoubleBE:8,readDoubleLE:8,readFloatBE:4,readFloatLE:4,readInt32BE:4,readInt32LE:4,readUInt32BE:4,readUInt32LE:4,readInt16BE:2,readInt16LE:2,readUInt16BE:2,readUInt16LE:2,readInt8:1,readUInt8:1,readIntBE:null,readIntLE:null,readUIntBE:null,readUIntLE:null};for(let e in t)(function(r){t[r]===null?ue.prototype[r]=function(i,n){return this.slice(i,i+n)[r](0,n)}:ue.prototype[r]=function(i=0){return this.slice(i,i+t[r])[r](0)}})(e)})();ue.prototype._isBufferList=function(e){return e instanceof ue||ue.isBufferList(e)};ue.isBufferList=function(e){return e!=null&&e[Af]};Cf.exports=ue});var Tf=x((Kw,Bf)=>{Bf.exports=Fo;var Rf=128,Lg=127,Mg=~Lg,Fg=Math.pow(2,31);function Fo(t,e,r){if(Number.MAX_SAFE_INTEGER&&t>Number.MAX_SAFE_INTEGER)throw Fo.bytes=0,new RangeError("Could not encode varint");e=e||[],r=r||0;for(var i=r;t>=Fg;)e[r++]=t&255|Rf,t/=128;for(;t&Mg;)e[r++]=t&255|Rf,t>>>=7;return e[r]=t|0,Fo.bytes=r-i+1,e}});var Of=x((qw,Pf)=>{Pf.exports=Uo;var Ug=128,Df=127;function Uo(t,e){var r=0,e=e||0,i=0,n=e,s,o=t.length;do{if(n>=o||i>49)throw Uo.bytes=0,new RangeError("Could not decode varint");s=t[n++],r+=i<28?(s&Df)<<i:(s&Df)*Math.pow(2,i),i+=7}while(s>=Ug);return Uo.bytes=n-e,r}});var kf=x((Gw,Nf)=>{var Kg=Math.pow(2,7),qg=Math.pow(2,14),Gg=Math.pow(2,21),Vg=Math.pow(2,28),Hg=Math.pow(2,35),zg=Math.pow(2,42),jg=Math.pow(2,49),Wg=Math.pow(2,56),Yg=Math.pow(2,63);Nf.exports=function(t){return t<Kg?1:t<qg?2:t<Gg?3:t<Vg?4:t<Hg?5:t<zg?6:t<jg?7:t<Wg?8:t<Yg?9:10}});var jn=x((Vw,Lf)=>{Lf.exports={encode:Tf(),decode:Of(),encodingLength:kf()}});var Ko=x((Hw,Uf)=>{"use strict";var Mf=jn(),{Buffer:$g}=Pr(),Ff=(t,e,r)=>{let i=Mf.encode(t,e,r);return Ff.bytes=Mf.encode.bytes,e||$g.from(i)};Uf.exports=Ff});var zf=x((zw,Wn)=>{"use strict";var{Buffer:Kf}=Pr(),qf=Mo(),Gf=Ko(),qo=8,Vf=10*1024;function Hf(t){t=t||{};let e=Math.max(t.poolSize||Vf,t.minPoolSize||qo),r=t.lengthEncoder||Gf;return async function*(n){let s=Kf.alloc(e),o=0;for await(let a of n){r(a.length,s,o);let f=s.slice(o,o+r.bytes);o+=r.bytes,s.length-o<qo&&(s=Kf.alloc(e),o=0),yield new qf().append(f).append(a)}}}Hf.single=(t,e)=>{e=e||{};let r=e.lengthEncoder||Gf;return new qf([r(t.length),t.slice()])};Wn.exports=Hf;Wn.exports.MIN_POOL_SIZE=qo;Wn.exports.DEFAULT_POOL_SIZE=Vf});var Go=x((jw,Yf)=>{"use strict";var jf=jn(),{Buffer:Zg}=Pr(),Qg=t=>new Proxy({},{get:(e,r)=>r[0]==="l"?t[r]:t.get(parseInt(r))}),Wf=t=>{let e=jf.decode(Zg.isBuffer(t)?t:Qg(t));return Wf.bytes=jf.decode.bytes,e};Yf.exports=Wf});var Xf=x((Ww,Yn)=>{"use strict";var{Buffer:Xg}=Pr(),Vo=Mo(),Jg=Go(),$f=8,Zf=1024*1024*4,Qf=Xg.alloc(0),cr={LENGTH:"readLength",DATA:"readData"},e1={[cr.LENGTH]:(t,e,r,i)=>{e=e.append(t);let n;try{n=i.lengthDecoder(e)}catch(s){if(e.length>i.maxLengthLength)throw Object.assign(s,{message:"message length too long",code:"ERR_MSG_LENGTH_TOO_LONG"});if(s instanceof RangeError)return{mode:cr.LENGTH,buffer:e,chunk:void 0,state:void 0,data:void 0};throw s}if(n>i.maxDataLength)throw Object.assign(new Error("message data too long"),{code:"ERR_MSG_DATA_TOO_LONG"});return t=e.shallowSlice(i.lengthDecoder.bytes),e=new Vo,i.onLength&&i.onLength(n),n<=0?(i.onData&&i.onData(Qf),{mode:cr.LENGTH,chunk:t,buffer:e,data:Qf}):{mode:cr.DATA,chunk:t,buffer:e,state:{dataLength:n},data:void 0}},[cr.DATA]:(t,e,r,i)=>{if(e=e.append(t),!r)throw new Error("state is required");if(e.length<r.dataLength)return{mode:cr.DATA,buffer:e,state:r,chunk:void 0,data:void 0};let{dataLength:n}=r,s=e.shallowSlice(0,n),o=e.length>n?e.shallowSlice(n):void 0;return e=new Vo,i.onData&&i.onData(s),{mode:cr.LENGTH,chunk:o,buffer:e,state:void 0,data:s}}};function Ho(t){t=t||{};let e={lengthDecoder:t.lengthDecoder||Jg,maxLengthLength:t.maxLengthLength||$f,maxDataLength:t.maxDataLength||Zf,onLength:t.onLength,onData:t.onData};return async function*(i){let n=new Vo,s=cr.LENGTH,o;for await(let a of i){let f=a;for(;f;){let u=e1[s](f,n,o,e);s=u.mode,f=u.chunk,n=u.buffer,o=u.state,u.data&&(yield u.data)}}if(n.length)throw Object.assign(new Error("unexpected end of input"),{code:"ERR_UNEXPECTED_EOF"})}}Ho.fromReader=(t,e)=>{let r=1,i={[Symbol.asyncIterator](){return this},next:async()=>{try{return await t.next(r)}catch(s){if(s.code==="ERR_UNDER_READ")return{done:!0,value:null};throw s}finally{r=1}}};return Ho({...e||{},onLength:s=>{r=s}})(i)};Yn.exports=Ho;Yn.exports.MAX_LENGTH_LENGTH=$f;Yn.exports.MAX_DATA_LENGTH=Zf});var t0=x((Yw,e0)=>{"use strict";var{Buffer:t1}=Pr(),Jf=(t,e,r)=>(e=e||t1.allocUnsafe(4),e.writeInt32BE(t,r),e);Jf.bytes=4;e0.exports=Jf});var n0=x(($w,i0)=>{"use strict";var r0=t=>{if(t.length<4)throw RangeError("Could not decode int32BE");return t.readInt32BE(0)};r0.bytes=4;i0.exports=r0});var s0=x(Or=>{"use strict";Or.encode=zf();Or.decode=Xf();Or.varintEncode=Ko();Or.varintDecode=Go();Or.int32BEEncode=t0();Or.int32BEDecode=n0()});var a0=x((Xw,o0)=>{o0.exports=class{constructor(e){if(!(e>0)||(e-1&e)!=0)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}peek(){return this.buffer[this.btm]}isEmpty(){return this.buffer[this.btm]===void 0}}});var f0=x((e_,u0)=>{var c0=a0();u0.exports=class{constructor(e){this.hwm=e||16,this.head=new c0(this.hwm),this.tail=this.head}push(e){if(!this.head.push(e)){let r=this.head;this.head=r.next=new c0(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next){let r=this.tail.next;return this.tail.next=null,this.tail=r,this.tail.shift()}return e}peek(){return this.tail.peek()}isEmpty(){return this.head.isEmpty()}}});var l0=x((t_,h0)=>{var zo=f0();h0.exports=t=>{t=t||{};let e;typeof t=="function"?(e=t,t={}):e=t.onEnd;let r=new zo,i,n,s,o=()=>{if(!r.isEmpty()){if(t.writev){let y,v=[];for(;!r.isEmpty();){if(y=r.shift(),y.error)throw y.error;v.push(y.value)}return{done:y.done,value:v}}let p=r.shift();if(p.error)throw p.error;return p}return s?{done:!0}:new Promise((p,y)=>{n=v=>(n=null,v.error?y(v.error):t.writev&&!v.done?p({done:v.done,value:[v.value]}):p(v),i)})},a=p=>n?n(p):(r.push(p),i),f=p=>(r=new zo,n?n({error:p}):(r.push({error:p}),i)),u=p=>s?i:a({done:!1,value:p}),c=p=>s?i:(s=!0,p?f(p):a({done:!0})),h=()=>(r=new zo,c(),{done:!0}),l=p=>(c(p),{done:!0});if(i={[Symbol.asyncIterator](){return this},next:o,return:h,throw:l,push:u,end:c},!e)return i;let d=i;return i={[Symbol.asyncIterator](){return this},next(){return d.next()},throw(p){return d.throw(p),e&&(e(p),e=null),{done:!0}},return(){return d.return(),e&&(e(),e=null),{done:!0}},push:u,end(p){return d.end(p),e&&(e(p),e=null),i}},i}});var d0=x((r_,p0)=>{p0.exports=function(e){if(e){if(typeof e[Symbol.iterator]=="function")return e[Symbol.iterator]();if(typeof e[Symbol.asyncIterator]=="function")return e[Symbol.asyncIterator]();if(typeof e.next=="function")return e}throw new Error("argument is not an iterator or iterable")}});var g0=x((n_,y0)=>{y0.exports=class extends Error{constructor(e,r){super(e||"The operation was aborted");this.type="aborted",this.code=r||"ABORT_ERR"}}});var x0=x((s_,Nr)=>{var r1=d0(),jo=g0(),b0=(t,e,r)=>Wo(t,Array.isArray(e)?e:[{signal:e,options:r}]),Wo=(t,e)=>{t=r1(t),e=e.map(({signal:i,options:n})=>({signal:i,options:n||{}}));async function*r(){let i,n=()=>{i&&i()};for(let{signal:s}of e)s.addEventListener("abort",n);for(;;){let s;try{for(let{signal:a,options:f}of e)if(a.aborted){let{abortMessage:u,abortCode:c}=f;throw new jo(u,c)}let o=new Promise((a,f)=>{i=()=>{let{options:u}=e.find(({signal:l})=>l.aborted),{abortMessage:c,abortCode:h}=u;f(new jo(c,h))}});s=await Promise.race([o,t.next()]),i=null}catch(o){for(let{signal:u}of e)u.removeEventListener("abort",n);let a=e.find(({signal:u})=>u.aborted),f=o.type==="aborted"&&a;if(f&&a.options.onAbort&&await a.options.onAbort(t),typeof t.return=="function")try{let u=t.return();u instanceof Promise&&u.catch(c=>{a.options.onReturnError!=null&&a.options.onReturnError(c)})}catch(u){a.options.onReturnError!=null&&a.options.onReturnError(u)}if(f&&a.options.returnOnAbort)return;throw o}if(s.done)break;yield s.value}for(let{signal:s}of e)s.removeEventListener("abort",n)}return r()},v0=(t,e,r)=>m0(t,Array.isArray(e)?e:[{signal:e,options:r}]),m0=(t,e)=>r=>t(Wo(r,e)),i1=(t,e,r)=>n1(t,Array.isArray(e)?e:[{signal:e,options:r}]),n1=(t,e)=>({sink:m0(t.sink,e),source:Wo(t.source,e)});Nr.exports=b0;Nr.exports.AbortError=jo;Nr.exports.source=b0;Nr.exports.sink=v0;Nr.exports.transform=v0;Nr.exports.duplex=i1});var A0=x((o_,I0)=>{"use strict";var E0=Ui(),s1=Object.assign(E0("libp2p-pubsub:peer-streams"),{error:E0("libp2p-pubsub:peer-streams:err")}),{EventEmitter:o1}=io(),w0=s0(),a1=l0(),{pipe:_0}=so(),{source:c1}=x0(),S0=class extends o1{constructor({id:e,protocol:r}){super();this.id=e,this.protocol=r,this._rawOutboundStream=null,this._rawInboundStream=null,this._inboundAbortController=new AbortController,this.outboundStream=null,this.inboundStream=null}get isReadable(){return Boolean(this.inboundStream)}get isWritable(){return Boolean(this.outboundStream)}write(e){if(!this.outboundStream){let r=this.id.toB58String();throw new Error("No writable connection to "+r)}this.outboundStream.push(e)}attachInboundStream(e){return this._rawInboundStream=e,this.inboundStream=c1(_0(this._rawInboundStream,w0.decode()),this._inboundAbortController.signal,{returnOnAbort:!0}),this.emit("stream:inbound"),this.inboundStream}async attachOutboundStream(e){let r=this.outboundStream;this.outboundStream&&await this.outboundStream.end(),this._rawOutboundStream=e,this.outboundStream=a1({onEnd:i=>{this._rawOutboundStream&&this._rawOutboundStream.reset&&this._rawOutboundStream.reset(),this._rawOutboundStream=null,this.outboundStream=null,i&&this.emit("close")}}),_0(this.outboundStream,w0.encode(),this._rawOutboundStream).catch(i=>{s1.error(i)}),r||this.emit("stream:outbound")}close(){this.outboundStream&&this.outboundStream.end(),this.inboundStream&&this._inboundAbortController.abort(),this._rawOutboundStream=null,this.outboundStream=null,this._rawInboundStream=null,this.inboundStream=null,this.emit("close")}};I0.exports=S0});var R0=x(C0=>{"use strict";var u1={StrictSign:"StrictSign",StrictNoSign:"StrictNoSign"};C0.SignaturePolicy=u1});var T0=x((c_,B0)=>{"use strict";var $n=65536;function f1(t){let e=new Uint8Array(t),r=0;if(t>0)if(t>$n)for(;r<t;)r+$n>t?(crypto.getRandomValues(e.subarray(r,r+(t-r))),r+=t-r):(crypto.getRandomValues(e.subarray(r,r+$n)),r+=$n);else crypto.getRandomValues(e);return e}B0.exports=f1});var Zn=x((u_,D0)=>{"use strict";var h1=T0(),l1=We();D0.exports=function(t){if(isNaN(t)||t<=0)throw l1(new Error("random bytes length must be a Number bigger than 0"),"ERR_INVALID_LENGTH");return h1(t)}});function p1(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),i=0;i<r.length;i++)r[i]=255;for(var n=0;n<t.length;n++){var s=t.charAt(n),o=s.charCodeAt(0);if(r[o]!==255)throw new TypeError(s+" is ambiguous");r[o]=n}var a=t.length,f=t.charAt(0),u=Math.log(a)/Math.log(256),c=Math.log(256)/Math.log(a);function h(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var y=0,v=0,b=0,E=p.length;b!==E&&p[b]===0;)b++,y++;for(var I=(E-b)*c+1>>>0,D=new Uint8Array(I);b!==E;){for(var T=p[b],R=0,F=I-1;(T!==0||R<v)&&F!==-1;F--,R++)T+=256*D[F]>>>0,D[F]=T%a>>>0,T=T/a>>>0;if(T!==0)throw new Error("Non-zero carry");v=R,b++}for(var z=I-v;z!==I&&D[z]===0;)z++;for(var me=f.repeat(y);z<I;++z)me+=t.charAt(D[z]);return me}function l(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var y=0;if(p[y]!==" "){for(var v=0,b=0;p[y]===f;)v++,y++;for(var E=(p.length-y)*u+1>>>0,I=new Uint8Array(E);p[y];){var D=r[p.charCodeAt(y)];if(D===255)return;for(var T=0,R=E-1;(D!==0||T<b)&&R!==-1;R--,T++)D+=a*I[R]>>>0,I[R]=D%256>>>0,D=D/256>>>0;if(D!==0)throw new Error("Non-zero carry");b=T,y++}if(p[y]!==" "){for(var F=E-b;F!==E&&I[F]===0;)F++;for(var z=new Uint8Array(v+(E-F)),me=v;F!==E;)z[me++]=I[F++];return z}}}function d(p){var y=l(p);if(y)return y;throw new Error(`Non-${e} character`)}return{encode:h,decodeUnsafe:l,decode:d}}var d1,y1,P0,O0=re(()=>{d1=p1,y1=d1,P0=y1});var h_,N0,jt,k0,L0,ur=re(()=>{h_=new Uint8Array(0),N0=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},jt=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},k0=t=>new TextEncoder().encode(t),L0=t=>new TextDecoder().decode(t)});var F0,U0,K0,q0,G0,Qn,fr,g1,b1,xe,At=re(()=>{O0();ur();F0=class{constructor(e,r,i){this.name=e,this.prefix=r,this.baseEncode=i}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},U0=class{constructor(e,r,i){this.name=e,this.prefix=r,this.baseDecode=i}decode(e){if(typeof e=="string")switch(e[0]){case this.prefix:return this.baseDecode(e.slice(1));default:throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)}else throw Error("Can only multibase decode strings")}or(e){return q0(this,e)}},K0=class{constructor(e){this.decoders=e}or(e){return q0(this,e)}decode(e){let r=e[0],i=this.decoders[r];if(i)return i.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},q0=(t,e)=>new K0({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}}),G0=class{constructor(e,r,i,n){this.name=e,this.prefix=r,this.baseEncode=i,this.baseDecode=n,this.encoder=new F0(e,r,i),this.decoder=new U0(e,r,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},Qn=({name:t,prefix:e,encode:r,decode:i})=>new G0(t,e,r,i),fr=({prefix:t,name:e,alphabet:r})=>{let{encode:i,decode:n}=P0(r,e);return Qn({prefix:t,name:e,encode:i,decode:s=>jt(n(s))})},g1=(t,e,r,i)=>{let n={};for(let c=0;c<e.length;++c)n[e[c]]=c;let s=t.length;for(;t[s-1]==="=";)--s;let o=new Uint8Array(s*r/8|0),a=0,f=0,u=0;for(let c=0;c<s;++c){let h=n[t[c]];if(h===void 0)throw new SyntaxError(`Non-${i} character`);f=f<<r|h,a+=r,a>=8&&(a-=8,o[u++]=255&f>>a)}if(a>=r||255&f<<8-a)throw new SyntaxError("Unexpected end of data");return o},b1=(t,e,r)=>{let i=e[e.length-1]==="=",n=(1<<r)-1,s="",o=0,a=0;for(let f=0;f<t.length;++f)for(a=a<<8|t[f],o+=8;o>r;)o-=r,s+=e[n&a>>o];if(o&&(s+=e[n&a<<r-o]),i)for(;s.length*r&7;)s+="=";return s},xe=({name:t,prefix:e,bitsPerChar:r,alphabet:i})=>Qn({prefix:e,name:t,encode(n){return b1(n,i,r)},decode(n){return g1(n,i,r,t)}})});var Yo={};Ne(Yo,{identity:()=>v1});var v1,V0=re(()=>{At();ur();v1=Qn({prefix:"\0",name:"identity",encode:t=>L0(t),decode:t=>k0(t)})});var $o={};Ne($o,{base2:()=>m1});var m1,H0=re(()=>{At();m1=xe({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1})});var Zo={};Ne(Zo,{base8:()=>x1});var x1,z0=re(()=>{At();x1=xe({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3})});var Qo={};Ne(Qo,{base10:()=>E1});var E1,j0=re(()=>{At();E1=fr({prefix:"9",name:"base10",alphabet:"0123456789"})});var Xn={};Ne(Xn,{base16:()=>w1,base16upper:()=>_1});var w1,_1,Xo=re(()=>{At();w1=xe({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),_1=xe({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4})});var zi={};Ne(zi,{base32:()=>fi,base32hex:()=>C1,base32hexpad:()=>B1,base32hexpadupper:()=>T1,base32hexupper:()=>R1,base32pad:()=>I1,base32padupper:()=>A1,base32upper:()=>S1,base32z:()=>D1});var fi,S1,I1,A1,C1,R1,B1,T1,D1,ji=re(()=>{At();fi=xe({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),S1=xe({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),I1=xe({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),A1=xe({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),C1=xe({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),R1=xe({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),B1=xe({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),T1=xe({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),D1=xe({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5})});var Jn={};Ne(Jn,{base36:()=>P1,base36upper:()=>O1});var P1,O1,Jo=re(()=>{At();P1=fr({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),O1=fr({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"})});var hi={};Ne(hi,{base58btc:()=>Ct,base58flickr:()=>N1});var Ct,N1,li=re(()=>{At();Ct=fr({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),N1=fr({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"})});var pi={};Ne(pi,{base64:()=>k1,base64pad:()=>L1,base64url:()=>M1,base64urlpad:()=>F1});var k1,L1,M1,F1,Wi=re(()=>{At();k1=xe({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),L1=xe({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),M1=xe({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),F1=xe({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6})});function Y0(t,e,r){e=e||[],r=r||0;for(var i=r;t>=G1;)e[r++]=t&255|W0,t/=128;for(;t&q1;)e[r++]=t&255|W0,t>>>=7;return e[r]=t|0,Y0.bytes=r-i+1,e}function ea(t,e){var r=0,e=e||0,i=0,n=e,s,o=t.length;do{if(n>=o)throw ea.bytes=0,new RangeError("Could not decode varint");s=t[n++],r+=i<28?(s&$0)<<i:(s&$0)*Math.pow(2,i),i+=7}while(s>=H1);return ea.bytes=n-e,r}var U1,W0,K1,q1,G1,V1,H1,$0,z1,j1,W1,Y1,$1,Z1,Q1,X1,J1,eb,tb,rb,Yi,Z0=re(()=>{U1=Y0,W0=128,K1=127,q1=~K1,G1=Math.pow(2,31);V1=ea,H1=128,$0=127;z1=Math.pow(2,7),j1=Math.pow(2,14),W1=Math.pow(2,21),Y1=Math.pow(2,28),$1=Math.pow(2,35),Z1=Math.pow(2,42),Q1=Math.pow(2,49),X1=Math.pow(2,56),J1=Math.pow(2,63),eb=function(t){return t<z1?1:t<j1?2:t<W1?3:t<Y1?4:t<$1?5:t<Z1?6:t<Q1?7:t<X1?8:t<J1?9:10},tb={encode:U1,decode:V1,encodingLength:eb},rb=tb,Yi=rb});var $i,di,yi,es=re(()=>{Z0();$i=t=>[Yi.decode(t),Yi.decode.bytes],di=(t,e,r=0)=>(Yi.encode(t,e,r),e),yi=t=>Yi.encodingLength(t)});var ts={};Ne(ts,{Digest:()=>gi,create:()=>hr,decode:()=>ta,equals:()=>ra});var hr,ta,ra,gi,bi=re(()=>{ur();es();hr=(t,e)=>{let r=e.byteLength,i=yi(t),n=i+yi(r),s=new Uint8Array(n+r);return di(t,s,0),di(r,s,i),s.set(e,n),new gi(t,r,e,s)},ta=t=>{let e=jt(t),[r,i]=$i(e),[n,s]=$i(e.subarray(i)),o=e.subarray(i+s);if(o.byteLength!==n)throw new Error("Incorrect length");return new gi(r,n,o,e)},ra=(t,e)=>t===e?!0:t.code===e.code&&t.size===e.size&&N0(t.bytes,e.bytes),gi=class{constructor(e,r,i,n){this.code=e,this.size=r,this.digest=i,this.bytes=n}}});var ia,X0,na=re(()=>{bi();ia=({name:t,code:e,encode:r})=>new X0(t,e,r),X0=class{constructor(e,r,i){this.name=e,this.code=r,this.encode=i}digest(e){if(e instanceof Uint8Array){let r=this.encode(e);return r instanceof Uint8Array?hr(this.code,r):r.then(i=>hr(this.code,i))}else throw Error("Unknown type, must be binary type")}}});var lr={};Ne(lr,{sha256:()=>ib,sha512:()=>nb});var eh,ib,nb,kr=re(()=>{na();eh=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),ib=ia({name:"sha2-256",code:18,encode:eh("SHA-256")}),nb=ia({name:"sha2-512",code:19,encode:eh("SHA-512")})});var Zi={};Ne(Zi,{identity:()=>ab});var th,sb,rh,ob,ab,rs=re(()=>{ur();bi();th=0,sb="identity",rh=jt,ob=t=>hr(th,rh(t)),ab={code:th,name:sb,encode:rh,digest:ob}});var ih=re(()=>{ur()});var N_,k_,nh=re(()=>{N_=new TextEncoder,k_=new TextDecoder});var ah={};Ne(ah,{CID:()=>Ce});var Ce,fb,hb,lb,Qi,pb,sh,oh,is,ns,db,yb,gb,sa=re(()=>{es();bi();li();ji();ur();Ce=class{constructor(e,r,i,n){this.code=r,this.version=e,this.multihash=i,this.bytes=n,this.byteOffset=n.byteOffset,this.byteLength=n.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:ns,byteLength:ns,code:is,version:is,multihash:is,bytes:is,_baseCache:ns,asCID:ns})}toV0(){switch(this.version){case 0:return this;default:{let{code:e,multihash:r}=this;if(e!==Qi)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==pb)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ce.createV0(r)}}}toV1(){switch(this.version){case 0:{let{code:e,digest:r}=this.multihash,i=hr(e,r);return Ce.createV1(this.code,i)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&ra(this.multihash,e.multihash)}toString(e){let{bytes:r,version:i,_baseCache:n}=this;switch(i){case 0:return hb(r,n,e||Ct.encoder);default:return lb(r,n,e||fi.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return yb(/^0\.0/,gb),!!(e&&(e[oh]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof Ce)return e;if(e!=null&&e.asCID===e){let{version:r,code:i,multihash:n,bytes:s}=e;return new Ce(r,i,n,s||sh(r,i,n.bytes))}else if(e!=null&&e[oh]===!0){let{version:r,multihash:i,code:n}=e,s=ta(i);return Ce.create(r,n,s)}else return null}static create(e,r,i){if(typeof r!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(r!==Qi)throw new Error(`Version 0 CID must use dag-pb (code: ${Qi}) block encoding`);return new Ce(e,r,i,i.bytes)}case 1:{let n=sh(e,r,i.bytes);return new Ce(e,r,i,n)}default:throw new Error("Invalid version")}}static createV0(e){return Ce.create(0,Qi,e)}static createV1(e,r){return Ce.create(1,e,r)}static decode(e){let[r,i]=Ce.decodeFirst(e);if(i.length)throw new Error("Incorrect length");return r}static decodeFirst(e){let r=Ce.inspectBytes(e),i=r.size-r.multihashSize,n=jt(e.subarray(i,i+r.multihashSize));if(n.byteLength!==r.multihashSize)throw new Error("Incorrect length");let s=n.subarray(r.multihashSize-r.digestSize),o=new gi(r.multihashCode,r.digestSize,s,n);return[r.version===0?Ce.createV0(o):Ce.createV1(r.codec,o),e.subarray(r.size)]}static inspectBytes(e){let r=0,i=()=>{let[h,l]=$i(e.subarray(r));return r+=l,h},n=i(),s=Qi;if(n===18?(n=0,r=0):n===1&&(s=i()),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);let o=r,a=i(),f=i(),u=r+f,c=u-o;return{version:n,codec:s,multihashCode:a,digestSize:f,multihashSize:c,size:u}}static parse(e,r){let[i,n]=fb(e,r),s=Ce.decode(n);return s._baseCache.set(i,e),s}},fb=(t,e)=>{switch(t[0]){case"Q":{let r=e||Ct;return[Ct.prefix,r.decode(`${Ct.prefix}${t}`)]}case Ct.prefix:{let r=e||Ct;return[Ct.prefix,r.decode(t)]}case fi.prefix:{let r=e||fi;return[fi.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},hb=(t,e,r)=>{let{prefix:i}=r;if(i!==Ct.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);let n=e.get(i);if(n==null){let s=r.encode(t).slice(1);return e.set(i,s),s}else return n},lb=(t,e,r)=>{let{prefix:i}=r,n=e.get(i);if(n==null){let s=r.encode(t);return e.set(i,s),s}else return n},Qi=112,pb=18,sh=(t,e,r)=>{let i=yi(t),n=i+yi(e),s=new Uint8Array(n+r.byteLength);return di(t,s,0),di(e,s,i),s.set(r,n),s},oh=Symbol.for("@ipld/js-cid/CID"),is={writable:!1,configurable:!1,enumerable:!0},ns={writable:!1,enumerable:!1,configurable:!1},db="0.0.0-dev",yb=(t,e)=>{if(t.test(db))console.warn(e);else throw new Error(e)},gb=`CID.isCID(v) is deprecated and will be removed in the next major release.
 Following code pattern:
 
 if (CID.isCID(value)) {
@@ -13,33 +13,20 @@ if (cid) {
   // Make sure to use cid instead of value
   doSomethingWithCID(cid)
 }
-`});var Nd=Ee(()=>{Mu();to();bi();Lu();$n()});var Ku,a6,Od=Ee(()=>{gd();vd();xd();bd();Ru();ks();Du();an();on();rr();Ls();Td();Rd();Nd();Ku={...Bu,...Au,...Cu,...Tu,...Ja,...Ps,...eo,...sn,...Ei},a6={...qt,...Qn}});function Ld(t,e,r,i){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:i}}}var Md,Fu,jw,so,Uu=Ee(()=>{Od();Md=Ld("utf8","u",t=>{let e=new TextDecoder("utf8");return"u"+e.decode(t)},t=>new TextEncoder().encode(t.substring(1))),Fu=Ld("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);let e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),jw={utf8:Md,"utf-8":Md,hex:Ku.base16,latin1:Fu,ascii:Fu,binary:Fu,...Ku},so=jw});var dt={};lt(dt,{toString:()=>Ww});function Ww(t,e="utf8"){let r=so[e];if(!r)throw new Error(`Unsupported encoding "${e}"`);return r.encoder.encode(t).substring(1)}var yt=Ee(()=>{Uu()});var nt={};lt(nt,{fromString:()=>Yw});function Yw(t,e="utf8"){let r=so[e];if(!r)throw new Error(`Unsupported encoding "${e}"`);return r.decoder.decode(`${r.prefix}${t}`)}var st=Ee(()=>{Uu()});var oo=E((l6,Fd)=>{"use strict";var un=Xi(),ao=un.Reader,Kd=un.Writer,gt=un.util,Vt=un.roots["libp2p-crypto-keys"]||(un.roots["libp2p-crypto-keys"]={});Vt.KeyType=function(){var t={},e=Object.create(t);return e[t[0]="RSA"]=0,e[t[1]="Ed25519"]=1,e[t[2]="Secp256k1"]=2,e}();Vt.PublicKey=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.Type=0,t.prototype.Data=gt.newBuffer([]),t.encode=function(r,i){return i||(i=Kd.create()),i.uint32(8).int32(r.Type),i.uint32(18).bytes(r.Data),i},t.decode=function(r,i){r instanceof ao||(r=ao.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Vt.PublicKey;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.Type=r.int32();break;case 2:s.Data=r.bytes();break;default:r.skipType(a&7);break}}if(!s.hasOwnProperty("Type"))throw gt.ProtocolError("missing required 'Type'",{instance:s});if(!s.hasOwnProperty("Data"))throw gt.ProtocolError("missing required 'Data'",{instance:s});return s},t.fromObject=function(r){if(r instanceof Vt.PublicKey)return r;var i=new Vt.PublicKey;switch(r.Type){case"RSA":case 0:i.Type=0;break;case"Ed25519":case 1:i.Type=1;break;case"Secp256k1":case 2:i.Type=2;break}return r.Data!=null&&(typeof r.Data=="string"?gt.base64.decode(r.Data,i.Data=gt.newBuffer(gt.base64.length(r.Data)),0):r.Data.length&&(i.Data=r.Data)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(n.Type=i.enums===String?"RSA":0,i.bytes===String?n.Data="":(n.Data=[],i.bytes!==Array&&(n.Data=gt.newBuffer(n.Data)))),r.Type!=null&&r.hasOwnProperty("Type")&&(n.Type=i.enums===String?Vt.KeyType[r.Type]:r.Type),r.Data!=null&&r.hasOwnProperty("Data")&&(n.Data=i.bytes===String?gt.base64.encode(r.Data,0,r.Data.length):i.bytes===Array?Array.prototype.slice.call(r.Data):r.Data),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,un.util.toJSONOptions)},t}();Vt.PrivateKey=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.Type=0,t.prototype.Data=gt.newBuffer([]),t.encode=function(r,i){return i||(i=Kd.create()),i.uint32(8).int32(r.Type),i.uint32(18).bytes(r.Data),i},t.decode=function(r,i){r instanceof ao||(r=ao.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Vt.PrivateKey;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.Type=r.int32();break;case 2:s.Data=r.bytes();break;default:r.skipType(a&7);break}}if(!s.hasOwnProperty("Type"))throw gt.ProtocolError("missing required 'Type'",{instance:s});if(!s.hasOwnProperty("Data"))throw gt.ProtocolError("missing required 'Data'",{instance:s});return s},t.fromObject=function(r){if(r instanceof Vt.PrivateKey)return r;var i=new Vt.PrivateKey;switch(r.Type){case"RSA":case 0:i.Type=0;break;case"Ed25519":case 1:i.Type=1;break;case"Secp256k1":case 2:i.Type=2;break}return r.Data!=null&&(typeof r.Data=="string"?gt.base64.decode(r.Data,i.Data=gt.newBuffer(gt.base64.length(r.Data)),0):r.Data.length&&(i.Data=r.Data)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(n.Type=i.enums===String?"RSA":0,i.bytes===String?n.Data="":(n.Data=[],i.bytes!==Array&&(n.Data=gt.newBuffer(n.Data)))),r.Type!=null&&r.hasOwnProperty("Type")&&(n.Type=i.enums===String?Vt.KeyType[r.Type]:r.Type),r.Data!=null&&r.hasOwnProperty("Data")&&(n.Data=i.bytes===String?gt.base64.encode(r.Data,0,r.Data.length):i.bytes===Array?Array.prototype.slice.call(r.Data):r.Data),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,un.util.toJSONOptions)},t}();Fd.exports=Vt});var Se=E((p6,Ud)=>{Ud.exports={options:{usePureJavaScript:!1}}});var Gd=E((d6,Vd)=>{var qu={};Vd.exports=qu;var qd={};qu.encode=function(t,e,r){if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');if(r!==void 0&&typeof r!="number")throw new TypeError('"maxline" must be a number.');var i="";if(!(t instanceof Uint8Array))i=$w(t,e);else{var n=0,s=e.length,a=e.charAt(0),o=[0];for(n=0;n<t.length;++n){for(var f=0,u=t[n];f<o.length;++f)u+=o[f]<<8,o[f]=u%s,u=u/s|0;for(;u>0;)o.push(u%s),u=u/s|0}for(n=0;t[n]===0&&n<t.length-1;++n)i+=a;for(n=o.length-1;n>=0;--n)i+=e[o[n]]}if(r){var c=new RegExp(".{1,"+r+"}","g");i=i.match(c).join(`\r
-`)}return i};qu.decode=function(t,e){if(typeof t!="string")throw new TypeError('"input" must be a string.');if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');var r=qd[e];if(!r){r=qd[e]=[];for(var i=0;i<e.length;++i)r[e.charCodeAt(i)]=i}t=t.replace(/\s/g,"");for(var n=e.length,s=e.charAt(0),a=[0],i=0;i<t.length;i++){var o=r[t.charCodeAt(i)];if(o===void 0)return;for(var f=0,u=o;f<a.length;++f)u+=a[f]*n,a[f]=u&255,u>>=8;for(;u>0;)a.push(u&255),u>>=8}for(var c=0;t[c]===s&&c<t.length-1;++c)a.push(0);return typeof Buffer!="undefined"?Buffer.from(a.reverse()):new Uint8Array(a.reverse())};function $w(t,e){var r=0,i=e.length,n=e.charAt(0),s=[0];for(r=0;r<t.length();++r){for(var a=0,o=t.at(r);a<s.length;++a)o+=s[a]<<8,s[a]=o%i,o=o/i|0;for(;o>0;)s.push(o%i),o=o/i|0}var f="";for(r=0;t.at(r)===0&&r<t.length()-1;++r)f+=n;for(r=s.length-1;r>=0;--r)f+=e[s[r]];return f}});var $e=E((y6,Wd)=>{var Hd=Se(),zd=Gd(),b=Wd.exports=Hd.util=Hd.util||{};(function(){if(typeof process!="undefined"&&process.nextTick&&!process.browser){b.nextTick=process.nextTick,typeof setImmediate=="function"?b.setImmediate=setImmediate:b.setImmediate=b.nextTick;return}if(typeof setImmediate=="function"){b.setImmediate=function(){return setImmediate.apply(void 0,arguments)},b.nextTick=function(o){return setImmediate(o)};return}if(b.setImmediate=function(o){setTimeout(o,0)},typeof window!="undefined"&&typeof window.postMessage=="function"){let o=function(f){if(f.source===window&&f.data===t){f.stopPropagation();var u=e.slice();e.length=0,u.forEach(function(c){c()})}};var a=o,t="forge.setImmediate",e=[];b.setImmediate=function(f){e.push(f),e.length===1&&window.postMessage(t,"*")},window.addEventListener("message",o,!0)}if(typeof MutationObserver!="undefined"){var r=Date.now(),i=!0,n=document.createElement("div"),e=[];new MutationObserver(function(){var f=e.slice();e.length=0,f.forEach(function(u){u()})}).observe(n,{attributes:!0});var s=b.setImmediate;b.setImmediate=function(f){Date.now()-r>15?(r=Date.now(),s(f)):(e.push(f),e.length===1&&n.setAttribute("a",i=!i))}}b.nextTick=b.setImmediate})();b.isNodejs=typeof process!="undefined"&&process.versions&&process.versions.node;b.globalScope=function(){return b.isNodejs?globalThis:typeof self=="undefined"?window:self}();b.isArray=Array.isArray||function(t){return Object.prototype.toString.call(t)==="[object Array]"};b.isArrayBuffer=function(t){return typeof ArrayBuffer!="undefined"&&t instanceof ArrayBuffer};b.isArrayBufferView=function(t){return t&&b.isArrayBuffer(t.buffer)&&t.byteLength!==void 0};function Ks(t){if(!(t===8||t===16||t===24||t===32))throw new Error("Only 8, 16, 24, or 32 bits supported: "+t)}b.ByteBuffer=Vu;function Vu(t){if(this.data="",this.read=0,typeof t=="string")this.data=t;else if(b.isArrayBuffer(t)||b.isArrayBufferView(t))if(typeof Buffer!="undefined"&&t instanceof Buffer)this.data=t.toString("binary");else{var e=new Uint8Array(t);try{this.data=String.fromCharCode.apply(null,e)}catch(i){for(var r=0;r<e.length;++r)this.putByte(e[r])}}else(t instanceof Vu||typeof t=="object"&&typeof t.data=="string"&&typeof t.read=="number")&&(this.data=t.data,this.read=t.read);this._constructedStringLength=0}b.ByteStringBuffer=Vu;var Qw=4096;b.ByteStringBuffer.prototype._optimizeConstructedString=function(t){this._constructedStringLength+=t,this._constructedStringLength>Qw&&(this.data.substr(0,1),this._constructedStringLength=0)};b.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read};b.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0};b.ByteStringBuffer.prototype.putByte=function(t){return this.putBytes(String.fromCharCode(t))};b.ByteStringBuffer.prototype.fillWithByte=function(t,e){t=String.fromCharCode(t);for(var r=this.data;e>0;)e&1&&(r+=t),e>>>=1,e>0&&(t+=t);return this.data=r,this._optimizeConstructedString(e),this};b.ByteStringBuffer.prototype.putBytes=function(t){return this.data+=t,this._optimizeConstructedString(t.length),this};b.ByteStringBuffer.prototype.putString=function(t){return this.putBytes(b.encodeUtf8(t))};b.ByteStringBuffer.prototype.putInt16=function(t){return this.putBytes(String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};b.ByteStringBuffer.prototype.putInt24=function(t){return this.putBytes(String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};b.ByteStringBuffer.prototype.putInt32=function(t){return this.putBytes(String.fromCharCode(t>>24&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};b.ByteStringBuffer.prototype.putInt16Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255))};b.ByteStringBuffer.prototype.putInt24Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t>>16&255))};b.ByteStringBuffer.prototype.putInt32Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>24&255))};b.ByteStringBuffer.prototype.putInt=function(t,e){Ks(e);var r="";do e-=8,r+=String.fromCharCode(t>>e&255);while(e>0);return this.putBytes(r)};b.ByteStringBuffer.prototype.putSignedInt=function(t,e){return t<0&&(t+=2<<e-1),this.putInt(t,e)};b.ByteStringBuffer.prototype.putBuffer=function(t){return this.putBytes(t.getBytes())};b.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)};b.ByteStringBuffer.prototype.getInt16=function(){var t=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);return this.read+=2,t};b.ByteStringBuffer.prototype.getInt24=function(){var t=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);return this.read+=3,t};b.ByteStringBuffer.prototype.getInt32=function(){var t=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+2)<<8^this.data.charCodeAt(this.read+3);return this.read+=4,t};b.ByteStringBuffer.prototype.getInt16Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;return this.read+=2,t};b.ByteStringBuffer.prototype.getInt24Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;return this.read+=3,t};b.ByteStringBuffer.prototype.getInt32Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;return this.read+=4,t};b.ByteStringBuffer.prototype.getInt=function(t){Ks(t);var e=0;do e=(e<<8)+this.data.charCodeAt(this.read++),t-=8;while(t>0);return e};b.ByteStringBuffer.prototype.getSignedInt=function(t){var e=this.getInt(t),r=2<<t-2;return e>=r&&(e-=r<<1),e};b.ByteStringBuffer.prototype.getBytes=function(t){var e;return t?(t=Math.min(this.length(),t),e=this.data.slice(this.read,this.read+t),this.read+=t):t===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};b.ByteStringBuffer.prototype.bytes=function(t){return typeof t=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+t)};b.ByteStringBuffer.prototype.at=function(t){return this.data.charCodeAt(this.read+t)};b.ByteStringBuffer.prototype.setAt=function(t,e){return this.data=this.data.substr(0,this.read+t)+String.fromCharCode(e)+this.data.substr(this.read+t+1),this};b.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)};b.ByteStringBuffer.prototype.copy=function(){var t=b.createBuffer(this.data);return t.read=this.read,t};b.ByteStringBuffer.prototype.compact=function(){return this.read>0&&(this.data=this.data.slice(this.read),this.read=0),this};b.ByteStringBuffer.prototype.clear=function(){return this.data="",this.read=0,this};b.ByteStringBuffer.prototype.truncate=function(t){var e=Math.max(0,this.length()-t);return this.data=this.data.substr(this.read,e),this.read=0,this};b.ByteStringBuffer.prototype.toHex=function(){for(var t="",e=this.read;e<this.data.length;++e){var r=this.data.charCodeAt(e);r<16&&(t+="0"),t+=r.toString(16)}return t};b.ByteStringBuffer.prototype.toString=function(){return b.decodeUtf8(this.bytes())};function Zw(t,e){e=e||{},this.read=e.readOffset||0,this.growSize=e.growSize||1024;var r=b.isArrayBuffer(t),i=b.isArrayBufferView(t);if(r||i){r?this.data=new DataView(t):this.data=new DataView(t.buffer,t.byteOffset,t.byteLength),this.write="writeOffset"in e?e.writeOffset:this.data.byteLength;return}this.data=new DataView(new ArrayBuffer(0)),this.write=0,t!=null&&this.putBytes(t),"writeOffset"in e&&(this.write=e.writeOffset)}b.DataBuffer=Zw;b.DataBuffer.prototype.length=function(){return this.write-this.read};b.DataBuffer.prototype.isEmpty=function(){return this.length()<=0};b.DataBuffer.prototype.accommodate=function(t,e){if(this.length()>=t)return this;e=Math.max(e||this.growSize,t);var r=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength),i=new Uint8Array(this.length()+e);return i.set(r),this.data=new DataView(i.buffer),this};b.DataBuffer.prototype.putByte=function(t){return this.accommodate(1),this.data.setUint8(this.write++,t),this};b.DataBuffer.prototype.fillWithByte=function(t,e){this.accommodate(e);for(var r=0;r<e;++r)this.data.setUint8(t);return this};b.DataBuffer.prototype.putBytes=function(t,e){if(b.isArrayBufferView(t)){var r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),i=r.byteLength-r.byteOffset;this.accommodate(i);var n=new Uint8Array(this.data.buffer,this.write);return n.set(r),this.write+=i,this}if(b.isArrayBuffer(t)){var r=new Uint8Array(t);this.accommodate(r.byteLength);var n=new Uint8Array(this.data.buffer);return n.set(r,this.write),this.write+=r.byteLength,this}if(t instanceof b.DataBuffer||typeof t=="object"&&typeof t.read=="number"&&typeof t.write=="number"&&b.isArrayBufferView(t.data)){var r=new Uint8Array(t.data.byteLength,t.read,t.length());this.accommodate(r.byteLength);var n=new Uint8Array(t.data.byteLength,this.write);return n.set(r),this.write+=r.byteLength,this}if(t instanceof b.ByteStringBuffer&&(t=t.data,e="binary"),e=e||"binary",typeof t=="string"){var s;if(e==="hex")return this.accommodate(Math.ceil(t.length/2)),s=new Uint8Array(this.data.buffer,this.write),this.write+=b.binary.hex.decode(t,s,this.write),this;if(e==="base64")return this.accommodate(Math.ceil(t.length/4)*3),s=new Uint8Array(this.data.buffer,this.write),this.write+=b.binary.base64.decode(t,s,this.write),this;if(e==="utf8"&&(t=b.encodeUtf8(t),e="binary"),e==="binary"||e==="raw")return this.accommodate(t.length),s=new Uint8Array(this.data.buffer,this.write),this.write+=b.binary.raw.decode(s),this;if(e==="utf16")return this.accommodate(t.length*2),s=new Uint16Array(this.data.buffer,this.write),this.write+=b.text.utf16.encode(s),this;throw new Error("Invalid encoding: "+e)}throw Error("Invalid parameter: "+t)};b.DataBuffer.prototype.putBuffer=function(t){return this.putBytes(t),t.clear(),this};b.DataBuffer.prototype.putString=function(t){return this.putBytes(t,"utf16")};b.DataBuffer.prototype.putInt16=function(t){return this.accommodate(2),this.data.setInt16(this.write,t),this.write+=2,this};b.DataBuffer.prototype.putInt24=function(t){return this.accommodate(3),this.data.setInt16(this.write,t>>8&65535),this.data.setInt8(this.write,t>>16&255),this.write+=3,this};b.DataBuffer.prototype.putInt32=function(t){return this.accommodate(4),this.data.setInt32(this.write,t),this.write+=4,this};b.DataBuffer.prototype.putInt16Le=function(t){return this.accommodate(2),this.data.setInt16(this.write,t,!0),this.write+=2,this};b.DataBuffer.prototype.putInt24Le=function(t){return this.accommodate(3),this.data.setInt8(this.write,t>>16&255),this.data.setInt16(this.write,t>>8&65535,!0),this.write+=3,this};b.DataBuffer.prototype.putInt32Le=function(t){return this.accommodate(4),this.data.setInt32(this.write,t,!0),this.write+=4,this};b.DataBuffer.prototype.putInt=function(t,e){Ks(e),this.accommodate(e/8);do e-=8,this.data.setInt8(this.write++,t>>e&255);while(e>0);return this};b.DataBuffer.prototype.putSignedInt=function(t,e){return Ks(e),this.accommodate(e/8),t<0&&(t+=2<<e-1),this.putInt(t,e)};b.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)};b.DataBuffer.prototype.getInt16=function(){var t=this.data.getInt16(this.read);return this.read+=2,t};b.DataBuffer.prototype.getInt24=function(){var t=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);return this.read+=3,t};b.DataBuffer.prototype.getInt32=function(){var t=this.data.getInt32(this.read);return this.read+=4,t};b.DataBuffer.prototype.getInt16Le=function(){var t=this.data.getInt16(this.read,!0);return this.read+=2,t};b.DataBuffer.prototype.getInt24Le=function(){var t=this.data.getInt8(this.read)^this.data.getInt16(this.read+1,!0)<<8;return this.read+=3,t};b.DataBuffer.prototype.getInt32Le=function(){var t=this.data.getInt32(this.read,!0);return this.read+=4,t};b.DataBuffer.prototype.getInt=function(t){Ks(t);var e=0;do e=(e<<8)+this.data.getInt8(this.read++),t-=8;while(t>0);return e};b.DataBuffer.prototype.getSignedInt=function(t){var e=this.getInt(t),r=2<<t-2;return e>=r&&(e-=r<<1),e};b.DataBuffer.prototype.getBytes=function(t){var e;return t?(t=Math.min(this.length(),t),e=this.data.slice(this.read,this.read+t),this.read+=t):t===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};b.DataBuffer.prototype.bytes=function(t){return typeof t=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+t)};b.DataBuffer.prototype.at=function(t){return this.data.getUint8(this.read+t)};b.DataBuffer.prototype.setAt=function(t,e){return this.data.setUint8(t,e),this};b.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)};b.DataBuffer.prototype.copy=function(){return new b.DataBuffer(this)};b.DataBuffer.prototype.compact=function(){if(this.read>0){var t=new Uint8Array(this.data.buffer,this.read),e=new Uint8Array(t.byteLength);e.set(t),this.data=new DataView(e),this.write-=this.read,this.read=0}return this};b.DataBuffer.prototype.clear=function(){return this.data=new DataView(new ArrayBuffer(0)),this.read=this.write=0,this};b.DataBuffer.prototype.truncate=function(t){return this.write=Math.max(0,this.length()-t),this.read=Math.min(this.read,this.write),this};b.DataBuffer.prototype.toHex=function(){for(var t="",e=this.read;e<this.data.byteLength;++e){var r=this.data.getUint8(e);r<16&&(t+="0"),t+=r.toString(16)}return t};b.DataBuffer.prototype.toString=function(t){var e=new Uint8Array(this.data,this.read,this.length());if(t=t||"utf8",t==="binary"||t==="raw")return b.binary.raw.encode(e);if(t==="hex")return b.binary.hex.encode(e);if(t==="base64")return b.binary.base64.encode(e);if(t==="utf8")return b.text.utf8.decode(e);if(t==="utf16")return b.text.utf16.decode(e);throw new Error("Invalid encoding: "+t)};b.createBuffer=function(t,e){return e=e||"raw",t!==void 0&&e==="utf8"&&(t=b.encodeUtf8(t)),new b.ByteBuffer(t)};b.fillString=function(t,e){for(var r="";e>0;)e&1&&(r+=t),e>>>=1,e>0&&(t+=t);return r};b.xorBytes=function(t,e,r){for(var i="",n="",s="",a=0,o=0;r>0;--r,++a)n=t.charCodeAt(a)^e.charCodeAt(a),o>=10&&(i+=s,s="",o=0),s+=String.fromCharCode(n),++o;return i+=s,i};b.hexToBytes=function(t){var e="",r=0;for(t.length&!0&&(r=1,e+=String.fromCharCode(parseInt(t[0],16)));r<t.length;r+=2)e+=String.fromCharCode(parseInt(t.substr(r,2),16));return e};b.bytesToHex=function(t){return b.createBuffer(t).toHex()};b.int32ToBytes=function(t){return String.fromCharCode(t>>24&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255)};var Si="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_i=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],jd="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";b.encode64=function(t,e){for(var r="",i="",n,s,a,o=0;o<t.length;)n=t.charCodeAt(o++),s=t.charCodeAt(o++),a=t.charCodeAt(o++),r+=Si.charAt(n>>2),r+=Si.charAt((n&3)<<4|s>>4),isNaN(s)?r+="==":(r+=Si.charAt((s&15)<<2|a>>6),r+=isNaN(a)?"=":Si.charAt(a&63)),e&&r.length>e&&(i+=r.substr(0,e)+`\r
-`,r=r.substr(e));return i+=r,i};b.decode64=function(t){t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");for(var e="",r,i,n,s,a=0;a<t.length;)r=_i[t.charCodeAt(a++)-43],i=_i[t.charCodeAt(a++)-43],n=_i[t.charCodeAt(a++)-43],s=_i[t.charCodeAt(a++)-43],e+=String.fromCharCode(r<<2|i>>4),n!==64&&(e+=String.fromCharCode((i&15)<<4|n>>2),s!==64&&(e+=String.fromCharCode((n&3)<<6|s)));return e};b.encodeUtf8=function(t){return unescape(encodeURIComponent(t))};b.decodeUtf8=function(t){return decodeURIComponent(escape(t))};b.binary={raw:{},hex:{},base64:{},base58:{},baseN:{encode:zd.encode,decode:zd.decode}};b.binary.raw.encode=function(t){return String.fromCharCode.apply(null,t)};b.binary.raw.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(t.length)),r=r||0;for(var n=r,s=0;s<t.length;++s)i[n++]=t.charCodeAt(s);return e?n-r:i};b.binary.hex.encode=b.bytesToHex;b.binary.hex.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(Math.ceil(t.length/2))),r=r||0;var n=0,s=r;for(t.length&1&&(n=1,i[s++]=parseInt(t[0],16));n<t.length;n+=2)i[s++]=parseInt(t.substr(n,2),16);return e?s-r:i};b.binary.base64.encode=function(t,e){for(var r="",i="",n,s,a,o=0;o<t.byteLength;)n=t[o++],s=t[o++],a=t[o++],r+=Si.charAt(n>>2),r+=Si.charAt((n&3)<<4|s>>4),isNaN(s)?r+="==":(r+=Si.charAt((s&15)<<2|a>>6),r+=isNaN(a)?"=":Si.charAt(a&63)),e&&r.length>e&&(i+=r.substr(0,e)+`\r
-`,r=r.substr(e));return i+=r,i};b.binary.base64.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(Math.ceil(t.length/4)*3)),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,""),r=r||0;for(var n,s,a,o,f=0,u=r;f<t.length;)n=_i[t.charCodeAt(f++)-43],s=_i[t.charCodeAt(f++)-43],a=_i[t.charCodeAt(f++)-43],o=_i[t.charCodeAt(f++)-43],i[u++]=n<<2|s>>4,a!==64&&(i[u++]=(s&15)<<4|a>>2,o!==64&&(i[u++]=(a&3)<<6|o));return e?u-r:i.subarray(0,u)};b.binary.base58.encode=function(t,e){return b.binary.baseN.encode(t,jd,e)};b.binary.base58.decode=function(t,e){return b.binary.baseN.decode(t,jd,e)};b.text={utf8:{},utf16:{}};b.text.utf8.encode=function(t,e,r){t=b.encodeUtf8(t);var i=e;i||(i=new Uint8Array(t.length)),r=r||0;for(var n=r,s=0;s<t.length;++s)i[n++]=t.charCodeAt(s);return e?n-r:i};b.text.utf8.decode=function(t){return b.decodeUtf8(String.fromCharCode.apply(null,t))};b.text.utf16.encode=function(t,e,r){var i=e;i||(i=new Uint8Array(t.length*2));var n=new Uint16Array(i.buffer);r=r||0;for(var s=r,a=r,o=0;o<t.length;++o)n[a++]=t.charCodeAt(o),s+=2;return e?s-r:i};b.text.utf16.decode=function(t){return String.fromCharCode.apply(null,new Uint16Array(t.buffer))};b.deflate=function(t,e,r){if(e=b.decode64(t.deflate(b.encode64(e)).rval),r){var i=2,n=e.charCodeAt(1);n&32&&(i=6),e=e.substring(i,e.length-4)}return e};b.inflate=function(t,e,r){var i=t.inflate(b.encode64(e)).rval;return i===null?null:b.decode64(i)};var Gu=function(t,e,r){if(!t)throw new Error("WebStorage not available.");var i;if(r===null?i=t.removeItem(e):(r=b.encode64(JSON.stringify(r)),i=t.setItem(e,r)),typeof i!="undefined"&&i.rval!==!0){var n=new Error(i.error.message);throw n.id=i.error.id,n.name=i.error.name,n}},Hu=function(t,e){if(!t)throw new Error("WebStorage not available.");var r=t.getItem(e);if(t.init)if(r.rval===null){if(r.error){var i=new Error(r.error.message);throw i.id=r.error.id,i.name=r.error.name,i}r=null}else r=r.rval;return r!==null&&(r=JSON.parse(b.decode64(r))),r},Xw=function(t,e,r,i){var n=Hu(t,e);n===null&&(n={}),n[r]=i,Gu(t,e,n)},Jw=function(t,e,r){var i=Hu(t,e);return i!==null&&(i=r in i?i[r]:null),i},eS=function(t,e,r){var i=Hu(t,e);if(i!==null&&r in i){delete i[r];var n=!0;for(var s in i){n=!1;break}n&&(i=null),Gu(t,e,i)}},tS=function(t,e){Gu(t,e,null)},uo=function(t,e,r){var i=null;typeof r=="undefined"&&(r=["web","flash"]);var n,s=!1,a=null;for(var o in r){n=r[o];try{if(n==="flash"||n==="both"){if(e[0]===null)throw new Error("Flash local storage not available.");i=t.apply(this,e),s=n==="flash"}(n==="web"||n==="both")&&(e[0]=localStorage,i=t.apply(this,e),s=!0)}catch(f){a=f}if(s)break}if(!s)throw a;return i};b.setItem=function(t,e,r,i,n){uo(Xw,arguments,n)};b.getItem=function(t,e,r,i){return uo(Jw,arguments,i)};b.removeItem=function(t,e,r,i){uo(eS,arguments,i)};b.clearItems=function(t,e,r){uo(tS,arguments,r)};b.isEmpty=function(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0};b.format=function(t){for(var e=/%./g,r,i,n=0,s=[],a=0;r=e.exec(t);){i=t.substring(a,e.lastIndex-2),i.length>0&&s.push(i),a=e.lastIndex;var o=r[0][1];switch(o){case"s":case"o":n<arguments.length?s.push(arguments[n+++1]):s.push("<?>");break;case"%":s.push("%");break;default:s.push("<%"+o+"?>")}}return s.push(t.substring(a)),s.join("")};b.formatNumber=function(t,e,r,i){var n=t,s=isNaN(e=Math.abs(e))?2:e,a=r===void 0?",":r,o=i===void 0?".":i,f=n<0?"-":"",u=parseInt(n=Math.abs(+n||0).toFixed(s),10)+"",c=u.length>3?u.length%3:0;return f+(c?u.substr(0,c)+o:"")+u.substr(c).replace(/(\d{3})(?=\d)/g,"$1"+o)+(s?a+Math.abs(n-u).toFixed(s).slice(2):"")};b.formatSize=function(t){return t>=1073741824?t=b.formatNumber(t/1073741824,2,".","")+" GiB":t>=1048576?t=b.formatNumber(t/1048576,2,".","")+" MiB":t>=1024?t=b.formatNumber(t/1024,0)+" KiB":t=b.formatNumber(t,0)+" bytes",t};b.bytesFromIP=function(t){return t.indexOf(".")!==-1?b.bytesFromIPv4(t):t.indexOf(":")!==-1?b.bytesFromIPv6(t):null};b.bytesFromIPv4=function(t){if(t=t.split("."),t.length!==4)return null;for(var e=b.createBuffer(),r=0;r<t.length;++r){var i=parseInt(t[r],10);if(isNaN(i))return null;e.putByte(i)}return e.getBytes()};b.bytesFromIPv6=function(t){var e=0;t=t.split(":").filter(function(a){return a.length===0&&++e,!0});for(var r=(8-t.length+e)*2,i=b.createBuffer(),n=0;n<8;++n){if(!t[n]||t[n].length===0){i.fillWithByte(0,r),r=0;continue}var s=b.hexToBytes(t[n]);s.length<2&&i.putByte(0),i.putBytes(s)}return i.getBytes()};b.bytesToIP=function(t){return t.length===4?b.bytesToIPv4(t):t.length===16?b.bytesToIPv6(t):null};b.bytesToIPv4=function(t){if(t.length!==4)return null;for(var e=[],r=0;r<t.length;++r)e.push(t.charCodeAt(r));return e.join(".")};b.bytesToIPv6=function(t){if(t.length!==16)return null;for(var e=[],r=[],i=0,n=0;n<t.length;n+=2){for(var s=b.bytesToHex(t[n]+t[n+1]);s[0]==="0"&&s!=="0";)s=s.substr(1);if(s==="0"){var a=r[r.length-1],o=e.length;!a||o!==a.end+1?r.push({start:o,end:o}):(a.end=o,a.end-a.start>r[i].end-r[i].start&&(i=r.length-1))}e.push(s)}if(r.length>0){var f=r[i];f.end-f.start>0&&(e.splice(f.start,f.end-f.start+1,""),f.start===0&&e.unshift(""),f.end===7&&e.push(""))}return e.join(":")};b.estimateCores=function(t,e){if(typeof t=="function"&&(e=t,t={}),t=t||{},"cores"in b&&!t.update)return e(null,b.cores);if(typeof navigator!="undefined"&&"hardwareConcurrency"in navigator&&navigator.hardwareConcurrency>0)return b.cores=navigator.hardwareConcurrency,e(null,b.cores);if(typeof Worker=="undefined")return b.cores=1,e(null,b.cores);if(typeof Blob=="undefined")return b.cores=2,e(null,b.cores);var r=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(a){for(var o=Date.now(),f=o+4;Date.now()<f;);self.postMessage({st:o,et:f})})}.toString(),")()"],{type:"application/javascript"}));i([],5,16);function i(a,o,f){if(o===0){var u=Math.floor(a.reduce(function(c,h){return c+h},0)/a.length);return b.cores=Math.max(1,u),URL.revokeObjectURL(r),e(null,b.cores)}n(f,function(c,h){a.push(s(f,h)),i(a,o-1,f)})}function n(a,o){for(var f=[],u=[],c=0;c<a;++c){var h=new Worker(r);h.addEventListener("message",function(l){if(u.push(l.data),u.length===a){for(var d=0;d<a;++d)f[d].terminate();o(null,u)}}),f.push(h)}for(var c=0;c<a;++c)f[c].postMessage(c)}function s(a,o){for(var f=[],u=0;u<a;++u)for(var c=o[u],h=f[u]=[],l=0;l<a;++l)if(u!==l){var d=o[l];(c.st>d.st&&c.st<d.et||d.st>c.st&&d.st<c.et)&&h.push(l)}return f.reduce(function(p,y){return Math.max(p,y.length)},0)}}});var co=E((g6,Yd)=>{var Fs=Se();Fs.pki=Fs.pki||{};var zu=Yd.exports=Fs.pki.oids=Fs.oids=Fs.oids||{};function L(t,e){zu[t]=e,zu[e]=t}function ge(t,e){zu[t]=e}L("1.2.840.113549.1.1.1","rsaEncryption");L("1.2.840.113549.1.1.4","md5WithRSAEncryption");L("1.2.840.113549.1.1.5","sha1WithRSAEncryption");L("1.2.840.113549.1.1.7","RSAES-OAEP");L("1.2.840.113549.1.1.8","mgf1");L("1.2.840.113549.1.1.9","pSpecified");L("1.2.840.113549.1.1.10","RSASSA-PSS");L("1.2.840.113549.1.1.11","sha256WithRSAEncryption");L("1.2.840.113549.1.1.12","sha384WithRSAEncryption");L("1.2.840.113549.1.1.13","sha512WithRSAEncryption");L("1.3.101.112","EdDSA25519");L("1.2.840.10040.4.3","dsa-with-sha1");L("1.3.14.3.2.7","desCBC");L("1.3.14.3.2.26","sha1");L("1.3.14.3.2.29","sha1WithRSASignature");L("2.16.840.1.101.3.4.2.1","sha256");L("2.16.840.1.101.3.4.2.2","sha384");L("2.16.840.1.101.3.4.2.3","sha512");L("1.2.840.113549.2.5","md5");L("1.2.840.113549.1.7.1","data");L("1.2.840.113549.1.7.2","signedData");L("1.2.840.113549.1.7.3","envelopedData");L("1.2.840.113549.1.7.4","signedAndEnvelopedData");L("1.2.840.113549.1.7.5","digestedData");L("1.2.840.113549.1.7.6","encryptedData");L("1.2.840.113549.1.9.1","emailAddress");L("1.2.840.113549.1.9.2","unstructuredName");L("1.2.840.113549.1.9.3","contentType");L("1.2.840.113549.1.9.4","messageDigest");L("1.2.840.113549.1.9.5","signingTime");L("1.2.840.113549.1.9.6","counterSignature");L("1.2.840.113549.1.9.7","challengePassword");L("1.2.840.113549.1.9.8","unstructuredAddress");L("1.2.840.113549.1.9.14","extensionRequest");L("1.2.840.113549.1.9.20","friendlyName");L("1.2.840.113549.1.9.21","localKeyId");L("1.2.840.113549.1.9.22.1","x509Certificate");L("1.2.840.113549.1.12.10.1.1","keyBag");L("1.2.840.113549.1.12.10.1.2","pkcs8ShroudedKeyBag");L("1.2.840.113549.1.12.10.1.3","certBag");L("1.2.840.113549.1.12.10.1.4","crlBag");L("1.2.840.113549.1.12.10.1.5","secretBag");L("1.2.840.113549.1.12.10.1.6","safeContentsBag");L("1.2.840.113549.1.5.13","pkcs5PBES2");L("1.2.840.113549.1.5.12","pkcs5PBKDF2");L("1.2.840.113549.1.12.1.1","pbeWithSHAAnd128BitRC4");L("1.2.840.113549.1.12.1.2","pbeWithSHAAnd40BitRC4");L("1.2.840.113549.1.12.1.3","pbeWithSHAAnd3-KeyTripleDES-CBC");L("1.2.840.113549.1.12.1.4","pbeWithSHAAnd2-KeyTripleDES-CBC");L("1.2.840.113549.1.12.1.5","pbeWithSHAAnd128BitRC2-CBC");L("1.2.840.113549.1.12.1.6","pbewithSHAAnd40BitRC2-CBC");L("1.2.840.113549.2.7","hmacWithSHA1");L("1.2.840.113549.2.8","hmacWithSHA224");L("1.2.840.113549.2.9","hmacWithSHA256");L("1.2.840.113549.2.10","hmacWithSHA384");L("1.2.840.113549.2.11","hmacWithSHA512");L("1.2.840.113549.3.7","des-EDE3-CBC");L("2.16.840.1.101.3.4.1.2","aes128-CBC");L("2.16.840.1.101.3.4.1.22","aes192-CBC");L("2.16.840.1.101.3.4.1.42","aes256-CBC");L("2.5.4.3","commonName");L("2.5.4.4","surname");L("2.5.4.5","serialNumber");L("2.5.4.6","countryName");L("2.5.4.7","localityName");L("2.5.4.8","stateOrProvinceName");L("2.5.4.9","streetAddress");L("2.5.4.10","organizationName");L("2.5.4.11","organizationalUnitName");L("2.5.4.12","title");L("2.5.4.13","description");L("2.5.4.15","businessCategory");L("2.5.4.17","postalCode");L("2.5.4.42","givenName");L("1.3.6.1.4.1.311.60.2.1.2","jurisdictionOfIncorporationStateOrProvinceName");L("1.3.6.1.4.1.311.60.2.1.3","jurisdictionOfIncorporationCountryName");L("2.16.840.1.113730.1.1","nsCertType");L("2.16.840.1.113730.1.13","nsComment");ge("2.5.29.1","authorityKeyIdentifier");ge("2.5.29.2","keyAttributes");ge("2.5.29.3","certificatePolicies");ge("2.5.29.4","keyUsageRestriction");ge("2.5.29.5","policyMapping");ge("2.5.29.6","subtreesConstraint");ge("2.5.29.7","subjectAltName");ge("2.5.29.8","issuerAltName");ge("2.5.29.9","subjectDirectoryAttributes");ge("2.5.29.10","basicConstraints");ge("2.5.29.11","nameConstraints");ge("2.5.29.12","policyConstraints");ge("2.5.29.13","basicConstraints");L("2.5.29.14","subjectKeyIdentifier");L("2.5.29.15","keyUsage");ge("2.5.29.16","privateKeyUsagePeriod");L("2.5.29.17","subjectAltName");L("2.5.29.18","issuerAltName");L("2.5.29.19","basicConstraints");ge("2.5.29.20","cRLNumber");ge("2.5.29.21","cRLReason");ge("2.5.29.22","expirationDate");ge("2.5.29.23","instructionCode");ge("2.5.29.24","invalidityDate");ge("2.5.29.25","cRLDistributionPoints");ge("2.5.29.26","issuingDistributionPoint");ge("2.5.29.27","deltaCRLIndicator");ge("2.5.29.28","issuingDistributionPoint");ge("2.5.29.29","certificateIssuer");ge("2.5.29.30","nameConstraints");L("2.5.29.31","cRLDistributionPoints");L("2.5.29.32","certificatePolicies");ge("2.5.29.33","policyMappings");ge("2.5.29.34","policyConstraints");L("2.5.29.35","authorityKeyIdentifier");ge("2.5.29.36","policyConstraints");L("2.5.29.37","extKeyUsage");ge("2.5.29.46","freshestCRL");ge("2.5.29.54","inhibitAnyPolicy");L("1.3.6.1.4.1.11129.2.4.2","timestampList");L("1.3.6.1.5.5.7.1.1","authorityInfoAccess");L("1.3.6.1.5.5.7.3.1","serverAuth");L("1.3.6.1.5.5.7.3.2","clientAuth");L("1.3.6.1.5.5.7.3.3","codeSigning");L("1.3.6.1.5.5.7.3.4","emailProtection");L("1.3.6.1.5.5.7.3.8","timeStamping")});var qs=E((v6,Qd)=>{var Le=Se();$e();co();var F=Qd.exports=Le.asn1=Le.asn1||{};F.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192};F.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30};F.create=function(t,e,r,i,n){if(Le.util.isArray(i)){for(var s=[],a=0;a<i.length;++a)i[a]!==void 0&&s.push(i[a]);i=s}var o={tagClass:t,type:e,constructed:r,composed:r||Le.util.isArray(i),value:i};return n&&"bitStringContents"in n&&(o.bitStringContents=n.bitStringContents,o.original=F.copy(o)),o};F.copy=function(t,e){var r;if(Le.util.isArray(t)){r=[];for(var i=0;i<t.length;++i)r.push(F.copy(t[i],e));return r}return typeof t=="string"?t:(r={tagClass:t.tagClass,type:t.type,constructed:t.constructed,composed:t.composed,value:F.copy(t.value,e)},e&&!e.excludeBitStringContents&&(r.bitStringContents=t.bitStringContents),r)};F.equals=function(t,e,r){if(Le.util.isArray(t)){if(!Le.util.isArray(e)||t.length!==e.length)return!1;for(var i=0;i<t.length;++i)if(!F.equals(t[i],e[i]))return!1;return!0}if(typeof t!=typeof e)return!1;if(typeof t=="string")return t===e;var n=t.tagClass===e.tagClass&&t.type===e.type&&t.constructed===e.constructed&&t.composed===e.composed&&F.equals(t.value,e.value);return r&&r.includeBitStringContents&&(n=n&&t.bitStringContents===e.bitStringContents),n};F.getBerValueLength=function(t){var e=t.getByte();if(e!==128){var r,i=e&128;return i?r=t.getInt((e&127)<<3):r=e,r}};function Us(t,e,r){if(r>e){var i=new Error("Too few bytes to parse DER.");throw i.available=t.length(),i.remaining=e,i.requested=r,i}}var rS=function(t,e){var r=t.getByte();if(e--,r!==128){var i,n=r&128;if(!n)i=r;else{var s=r&127;Us(t,e,s),i=t.getInt(s<<3)}if(i<0)throw new Error("Negative length: "+i);return i}};F.fromDer=function(t,e){return e===void 0&&(e={strict:!0,decodeBitStrings:!0}),typeof e=="boolean"&&(e={strict:e,decodeBitStrings:!0}),"strict"in e||(e.strict=!0),"decodeBitStrings"in e||(e.decodeBitStrings=!0),typeof t=="string"&&(t=Le.util.createBuffer(t)),fo(t,t.length(),0,e)};function fo(t,e,r,i){var n;Us(t,e,2);var s=t.getByte();e--;var a=s&192,o=s&31;n=t.length();var f=rS(t,e);if(e-=n-t.length(),f!==void 0&&f>e){if(i.strict){var u=new Error("Too few bytes to read ASN.1 value.");throw u.available=t.length(),u.remaining=e,u.requested=f,u}f=e}var c,h,l=(s&32)==32;if(l)if(c=[],f===void 0)for(;;){if(Us(t,e,2),t.bytes(2)===String.fromCharCode(0,0)){t.getBytes(2),e-=2;break}n=t.length(),c.push(fo(t,e,r+1,i)),e-=n-t.length()}else for(;f>0;)n=t.length(),c.push(fo(t,f,r+1,i)),e-=n-t.length(),f-=n-t.length();if(c===void 0&&a===F.Class.UNIVERSAL&&o===F.Type.BITSTRING&&(h=t.bytes(f)),c===void 0&&i.decodeBitStrings&&a===F.Class.UNIVERSAL&&o===F.Type.BITSTRING&&f>1){var d=t.read,p=e,y=0;if(o===F.Type.BITSTRING&&(Us(t,e,1),y=t.getByte(),e--),y===0)try{n=t.length();var g={verbose:i.verbose,strict:!0,decodeBitStrings:!0},v=fo(t,e,r+1,g),x=n-t.length();e-=x,o==F.Type.BITSTRING&&x++;var w=v.tagClass;x===f&&(w===F.Class.UNIVERSAL||w===F.Class.CONTEXT_SPECIFIC)&&(c=[v])}catch(B){}c===void 0&&(t.read=d,e=p)}if(c===void 0){if(f===void 0){if(i.strict)throw new Error("Non-constructed ASN.1 object of indefinite length.");f=e}if(o===F.Type.BMPSTRING)for(c="";f>0;f-=2)Us(t,e,2),c+=String.fromCharCode(t.getInt16()),e-=2;else c=t.getBytes(f)}var P=h===void 0?null:{bitStringContents:h};return F.create(a,o,l,c,P)}F.toDer=function(t){var e=Le.util.createBuffer(),r=t.tagClass|t.type,i=Le.util.createBuffer(),n=!1;if("bitStringContents"in t&&(n=!0,t.original&&(n=F.equals(t,t.original))),n)i.putBytes(t.bitStringContents);else if(t.composed){t.constructed?r|=32:i.putByte(0);for(var s=0;s<t.value.length;++s)t.value[s]!==void 0&&i.putBuffer(F.toDer(t.value[s]))}else if(t.type===F.Type.BMPSTRING)for(var s=0;s<t.value.length;++s)i.putInt16(t.value.charCodeAt(s));else t.type===F.Type.INTEGER&&t.value.length>1&&(t.value.charCodeAt(0)===0&&(t.value.charCodeAt(1)&128)==0||t.value.charCodeAt(0)===255&&(t.value.charCodeAt(1)&128)==128)?i.putBytes(t.value.substr(1)):i.putBytes(t.value);if(e.putByte(r),i.length()<=127)e.putByte(i.length()&127);else{var a=i.length(),o="";do o+=String.fromCharCode(a&255),a=a>>>8;while(a>0);e.putByte(o.length|128);for(var s=o.length-1;s>=0;--s)e.putByte(o.charCodeAt(s))}return e.putBuffer(i),e};F.oidToDer=function(t){var e=t.split("."),r=Le.util.createBuffer();r.putByte(40*parseInt(e[0],10)+parseInt(e[1],10));for(var i,n,s,a,o=2;o<e.length;++o){i=!0,n=[],s=parseInt(e[o],10);do a=s&127,s=s>>>7,i||(a|=128),n.push(a),i=!1;while(s>0);for(var f=n.length-1;f>=0;--f)r.putByte(n[f])}return r};F.derToOid=function(t){var e;typeof t=="string"&&(t=Le.util.createBuffer(t));var r=t.getByte();e=Math.floor(r/40)+"."+r%40;for(var i=0;t.length()>0;)r=t.getByte(),i=i<<7,r&128?i+=r&127:(e+="."+(i+r),i=0);return e};F.utcTimeToDate=function(t){var e=new Date,r=parseInt(t.substr(0,2),10);r=r>=50?1900+r:2e3+r;var i=parseInt(t.substr(2,2),10)-1,n=parseInt(t.substr(4,2),10),s=parseInt(t.substr(6,2),10),a=parseInt(t.substr(8,2),10),o=0;if(t.length>11){var f=t.charAt(10),u=10;f!=="+"&&f!=="-"&&(o=parseInt(t.substr(10,2),10),u+=2)}if(e.setUTCFullYear(r,i,n),e.setUTCHours(s,a,o,0),u&&(f=t.charAt(u),f==="+"||f==="-")){var c=parseInt(t.substr(u+1,2),10),h=parseInt(t.substr(u+4,2),10),l=c*60+h;l*=6e4,f==="+"?e.setTime(+e-l):e.setTime(+e+l)}return e};F.generalizedTimeToDate=function(t){var e=new Date,r=parseInt(t.substr(0,4),10),i=parseInt(t.substr(4,2),10)-1,n=parseInt(t.substr(6,2),10),s=parseInt(t.substr(8,2),10),a=parseInt(t.substr(10,2),10),o=parseInt(t.substr(12,2),10),f=0,u=0,c=!1;t.charAt(t.length-1)==="Z"&&(c=!0);var h=t.length-5,l=t.charAt(h);if(l==="+"||l==="-"){var d=parseInt(t.substr(h+1,2),10),p=parseInt(t.substr(h+4,2),10);u=d*60+p,u*=6e4,l==="+"&&(u*=-1),c=!0}return t.charAt(14)==="."&&(f=parseFloat(t.substr(14),10)*1e3),c?(e.setUTCFullYear(r,i,n),e.setUTCHours(s,a,o,f),e.setTime(+e+u)):(e.setFullYear(r,i,n),e.setHours(s,a,o,f)),e};F.dateToUtcTime=function(t){if(typeof t=="string")return t;var e="",r=[];r.push((""+t.getUTCFullYear()).substr(2)),r.push(""+(t.getUTCMonth()+1)),r.push(""+t.getUTCDate()),r.push(""+t.getUTCHours()),r.push(""+t.getUTCMinutes()),r.push(""+t.getUTCSeconds());for(var i=0;i<r.length;++i)r[i].length<2&&(e+="0"),e+=r[i];return e+="Z",e};F.dateToGeneralizedTime=function(t){if(typeof t=="string")return t;var e="",r=[];r.push(""+t.getUTCFullYear()),r.push(""+(t.getUTCMonth()+1)),r.push(""+t.getUTCDate()),r.push(""+t.getUTCHours()),r.push(""+t.getUTCMinutes()),r.push(""+t.getUTCSeconds());for(var i=0;i<r.length;++i)r[i].length<2&&(e+="0"),e+=r[i];return e+="Z",e};F.integerToDer=function(t){var e=Le.util.createBuffer();if(t>=-128&&t<128)return e.putSignedInt(t,8);if(t>=-32768&&t<32768)return e.putSignedInt(t,16);if(t>=-8388608&&t<8388608)return e.putSignedInt(t,24);if(t>=-2147483648&&t<2147483648)return e.putSignedInt(t,32);var r=new Error("Integer too large; max is 32-bits.");throw r.integer=t,r};F.derToInteger=function(t){typeof t=="string"&&(t=Le.util.createBuffer(t));var e=t.length()*8;if(e>32)throw new Error("Integer too large; max is 32-bits.");return t.getSignedInt(e)};F.validate=function(t,e,r,i){var n=!1;if((t.tagClass===e.tagClass||typeof e.tagClass=="undefined")&&(t.type===e.type||typeof e.type=="undefined"))if(t.constructed===e.constructed||typeof e.constructed=="undefined"){if(n=!0,e.value&&Le.util.isArray(e.value))for(var s=0,a=0;n&&a<e.value.length;++a)n=e.value[a].optional||!1,t.value[s]&&(n=F.validate(t.value[s],e.value[a],r,i),n?++s:e.value[a].optional&&(n=!0)),!n&&i&&i.push("["+e.name+'] Tag class "'+e.tagClass+'", type "'+e.type+'" expected value length "'+e.value.length+'", got "'+t.value.length+'"');if(n&&r&&(e.capture&&(r[e.capture]=t.value),e.captureAsn1&&(r[e.captureAsn1]=t),e.captureBitStringContents&&"bitStringContents"in t&&(r[e.captureBitStringContents]=t.bitStringContents),e.captureBitStringValue&&"bitStringContents"in t)){var o;if(t.bitStringContents.length<2)r[e.captureBitStringValue]="";else{var f=t.bitStringContents.charCodeAt(0);if(f!==0)throw new Error("captureBitStringValue only supported for zero unused bits");r[e.captureBitStringValue]=t.bitStringContents.slice(1)}}}else i&&i.push("["+e.name+'] Expected constructed "'+e.constructed+'", got "'+t.constructed+'"');else i&&(t.tagClass!==e.tagClass&&i.push("["+e.name+'] Expected tag class "'+e.tagClass+'", got "'+t.tagClass+'"'),t.type!==e.type&&i.push("["+e.name+'] Expected type "'+e.type+'", got "'+t.type+'"'));return n};var $d=/[^\\u0000-\\u00ff]/;F.prettyPrint=function(t,e,r){var i="";e=e||0,r=r||2,e>0&&(i+=`
-`);for(var n="",s=0;s<e*r;++s)n+=" ";switch(i+=n+"Tag: ",t.tagClass){case F.Class.UNIVERSAL:i+="Universal:";break;case F.Class.APPLICATION:i+="Application:";break;case F.Class.CONTEXT_SPECIFIC:i+="Context-Specific:";break;case F.Class.PRIVATE:i+="Private:";break}if(t.tagClass===F.Class.UNIVERSAL)switch(i+=t.type,t.type){case F.Type.NONE:i+=" (None)";break;case F.Type.BOOLEAN:i+=" (Boolean)";break;case F.Type.INTEGER:i+=" (Integer)";break;case F.Type.BITSTRING:i+=" (Bit string)";break;case F.Type.OCTETSTRING:i+=" (Octet string)";break;case F.Type.NULL:i+=" (Null)";break;case F.Type.OID:i+=" (Object Identifier)";break;case F.Type.ODESC:i+=" (Object Descriptor)";break;case F.Type.EXTERNAL:i+=" (External or Instance of)";break;case F.Type.REAL:i+=" (Real)";break;case F.Type.ENUMERATED:i+=" (Enumerated)";break;case F.Type.EMBEDDED:i+=" (Embedded PDV)";break;case F.Type.UTF8:i+=" (UTF8)";break;case F.Type.ROID:i+=" (Relative Object Identifier)";break;case F.Type.SEQUENCE:i+=" (Sequence)";break;case F.Type.SET:i+=" (Set)";break;case F.Type.PRINTABLESTRING:i+=" (Printable String)";break;case F.Type.IA5String:i+=" (IA5String (ASCII))";break;case F.Type.UTCTIME:i+=" (UTC time)";break;case F.Type.GENERALIZEDTIME:i+=" (Generalized time)";break;case F.Type.BMPSTRING:i+=" (BMP String)";break}else i+=t.type;if(i+=`
+`});var ch=re(()=>{sa();es();ur();na();bi()});var oa,H_,uh=re(()=>{V0();H0();z0();j0();Xo();ji();Jo();li();Wi();kr();rs();ih();nh();ch();oa={...Yo,...$o,...Zo,...Qo,...Xn,...zi,...Jn,...hi,...pi},H_={...lr,...Zi}});function fh(t,e,r,i){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:i}}}var hh,aa,bb,ss,ca=re(()=>{uh();hh=fh("utf8","u",t=>{let e=new TextDecoder("utf8");return"u"+e.decode(t)},t=>new TextEncoder().encode(t.substring(1))),aa=fh("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);let e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),bb={utf8:hh,"utf-8":hh,hex:oa.base16,latin1:aa,ascii:aa,binary:aa,...oa},ss=bb});var Rt={};Ne(Rt,{toString:()=>vb});function vb(t,e="utf8"){let r=ss[e];if(!r)throw new Error(`Unsupported encoding "${e}"`);return r.encoder.encode(t).substring(1)}var Bt=re(()=>{ca()});var nt={};Ne(nt,{fromString:()=>mb});function mb(t,e="utf8"){let r=ss[e];if(!r)throw new Error(`Unsupported encoding "${e}"`);return r.decoder.decode(`${r.prefix}${t}`)}var st=re(()=>{ca()});var as=x((Z_,ph)=>{"use strict";var Lr=ni(),os=Lr.Reader,lh=Lr.Writer,Me=Lr.util,ot=Lr.roots["libp2p-crypto-keys"]||(Lr.roots["libp2p-crypto-keys"]={});ot.KeyType=function(){var t={},e=Object.create(t);return e[t[0]="RSA"]=0,e[t[1]="Ed25519"]=1,e[t[2]="Secp256k1"]=2,e}();ot.PublicKey=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.Type=0,t.prototype.Data=Me.newBuffer([]),t.encode=function(r,i){return i||(i=lh.create()),i.uint32(8).int32(r.Type),i.uint32(18).bytes(r.Data),i},t.decode=function(r,i){r instanceof os||(r=os.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new ot.PublicKey;r.pos<n;){var o=r.uint32();switch(o>>>3){case 1:s.Type=r.int32();break;case 2:s.Data=r.bytes();break;default:r.skipType(o&7);break}}if(!s.hasOwnProperty("Type"))throw Me.ProtocolError("missing required 'Type'",{instance:s});if(!s.hasOwnProperty("Data"))throw Me.ProtocolError("missing required 'Data'",{instance:s});return s},t.fromObject=function(r){if(r instanceof ot.PublicKey)return r;var i=new ot.PublicKey;switch(r.Type){case"RSA":case 0:i.Type=0;break;case"Ed25519":case 1:i.Type=1;break;case"Secp256k1":case 2:i.Type=2;break}return r.Data!=null&&(typeof r.Data=="string"?Me.base64.decode(r.Data,i.Data=Me.newBuffer(Me.base64.length(r.Data)),0):r.Data.length&&(i.Data=r.Data)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(n.Type=i.enums===String?"RSA":0,i.bytes===String?n.Data="":(n.Data=[],i.bytes!==Array&&(n.Data=Me.newBuffer(n.Data)))),r.Type!=null&&r.hasOwnProperty("Type")&&(n.Type=i.enums===String?ot.KeyType[r.Type]:r.Type),r.Data!=null&&r.hasOwnProperty("Data")&&(n.Data=i.bytes===String?Me.base64.encode(r.Data,0,r.Data.length):i.bytes===Array?Array.prototype.slice.call(r.Data):r.Data),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,Lr.util.toJSONOptions)},t}();ot.PrivateKey=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.Type=0,t.prototype.Data=Me.newBuffer([]),t.encode=function(r,i){return i||(i=lh.create()),i.uint32(8).int32(r.Type),i.uint32(18).bytes(r.Data),i},t.decode=function(r,i){r instanceof os||(r=os.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new ot.PrivateKey;r.pos<n;){var o=r.uint32();switch(o>>>3){case 1:s.Type=r.int32();break;case 2:s.Data=r.bytes();break;default:r.skipType(o&7);break}}if(!s.hasOwnProperty("Type"))throw Me.ProtocolError("missing required 'Type'",{instance:s});if(!s.hasOwnProperty("Data"))throw Me.ProtocolError("missing required 'Data'",{instance:s});return s},t.fromObject=function(r){if(r instanceof ot.PrivateKey)return r;var i=new ot.PrivateKey;switch(r.Type){case"RSA":case 0:i.Type=0;break;case"Ed25519":case 1:i.Type=1;break;case"Secp256k1":case 2:i.Type=2;break}return r.Data!=null&&(typeof r.Data=="string"?Me.base64.decode(r.Data,i.Data=Me.newBuffer(Me.base64.length(r.Data)),0):r.Data.length&&(i.Data=r.Data)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(n.Type=i.enums===String?"RSA":0,i.bytes===String?n.Data="":(n.Data=[],i.bytes!==Array&&(n.Data=Me.newBuffer(n.Data)))),r.Type!=null&&r.hasOwnProperty("Type")&&(n.Type=i.enums===String?ot.KeyType[r.Type]:r.Type),r.Data!=null&&r.hasOwnProperty("Data")&&(n.Data=i.bytes===String?Me.base64.encode(r.Data,0,r.Data.length):i.bytes===Array?Array.prototype.slice.call(r.Data):r.Data),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,Lr.util.toJSONOptions)},t}();ph.exports=ot});var ne=x((Q_,dh)=>{dh.exports={options:{usePureJavaScript:!1}}});var bh=x((X_,gh)=>{var ua={};gh.exports=ua;var yh={};ua.encode=function(t,e,r){if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');if(r!==void 0&&typeof r!="number")throw new TypeError('"maxline" must be a number.');var i="";if(!(t instanceof Uint8Array))i=xb(t,e);else{var n=0,s=e.length,o=e.charAt(0),a=[0];for(n=0;n<t.length;++n){for(var f=0,u=t[n];f<a.length;++f)u+=a[f]<<8,a[f]=u%s,u=u/s|0;for(;u>0;)a.push(u%s),u=u/s|0}for(n=0;t[n]===0&&n<t.length-1;++n)i+=o;for(n=a.length-1;n>=0;--n)i+=e[a[n]]}if(r){var c=new RegExp(".{1,"+r+"}","g");i=i.match(c).join(`\r
+`)}return i};ua.decode=function(t,e){if(typeof t!="string")throw new TypeError('"input" must be a string.');if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');var r=yh[e];if(!r){r=yh[e]=[];for(var i=0;i<e.length;++i)r[e.charCodeAt(i)]=i}t=t.replace(/\s/g,"");for(var n=e.length,s=e.charAt(0),o=[0],i=0;i<t.length;i++){var a=r[t.charCodeAt(i)];if(a===void 0)return;for(var f=0,u=a;f<o.length;++f)u+=o[f]*n,o[f]=u&255,u>>=8;for(;u>0;)o.push(u&255),u>>=8}for(var c=0;t[c]===s&&c<t.length-1;++c)o.push(0);return typeof Buffer!="undefined"?Buffer.from(o.reverse()):new Uint8Array(o.reverse())};function xb(t,e){var r=0,i=e.length,n=e.charAt(0),s=[0];for(r=0;r<t.length();++r){for(var o=0,a=t.at(r);o<s.length;++o)a+=s[o]<<8,s[o]=a%i,a=a/i|0;for(;a>0;)s.push(a%i),a=a/i|0}var f="";for(r=0;t.at(r)===0&&r<t.length()-1;++r)f+=n;for(r=s.length-1;r>=0;--r)f+=e[s[r]];return f}});var Ie=x((J_,Eh)=>{var vh=ne(),mh=bh(),g=Eh.exports=vh.util=vh.util||{};(function(){if(typeof process!="undefined"&&process.nextTick&&!process.browser){g.nextTick=process.nextTick,typeof setImmediate=="function"?g.setImmediate=setImmediate:g.setImmediate=g.nextTick;return}if(typeof setImmediate=="function"){g.setImmediate=function(){return setImmediate.apply(void 0,arguments)},g.nextTick=function(a){return setImmediate(a)};return}if(g.setImmediate=function(a){setTimeout(a,0)},typeof window!="undefined"&&typeof window.postMessage=="function"){let a=function(f){if(f.source===window&&f.data===t){f.stopPropagation();var u=e.slice();e.length=0,u.forEach(function(c){c()})}};var o=a,t="forge.setImmediate",e=[];g.setImmediate=function(f){e.push(f),e.length===1&&window.postMessage(t,"*")},window.addEventListener("message",a,!0)}if(typeof MutationObserver!="undefined"){var r=Date.now(),i=!0,n=document.createElement("div"),e=[];new MutationObserver(function(){var f=e.slice();e.length=0,f.forEach(function(u){u()})}).observe(n,{attributes:!0});var s=g.setImmediate;g.setImmediate=function(f){Date.now()-r>15?(r=Date.now(),s(f)):(e.push(f),e.length===1&&n.setAttribute("a",i=!i))}}g.nextTick=g.setImmediate})();g.isNodejs=typeof process!="undefined"&&process.versions&&process.versions.node;g.globalScope=function(){return g.isNodejs?globalThis:typeof self=="undefined"?window:self}();g.isArray=Array.isArray||function(t){return Object.prototype.toString.call(t)==="[object Array]"};g.isArrayBuffer=function(t){return typeof ArrayBuffer!="undefined"&&t instanceof ArrayBuffer};g.isArrayBufferView=function(t){return t&&g.isArrayBuffer(t.buffer)&&t.byteLength!==void 0};function Xi(t){if(!(t===8||t===16||t===24||t===32))throw new Error("Only 8, 16, 24, or 32 bits supported: "+t)}g.ByteBuffer=fa;function fa(t){if(this.data="",this.read=0,typeof t=="string")this.data=t;else if(g.isArrayBuffer(t)||g.isArrayBufferView(t))if(typeof Buffer!="undefined"&&t instanceof Buffer)this.data=t.toString("binary");else{var e=new Uint8Array(t);try{this.data=String.fromCharCode.apply(null,e)}catch(i){for(var r=0;r<e.length;++r)this.putByte(e[r])}}else(t instanceof fa||typeof t=="object"&&typeof t.data=="string"&&typeof t.read=="number")&&(this.data=t.data,this.read=t.read);this._constructedStringLength=0}g.ByteStringBuffer=fa;var Eb=4096;g.ByteStringBuffer.prototype._optimizeConstructedString=function(t){this._constructedStringLength+=t,this._constructedStringLength>Eb&&(this.data.substr(0,1),this._constructedStringLength=0)};g.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read};g.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0};g.ByteStringBuffer.prototype.putByte=function(t){return this.putBytes(String.fromCharCode(t))};g.ByteStringBuffer.prototype.fillWithByte=function(t,e){t=String.fromCharCode(t);for(var r=this.data;e>0;)e&1&&(r+=t),e>>>=1,e>0&&(t+=t);return this.data=r,this._optimizeConstructedString(e),this};g.ByteStringBuffer.prototype.putBytes=function(t){return this.data+=t,this._optimizeConstructedString(t.length),this};g.ByteStringBuffer.prototype.putString=function(t){return this.putBytes(g.encodeUtf8(t))};g.ByteStringBuffer.prototype.putInt16=function(t){return this.putBytes(String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};g.ByteStringBuffer.prototype.putInt24=function(t){return this.putBytes(String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};g.ByteStringBuffer.prototype.putInt32=function(t){return this.putBytes(String.fromCharCode(t>>24&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};g.ByteStringBuffer.prototype.putInt16Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255))};g.ByteStringBuffer.prototype.putInt24Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t>>16&255))};g.ByteStringBuffer.prototype.putInt32Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>24&255))};g.ByteStringBuffer.prototype.putInt=function(t,e){Xi(e);var r="";do e-=8,r+=String.fromCharCode(t>>e&255);while(e>0);return this.putBytes(r)};g.ByteStringBuffer.prototype.putSignedInt=function(t,e){return t<0&&(t+=2<<e-1),this.putInt(t,e)};g.ByteStringBuffer.prototype.putBuffer=function(t){return this.putBytes(t.getBytes())};g.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)};g.ByteStringBuffer.prototype.getInt16=function(){var t=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);return this.read+=2,t};g.ByteStringBuffer.prototype.getInt24=function(){var t=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);return this.read+=3,t};g.ByteStringBuffer.prototype.getInt32=function(){var t=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+2)<<8^this.data.charCodeAt(this.read+3);return this.read+=4,t};g.ByteStringBuffer.prototype.getInt16Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;return this.read+=2,t};g.ByteStringBuffer.prototype.getInt24Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;return this.read+=3,t};g.ByteStringBuffer.prototype.getInt32Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;return this.read+=4,t};g.ByteStringBuffer.prototype.getInt=function(t){Xi(t);var e=0;do e=(e<<8)+this.data.charCodeAt(this.read++),t-=8;while(t>0);return e};g.ByteStringBuffer.prototype.getSignedInt=function(t){var e=this.getInt(t),r=2<<t-2;return e>=r&&(e-=r<<1),e};g.ByteStringBuffer.prototype.getBytes=function(t){var e;return t?(t=Math.min(this.length(),t),e=this.data.slice(this.read,this.read+t),this.read+=t):t===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};g.ByteStringBuffer.prototype.bytes=function(t){return typeof t=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+t)};g.ByteStringBuffer.prototype.at=function(t){return this.data.charCodeAt(this.read+t)};g.ByteStringBuffer.prototype.setAt=function(t,e){return this.data=this.data.substr(0,this.read+t)+String.fromCharCode(e)+this.data.substr(this.read+t+1),this};g.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)};g.ByteStringBuffer.prototype.copy=function(){var t=g.createBuffer(this.data);return t.read=this.read,t};g.ByteStringBuffer.prototype.compact=function(){return this.read>0&&(this.data=this.data.slice(this.read),this.read=0),this};g.ByteStringBuffer.prototype.clear=function(){return this.data="",this.read=0,this};g.ByteStringBuffer.prototype.truncate=function(t){var e=Math.max(0,this.length()-t);return this.data=this.data.substr(this.read,e),this.read=0,this};g.ByteStringBuffer.prototype.toHex=function(){for(var t="",e=this.read;e<this.data.length;++e){var r=this.data.charCodeAt(e);r<16&&(t+="0"),t+=r.toString(16)}return t};g.ByteStringBuffer.prototype.toString=function(){return g.decodeUtf8(this.bytes())};function wb(t,e){e=e||{},this.read=e.readOffset||0,this.growSize=e.growSize||1024;var r=g.isArrayBuffer(t),i=g.isArrayBufferView(t);if(r||i){r?this.data=new DataView(t):this.data=new DataView(t.buffer,t.byteOffset,t.byteLength),this.write="writeOffset"in e?e.writeOffset:this.data.byteLength;return}this.data=new DataView(new ArrayBuffer(0)),this.write=0,t!=null&&this.putBytes(t),"writeOffset"in e&&(this.write=e.writeOffset)}g.DataBuffer=wb;g.DataBuffer.prototype.length=function(){return this.write-this.read};g.DataBuffer.prototype.isEmpty=function(){return this.length()<=0};g.DataBuffer.prototype.accommodate=function(t,e){if(this.length()>=t)return this;e=Math.max(e||this.growSize,t);var r=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength),i=new Uint8Array(this.length()+e);return i.set(r),this.data=new DataView(i.buffer),this};g.DataBuffer.prototype.putByte=function(t){return this.accommodate(1),this.data.setUint8(this.write++,t),this};g.DataBuffer.prototype.fillWithByte=function(t,e){this.accommodate(e);for(var r=0;r<e;++r)this.data.setUint8(t);return this};g.DataBuffer.prototype.putBytes=function(t,e){if(g.isArrayBufferView(t)){var r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),i=r.byteLength-r.byteOffset;this.accommodate(i);var n=new Uint8Array(this.data.buffer,this.write);return n.set(r),this.write+=i,this}if(g.isArrayBuffer(t)){var r=new Uint8Array(t);this.accommodate(r.byteLength);var n=new Uint8Array(this.data.buffer);return n.set(r,this.write),this.write+=r.byteLength,this}if(t instanceof g.DataBuffer||typeof t=="object"&&typeof t.read=="number"&&typeof t.write=="number"&&g.isArrayBufferView(t.data)){var r=new Uint8Array(t.data.byteLength,t.read,t.length());this.accommodate(r.byteLength);var n=new Uint8Array(t.data.byteLength,this.write);return n.set(r),this.write+=r.byteLength,this}if(t instanceof g.ByteStringBuffer&&(t=t.data,e="binary"),e=e||"binary",typeof t=="string"){var s;if(e==="hex")return this.accommodate(Math.ceil(t.length/2)),s=new Uint8Array(this.data.buffer,this.write),this.write+=g.binary.hex.decode(t,s,this.write),this;if(e==="base64")return this.accommodate(Math.ceil(t.length/4)*3),s=new Uint8Array(this.data.buffer,this.write),this.write+=g.binary.base64.decode(t,s,this.write),this;if(e==="utf8"&&(t=g.encodeUtf8(t),e="binary"),e==="binary"||e==="raw")return this.accommodate(t.length),s=new Uint8Array(this.data.buffer,this.write),this.write+=g.binary.raw.decode(s),this;if(e==="utf16")return this.accommodate(t.length*2),s=new Uint16Array(this.data.buffer,this.write),this.write+=g.text.utf16.encode(s),this;throw new Error("Invalid encoding: "+e)}throw Error("Invalid parameter: "+t)};g.DataBuffer.prototype.putBuffer=function(t){return this.putBytes(t),t.clear(),this};g.DataBuffer.prototype.putString=function(t){return this.putBytes(t,"utf16")};g.DataBuffer.prototype.putInt16=function(t){return this.accommodate(2),this.data.setInt16(this.write,t),this.write+=2,this};g.DataBuffer.prototype.putInt24=function(t){return this.accommodate(3),this.data.setInt16(this.write,t>>8&65535),this.data.setInt8(this.write,t>>16&255),this.write+=3,this};g.DataBuffer.prototype.putInt32=function(t){return this.accommodate(4),this.data.setInt32(this.write,t),this.write+=4,this};g.DataBuffer.prototype.putInt16Le=function(t){return this.accommodate(2),this.data.setInt16(this.write,t,!0),this.write+=2,this};g.DataBuffer.prototype.putInt24Le=function(t){return this.accommodate(3),this.data.setInt8(this.write,t>>16&255),this.data.setInt16(this.write,t>>8&65535,!0),this.write+=3,this};g.DataBuffer.prototype.putInt32Le=function(t){return this.accommodate(4),this.data.setInt32(this.write,t,!0),this.write+=4,this};g.DataBuffer.prototype.putInt=function(t,e){Xi(e),this.accommodate(e/8);do e-=8,this.data.setInt8(this.write++,t>>e&255);while(e>0);return this};g.DataBuffer.prototype.putSignedInt=function(t,e){return Xi(e),this.accommodate(e/8),t<0&&(t+=2<<e-1),this.putInt(t,e)};g.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)};g.DataBuffer.prototype.getInt16=function(){var t=this.data.getInt16(this.read);return this.read+=2,t};g.DataBuffer.prototype.getInt24=function(){var t=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);return this.read+=3,t};g.DataBuffer.prototype.getInt32=function(){var t=this.data.getInt32(this.read);return this.read+=4,t};g.DataBuffer.prototype.getInt16Le=function(){var t=this.data.getInt16(this.read,!0);return this.read+=2,t};g.DataBuffer.prototype.getInt24Le=function(){var t=this.data.getInt8(this.read)^this.data.getInt16(this.read+1,!0)<<8;return this.read+=3,t};g.DataBuffer.prototype.getInt32Le=function(){var t=this.data.getInt32(this.read,!0);return this.read+=4,t};g.DataBuffer.prototype.getInt=function(t){Xi(t);var e=0;do e=(e<<8)+this.data.getInt8(this.read++),t-=8;while(t>0);return e};g.DataBuffer.prototype.getSignedInt=function(t){var e=this.getInt(t),r=2<<t-2;return e>=r&&(e-=r<<1),e};g.DataBuffer.prototype.getBytes=function(t){var e;return t?(t=Math.min(this.length(),t),e=this.data.slice(this.read,this.read+t),this.read+=t):t===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};g.DataBuffer.prototype.bytes=function(t){return typeof t=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+t)};g.DataBuffer.prototype.at=function(t){return this.data.getUint8(this.read+t)};g.DataBuffer.prototype.setAt=function(t,e){return this.data.setUint8(t,e),this};g.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)};g.DataBuffer.prototype.copy=function(){return new g.DataBuffer(this)};g.DataBuffer.prototype.compact=function(){if(this.read>0){var t=new Uint8Array(this.data.buffer,this.read),e=new Uint8Array(t.byteLength);e.set(t),this.data=new DataView(e),this.write-=this.read,this.read=0}return this};g.DataBuffer.prototype.clear=function(){return this.data=new DataView(new ArrayBuffer(0)),this.read=this.write=0,this};g.DataBuffer.prototype.truncate=function(t){return this.write=Math.max(0,this.length()-t),this.read=Math.min(this.read,this.write),this};g.DataBuffer.prototype.toHex=function(){for(var t="",e=this.read;e<this.data.byteLength;++e){var r=this.data.getUint8(e);r<16&&(t+="0"),t+=r.toString(16)}return t};g.DataBuffer.prototype.toString=function(t){var e=new Uint8Array(this.data,this.read,this.length());if(t=t||"utf8",t==="binary"||t==="raw")return g.binary.raw.encode(e);if(t==="hex")return g.binary.hex.encode(e);if(t==="base64")return g.binary.base64.encode(e);if(t==="utf8")return g.text.utf8.decode(e);if(t==="utf16")return g.text.utf16.decode(e);throw new Error("Invalid encoding: "+t)};g.createBuffer=function(t,e){return e=e||"raw",t!==void 0&&e==="utf8"&&(t=g.encodeUtf8(t)),new g.ByteBuffer(t)};g.fillString=function(t,e){for(var r="";e>0;)e&1&&(r+=t),e>>>=1,e>0&&(t+=t);return r};g.xorBytes=function(t,e,r){for(var i="",n="",s="",o=0,a=0;r>0;--r,++o)n=t.charCodeAt(o)^e.charCodeAt(o),a>=10&&(i+=s,s="",a=0),s+=String.fromCharCode(n),++a;return i+=s,i};g.hexToBytes=function(t){var e="",r=0;for(t.length&!0&&(r=1,e+=String.fromCharCode(parseInt(t[0],16)));r<t.length;r+=2)e+=String.fromCharCode(parseInt(t.substr(r,2),16));return e};g.bytesToHex=function(t){return g.createBuffer(t).toHex()};g.int32ToBytes=function(t){return String.fromCharCode(t>>24&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255)};var pr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",dr=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],xh="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";g.encode64=function(t,e){for(var r="",i="",n,s,o,a=0;a<t.length;)n=t.charCodeAt(a++),s=t.charCodeAt(a++),o=t.charCodeAt(a++),r+=pr.charAt(n>>2),r+=pr.charAt((n&3)<<4|s>>4),isNaN(s)?r+="==":(r+=pr.charAt((s&15)<<2|o>>6),r+=isNaN(o)?"=":pr.charAt(o&63)),e&&r.length>e&&(i+=r.substr(0,e)+`\r
+`,r=r.substr(e));return i+=r,i};g.decode64=function(t){t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");for(var e="",r,i,n,s,o=0;o<t.length;)r=dr[t.charCodeAt(o++)-43],i=dr[t.charCodeAt(o++)-43],n=dr[t.charCodeAt(o++)-43],s=dr[t.charCodeAt(o++)-43],e+=String.fromCharCode(r<<2|i>>4),n!==64&&(e+=String.fromCharCode((i&15)<<4|n>>2),s!==64&&(e+=String.fromCharCode((n&3)<<6|s)));return e};g.encodeUtf8=function(t){return unescape(encodeURIComponent(t))};g.decodeUtf8=function(t){return decodeURIComponent(escape(t))};g.binary={raw:{},hex:{},base64:{},base58:{},baseN:{encode:mh.encode,decode:mh.decode}};g.binary.raw.encode=function(t){return String.fromCharCode.apply(null,t)};g.binary.raw.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(t.length)),r=r||0;for(var n=r,s=0;s<t.length;++s)i[n++]=t.charCodeAt(s);return e?n-r:i};g.binary.hex.encode=g.bytesToHex;g.binary.hex.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(Math.ceil(t.length/2))),r=r||0;var n=0,s=r;for(t.length&1&&(n=1,i[s++]=parseInt(t[0],16));n<t.length;n+=2)i[s++]=parseInt(t.substr(n,2),16);return e?s-r:i};g.binary.base64.encode=function(t,e){for(var r="",i="",n,s,o,a=0;a<t.byteLength;)n=t[a++],s=t[a++],o=t[a++],r+=pr.charAt(n>>2),r+=pr.charAt((n&3)<<4|s>>4),isNaN(s)?r+="==":(r+=pr.charAt((s&15)<<2|o>>6),r+=isNaN(o)?"=":pr.charAt(o&63)),e&&r.length>e&&(i+=r.substr(0,e)+`\r
+`,r=r.substr(e));return i+=r,i};g.binary.base64.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(Math.ceil(t.length/4)*3)),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,""),r=r||0;for(var n,s,o,a,f=0,u=r;f<t.length;)n=dr[t.charCodeAt(f++)-43],s=dr[t.charCodeAt(f++)-43],o=dr[t.charCodeAt(f++)-43],a=dr[t.charCodeAt(f++)-43],i[u++]=n<<2|s>>4,o!==64&&(i[u++]=(s&15)<<4|o>>2,a!==64&&(i[u++]=(o&3)<<6|a));return e?u-r:i.subarray(0,u)};g.binary.base58.encode=function(t,e){return g.binary.baseN.encode(t,xh,e)};g.binary.base58.decode=function(t,e){return g.binary.baseN.decode(t,xh,e)};g.text={utf8:{},utf16:{}};g.text.utf8.encode=function(t,e,r){t=g.encodeUtf8(t);var i=e;i||(i=new Uint8Array(t.length)),r=r||0;for(var n=r,s=0;s<t.length;++s)i[n++]=t.charCodeAt(s);return e?n-r:i};g.text.utf8.decode=function(t){return g.decodeUtf8(String.fromCharCode.apply(null,t))};g.text.utf16.encode=function(t,e,r){var i=e;i||(i=new Uint8Array(t.length*2));var n=new Uint16Array(i.buffer);r=r||0;for(var s=r,o=r,a=0;a<t.length;++a)n[o++]=t.charCodeAt(a),s+=2;return e?s-r:i};g.text.utf16.decode=function(t){return String.fromCharCode.apply(null,new Uint16Array(t.buffer))};g.deflate=function(t,e,r){if(e=g.decode64(t.deflate(g.encode64(e)).rval),r){var i=2,n=e.charCodeAt(1);n&32&&(i=6),e=e.substring(i,e.length-4)}return e};g.inflate=function(t,e,r){var i=t.inflate(g.encode64(e)).rval;return i===null?null:g.decode64(i)};var ha=function(t,e,r){if(!t)throw new Error("WebStorage not available.");var i;if(r===null?i=t.removeItem(e):(r=g.encode64(JSON.stringify(r)),i=t.setItem(e,r)),typeof i!="undefined"&&i.rval!==!0){var n=new Error(i.error.message);throw n.id=i.error.id,n.name=i.error.name,n}},la=function(t,e){if(!t)throw new Error("WebStorage not available.");var r=t.getItem(e);if(t.init)if(r.rval===null){if(r.error){var i=new Error(r.error.message);throw i.id=r.error.id,i.name=r.error.name,i}r=null}else r=r.rval;return r!==null&&(r=JSON.parse(g.decode64(r))),r},_b=function(t,e,r,i){var n=la(t,e);n===null&&(n={}),n[r]=i,ha(t,e,n)},Sb=function(t,e,r){var i=la(t,e);return i!==null&&(i=r in i?i[r]:null),i},Ib=function(t,e,r){var i=la(t,e);if(i!==null&&r in i){delete i[r];var n=!0;for(var s in i){n=!1;break}n&&(i=null),ha(t,e,i)}},Ab=function(t,e){ha(t,e,null)},cs=function(t,e,r){var i=null;typeof r=="undefined"&&(r=["web","flash"]);var n,s=!1,o=null;for(var a in r){n=r[a];try{if(n==="flash"||n==="both"){if(e[0]===null)throw new Error("Flash local storage not available.");i=t.apply(this,e),s=n==="flash"}(n==="web"||n==="both")&&(e[0]=localStorage,i=t.apply(this,e),s=!0)}catch(f){o=f}if(s)break}if(!s)throw o;return i};g.setItem=function(t,e,r,i,n){cs(_b,arguments,n)};g.getItem=function(t,e,r,i){return cs(Sb,arguments,i)};g.removeItem=function(t,e,r,i){cs(Ib,arguments,i)};g.clearItems=function(t,e,r){cs(Ab,arguments,r)};g.isEmpty=function(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0};g.format=function(t){for(var e=/%./g,r,i,n=0,s=[],o=0;r=e.exec(t);){i=t.substring(o,e.lastIndex-2),i.length>0&&s.push(i),o=e.lastIndex;var a=r[0][1];switch(a){case"s":case"o":n<arguments.length?s.push(arguments[n+++1]):s.push("<?>");break;case"%":s.push("%");break;default:s.push("<%"+a+"?>")}}return s.push(t.substring(o)),s.join("")};g.formatNumber=function(t,e,r,i){var n=t,s=isNaN(e=Math.abs(e))?2:e,o=r===void 0?",":r,a=i===void 0?".":i,f=n<0?"-":"",u=parseInt(n=Math.abs(+n||0).toFixed(s),10)+"",c=u.length>3?u.length%3:0;return f+(c?u.substr(0,c)+a:"")+u.substr(c).replace(/(\d{3})(?=\d)/g,"$1"+a)+(s?o+Math.abs(n-u).toFixed(s).slice(2):"")};g.formatSize=function(t){return t>=1073741824?t=g.formatNumber(t/1073741824,2,".","")+" GiB":t>=1048576?t=g.formatNumber(t/1048576,2,".","")+" MiB":t>=1024?t=g.formatNumber(t/1024,0)+" KiB":t=g.formatNumber(t,0)+" bytes",t};g.bytesFromIP=function(t){return t.indexOf(".")!==-1?g.bytesFromIPv4(t):t.indexOf(":")!==-1?g.bytesFromIPv6(t):null};g.bytesFromIPv4=function(t){if(t=t.split("."),t.length!==4)return null;for(var e=g.createBuffer(),r=0;r<t.length;++r){var i=parseInt(t[r],10);if(isNaN(i))return null;e.putByte(i)}return e.getBytes()};g.bytesFromIPv6=function(t){var e=0;t=t.split(":").filter(function(o){return o.length===0&&++e,!0});for(var r=(8-t.length+e)*2,i=g.createBuffer(),n=0;n<8;++n){if(!t[n]||t[n].length===0){i.fillWithByte(0,r),r=0;continue}var s=g.hexToBytes(t[n]);s.length<2&&i.putByte(0),i.putBytes(s)}return i.getBytes()};g.bytesToIP=function(t){return t.length===4?g.bytesToIPv4(t):t.length===16?g.bytesToIPv6(t):null};g.bytesToIPv4=function(t){if(t.length!==4)return null;for(var e=[],r=0;r<t.length;++r)e.push(t.charCodeAt(r));return e.join(".")};g.bytesToIPv6=function(t){if(t.length!==16)return null;for(var e=[],r=[],i=0,n=0;n<t.length;n+=2){for(var s=g.bytesToHex(t[n]+t[n+1]);s[0]==="0"&&s!=="0";)s=s.substr(1);if(s==="0"){var o=r[r.length-1],a=e.length;!o||a!==o.end+1?r.push({start:a,end:a}):(o.end=a,o.end-o.start>r[i].end-r[i].start&&(i=r.length-1))}e.push(s)}if(r.length>0){var f=r[i];f.end-f.start>0&&(e.splice(f.start,f.end-f.start+1,""),f.start===0&&e.unshift(""),f.end===7&&e.push(""))}return e.join(":")};g.estimateCores=function(t,e){if(typeof t=="function"&&(e=t,t={}),t=t||{},"cores"in g&&!t.update)return e(null,g.cores);if(typeof navigator!="undefined"&&"hardwareConcurrency"in navigator&&navigator.hardwareConcurrency>0)return g.cores=navigator.hardwareConcurrency,e(null,g.cores);if(typeof Worker=="undefined")return g.cores=1,e(null,g.cores);if(typeof Blob=="undefined")return g.cores=2,e(null,g.cores);var r=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(o){for(var a=Date.now(),f=a+4;Date.now()<f;);self.postMessage({st:a,et:f})})}.toString(),")()"],{type:"application/javascript"}));i([],5,16);function i(o,a,f){if(a===0){var u=Math.floor(o.reduce(function(c,h){return c+h},0)/o.length);return g.cores=Math.max(1,u),URL.revokeObjectURL(r),e(null,g.cores)}n(f,function(c,h){o.push(s(f,h)),i(o,a-1,f)})}function n(o,a){for(var f=[],u=[],c=0;c<o;++c){var h=new Worker(r);h.addEventListener("message",function(l){if(u.push(l.data),u.length===o){for(var d=0;d<o;++d)f[d].terminate();a(null,u)}}),f.push(h)}for(var c=0;c<o;++c)f[c].postMessage(c)}function s(o,a){for(var f=[],u=0;u<o;++u)for(var c=a[u],h=f[u]=[],l=0;l<o;++l)if(u!==l){var d=a[l];(c.st>d.st&&c.st<d.et||d.st>c.st&&d.st<c.et)&&h.push(l)}return f.reduce(function(p,y){return Math.max(p,y.length)},0)}}});var us=x((eS,wh)=>{var Ji=ne();Ji.pki=Ji.pki||{};var pa=wh.exports=Ji.pki.oids=Ji.oids=Ji.oids||{};function C(t,e){pa[t]=e,pa[e]=t}function te(t,e){pa[t]=e}C("1.2.840.113549.1.1.1","rsaEncryption");C("1.2.840.113549.1.1.4","md5WithRSAEncryption");C("1.2.840.113549.1.1.5","sha1WithRSAEncryption");C("1.2.840.113549.1.1.7","RSAES-OAEP");C("1.2.840.113549.1.1.8","mgf1");C("1.2.840.113549.1.1.9","pSpecified");C("1.2.840.113549.1.1.10","RSASSA-PSS");C("1.2.840.113549.1.1.11","sha256WithRSAEncryption");C("1.2.840.113549.1.1.12","sha384WithRSAEncryption");C("1.2.840.113549.1.1.13","sha512WithRSAEncryption");C("1.3.101.112","EdDSA25519");C("1.2.840.10040.4.3","dsa-with-sha1");C("1.3.14.3.2.7","desCBC");C("1.3.14.3.2.26","sha1");C("1.3.14.3.2.29","sha1WithRSASignature");C("2.16.840.1.101.3.4.2.1","sha256");C("2.16.840.1.101.3.4.2.2","sha384");C("2.16.840.1.101.3.4.2.3","sha512");C("2.16.840.1.101.3.4.2.4","sha224");C("2.16.840.1.101.3.4.2.5","sha512-224");C("2.16.840.1.101.3.4.2.6","sha512-256");C("1.2.840.113549.2.2","md2");C("1.2.840.113549.2.5","md5");C("1.2.840.113549.1.7.1","data");C("1.2.840.113549.1.7.2","signedData");C("1.2.840.113549.1.7.3","envelopedData");C("1.2.840.113549.1.7.4","signedAndEnvelopedData");C("1.2.840.113549.1.7.5","digestedData");C("1.2.840.113549.1.7.6","encryptedData");C("1.2.840.113549.1.9.1","emailAddress");C("1.2.840.113549.1.9.2","unstructuredName");C("1.2.840.113549.1.9.3","contentType");C("1.2.840.113549.1.9.4","messageDigest");C("1.2.840.113549.1.9.5","signingTime");C("1.2.840.113549.1.9.6","counterSignature");C("1.2.840.113549.1.9.7","challengePassword");C("1.2.840.113549.1.9.8","unstructuredAddress");C("1.2.840.113549.1.9.14","extensionRequest");C("1.2.840.113549.1.9.20","friendlyName");C("1.2.840.113549.1.9.21","localKeyId");C("1.2.840.113549.1.9.22.1","x509Certificate");C("1.2.840.113549.1.12.10.1.1","keyBag");C("1.2.840.113549.1.12.10.1.2","pkcs8ShroudedKeyBag");C("1.2.840.113549.1.12.10.1.3","certBag");C("1.2.840.113549.1.12.10.1.4","crlBag");C("1.2.840.113549.1.12.10.1.5","secretBag");C("1.2.840.113549.1.12.10.1.6","safeContentsBag");C("1.2.840.113549.1.5.13","pkcs5PBES2");C("1.2.840.113549.1.5.12","pkcs5PBKDF2");C("1.2.840.113549.1.12.1.1","pbeWithSHAAnd128BitRC4");C("1.2.840.113549.1.12.1.2","pbeWithSHAAnd40BitRC4");C("1.2.840.113549.1.12.1.3","pbeWithSHAAnd3-KeyTripleDES-CBC");C("1.2.840.113549.1.12.1.4","pbeWithSHAAnd2-KeyTripleDES-CBC");C("1.2.840.113549.1.12.1.5","pbeWithSHAAnd128BitRC2-CBC");C("1.2.840.113549.1.12.1.6","pbewithSHAAnd40BitRC2-CBC");C("1.2.840.113549.2.7","hmacWithSHA1");C("1.2.840.113549.2.8","hmacWithSHA224");C("1.2.840.113549.2.9","hmacWithSHA256");C("1.2.840.113549.2.10","hmacWithSHA384");C("1.2.840.113549.2.11","hmacWithSHA512");C("1.2.840.113549.3.7","des-EDE3-CBC");C("2.16.840.1.101.3.4.1.2","aes128-CBC");C("2.16.840.1.101.3.4.1.22","aes192-CBC");C("2.16.840.1.101.3.4.1.42","aes256-CBC");C("2.5.4.3","commonName");C("2.5.4.4","surname");C("2.5.4.5","serialNumber");C("2.5.4.6","countryName");C("2.5.4.7","localityName");C("2.5.4.8","stateOrProvinceName");C("2.5.4.9","streetAddress");C("2.5.4.10","organizationName");C("2.5.4.11","organizationalUnitName");C("2.5.4.12","title");C("2.5.4.13","description");C("2.5.4.15","businessCategory");C("2.5.4.17","postalCode");C("2.5.4.42","givenName");C("1.3.6.1.4.1.311.60.2.1.2","jurisdictionOfIncorporationStateOrProvinceName");C("1.3.6.1.4.1.311.60.2.1.3","jurisdictionOfIncorporationCountryName");C("2.16.840.1.113730.1.1","nsCertType");C("2.16.840.1.113730.1.13","nsComment");te("2.5.29.1","authorityKeyIdentifier");te("2.5.29.2","keyAttributes");te("2.5.29.3","certificatePolicies");te("2.5.29.4","keyUsageRestriction");te("2.5.29.5","policyMapping");te("2.5.29.6","subtreesConstraint");te("2.5.29.7","subjectAltName");te("2.5.29.8","issuerAltName");te("2.5.29.9","subjectDirectoryAttributes");te("2.5.29.10","basicConstraints");te("2.5.29.11","nameConstraints");te("2.5.29.12","policyConstraints");te("2.5.29.13","basicConstraints");C("2.5.29.14","subjectKeyIdentifier");C("2.5.29.15","keyUsage");te("2.5.29.16","privateKeyUsagePeriod");C("2.5.29.17","subjectAltName");C("2.5.29.18","issuerAltName");C("2.5.29.19","basicConstraints");te("2.5.29.20","cRLNumber");te("2.5.29.21","cRLReason");te("2.5.29.22","expirationDate");te("2.5.29.23","instructionCode");te("2.5.29.24","invalidityDate");te("2.5.29.25","cRLDistributionPoints");te("2.5.29.26","issuingDistributionPoint");te("2.5.29.27","deltaCRLIndicator");te("2.5.29.28","issuingDistributionPoint");te("2.5.29.29","certificateIssuer");te("2.5.29.30","nameConstraints");C("2.5.29.31","cRLDistributionPoints");C("2.5.29.32","certificatePolicies");te("2.5.29.33","policyMappings");te("2.5.29.34","policyConstraints");C("2.5.29.35","authorityKeyIdentifier");te("2.5.29.36","policyConstraints");C("2.5.29.37","extKeyUsage");te("2.5.29.46","freshestCRL");te("2.5.29.54","inhibitAnyPolicy");C("1.3.6.1.4.1.11129.2.4.2","timestampList");C("1.3.6.1.5.5.7.1.1","authorityInfoAccess");C("1.3.6.1.5.5.7.3.1","serverAuth");C("1.3.6.1.5.5.7.3.2","clientAuth");C("1.3.6.1.5.5.7.3.3","codeSigning");C("1.3.6.1.5.5.7.3.4","emailProtection");C("1.3.6.1.5.5.7.3.8","timeStamping")});var tn=x((tS,Sh)=>{var he=ne();Ie();us();var P=Sh.exports=he.asn1=he.asn1||{};P.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192};P.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30};P.create=function(t,e,r,i,n){if(he.util.isArray(i)){for(var s=[],o=0;o<i.length;++o)i[o]!==void 0&&s.push(i[o]);i=s}var a={tagClass:t,type:e,constructed:r,composed:r||he.util.isArray(i),value:i};return n&&"bitStringContents"in n&&(a.bitStringContents=n.bitStringContents,a.original=P.copy(a)),a};P.copy=function(t,e){var r;if(he.util.isArray(t)){r=[];for(var i=0;i<t.length;++i)r.push(P.copy(t[i],e));return r}return typeof t=="string"?t:(r={tagClass:t.tagClass,type:t.type,constructed:t.constructed,composed:t.composed,value:P.copy(t.value,e)},e&&!e.excludeBitStringContents&&(r.bitStringContents=t.bitStringContents),r)};P.equals=function(t,e,r){if(he.util.isArray(t)){if(!he.util.isArray(e)||t.length!==e.length)return!1;for(var i=0;i<t.length;++i)if(!P.equals(t[i],e[i]))return!1;return!0}if(typeof t!=typeof e)return!1;if(typeof t=="string")return t===e;var n=t.tagClass===e.tagClass&&t.type===e.type&&t.constructed===e.constructed&&t.composed===e.composed&&P.equals(t.value,e.value);return r&&r.includeBitStringContents&&(n=n&&t.bitStringContents===e.bitStringContents),n};P.getBerValueLength=function(t){var e=t.getByte();if(e!==128){var r,i=e&128;return i?r=t.getInt((e&127)<<3):r=e,r}};function en(t,e,r){if(r>e){var i=new Error("Too few bytes to parse DER.");throw i.available=t.length(),i.remaining=e,i.requested=r,i}}var Cb=function(t,e){var r=t.getByte();if(e--,r!==128){var i,n=r&128;if(!n)i=r;else{var s=r&127;en(t,e,s),i=t.getInt(s<<3)}if(i<0)throw new Error("Negative length: "+i);return i}};P.fromDer=function(t,e){e===void 0&&(e={strict:!0,parseAllBytes:!0,decodeBitStrings:!0}),typeof e=="boolean"&&(e={strict:e,parseAllBytes:!0,decodeBitStrings:!0}),"strict"in e||(e.strict=!0),"parseAllBytes"in e||(e.parseAllBytes=!0),"decodeBitStrings"in e||(e.decodeBitStrings=!0),typeof t=="string"&&(t=he.util.createBuffer(t));var r=t.length(),i=fs(t,t.length(),0,e);if(e.parseAllBytes&&t.length()!==0){var n=new Error("Unparsed DER bytes remain after ASN.1 parsing.");throw n.byteCount=r,n.remaining=t.length(),n}return i};function fs(t,e,r,i){var n;en(t,e,2);var s=t.getByte();e--;var o=s&192,a=s&31;n=t.length();var f=Cb(t,e);if(e-=n-t.length(),f!==void 0&&f>e){if(i.strict){var u=new Error("Too few bytes to read ASN.1 value.");throw u.available=t.length(),u.remaining=e,u.requested=f,u}f=e}var c,h,l=(s&32)==32;if(l)if(c=[],f===void 0)for(;;){if(en(t,e,2),t.bytes(2)===String.fromCharCode(0,0)){t.getBytes(2),e-=2;break}n=t.length(),c.push(fs(t,e,r+1,i)),e-=n-t.length()}else for(;f>0;)n=t.length(),c.push(fs(t,f,r+1,i)),e-=n-t.length(),f-=n-t.length();if(c===void 0&&o===P.Class.UNIVERSAL&&a===P.Type.BITSTRING&&(h=t.bytes(f)),c===void 0&&i.decodeBitStrings&&o===P.Class.UNIVERSAL&&a===P.Type.BITSTRING&&f>1){var d=t.read,p=e,y=0;if(a===P.Type.BITSTRING&&(en(t,e,1),y=t.getByte(),e--),y===0)try{n=t.length();var v={strict:!0,decodeBitStrings:!0},b=fs(t,e,r+1,v),E=n-t.length();e-=E,a==P.Type.BITSTRING&&E++;var I=b.tagClass;E===f&&(I===P.Class.UNIVERSAL||I===P.Class.CONTEXT_SPECIFIC)&&(c=[b])}catch(T){}c===void 0&&(t.read=d,e=p)}if(c===void 0){if(f===void 0){if(i.strict)throw new Error("Non-constructed ASN.1 object of indefinite length.");f=e}if(a===P.Type.BMPSTRING)for(c="";f>0;f-=2)en(t,e,2),c+=String.fromCharCode(t.getInt16()),e-=2;else c=t.getBytes(f),e-=f}var D=h===void 0?null:{bitStringContents:h};return P.create(o,a,l,c,D)}P.toDer=function(t){var e=he.util.createBuffer(),r=t.tagClass|t.type,i=he.util.createBuffer(),n=!1;if("bitStringContents"in t&&(n=!0,t.original&&(n=P.equals(t,t.original))),n)i.putBytes(t.bitStringContents);else if(t.composed){t.constructed?r|=32:i.putByte(0);for(var s=0;s<t.value.length;++s)t.value[s]!==void 0&&i.putBuffer(P.toDer(t.value[s]))}else if(t.type===P.Type.BMPSTRING)for(var s=0;s<t.value.length;++s)i.putInt16(t.value.charCodeAt(s));else t.type===P.Type.INTEGER&&t.value.length>1&&(t.value.charCodeAt(0)===0&&(t.value.charCodeAt(1)&128)==0||t.value.charCodeAt(0)===255&&(t.value.charCodeAt(1)&128)==128)?i.putBytes(t.value.substr(1)):i.putBytes(t.value);if(e.putByte(r),i.length()<=127)e.putByte(i.length()&127);else{var o=i.length(),a="";do a+=String.fromCharCode(o&255),o=o>>>8;while(o>0);e.putByte(a.length|128);for(var s=a.length-1;s>=0;--s)e.putByte(a.charCodeAt(s))}return e.putBuffer(i),e};P.oidToDer=function(t){var e=t.split("."),r=he.util.createBuffer();r.putByte(40*parseInt(e[0],10)+parseInt(e[1],10));for(var i,n,s,o,a=2;a<e.length;++a){i=!0,n=[],s=parseInt(e[a],10);do o=s&127,s=s>>>7,i||(o|=128),n.push(o),i=!1;while(s>0);for(var f=n.length-1;f>=0;--f)r.putByte(n[f])}return r};P.derToOid=function(t){var e;typeof t=="string"&&(t=he.util.createBuffer(t));var r=t.getByte();e=Math.floor(r/40)+"."+r%40;for(var i=0;t.length()>0;)r=t.getByte(),i=i<<7,r&128?i+=r&127:(e+="."+(i+r),i=0);return e};P.utcTimeToDate=function(t){var e=new Date,r=parseInt(t.substr(0,2),10);r=r>=50?1900+r:2e3+r;var i=parseInt(t.substr(2,2),10)-1,n=parseInt(t.substr(4,2),10),s=parseInt(t.substr(6,2),10),o=parseInt(t.substr(8,2),10),a=0;if(t.length>11){var f=t.charAt(10),u=10;f!=="+"&&f!=="-"&&(a=parseInt(t.substr(10,2),10),u+=2)}if(e.setUTCFullYear(r,i,n),e.setUTCHours(s,o,a,0),u&&(f=t.charAt(u),f==="+"||f==="-")){var c=parseInt(t.substr(u+1,2),10),h=parseInt(t.substr(u+4,2),10),l=c*60+h;l*=6e4,f==="+"?e.setTime(+e-l):e.setTime(+e+l)}return e};P.generalizedTimeToDate=function(t){var e=new Date,r=parseInt(t.substr(0,4),10),i=parseInt(t.substr(4,2),10)-1,n=parseInt(t.substr(6,2),10),s=parseInt(t.substr(8,2),10),o=parseInt(t.substr(10,2),10),a=parseInt(t.substr(12,2),10),f=0,u=0,c=!1;t.charAt(t.length-1)==="Z"&&(c=!0);var h=t.length-5,l=t.charAt(h);if(l==="+"||l==="-"){var d=parseInt(t.substr(h+1,2),10),p=parseInt(t.substr(h+4,2),10);u=d*60+p,u*=6e4,l==="+"&&(u*=-1),c=!0}return t.charAt(14)==="."&&(f=parseFloat(t.substr(14),10)*1e3),c?(e.setUTCFullYear(r,i,n),e.setUTCHours(s,o,a,f),e.setTime(+e+u)):(e.setFullYear(r,i,n),e.setHours(s,o,a,f)),e};P.dateToUtcTime=function(t){if(typeof t=="string")return t;var e="",r=[];r.push((""+t.getUTCFullYear()).substr(2)),r.push(""+(t.getUTCMonth()+1)),r.push(""+t.getUTCDate()),r.push(""+t.getUTCHours()),r.push(""+t.getUTCMinutes()),r.push(""+t.getUTCSeconds());for(var i=0;i<r.length;++i)r[i].length<2&&(e+="0"),e+=r[i];return e+="Z",e};P.dateToGeneralizedTime=function(t){if(typeof t=="string")return t;var e="",r=[];r.push(""+t.getUTCFullYear()),r.push(""+(t.getUTCMonth()+1)),r.push(""+t.getUTCDate()),r.push(""+t.getUTCHours()),r.push(""+t.getUTCMinutes()),r.push(""+t.getUTCSeconds());for(var i=0;i<r.length;++i)r[i].length<2&&(e+="0"),e+=r[i];return e+="Z",e};P.integerToDer=function(t){var e=he.util.createBuffer();if(t>=-128&&t<128)return e.putSignedInt(t,8);if(t>=-32768&&t<32768)return e.putSignedInt(t,16);if(t>=-8388608&&t<8388608)return e.putSignedInt(t,24);if(t>=-2147483648&&t<2147483648)return e.putSignedInt(t,32);var r=new Error("Integer too large; max is 32-bits.");throw r.integer=t,r};P.derToInteger=function(t){typeof t=="string"&&(t=he.util.createBuffer(t));var e=t.length()*8;if(e>32)throw new Error("Integer too large; max is 32-bits.");return t.getSignedInt(e)};P.validate=function(t,e,r,i){var n=!1;if((t.tagClass===e.tagClass||typeof e.tagClass=="undefined")&&(t.type===e.type||typeof e.type=="undefined"))if(t.constructed===e.constructed||typeof e.constructed=="undefined"){if(n=!0,e.value&&he.util.isArray(e.value))for(var s=0,o=0;n&&o<e.value.length;++o)n=e.value[o].optional||!1,t.value[s]&&(n=P.validate(t.value[s],e.value[o],r,i),n?++s:e.value[o].optional&&(n=!0)),!n&&i&&i.push("["+e.name+'] Tag class "'+e.tagClass+'", type "'+e.type+'" expected value length "'+e.value.length+'", got "'+t.value.length+'"');if(n&&r&&(e.capture&&(r[e.capture]=t.value),e.captureAsn1&&(r[e.captureAsn1]=t),e.captureBitStringContents&&"bitStringContents"in t&&(r[e.captureBitStringContents]=t.bitStringContents),e.captureBitStringValue&&"bitStringContents"in t)){var a;if(t.bitStringContents.length<2)r[e.captureBitStringValue]="";else{var f=t.bitStringContents.charCodeAt(0);if(f!==0)throw new Error("captureBitStringValue only supported for zero unused bits");r[e.captureBitStringValue]=t.bitStringContents.slice(1)}}}else i&&i.push("["+e.name+'] Expected constructed "'+e.constructed+'", got "'+t.constructed+'"');else i&&(t.tagClass!==e.tagClass&&i.push("["+e.name+'] Expected tag class "'+e.tagClass+'", got "'+t.tagClass+'"'),t.type!==e.type&&i.push("["+e.name+'] Expected type "'+e.type+'", got "'+t.type+'"'));return n};var _h=/[^\\u0000-\\u00ff]/;P.prettyPrint=function(t,e,r){var i="";e=e||0,r=r||2,e>0&&(i+=`
+`);for(var n="",s=0;s<e*r;++s)n+=" ";switch(i+=n+"Tag: ",t.tagClass){case P.Class.UNIVERSAL:i+="Universal:";break;case P.Class.APPLICATION:i+="Application:";break;case P.Class.CONTEXT_SPECIFIC:i+="Context-Specific:";break;case P.Class.PRIVATE:i+="Private:";break}if(t.tagClass===P.Class.UNIVERSAL)switch(i+=t.type,t.type){case P.Type.NONE:i+=" (None)";break;case P.Type.BOOLEAN:i+=" (Boolean)";break;case P.Type.INTEGER:i+=" (Integer)";break;case P.Type.BITSTRING:i+=" (Bit string)";break;case P.Type.OCTETSTRING:i+=" (Octet string)";break;case P.Type.NULL:i+=" (Null)";break;case P.Type.OID:i+=" (Object Identifier)";break;case P.Type.ODESC:i+=" (Object Descriptor)";break;case P.Type.EXTERNAL:i+=" (External or Instance of)";break;case P.Type.REAL:i+=" (Real)";break;case P.Type.ENUMERATED:i+=" (Enumerated)";break;case P.Type.EMBEDDED:i+=" (Embedded PDV)";break;case P.Type.UTF8:i+=" (UTF8)";break;case P.Type.ROID:i+=" (Relative Object Identifier)";break;case P.Type.SEQUENCE:i+=" (Sequence)";break;case P.Type.SET:i+=" (Set)";break;case P.Type.PRINTABLESTRING:i+=" (Printable String)";break;case P.Type.IA5String:i+=" (IA5String (ASCII))";break;case P.Type.UTCTIME:i+=" (UTC time)";break;case P.Type.GENERALIZEDTIME:i+=" (Generalized time)";break;case P.Type.BMPSTRING:i+=" (BMP String)";break}else i+=t.type;if(i+=`
 `,i+=n+"Constructed: "+t.constructed+`
-`,t.composed){for(var a=0,o="",s=0;s<t.value.length;++s)t.value[s]!==void 0&&(a+=1,o+=F.prettyPrint(t.value[s],e+1,r),s+1<t.value.length&&(o+=","));i+=n+"Sub values: "+a+o}else{if(i+=n+"Value: ",t.type===F.Type.OID){var f=F.derToOid(t.value);i+=f,Le.pki&&Le.pki.oids&&f in Le.pki.oids&&(i+=" ("+Le.pki.oids[f]+") ")}if(t.type===F.Type.INTEGER)try{i+=F.derToInteger(t.value)}catch(c){i+="0x"+Le.util.bytesToHex(t.value)}else if(t.type===F.Type.BITSTRING){if(t.value.length>1?i+="0x"+Le.util.bytesToHex(t.value.slice(1)):i+="(none)",t.value.length>0){var u=t.value.charCodeAt(0);u==1?i+=" (1 unused bit shown)":u>1&&(i+=" ("+u+" unused bits shown)")}}else t.type===F.Type.OCTETSTRING?($d.test(t.value)||(i+="("+t.value+") "),i+="0x"+Le.util.bytesToHex(t.value)):t.type===F.Type.UTF8?i+=Le.util.decodeUtf8(t.value):t.type===F.Type.PRINTABLESTRING||t.type===F.Type.IA5String?i+=t.value:$d.test(t.value)?i+="0x"+Le.util.bytesToHex(t.value):t.value.length===0?i+="[null]":i+=t.value}return i}});var Wu=E((x6,Zd)=>{var at=Se();$e();Zd.exports=at.cipher=at.cipher||{};at.cipher.algorithms=at.cipher.algorithms||{};at.cipher.createCipher=function(t,e){var r=t;if(typeof r=="string"&&(r=at.cipher.getAlgorithm(r),r&&(r=r())),!r)throw new Error("Unsupported algorithm: "+t);return new at.cipher.BlockCipher({algorithm:r,key:e,decrypt:!1})};at.cipher.createDecipher=function(t,e){var r=t;if(typeof r=="string"&&(r=at.cipher.getAlgorithm(r),r&&(r=r())),!r)throw new Error("Unsupported algorithm: "+t);return new at.cipher.BlockCipher({algorithm:r,key:e,decrypt:!0})};at.cipher.registerAlgorithm=function(t,e){t=t.toUpperCase(),at.cipher.algorithms[t]=e};at.cipher.getAlgorithm=function(t){return t=t.toUpperCase(),t in at.cipher.algorithms?at.cipher.algorithms[t]:null};var ju=at.cipher.BlockCipher=function(t){this.algorithm=t.algorithm,this.mode=this.algorithm.mode,this.blockSize=this.mode.blockSize,this._finish=!1,this._input=null,this.output=null,this._op=t.decrypt?this.mode.decrypt:this.mode.encrypt,this._decrypt=t.decrypt,this.algorithm.initialize(t)};ju.prototype.start=function(t){t=t||{};var e={};for(var r in t)e[r]=t[r];e.decrypt=this._decrypt,this._finish=!1,this._input=at.util.createBuffer(),this.output=t.output||at.util.createBuffer(),this.mode.start(e)};ju.prototype.update=function(t){for(t&&this._input.putBuffer(t);!this._op.call(this.mode,this._input,this.output,this._finish)&&!this._finish;);this._input.compact()};ju.prototype.finish=function(t){t&&(this.mode.name==="ECB"||this.mode.name==="CBC")&&(this.mode.pad=function(r){return t(this.blockSize,r,!1)},this.mode.unpad=function(r){return t(this.blockSize,r,!0)});var e={};return e.decrypt=this._decrypt,e.overflow=this._input.length()%this.blockSize,!(!this._decrypt&&this.mode.pad&&!this.mode.pad(this._input,e)||(this._finish=!0,this.update(),this._decrypt&&this.mode.unpad&&!this.mode.unpad(this.output,e))||this.mode.afterFinish&&!this.mode.afterFinish(this.output,e))}});var $u=E((b6,Xd)=>{var ot=Se();$e();ot.cipher=ot.cipher||{};var te=Xd.exports=ot.cipher.modes=ot.cipher.modes||{};te.ecb=function(t){t=t||{},this.name="ECB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};te.ecb.prototype.start=function(t){};te.ecb.prototype.encrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i])};te.ecb.prototype.decrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i])};te.ecb.prototype.pad=function(t,e){var r=t.length()===this.blockSize?this.blockSize:this.blockSize-t.length();return t.fillWithByte(r,r),!0};te.ecb.prototype.unpad=function(t,e){if(e.overflow>0)return!1;var r=t.length(),i=t.at(r-1);return i>this.blockSize<<2?!1:(t.truncate(i),!0)};te.cbc=function(t){t=t||{},this.name="CBC",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};te.cbc.prototype.start=function(t){if(t.iv===null){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else if("iv"in t)this._iv=ho(t.iv,this.blockSize),this._prev=this._iv.slice(0);else throw new Error("Invalid IV parameter.")};te.cbc.prototype.encrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=this._prev[i]^t.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i]);this._prev=this._outBlock};te.cbc.prototype.decrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._prev[i]^this._outBlock[i]);this._prev=this._inBlock.slice(0)};te.cbc.prototype.pad=function(t,e){var r=t.length()===this.blockSize?this.blockSize:this.blockSize-t.length();return t.fillWithByte(r,r),!0};te.cbc.prototype.unpad=function(t,e){if(e.overflow>0)return!1;var r=t.length(),i=t.at(r-1);return i>this.blockSize<<2?!1:(t.truncate(i),!0)};te.cfb=function(t){t=t||{},this.name="CFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialBlock=new Array(this._ints),this._partialOutput=ot.util.createBuffer(),this._partialBytes=0};te.cfb.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=ho(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};te.cfb.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)this._inBlock[n]=t.getInt32()^this._outBlock[n],e.putInt32(this._inBlock[n]);return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialBlock[n]=t.getInt32()^this._outBlock[n],this._partialOutput.putInt32(this._partialBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._partialBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};te.cfb.prototype.decrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)this._inBlock[n]=t.getInt32(),e.putInt32(this._inBlock[n]^this._outBlock[n]);return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialBlock[n]=t.getInt32(),this._partialOutput.putInt32(this._partialBlock[n]^this._outBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._partialBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};te.ofb=function(t){t=t||{},this.name="OFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=ot.util.createBuffer(),this._partialBytes=0};te.ofb.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=ho(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};te.ofb.prototype.encrypt=function(t,e,r){var i=t.length();if(t.length()===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)e.putInt32(t.getInt32()^this._outBlock[n]),this._inBlock[n]=this._outBlock[n];return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._outBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};te.ofb.prototype.decrypt=te.ofb.prototype.encrypt;te.ctr=function(t){t=t||{},this.name="CTR",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=ot.util.createBuffer(),this._partialBytes=0};te.ctr.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=ho(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};te.ctr.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize)for(var n=0;n<this._ints;++n)e.putInt32(t.getInt32()^this._outBlock[n]);else{var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s>0&&(t.read-=this.blockSize),this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}lo(this._inBlock)};te.ctr.prototype.decrypt=te.ctr.prototype.encrypt;te.gcm=function(t){t=t||{},this.name="GCM",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints),this._partialOutput=ot.util.createBuffer(),this._partialBytes=0,this._R=3774873600};te.gcm.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");var e=ot.util.createBuffer(t.iv);this._cipherLength=0;var r;if("additionalData"in t?r=ot.util.createBuffer(t.additionalData):r=ot.util.createBuffer(),"tagLength"in t?this._tagLength=t.tagLength:this._tagLength=128,this._tag=null,t.decrypt&&(this._tag=ot.util.createBuffer(t.tag).getBytes(),this._tag.length!==this._tagLength/8))throw new Error("Authentication tag does not match tag length.");this._hashBlock=new Array(this._ints),this.tag=null,this._hashSubkey=new Array(this._ints),this.cipher.encrypt([0,0,0,0],this._hashSubkey),this.componentBits=4,this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var i=e.length();if(i===12)this._j0=[e.getInt32(),e.getInt32(),e.getInt32(),1];else{for(this._j0=[0,0,0,0];e.length()>0;)this._j0=this.ghash(this._hashSubkey,this._j0,[e.getInt32(),e.getInt32(),e.getInt32(),e.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(Yu(i*8)))}this._inBlock=this._j0.slice(0),lo(this._inBlock),this._partialBytes=0,r=ot.util.createBuffer(r),this._aDataLength=Yu(r.length()*8);var n=r.length()%this.blockSize;for(n&&r.fillWithByte(0,this.blockSize-n),this._s=[0,0,0,0];r.length()>0;)this._s=this.ghash(this._hashSubkey,this._s,[r.getInt32(),r.getInt32(),r.getInt32(),r.getInt32()])};te.gcm.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]^=t.getInt32());this._cipherLength+=this.blockSize}else{var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s<=0||r){if(r){var a=i%this.blockSize;this._cipherLength+=a,this._partialOutput.truncate(this.blockSize-a)}else this._cipherLength+=this.blockSize;for(var n=0;n<this._ints;++n)this._outBlock[n]=this._partialOutput.getInt32();this._partialOutput.read-=this.blockSize}if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return t.read-=this.blockSize,e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}this._s=this.ghash(this._hashSubkey,this._s,this._outBlock),lo(this._inBlock)};te.gcm.prototype.decrypt=function(t,e,r){var i=t.length();if(i<this.blockSize&&!(r&&i>0))return!0;this.cipher.encrypt(this._inBlock,this._outBlock),lo(this._inBlock),this._hashBlock[0]=t.getInt32(),this._hashBlock[1]=t.getInt32(),this._hashBlock[2]=t.getInt32(),this._hashBlock[3]=t.getInt32(),this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]^this._hashBlock[n]);i<this.blockSize?this._cipherLength+=i%this.blockSize:this._cipherLength+=this.blockSize};te.gcm.prototype.afterFinish=function(t,e){var r=!0;e.decrypt&&e.overflow&&t.truncate(this.blockSize-e.overflow),this.tag=ot.util.createBuffer();var i=this._aDataLength.concat(Yu(this._cipherLength*8));this._s=this.ghash(this._hashSubkey,this._s,i);var n=[];this.cipher.encrypt(this._j0,n);for(var s=0;s<this._ints;++s)this.tag.putInt32(this._s[s]^n[s]);return this.tag.truncate(this.tag.length()%(this._tagLength/8)),e.decrypt&&this.tag.bytes()!==this._tag&&(r=!1),r};te.gcm.prototype.multiply=function(t,e){for(var r=[0,0,0,0],i=e.slice(0),n=0;n<128;++n){var s=t[n/32|0]&1<<31-n%32;s&&(r[0]^=i[0],r[1]^=i[1],r[2]^=i[2],r[3]^=i[3]),this.pow(i,i)}return r};te.gcm.prototype.pow=function(t,e){for(var r=t[3]&1,i=3;i>0;--i)e[i]=t[i]>>>1|(t[i-1]&1)<<31;e[0]=t[0]>>>1,r&&(e[0]^=this._R)};te.gcm.prototype.tableMultiply=function(t){for(var e=[0,0,0,0],r=0;r<32;++r){var i=r/8|0,n=t[i]>>>(7-r%8)*4&15,s=this._m[r][n];e[0]^=s[0],e[1]^=s[1],e[2]^=s[2],e[3]^=s[3]}return e};te.gcm.prototype.ghash=function(t,e,r){return e[0]^=r[0],e[1]^=r[1],e[2]^=r[2],e[3]^=r[3],this.tableMultiply(e)};te.gcm.prototype.generateHashTable=function(t,e){for(var r=8/e,i=4*r,n=16*r,s=new Array(n),a=0;a<n;++a){var o=[0,0,0,0],f=a/i|0,u=(i-1-a%i)*e;o[f]=1<<e-1<<u,s[a]=this.generateSubHashTable(this.multiply(o,t),e)}return s};te.gcm.prototype.generateSubHashTable=function(t,e){var r=1<<e,i=r>>>1,n=new Array(r);n[i]=t.slice(0);for(var s=i>>>1;s>0;)this.pow(n[2*s],n[s]=[]),s>>=1;for(s=2;s<i;){for(var a=1;a<s;++a){var o=n[s],f=n[a];n[s+a]=[o[0]^f[0],o[1]^f[1],o[2]^f[2],o[3]^f[3]]}s*=2}for(n[0]=[0,0,0,0],s=i+1;s<r;++s){var u=n[s^i];n[s]=[t[0]^u[0],t[1]^u[1],t[2]^u[2],t[3]^u[3]]}return n};function ho(t,e){if(typeof t=="string"&&(t=ot.util.createBuffer(t)),ot.util.isArray(t)&&t.length>4){var r=t;t=ot.util.createBuffer();for(var i=0;i<r.length;++i)t.putByte(r[i])}if(t.length()<e)throw new Error("Invalid IV length; got "+t.length()+" bytes and expected "+e+" bytes.");if(!ot.util.isArray(t)){for(var n=[],s=e/4,i=0;i<s;++i)n.push(t.getInt32());t=n}return t}function lo(t){t[t.length-1]=t[t.length-1]+1&4294967295}function Yu(t){return[t/4294967296|0,t&4294967295]}});var Ju=E((m6,ry)=>{var De=Se();Wu();$u();$e();ry.exports=De.aes=De.aes||{};De.aes.startEncrypting=function(t,e,r,i){var n=po({key:t,output:r,decrypt:!1,mode:i});return n.start(e),n};De.aes.createEncryptionCipher=function(t,e){return po({key:t,output:null,decrypt:!1,mode:e})};De.aes.startDecrypting=function(t,e,r,i){var n=po({key:t,output:r,decrypt:!0,mode:i});return n.start(e),n};De.aes.createDecryptionCipher=function(t,e){return po({key:t,output:null,decrypt:!0,mode:e})};De.aes.Algorithm=function(t,e){Qu||ey();var r=this;r.name=t,r.mode=new e({blockSize:16,cipher:{encrypt:function(i,n){return Xu(r._w,i,n,!1)},decrypt:function(i,n){return Xu(r._w,i,n,!0)}}}),r._init=!1};De.aes.Algorithm.prototype.initialize=function(t){if(!this._init){var e=t.key,r;if(typeof e=="string"&&(e.length===16||e.length===24||e.length===32))e=De.util.createBuffer(e);else if(De.util.isArray(e)&&(e.length===16||e.length===24||e.length===32)){r=e,e=De.util.createBuffer();for(var i=0;i<r.length;++i)e.putByte(r[i])}if(!De.util.isArray(e)){r=e,e=[];var n=r.length();if(n===16||n===24||n===32){n=n>>>2;for(var i=0;i<n;++i)e.push(r.getInt32())}}if(!De.util.isArray(e)||!(e.length===4||e.length===6||e.length===8))throw new Error("Invalid key parameter.");var s=this.mode.name,a=["CFB","OFB","CTR","GCM"].indexOf(s)!==-1;this._w=ty(e,t.decrypt&&!a),this._init=!0}};De.aes._expandKey=function(t,e){return Qu||ey(),ty(t,e)};De.aes._updateBlock=Xu;Zn("AES-ECB",De.cipher.modes.ecb);Zn("AES-CBC",De.cipher.modes.cbc);Zn("AES-CFB",De.cipher.modes.cfb);Zn("AES-OFB",De.cipher.modes.ofb);Zn("AES-CTR",De.cipher.modes.ctr);Zn("AES-GCM",De.cipher.modes.gcm);function Zn(t,e){var r=function(){return new De.aes.Algorithm(t,e)};De.cipher.registerAlgorithm(t,r)}var Qu=!1,Xn=4,_t,Zu,Jd,cn,ir;function ey(){Qu=!0,Jd=[0,1,2,4,8,16,32,64,128,27,54];for(var t=new Array(256),e=0;e<128;++e)t[e]=e<<1,t[e+128]=e+128<<1^283;_t=new Array(256),Zu=new Array(256),cn=new Array(4),ir=new Array(4);for(var e=0;e<4;++e)cn[e]=new Array(256),ir[e]=new Array(256);for(var r=0,i=0,n,s,a,o,f,u,c,e=0;e<256;++e){o=i^i<<1^i<<2^i<<3^i<<4,o=o>>8^o&255^99,_t[r]=o,Zu[o]=r,f=t[o],n=t[r],s=t[n],a=t[s],u=f<<24^o<<16^o<<8^(o^f),c=(n^s^a)<<24^(r^a)<<16^(r^s^a)<<8^(r^n^a);for(var h=0;h<4;++h)cn[h][r]=u,ir[h][o]=c,u=u<<24|u>>>8,c=c<<24|c>>>8;r===0?r=i=1:(r=n^t[t[t[n^a]]],i^=t[t[i]])}}function ty(t,e){for(var r=t.slice(0),i,n=1,s=r.length,a=s+6+1,o=Xn*a,f=s;f<o;++f)i=r[f-1],f%s==0?(i=_t[i>>>16&255]<<24^_t[i>>>8&255]<<16^_t[i&255]<<8^_t[i>>>24]^Jd[n]<<24,n++):s>6&&f%s==4&&(i=_t[i>>>24]<<24^_t[i>>>16&255]<<16^_t[i>>>8&255]<<8^_t[i&255]),r[f]=r[f-s]^i;if(e){var u,c=ir[0],h=ir[1],l=ir[2],d=ir[3],p=r.slice(0);o=r.length;for(var f=0,y=o-Xn;f<o;f+=Xn,y-=Xn)if(f===0||f===o-Xn)p[f]=r[y],p[f+1]=r[y+3],p[f+2]=r[y+2],p[f+3]=r[y+1];else for(var g=0;g<Xn;++g)u=r[y+g],p[f+(3&-g)]=c[_t[u>>>24]]^h[_t[u>>>16&255]]^l[_t[u>>>8&255]]^d[_t[u&255]];r=p}return r}function Xu(t,e,r,i){var n=t.length/4-1,s,a,o,f,u;i?(s=ir[0],a=ir[1],o=ir[2],f=ir[3],u=Zu):(s=cn[0],a=cn[1],o=cn[2],f=cn[3],u=_t);var c,h,l,d,p,y,g;c=e[0]^t[0],h=e[i?3:1]^t[1],l=e[2]^t[2],d=e[i?1:3]^t[3];for(var v=3,x=1;x<n;++x)p=s[c>>>24]^a[h>>>16&255]^o[l>>>8&255]^f[d&255]^t[++v],y=s[h>>>24]^a[l>>>16&255]^o[d>>>8&255]^f[c&255]^t[++v],g=s[l>>>24]^a[d>>>16&255]^o[c>>>8&255]^f[h&255]^t[++v],d=s[d>>>24]^a[c>>>16&255]^o[h>>>8&255]^f[l&255]^t[++v],c=p,h=y,l=g;r[0]=u[c>>>24]<<24^u[h>>>16&255]<<16^u[l>>>8&255]<<8^u[d&255]^t[++v],r[i?3:1]=u[h>>>24]<<24^u[l>>>16&255]<<16^u[d>>>8&255]<<8^u[c&255]^t[++v],r[2]=u[l>>>24]<<24^u[d>>>16&255]<<16^u[c>>>8&255]<<8^u[h&255]^t[++v],r[i?1:3]=u[d>>>24]<<24^u[c>>>16&255]<<16^u[h>>>8&255]<<8^u[l&255]^t[++v]}function po(t){t=t||{};var e=(t.mode||"CBC").toUpperCase(),r="AES-"+e,i;t.decrypt?i=De.cipher.createDecipher(r,t.key):i=De.cipher.createCipher(r,t.key);var n=i.start;return i.start=function(s,a){var o=null;a instanceof De.util.ByteBuffer&&(o=a,a={}),a=a||{},a.output=o,a.iv=s,n.call(i,a)},i}});var sy=E((E6,ny)=>{var Me=Se();Wu();$u();$e();ny.exports=Me.des=Me.des||{};Me.des.startEncrypting=function(t,e,r,i){var n=yo({key:t,output:r,decrypt:!1,mode:i||(e===null?"ECB":"CBC")});return n.start(e),n};Me.des.createEncryptionCipher=function(t,e){return yo({key:t,output:null,decrypt:!1,mode:e})};Me.des.startDecrypting=function(t,e,r,i){var n=yo({key:t,output:r,decrypt:!0,mode:i||(e===null?"ECB":"CBC")});return n.start(e),n};Me.des.createDecryptionCipher=function(t,e){return yo({key:t,output:null,decrypt:!0,mode:e})};Me.des.Algorithm=function(t,e){var r=this;r.name=t,r.mode=new e({blockSize:8,cipher:{encrypt:function(i,n){return iy(r._keys,i,n,!1)},decrypt:function(i,n){return iy(r._keys,i,n,!0)}}}),r._init=!1};Me.des.Algorithm.prototype.initialize=function(t){if(!this._init){var e=Me.util.createBuffer(t.key);if(this.name.indexOf("3DES")===0&&e.length()!==24)throw new Error("Invalid Triple-DES key size: "+e.length()*8);this._keys=hS(e),this._init=!0}};Er("DES-ECB",Me.cipher.modes.ecb);Er("DES-CBC",Me.cipher.modes.cbc);Er("DES-CFB",Me.cipher.modes.cfb);Er("DES-OFB",Me.cipher.modes.ofb);Er("DES-CTR",Me.cipher.modes.ctr);Er("3DES-ECB",Me.cipher.modes.ecb);Er("3DES-CBC",Me.cipher.modes.cbc);Er("3DES-CFB",Me.cipher.modes.cfb);Er("3DES-OFB",Me.cipher.modes.ofb);Er("3DES-CTR",Me.cipher.modes.ctr);function Er(t,e){var r=function(){return new Me.des.Algorithm(t,e)};Me.cipher.registerAlgorithm(t,r)}var iS=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756],nS=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344],sS=[520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584],aS=[8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928],oS=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080],uS=[536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312],cS=[2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154],fS=[268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696];function hS(t){for(var e=[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],r=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],i=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],n=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],s=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],a=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],o=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],f=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],u=[0,262144,0,262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],c=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],h=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],l=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],d=[0,4096,134217728,134221824,524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],p=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261],y=t.length()>8?3:1,g=[],v=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],x=0,w,P=0;P<y;P++){var B=t.getInt32(),S=t.getInt32();w=(B>>>4^S)&252645135,S^=w,B^=w<<4,w=(S>>>-16^B)&65535,B^=w,S^=w<<-16,w=(B>>>2^S)&858993459,S^=w,B^=w<<2,w=(S>>>-16^B)&65535,B^=w,S^=w<<-16,w=(B>>>1^S)&1431655765,S^=w,B^=w<<1,w=(S>>>8^B)&16711935,B^=w,S^=w<<8,w=(B>>>1^S)&1431655765,S^=w,B^=w<<1,w=B<<8|S>>>20&240,B=S<<24|S<<8&16711680|S>>>8&65280|S>>>24&240,S=w;for(var G=0;G<v.length;++G){v[G]?(B=B<<2|B>>>26,S=S<<2|S>>>26):(B=B<<1|B>>>27,S=S<<1|S>>>27),B&=-15,S&=-15;var z=e[B>>>28]|r[B>>>24&15]|i[B>>>20&15]|n[B>>>16&15]|s[B>>>12&15]|a[B>>>8&15]|o[B>>>4&15],se=f[S>>>28]|u[S>>>24&15]|c[S>>>20&15]|h[S>>>16&15]|l[S>>>12&15]|d[S>>>8&15]|p[S>>>4&15];w=(se>>>16^z)&65535,g[x++]=z^w,g[x++]=se^w<<16}}return g}function iy(t,e,r,i){var n=t.length===32?3:9,s;n===3?s=i?[30,-2,-2]:[0,32,2]:s=i?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var a,o=e[0],f=e[1];a=(o>>>4^f)&252645135,f^=a,o^=a<<4,a=(o>>>16^f)&65535,f^=a,o^=a<<16,a=(f>>>2^o)&858993459,o^=a,f^=a<<2,a=(f>>>8^o)&16711935,o^=a,f^=a<<8,a=(o>>>1^f)&1431655765,f^=a,o^=a<<1,o=o<<1|o>>>31,f=f<<1|f>>>31;for(var u=0;u<n;u+=3){for(var c=s[u+1],h=s[u+2],l=s[u];l!=c;l+=h){var d=f^t[l],p=(f>>>4|f<<28)^t[l+1];a=o,o=f,f=a^(nS[d>>>24&63]|aS[d>>>16&63]|uS[d>>>8&63]|fS[d&63]|iS[p>>>24&63]|sS[p>>>16&63]|oS[p>>>8&63]|cS[p&63])}a=o,o=f,f=a}o=o>>>1|o<<31,f=f>>>1|f<<31,a=(o>>>1^f)&1431655765,f^=a,o^=a<<1,a=(f>>>8^o)&16711935,o^=a,f^=a<<8,a=(f>>>2^o)&858993459,o^=a,f^=a<<2,a=(o>>>16^f)&65535,f^=a,o^=a<<16,a=(o>>>4^f)&252645135,f^=a,o^=a<<4,r[0]=o,r[1]=f}function yo(t){t=t||{};var e=(t.mode||"CBC").toUpperCase(),r="DES-"+e,i;t.decrypt?i=Me.cipher.createDecipher(r,t.key):i=Me.cipher.createCipher(r,t.key);var n=i.start;return i.start=function(s,a){var o=null;a instanceof Me.util.ByteBuffer&&(o=a,a={}),a=a||{},a.output=o,a.iv=s,n.call(i,a)},i}});var fn=E((w6,ay)=>{var go=Se();ay.exports=go.md=go.md||{};go.md.algorithms=go.md.algorithms||{}});var uy=E((S6,oy)=>{var Yr=Se();fn();$e();var lS=oy.exports=Yr.hmac=Yr.hmac||{};lS.create=function(){var t=null,e=null,r=null,i=null,n={};return n.start=function(s,a){if(s!==null)if(typeof s=="string")if(s=s.toLowerCase(),s in Yr.md.algorithms)e=Yr.md.algorithms[s].create();else throw new Error('Unknown hash algorithm "'+s+'"');else e=s;if(a===null)a=t;else{if(typeof a=="string")a=Yr.util.createBuffer(a);else if(Yr.util.isArray(a)){var o=a;a=Yr.util.createBuffer();for(var f=0;f<o.length;++f)a.putByte(o[f])}var u=a.length();u>e.blockLength&&(e.start(),e.update(a.bytes()),a=e.digest()),r=Yr.util.createBuffer(),i=Yr.util.createBuffer(),u=a.length();for(var f=0;f<u;++f){var o=a.at(f);r.putByte(54^o),i.putByte(92^o)}if(u<e.blockLength)for(var o=e.blockLength-u,f=0;f<o;++f)r.putByte(54),i.putByte(92);t=a,r=r.bytes(),i=i.bytes()}e.start(),e.update(r)},n.update=function(s){e.update(s)},n.getMac=function(){var s=e.digest().bytes();return e.start(),e.update(i),e.update(s),e.digest()},n.digest=n.getMac,n}});var $r=E(()=>{});var fy=E((B6,cy)=>{var It=Se();uy();fn();$e();var pS=It.pkcs5=It.pkcs5||{},Qr;It.util.isNodejs&&!It.options.usePureJavaScript&&(Qr=$r());cy.exports=It.pbkdf2=pS.pbkdf2=function(t,e,r,i,n,s){if(typeof n=="function"&&(s=n,n=null),It.util.isNodejs&&!It.options.usePureJavaScript&&Qr.pbkdf2&&(n===null||typeof n!="object")&&(Qr.pbkdf2Sync.length>4||!n||n==="sha1"))return typeof n!="string"&&(n="sha1"),t=Buffer.from(t,"binary"),e=Buffer.from(e,"binary"),s?Qr.pbkdf2Sync.length===4?Qr.pbkdf2(t,e,r,i,function(w,P){if(w)return s(w);s(null,P.toString("binary"))}):Qr.pbkdf2(t,e,r,i,n,function(w,P){if(w)return s(w);s(null,P.toString("binary"))}):Qr.pbkdf2Sync.length===4?Qr.pbkdf2Sync(t,e,r,i).toString("binary"):Qr.pbkdf2Sync(t,e,r,i,n).toString("binary");if((typeof n=="undefined"||n===null)&&(n="sha1"),typeof n=="string"){if(!(n in It.md.algorithms))throw new Error("Unknown hash algorithm: "+n);n=It.md[n].create()}var a=n.digestLength;if(i>4294967295*a){var o=new Error("Derived key is too long.");if(s)return s(o);throw o}var f=Math.ceil(i/a),u=i-(f-1)*a,c=It.hmac.create();c.start(n,t);var h="",l,d,p;if(!s){for(var y=1;y<=f;++y){c.start(null,null),c.update(e),c.update(It.util.int32ToBytes(y)),l=p=c.digest().getBytes();for(var g=2;g<=r;++g)c.start(null,null),c.update(p),d=c.digest().getBytes(),l=It.util.xorBytes(l,d,a),p=d;h+=y<f?l:l.substr(0,u)}return h}var y=1,g;function v(){if(y>f)return s(null,h);c.start(null,null),c.update(e),c.update(It.util.int32ToBytes(y)),l=p=c.digest().getBytes(),g=2,x()}function x(){if(g<=r)return c.start(null,null),c.update(p),d=c.digest().getBytes(),l=It.util.xorBytes(l,d,a),p=d,++g,It.util.setImmediate(x);h+=y<f?l:l.substr(0,u),++y,v()}v()}});var py=E((A6,ly)=>{var vo=Se();$e();var hy=ly.exports=vo.pem=vo.pem||{};hy.encode=function(t,e){e=e||{};var r="-----BEGIN "+t.type+`-----\r
-`,i;if(t.procType&&(i={name:"Proc-Type",values:[String(t.procType.version),t.procType.type]},r+=xo(i)),t.contentDomain&&(i={name:"Content-Domain",values:[t.contentDomain]},r+=xo(i)),t.dekInfo&&(i={name:"DEK-Info",values:[t.dekInfo.algorithm]},t.dekInfo.parameters&&i.values.push(t.dekInfo.parameters),r+=xo(i)),t.headers)for(var n=0;n<t.headers.length;++n)r+=xo(t.headers[n]);return t.procType&&(r+=`\r
-`),r+=vo.util.encode64(t.body,e.maxline||64)+`\r
+`,t.composed){for(var o=0,a="",s=0;s<t.value.length;++s)t.value[s]!==void 0&&(o+=1,a+=P.prettyPrint(t.value[s],e+1,r),s+1<t.value.length&&(a+=","));i+=n+"Sub values: "+o+a}else{if(i+=n+"Value: ",t.type===P.Type.OID){var f=P.derToOid(t.value);i+=f,he.pki&&he.pki.oids&&f in he.pki.oids&&(i+=" ("+he.pki.oids[f]+") ")}if(t.type===P.Type.INTEGER)try{i+=P.derToInteger(t.value)}catch(c){i+="0x"+he.util.bytesToHex(t.value)}else if(t.type===P.Type.BITSTRING){if(t.value.length>1?i+="0x"+he.util.bytesToHex(t.value.slice(1)):i+="(none)",t.value.length>0){var u=t.value.charCodeAt(0);u==1?i+=" (1 unused bit shown)":u>1&&(i+=" ("+u+" unused bits shown)")}}else if(t.type===P.Type.OCTETSTRING)_h.test(t.value)||(i+="("+t.value+") "),i+="0x"+he.util.bytesToHex(t.value);else if(t.type===P.Type.UTF8)try{i+=he.util.decodeUtf8(t.value)}catch(c){if(c.message==="URI malformed")i+="0x"+he.util.bytesToHex(t.value)+" (malformed UTF8)";else throw c}else t.type===P.Type.PRINTABLESTRING||t.type===P.Type.IA5String?i+=t.value:_h.test(t.value)?i+="0x"+he.util.bytesToHex(t.value):t.value.length===0?i+="[null]":i+=t.value}return i}});var ya=x((rS,Ih)=>{var De=ne();Ie();Ih.exports=De.cipher=De.cipher||{};De.cipher.algorithms=De.cipher.algorithms||{};De.cipher.createCipher=function(t,e){var r=t;if(typeof r=="string"&&(r=De.cipher.getAlgorithm(r),r&&(r=r())),!r)throw new Error("Unsupported algorithm: "+t);return new De.cipher.BlockCipher({algorithm:r,key:e,decrypt:!1})};De.cipher.createDecipher=function(t,e){var r=t;if(typeof r=="string"&&(r=De.cipher.getAlgorithm(r),r&&(r=r())),!r)throw new Error("Unsupported algorithm: "+t);return new De.cipher.BlockCipher({algorithm:r,key:e,decrypt:!0})};De.cipher.registerAlgorithm=function(t,e){t=t.toUpperCase(),De.cipher.algorithms[t]=e};De.cipher.getAlgorithm=function(t){return t=t.toUpperCase(),t in De.cipher.algorithms?De.cipher.algorithms[t]:null};var da=De.cipher.BlockCipher=function(t){this.algorithm=t.algorithm,this.mode=this.algorithm.mode,this.blockSize=this.mode.blockSize,this._finish=!1,this._input=null,this.output=null,this._op=t.decrypt?this.mode.decrypt:this.mode.encrypt,this._decrypt=t.decrypt,this.algorithm.initialize(t)};da.prototype.start=function(t){t=t||{};var e={};for(var r in t)e[r]=t[r];e.decrypt=this._decrypt,this._finish=!1,this._input=De.util.createBuffer(),this.output=t.output||De.util.createBuffer(),this.mode.start(e)};da.prototype.update=function(t){for(t&&this._input.putBuffer(t);!this._op.call(this.mode,this._input,this.output,this._finish)&&!this._finish;);this._input.compact()};da.prototype.finish=function(t){t&&(this.mode.name==="ECB"||this.mode.name==="CBC")&&(this.mode.pad=function(r){return t(this.blockSize,r,!1)},this.mode.unpad=function(r){return t(this.blockSize,r,!0)});var e={};return e.decrypt=this._decrypt,e.overflow=this._input.length()%this.blockSize,!(!this._decrypt&&this.mode.pad&&!this.mode.pad(this._input,e)||(this._finish=!0,this.update(),this._decrypt&&this.mode.unpad&&!this.mode.unpad(this.output,e))||this.mode.afterFinish&&!this.mode.afterFinish(this.output,e))}});var ba=x((iS,Ah)=>{var Pe=ne();Ie();Pe.cipher=Pe.cipher||{};var V=Ah.exports=Pe.cipher.modes=Pe.cipher.modes||{};V.ecb=function(t){t=t||{},this.name="ECB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};V.ecb.prototype.start=function(t){};V.ecb.prototype.encrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i])};V.ecb.prototype.decrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i])};V.ecb.prototype.pad=function(t,e){var r=t.length()===this.blockSize?this.blockSize:this.blockSize-t.length();return t.fillWithByte(r,r),!0};V.ecb.prototype.unpad=function(t,e){if(e.overflow>0)return!1;var r=t.length(),i=t.at(r-1);return i>this.blockSize<<2?!1:(t.truncate(i),!0)};V.cbc=function(t){t=t||{},this.name="CBC",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};V.cbc.prototype.start=function(t){if(t.iv===null){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else if("iv"in t)this._iv=hs(t.iv,this.blockSize),this._prev=this._iv.slice(0);else throw new Error("Invalid IV parameter.")};V.cbc.prototype.encrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=this._prev[i]^t.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i]);this._prev=this._outBlock};V.cbc.prototype.decrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._prev[i]^this._outBlock[i]);this._prev=this._inBlock.slice(0)};V.cbc.prototype.pad=function(t,e){var r=t.length()===this.blockSize?this.blockSize:this.blockSize-t.length();return t.fillWithByte(r,r),!0};V.cbc.prototype.unpad=function(t,e){if(e.overflow>0)return!1;var r=t.length(),i=t.at(r-1);return i>this.blockSize<<2?!1:(t.truncate(i),!0)};V.cfb=function(t){t=t||{},this.name="CFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialBlock=new Array(this._ints),this._partialOutput=Pe.util.createBuffer(),this._partialBytes=0};V.cfb.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=hs(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};V.cfb.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)this._inBlock[n]=t.getInt32()^this._outBlock[n],e.putInt32(this._inBlock[n]);return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialBlock[n]=t.getInt32()^this._outBlock[n],this._partialOutput.putInt32(this._partialBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._partialBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};V.cfb.prototype.decrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)this._inBlock[n]=t.getInt32(),e.putInt32(this._inBlock[n]^this._outBlock[n]);return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialBlock[n]=t.getInt32(),this._partialOutput.putInt32(this._partialBlock[n]^this._outBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._partialBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};V.ofb=function(t){t=t||{},this.name="OFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=Pe.util.createBuffer(),this._partialBytes=0};V.ofb.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=hs(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};V.ofb.prototype.encrypt=function(t,e,r){var i=t.length();if(t.length()===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)e.putInt32(t.getInt32()^this._outBlock[n]),this._inBlock[n]=this._outBlock[n];return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._outBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};V.ofb.prototype.decrypt=V.ofb.prototype.encrypt;V.ctr=function(t){t=t||{},this.name="CTR",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=Pe.util.createBuffer(),this._partialBytes=0};V.ctr.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=hs(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};V.ctr.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize)for(var n=0;n<this._ints;++n)e.putInt32(t.getInt32()^this._outBlock[n]);else{var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s>0&&(t.read-=this.blockSize),this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}ls(this._inBlock)};V.ctr.prototype.decrypt=V.ctr.prototype.encrypt;V.gcm=function(t){t=t||{},this.name="GCM",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints),this._partialOutput=Pe.util.createBuffer(),this._partialBytes=0,this._R=3774873600};V.gcm.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");var e=Pe.util.createBuffer(t.iv);this._cipherLength=0;var r;if("additionalData"in t?r=Pe.util.createBuffer(t.additionalData):r=Pe.util.createBuffer(),"tagLength"in t?this._tagLength=t.tagLength:this._tagLength=128,this._tag=null,t.decrypt&&(this._tag=Pe.util.createBuffer(t.tag).getBytes(),this._tag.length!==this._tagLength/8))throw new Error("Authentication tag does not match tag length.");this._hashBlock=new Array(this._ints),this.tag=null,this._hashSubkey=new Array(this._ints),this.cipher.encrypt([0,0,0,0],this._hashSubkey),this.componentBits=4,this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var i=e.length();if(i===12)this._j0=[e.getInt32(),e.getInt32(),e.getInt32(),1];else{for(this._j0=[0,0,0,0];e.length()>0;)this._j0=this.ghash(this._hashSubkey,this._j0,[e.getInt32(),e.getInt32(),e.getInt32(),e.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(ga(i*8)))}this._inBlock=this._j0.slice(0),ls(this._inBlock),this._partialBytes=0,r=Pe.util.createBuffer(r),this._aDataLength=ga(r.length()*8);var n=r.length()%this.blockSize;for(n&&r.fillWithByte(0,this.blockSize-n),this._s=[0,0,0,0];r.length()>0;)this._s=this.ghash(this._hashSubkey,this._s,[r.getInt32(),r.getInt32(),r.getInt32(),r.getInt32()])};V.gcm.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]^=t.getInt32());this._cipherLength+=this.blockSize}else{var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s<=0||r){if(r){var o=i%this.blockSize;this._cipherLength+=o,this._partialOutput.truncate(this.blockSize-o)}else this._cipherLength+=this.blockSize;for(var n=0;n<this._ints;++n)this._outBlock[n]=this._partialOutput.getInt32();this._partialOutput.read-=this.blockSize}if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return t.read-=this.blockSize,e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}this._s=this.ghash(this._hashSubkey,this._s,this._outBlock),ls(this._inBlock)};V.gcm.prototype.decrypt=function(t,e,r){var i=t.length();if(i<this.blockSize&&!(r&&i>0))return!0;this.cipher.encrypt(this._inBlock,this._outBlock),ls(this._inBlock),this._hashBlock[0]=t.getInt32(),this._hashBlock[1]=t.getInt32(),this._hashBlock[2]=t.getInt32(),this._hashBlock[3]=t.getInt32(),this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]^this._hashBlock[n]);i<this.blockSize?this._cipherLength+=i%this.blockSize:this._cipherLength+=this.blockSize};V.gcm.prototype.afterFinish=function(t,e){var r=!0;e.decrypt&&e.overflow&&t.truncate(this.blockSize-e.overflow),this.tag=Pe.util.createBuffer();var i=this._aDataLength.concat(ga(this._cipherLength*8));this._s=this.ghash(this._hashSubkey,this._s,i);var n=[];this.cipher.encrypt(this._j0,n);for(var s=0;s<this._ints;++s)this.tag.putInt32(this._s[s]^n[s]);return this.tag.truncate(this.tag.length()%(this._tagLength/8)),e.decrypt&&this.tag.bytes()!==this._tag&&(r=!1),r};V.gcm.prototype.multiply=function(t,e){for(var r=[0,0,0,0],i=e.slice(0),n=0;n<128;++n){var s=t[n/32|0]&1<<31-n%32;s&&(r[0]^=i[0],r[1]^=i[1],r[2]^=i[2],r[3]^=i[3]),this.pow(i,i)}return r};V.gcm.prototype.pow=function(t,e){for(var r=t[3]&1,i=3;i>0;--i)e[i]=t[i]>>>1|(t[i-1]&1)<<31;e[0]=t[0]>>>1,r&&(e[0]^=this._R)};V.gcm.prototype.tableMultiply=function(t){for(var e=[0,0,0,0],r=0;r<32;++r){var i=r/8|0,n=t[i]>>>(7-r%8)*4&15,s=this._m[r][n];e[0]^=s[0],e[1]^=s[1],e[2]^=s[2],e[3]^=s[3]}return e};V.gcm.prototype.ghash=function(t,e,r){return e[0]^=r[0],e[1]^=r[1],e[2]^=r[2],e[3]^=r[3],this.tableMultiply(e)};V.gcm.prototype.generateHashTable=function(t,e){for(var r=8/e,i=4*r,n=16*r,s=new Array(n),o=0;o<n;++o){var a=[0,0,0,0],f=o/i|0,u=(i-1-o%i)*e;a[f]=1<<e-1<<u,s[o]=this.generateSubHashTable(this.multiply(a,t),e)}return s};V.gcm.prototype.generateSubHashTable=function(t,e){var r=1<<e,i=r>>>1,n=new Array(r);n[i]=t.slice(0);for(var s=i>>>1;s>0;)this.pow(n[2*s],n[s]=[]),s>>=1;for(s=2;s<i;){for(var o=1;o<s;++o){var a=n[s],f=n[o];n[s+o]=[a[0]^f[0],a[1]^f[1],a[2]^f[2],a[3]^f[3]]}s*=2}for(n[0]=[0,0,0,0],s=i+1;s<r;++s){var u=n[s^i];n[s]=[t[0]^u[0],t[1]^u[1],t[2]^u[2],t[3]^u[3]]}return n};function hs(t,e){if(typeof t=="string"&&(t=Pe.util.createBuffer(t)),Pe.util.isArray(t)&&t.length>4){var r=t;t=Pe.util.createBuffer();for(var i=0;i<r.length;++i)t.putByte(r[i])}if(t.length()<e)throw new Error("Invalid IV length; got "+t.length()+" bytes and expected "+e+" bytes.");if(!Pe.util.isArray(t)){for(var n=[],s=e/4,i=0;i<s;++i)n.push(t.getInt32());t=n}return t}function ls(t){t[t.length-1]=t[t.length-1]+1&4294967295}function ga(t){return[t/4294967296|0,t&4294967295]}});var Ea=x((nS,Th)=>{var fe=ne();ya();ba();Ie();Th.exports=fe.aes=fe.aes||{};fe.aes.startEncrypting=function(t,e,r,i){var n=ps({key:t,output:r,decrypt:!1,mode:i});return n.start(e),n};fe.aes.createEncryptionCipher=function(t,e){return ps({key:t,output:null,decrypt:!1,mode:e})};fe.aes.startDecrypting=function(t,e,r,i){var n=ps({key:t,output:r,decrypt:!0,mode:i});return n.start(e),n};fe.aes.createDecryptionCipher=function(t,e){return ps({key:t,output:null,decrypt:!0,mode:e})};fe.aes.Algorithm=function(t,e){va||Rh();var r=this;r.name=t,r.mode=new e({blockSize:16,cipher:{encrypt:function(i,n){return xa(r._w,i,n,!1)},decrypt:function(i,n){return xa(r._w,i,n,!0)}}}),r._init=!1};fe.aes.Algorithm.prototype.initialize=function(t){if(!this._init){var e=t.key,r;if(typeof e=="string"&&(e.length===16||e.length===24||e.length===32))e=fe.util.createBuffer(e);else if(fe.util.isArray(e)&&(e.length===16||e.length===24||e.length===32)){r=e,e=fe.util.createBuffer();for(var i=0;i<r.length;++i)e.putByte(r[i])}if(!fe.util.isArray(e)){r=e,e=[];var n=r.length();if(n===16||n===24||n===32){n=n>>>2;for(var i=0;i<n;++i)e.push(r.getInt32())}}if(!fe.util.isArray(e)||!(e.length===4||e.length===6||e.length===8))throw new Error("Invalid key parameter.");var s=this.mode.name,o=["CFB","OFB","CTR","GCM"].indexOf(s)!==-1;this._w=Bh(e,t.decrypt&&!o),this._init=!0}};fe.aes._expandKey=function(t,e){return va||Rh(),Bh(t,e)};fe.aes._updateBlock=xa;vi("AES-ECB",fe.cipher.modes.ecb);vi("AES-CBC",fe.cipher.modes.cbc);vi("AES-CFB",fe.cipher.modes.cfb);vi("AES-OFB",fe.cipher.modes.ofb);vi("AES-CTR",fe.cipher.modes.ctr);vi("AES-GCM",fe.cipher.modes.gcm);function vi(t,e){var r=function(){return new fe.aes.Algorithm(t,e)};fe.cipher.registerAlgorithm(t,r)}var va=!1,mi=4,Ve,ma,Ch,Mr,gt;function Rh(){va=!0,Ch=[0,1,2,4,8,16,32,64,128,27,54];for(var t=new Array(256),e=0;e<128;++e)t[e]=e<<1,t[e+128]=e+128<<1^283;Ve=new Array(256),ma=new Array(256),Mr=new Array(4),gt=new Array(4);for(var e=0;e<4;++e)Mr[e]=new Array(256),gt[e]=new Array(256);for(var r=0,i=0,n,s,o,a,f,u,c,e=0;e<256;++e){a=i^i<<1^i<<2^i<<3^i<<4,a=a>>8^a&255^99,Ve[r]=a,ma[a]=r,f=t[a],n=t[r],s=t[n],o=t[s],u=f<<24^a<<16^a<<8^(a^f),c=(n^s^o)<<24^(r^o)<<16^(r^s^o)<<8^(r^n^o);for(var h=0;h<4;++h)Mr[h][r]=u,gt[h][a]=c,u=u<<24|u>>>8,c=c<<24|c>>>8;r===0?r=i=1:(r=n^t[t[t[n^o]]],i^=t[t[i]])}}function Bh(t,e){for(var r=t.slice(0),i,n=1,s=r.length,o=s+6+1,a=mi*o,f=s;f<a;++f)i=r[f-1],f%s==0?(i=Ve[i>>>16&255]<<24^Ve[i>>>8&255]<<16^Ve[i&255]<<8^Ve[i>>>24]^Ch[n]<<24,n++):s>6&&f%s==4&&(i=Ve[i>>>24]<<24^Ve[i>>>16&255]<<16^Ve[i>>>8&255]<<8^Ve[i&255]),r[f]=r[f-s]^i;if(e){var u,c=gt[0],h=gt[1],l=gt[2],d=gt[3],p=r.slice(0);a=r.length;for(var f=0,y=a-mi;f<a;f+=mi,y-=mi)if(f===0||f===a-mi)p[f]=r[y],p[f+1]=r[y+3],p[f+2]=r[y+2],p[f+3]=r[y+1];else for(var v=0;v<mi;++v)u=r[y+v],p[f+(3&-v)]=c[Ve[u>>>24]]^h[Ve[u>>>16&255]]^l[Ve[u>>>8&255]]^d[Ve[u&255]];r=p}return r}function xa(t,e,r,i){var n=t.length/4-1,s,o,a,f,u;i?(s=gt[0],o=gt[1],a=gt[2],f=gt[3],u=ma):(s=Mr[0],o=Mr[1],a=Mr[2],f=Mr[3],u=Ve);var c,h,l,d,p,y,v;c=e[0]^t[0],h=e[i?3:1]^t[1],l=e[2]^t[2],d=e[i?1:3]^t[3];for(var b=3,E=1;E<n;++E)p=s[c>>>24]^o[h>>>16&255]^a[l>>>8&255]^f[d&255]^t[++b],y=s[h>>>24]^o[l>>>16&255]^a[d>>>8&255]^f[c&255]^t[++b],v=s[l>>>24]^o[d>>>16&255]^a[c>>>8&255]^f[h&255]^t[++b],d=s[d>>>24]^o[c>>>16&255]^a[h>>>8&255]^f[l&255]^t[++b],c=p,h=y,l=v;r[0]=u[c>>>24]<<24^u[h>>>16&255]<<16^u[l>>>8&255]<<8^u[d&255]^t[++b],r[i?3:1]=u[h>>>24]<<24^u[l>>>16&255]<<16^u[d>>>8&255]<<8^u[c&255]^t[++b],r[2]=u[l>>>24]<<24^u[d>>>16&255]<<16^u[c>>>8&255]<<8^u[h&255]^t[++b],r[i?1:3]=u[d>>>24]<<24^u[c>>>16&255]<<16^u[h>>>8&255]<<8^u[l&255]^t[++b]}function ps(t){t=t||{};var e=(t.mode||"CBC").toUpperCase(),r="AES-"+e,i;t.decrypt?i=fe.cipher.createDecipher(r,t.key):i=fe.cipher.createCipher(r,t.key);var n=i.start;return i.start=function(s,o){var a=null;o instanceof fe.util.ByteBuffer&&(a=o,o={}),o=o||{},o.output=a,o.iv=s,n.call(i,o)},i}});var Oh=x((sS,Ph)=>{var de=ne();ya();ba();Ie();Ph.exports=de.des=de.des||{};de.des.startEncrypting=function(t,e,r,i){var n=ds({key:t,output:r,decrypt:!1,mode:i||(e===null?"ECB":"CBC")});return n.start(e),n};de.des.createEncryptionCipher=function(t,e){return ds({key:t,output:null,decrypt:!1,mode:e})};de.des.startDecrypting=function(t,e,r,i){var n=ds({key:t,output:r,decrypt:!0,mode:i||(e===null?"ECB":"CBC")});return n.start(e),n};de.des.createDecryptionCipher=function(t,e){return ds({key:t,output:null,decrypt:!0,mode:e})};de.des.Algorithm=function(t,e){var r=this;r.name=t,r.mode=new e({blockSize:8,cipher:{encrypt:function(i,n){return Dh(r._keys,i,n,!1)},decrypt:function(i,n){return Dh(r._keys,i,n,!0)}}}),r._init=!1};de.des.Algorithm.prototype.initialize=function(t){if(!this._init){var e=de.util.createBuffer(t.key);if(this.name.indexOf("3DES")===0&&e.length()!==24)throw new Error("Invalid Triple-DES key size: "+e.length()*8);this._keys=Lb(e),this._init=!0}};Tt("DES-ECB",de.cipher.modes.ecb);Tt("DES-CBC",de.cipher.modes.cbc);Tt("DES-CFB",de.cipher.modes.cfb);Tt("DES-OFB",de.cipher.modes.ofb);Tt("DES-CTR",de.cipher.modes.ctr);Tt("3DES-ECB",de.cipher.modes.ecb);Tt("3DES-CBC",de.cipher.modes.cbc);Tt("3DES-CFB",de.cipher.modes.cfb);Tt("3DES-OFB",de.cipher.modes.ofb);Tt("3DES-CTR",de.cipher.modes.ctr);function Tt(t,e){var r=function(){return new de.des.Algorithm(t,e)};de.cipher.registerAlgorithm(t,r)}var Rb=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756],Bb=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344],Tb=[520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584],Db=[8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928],Pb=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080],Ob=[536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312],Nb=[2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154],kb=[268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696];function Lb(t){for(var e=[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],r=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],i=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],n=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],s=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],o=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],a=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],f=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],u=[0,262144,0,262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],c=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],h=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],l=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],d=[0,4096,134217728,134221824,524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],p=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261],y=t.length()>8?3:1,v=[],b=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],E=0,I,D=0;D<y;D++){var T=t.getInt32(),R=t.getInt32();I=(T>>>4^R)&252645135,R^=I,T^=I<<4,I=(R>>>-16^T)&65535,T^=I,R^=I<<-16,I=(T>>>2^R)&858993459,R^=I,T^=I<<2,I=(R>>>-16^T)&65535,T^=I,R^=I<<-16,I=(T>>>1^R)&1431655765,R^=I,T^=I<<1,I=(R>>>8^T)&16711935,T^=I,R^=I<<8,I=(T>>>1^R)&1431655765,R^=I,T^=I<<1,I=T<<8|R>>>20&240,T=R<<24|R<<8&16711680|R>>>8&65280|R>>>24&240,R=I;for(var F=0;F<b.length;++F){b[F]?(T=T<<2|T>>>26,R=R<<2|R>>>26):(T=T<<1|T>>>27,R=R<<1|R>>>27),T&=-15,R&=-15;var z=e[T>>>28]|r[T>>>24&15]|i[T>>>20&15]|n[T>>>16&15]|s[T>>>12&15]|o[T>>>8&15]|a[T>>>4&15],me=f[R>>>28]|u[R>>>24&15]|c[R>>>20&15]|h[R>>>16&15]|l[R>>>12&15]|d[R>>>8&15]|p[R>>>4&15];I=(me>>>16^z)&65535,v[E++]=z^I,v[E++]=me^I<<16}}return v}function Dh(t,e,r,i){var n=t.length===32?3:9,s;n===3?s=i?[30,-2,-2]:[0,32,2]:s=i?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var o,a=e[0],f=e[1];o=(a>>>4^f)&252645135,f^=o,a^=o<<4,o=(a>>>16^f)&65535,f^=o,a^=o<<16,o=(f>>>2^a)&858993459,a^=o,f^=o<<2,o=(f>>>8^a)&16711935,a^=o,f^=o<<8,o=(a>>>1^f)&1431655765,f^=o,a^=o<<1,a=a<<1|a>>>31,f=f<<1|f>>>31;for(var u=0;u<n;u+=3){for(var c=s[u+1],h=s[u+2],l=s[u];l!=c;l+=h){var d=f^t[l],p=(f>>>4|f<<28)^t[l+1];o=a,a=f,f=o^(Bb[d>>>24&63]|Db[d>>>16&63]|Ob[d>>>8&63]|kb[d&63]|Rb[p>>>24&63]|Tb[p>>>16&63]|Pb[p>>>8&63]|Nb[p&63])}o=a,a=f,f=o}a=a>>>1|a<<31,f=f>>>1|f<<31,o=(a>>>1^f)&1431655765,f^=o,a^=o<<1,o=(f>>>8^a)&16711935,a^=o,f^=o<<8,o=(f>>>2^a)&858993459,a^=o,f^=o<<2,o=(a>>>16^f)&65535,f^=o,a^=o<<16,o=(a>>>4^f)&252645135,f^=o,a^=o<<4,r[0]=a,r[1]=f}function ds(t){t=t||{};var e=(t.mode||"CBC").toUpperCase(),r="DES-"+e,i;t.decrypt?i=de.cipher.createDecipher(r,t.key):i=de.cipher.createCipher(r,t.key);var n=i.start;return i.start=function(s,o){var a=null;o instanceof de.util.ByteBuffer&&(a=o,o={}),o=o||{},o.output=a,o.iv=s,n.call(i,o)},i}});var Fr=x((oS,Nh)=>{var ys=ne();Nh.exports=ys.md=ys.md||{};ys.md.algorithms=ys.md.algorithms||{}});var Lh=x((aS,kh)=>{var Wt=ne();Fr();Ie();var Mb=kh.exports=Wt.hmac=Wt.hmac||{};Mb.create=function(){var t=null,e=null,r=null,i=null,n={};return n.start=function(s,o){if(s!==null)if(typeof s=="string")if(s=s.toLowerCase(),s in Wt.md.algorithms)e=Wt.md.algorithms[s].create();else throw new Error('Unknown hash algorithm "'+s+'"');else e=s;if(o===null)o=t;else{if(typeof o=="string")o=Wt.util.createBuffer(o);else if(Wt.util.isArray(o)){var a=o;o=Wt.util.createBuffer();for(var f=0;f<a.length;++f)o.putByte(a[f])}var u=o.length();u>e.blockLength&&(e.start(),e.update(o.bytes()),o=e.digest()),r=Wt.util.createBuffer(),i=Wt.util.createBuffer(),u=o.length();for(var f=0;f<u;++f){var a=o.at(f);r.putByte(54^a),i.putByte(92^a)}if(u<e.blockLength)for(var a=e.blockLength-u,f=0;f<a;++f)r.putByte(54),i.putByte(92);t=o,r=r.bytes(),i=i.bytes()}e.start(),e.update(r)},n.update=function(s){e.update(s)},n.getMac=function(){var s=e.digest().bytes();return e.start(),e.update(i),e.update(s),e.digest()},n.digest=n.getMac,n}});var xi=x(()=>{});var Fh=x((fS,Mh)=>{var He=ne();Lh();Fr();Ie();var Fb=He.pkcs5=He.pkcs5||{},Yt;He.util.isNodejs&&!He.options.usePureJavaScript&&(Yt=xi());Mh.exports=He.pbkdf2=Fb.pbkdf2=function(t,e,r,i,n,s){if(typeof n=="function"&&(s=n,n=null),He.util.isNodejs&&!He.options.usePureJavaScript&&Yt.pbkdf2&&(n===null||typeof n!="object")&&(Yt.pbkdf2Sync.length>4||!n||n==="sha1"))return typeof n!="string"&&(n="sha1"),t=Buffer.from(t,"binary"),e=Buffer.from(e,"binary"),s?Yt.pbkdf2Sync.length===4?Yt.pbkdf2(t,e,r,i,function(I,D){if(I)return s(I);s(null,D.toString("binary"))}):Yt.pbkdf2(t,e,r,i,n,function(I,D){if(I)return s(I);s(null,D.toString("binary"))}):Yt.pbkdf2Sync.length===4?Yt.pbkdf2Sync(t,e,r,i).toString("binary"):Yt.pbkdf2Sync(t,e,r,i,n).toString("binary");if((typeof n=="undefined"||n===null)&&(n="sha1"),typeof n=="string"){if(!(n in He.md.algorithms))throw new Error("Unknown hash algorithm: "+n);n=He.md[n].create()}var o=n.digestLength;if(i>4294967295*o){var a=new Error("Derived key is too long.");if(s)return s(a);throw a}var f=Math.ceil(i/o),u=i-(f-1)*o,c=He.hmac.create();c.start(n,t);var h="",l,d,p;if(!s){for(var y=1;y<=f;++y){c.start(null,null),c.update(e),c.update(He.util.int32ToBytes(y)),l=p=c.digest().getBytes();for(var v=2;v<=r;++v)c.start(null,null),c.update(p),d=c.digest().getBytes(),l=He.util.xorBytes(l,d,o),p=d;h+=y<f?l:l.substr(0,u)}return h}var y=1,v;function b(){if(y>f)return s(null,h);c.start(null,null),c.update(e),c.update(He.util.int32ToBytes(y)),l=p=c.digest().getBytes(),v=2,E()}function E(){if(v<=r)return c.start(null,null),c.update(p),d=c.digest().getBytes(),l=He.util.xorBytes(l,d,o),p=d,++v,He.util.setImmediate(E);h+=y<f?l:l.substr(0,u),++y,b()}b()}});var qh=x((hS,Kh)=>{var gs=ne();Ie();var Uh=Kh.exports=gs.pem=gs.pem||{};Uh.encode=function(t,e){e=e||{};var r="-----BEGIN "+t.type+`-----\r
+`,i;if(t.procType&&(i={name:"Proc-Type",values:[String(t.procType.version),t.procType.type]},r+=bs(i)),t.contentDomain&&(i={name:"Content-Domain",values:[t.contentDomain]},r+=bs(i)),t.dekInfo&&(i={name:"DEK-Info",values:[t.dekInfo.algorithm]},t.dekInfo.parameters&&i.values.push(t.dekInfo.parameters),r+=bs(i)),t.headers)for(var n=0;n<t.headers.length;++n)r+=bs(t.headers[n]);return t.procType&&(r+=`\r
+`),r+=gs.util.encode64(t.body,e.maxline||64)+`\r
 `,r+="-----END "+t.type+`-----\r
-`,r};hy.decode=function(t){for(var e=[],r=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,i=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,n=/\r?\n/,s;s=r.exec(t),!!s;){var a=s[1];a==="NEW CERTIFICATE REQUEST"&&(a="CERTIFICATE REQUEST");var o={type:a,procType:null,contentDomain:null,dekInfo:null,headers:[],body:vo.util.decode64(s[3])};if(e.push(o),!!s[2]){for(var f=s[2].split(n),u=0;s&&u<f.length;){for(var c=f[u].replace(/\s+$/,""),h=u+1;h<f.length;++h){var l=f[h];if(!/\s/.test(l[0]))break;c+=l,u=h}if(s=c.match(i),s){for(var d={name:s[1],values:[]},p=s[2].split(","),y=0;y<p.length;++y)d.values.push(dS(p[y]));if(o.procType)if(!o.contentDomain&&d.name==="Content-Domain")o.contentDomain=p[0]||"";else if(!o.dekInfo&&d.name==="DEK-Info"){if(d.values.length===0)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');o.dekInfo={algorithm:p[0],parameters:p[1]||null}}else o.headers.push(d);else{if(d.name!=="Proc-Type")throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');if(d.values.length!==2)throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');o.procType={version:p[0],type:p[1]}}}++u}if(o.procType==="ENCRYPTED"&&!o.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')}}if(e.length===0)throw new Error("Invalid PEM formatted message.");return e};function xo(t){for(var e=t.name+": ",r=[],i=function(f,u){return" "+u},n=0;n<t.values.length;++n)r.push(t.values[n].replace(/^(\S+\r\n)/,i));e+=r.join(",")+`\r
-`;for(var s=0,a=-1,n=0;n<e.length;++n,++s)if(s>65&&a!==-1){var o=e[a];o===","?(++a,e=e.substr(0,a)+`\r
- `+e.substr(a)):e=e.substr(0,a)+`\r
-`+o+e.substr(a+1),s=n-a-1,a=-1,++n}else(e[n]===" "||e[n]==="	"||e[n]===",")&&(a=n);return e}function dS(t){return t.replace(/^\s+/,"")}});var by=E((C6,xy)=>{var wr=Se();fn();$e();var dy=xy.exports=wr.sha256=wr.sha256||{};wr.md.sha256=wr.md.algorithms.sha256=dy;dy.create=function(){yy||yS();var t=null,e=wr.util.createBuffer(),r=new Array(64),i={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,fullMessageLength:null,messageLengthSize:8};return i.start=function(){i.messageLength=0,i.fullMessageLength=i.messageLength64=[];for(var n=i.messageLengthSize/4,s=0;s<n;++s)i.fullMessageLength.push(0);return e=wr.util.createBuffer(),t={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225},i},i.start(),i.update=function(n,s){s==="utf8"&&(n=wr.util.encodeUtf8(n));var a=n.length;i.messageLength+=a,a=[a/4294967296>>>0,a>>>0];for(var o=i.fullMessageLength.length-1;o>=0;--o)i.fullMessageLength[o]+=a[1],a[1]=a[0]+(i.fullMessageLength[o]/4294967296>>>0),i.fullMessageLength[o]=i.fullMessageLength[o]>>>0,a[0]=a[1]/4294967296>>>0;return e.putBytes(n),vy(t,r,e),(e.read>2048||e.length()===0)&&e.compact(),i},i.digest=function(){var n=wr.util.createBuffer();n.putBytes(e.bytes());var s=i.fullMessageLength[i.fullMessageLength.length-1]+i.messageLengthSize,a=s&i.blockLength-1;n.putBytes(ec.substr(0,i.blockLength-a));for(var o,f,u=i.fullMessageLength[0]*8,c=0;c<i.fullMessageLength.length-1;++c)o=i.fullMessageLength[c+1]*8,f=o/4294967296>>>0,u+=f,n.putInt32(u>>>0),u=o>>>0;n.putInt32(u);var h={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4,h5:t.h5,h6:t.h6,h7:t.h7};vy(h,r,n);var l=wr.util.createBuffer();return l.putInt32(h.h0),l.putInt32(h.h1),l.putInt32(h.h2),l.putInt32(h.h3),l.putInt32(h.h4),l.putInt32(h.h5),l.putInt32(h.h6),l.putInt32(h.h7),l},i};var ec=null,yy=!1,gy=null;function yS(){ec=String.fromCharCode(128),ec+=wr.util.fillString(String.fromCharCode(0),64),gy=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],yy=!0}function vy(t,e,r){for(var i,n,s,a,o,f,u,c,h,l,d,p,y,g,v,x=r.length();x>=64;){for(u=0;u<16;++u)e[u]=r.getInt32();for(;u<64;++u)i=e[u-2],i=(i>>>17|i<<15)^(i>>>19|i<<13)^i>>>10,n=e[u-15],n=(n>>>7|n<<25)^(n>>>18|n<<14)^n>>>3,e[u]=i+e[u-7]+n+e[u-16]|0;for(c=t.h0,h=t.h1,l=t.h2,d=t.h3,p=t.h4,y=t.h5,g=t.h6,v=t.h7,u=0;u<64;++u)a=(p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7),o=g^p&(y^g),s=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),f=c&h|l&(c^h),i=v+a+o+gy[u]+e[u],n=s+f,v=g,g=y,y=p,p=d+i>>>0,d=l,l=h,h=c,c=i+n>>>0;t.h0=t.h0+c|0,t.h1=t.h1+h|0,t.h2=t.h2+l|0,t.h3=t.h3+d|0,t.h4=t.h4+p|0,t.h5=t.h5+y|0,t.h6=t.h6+g|0,t.h7=t.h7+v|0,x-=64}}});var Ey=E((T6,my)=>{var Sr=Se();$e();var bo=null;Sr.util.isNodejs&&!Sr.options.usePureJavaScript&&!process.versions["node-webkit"]&&(bo=$r());var gS=my.exports=Sr.prng=Sr.prng||{};gS.create=function(t){for(var e={plugin:t,key:null,seed:null,time:null,reseeds:0,generated:0,keyBytes:""},r=t.md,i=new Array(32),n=0;n<32;++n)i[n]=r.create();e.pools=i,e.pool=0,e.generate=function(u,c){if(!c)return e.generateSync(u);var h=e.plugin.cipher,l=e.plugin.increment,d=e.plugin.formatKey,p=e.plugin.formatSeed,y=Sr.util.createBuffer();e.key=null,g();function g(v){if(v)return c(v);if(y.length()>=u)return c(null,y.getBytes(u));if(e.generated>1048575&&(e.key=null),e.key===null)return Sr.util.nextTick(function(){s(g)});var x=h(e.key,e.seed);e.generated+=x.length,y.putBytes(x),e.key=d(h(e.key,l(e.seed))),e.seed=p(h(e.key,e.seed)),Sr.util.setImmediate(g)}},e.generateSync=function(u){var c=e.plugin.cipher,h=e.plugin.increment,l=e.plugin.formatKey,d=e.plugin.formatSeed;e.key=null;for(var p=Sr.util.createBuffer();p.length()<u;){e.generated>1048575&&(e.key=null),e.key===null&&a();var y=c(e.key,e.seed);e.generated+=y.length,p.putBytes(y),e.key=l(c(e.key,h(e.seed))),e.seed=d(c(e.key,e.seed))}return p.getBytes(u)};function s(u){if(e.pools[0].messageLength>=32)return o(),u();var c=32-e.pools[0].messageLength<<5;e.seedFile(c,function(h,l){if(h)return u(h);e.collect(l),o(),u()})}function a(){if(e.pools[0].messageLength>=32)return o();var u=32-e.pools[0].messageLength<<5;e.collect(e.seedFileSync(u)),o()}function o(){e.reseeds=e.reseeds===4294967295?0:e.reseeds+1;var u=e.plugin.md.create();u.update(e.keyBytes);for(var c=1,h=0;h<32;++h)e.reseeds%c==0&&(u.update(e.pools[h].digest().getBytes()),e.pools[h].start()),c=c<<1;e.keyBytes=u.digest().getBytes(),u.start(),u.update(e.keyBytes);var l=u.digest().getBytes();e.key=e.plugin.formatKey(e.keyBytes),e.seed=e.plugin.formatSeed(l),e.generated=0}function f(u){var c=null,h=Sr.util.globalScope,l=h.crypto||h.msCrypto;l&&l.getRandomValues&&(c=function(B){return l.getRandomValues(B)});var d=Sr.util.createBuffer();if(c)for(;d.length()<u;){var p=Math.max(1,Math.min(u-d.length(),65536)/4),y=new Uint32Array(Math.floor(p));try{c(y);for(var g=0;g<y.length;++g)d.putInt32(y[g])}catch(B){if(!(typeof QuotaExceededError!="undefined"&&B instanceof QuotaExceededError))throw B}}if(d.length()<u)for(var v,x,w,P=Math.floor(Math.random()*65536);d.length()<u;){x=16807*(P&65535),v=16807*(P>>16),x+=(v&32767)<<16,x+=v>>15,x=(x&2147483647)+(x>>31),P=x&4294967295;for(var g=0;g<3;++g)w=P>>>(g<<3),w^=Math.floor(Math.random()*256),d.putByte(w&255)}return d.getBytes(u)}return bo?(e.seedFile=function(u,c){bo.randomBytes(u,function(h,l){if(h)return c(h);c(null,l.toString())})},e.seedFileSync=function(u){return bo.randomBytes(u).toString()}):(e.seedFile=function(u,c){try{c(null,f(u))}catch(h){c(h)}},e.seedFileSync=f),e.collect=function(u){for(var c=u.length,h=0;h<c;++h)e.pools[e.pool].update(u.substr(h,1)),e.pool=e.pool===31?0:e.pool+1},e.collectInt=function(u,c){for(var h="",l=0;l<c;l+=8)h+=String.fromCharCode(u>>l&255);e.collect(h)},e.registerWorker=function(u){if(u===self)e.seedFile=function(h,l){function d(p){var y=p.data;y.forge&&y.forge.prng&&(self.removeEventListener("message",d),l(y.forge.prng.err,y.forge.prng.bytes))}self.addEventListener("message",d),self.postMessage({forge:{prng:{needed:h}}})};else{var c=function(h){var l=h.data;l.forge&&l.forge.prng&&e.seedFile(l.forge.prng.needed,function(d,p){u.postMessage({forge:{prng:{err:d,bytes:p}}})})};u.addEventListener("message",c)}},e}});var Vs=E((R6,tc)=>{var ut=Se();Ju();by();Ey();$e();(function(){if(ut.random&&ut.random.getBytes){tc.exports=ut.random;return}(function(t){var e={},r=new Array(4),i=ut.util.createBuffer();e.formatKey=function(h){var l=ut.util.createBuffer(h);return h=new Array(4),h[0]=l.getInt32(),h[1]=l.getInt32(),h[2]=l.getInt32(),h[3]=l.getInt32(),ut.aes._expandKey(h,!1)},e.formatSeed=function(h){var l=ut.util.createBuffer(h);return h=new Array(4),h[0]=l.getInt32(),h[1]=l.getInt32(),h[2]=l.getInt32(),h[3]=l.getInt32(),h},e.cipher=function(h,l){return ut.aes._updateBlock(h,l,r,!1),i.putInt32(r[0]),i.putInt32(r[1]),i.putInt32(r[2]),i.putInt32(r[3]),i.getBytes()},e.increment=function(h){return++h[3],h},e.md=ut.md.sha256;function n(){var h=ut.prng.create(e);return h.getBytes=function(l,d){return h.generate(l,d)},h.getBytesSync=function(l){return h.generate(l)},h}var s=n(),a=null,o=ut.util.globalScope,f=o.crypto||o.msCrypto;if(f&&f.getRandomValues&&(a=function(h){return f.getRandomValues(h)}),ut.options.usePureJavaScript||!ut.util.isNodejs&&!a){if(typeof window=="undefined"||window.document===void 0,s.collectInt(+new Date,32),typeof navigator!="undefined"){var u="";for(var c in navigator)try{typeof navigator[c]=="string"&&(u+=navigator[c])}catch(h){}s.collect(u),u=null}t&&(t().mousemove(function(h){s.collectInt(h.clientX,16),s.collectInt(h.clientY,16)}),t().keypress(function(h){s.collectInt(h.charCode,8)}))}if(!ut.random)ut.random=s;else for(var c in s)ut.random[c]=s[c];ut.random.createInstance=n,tc.exports=ut.random})(typeof jQuery!="undefined"?jQuery:null)})()});var Iy=E((D6,_y)=>{var Pt=Se();$e();var rc=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],wy=[1,2,3,5],vS=function(t,e){return t<<e&65535|(t&65535)>>16-e},xS=function(t,e){return(t&65535)>>e|t<<16-e&65535};_y.exports=Pt.rc2=Pt.rc2||{};Pt.rc2.expandKey=function(t,e){typeof t=="string"&&(t=Pt.util.createBuffer(t)),e=e||128;var r=t,i=t.length(),n=e,s=Math.ceil(n/8),a=255>>(n&7),o;for(o=i;o<128;o++)r.putByte(rc[r.at(o-1)+r.at(o-i)&255]);for(r.setAt(128-s,rc[r.at(128-s)&a]),o=127-s;o>=0;o--)r.setAt(o,rc[r.at(o+1)^r.at(o+s)]);return r};var Sy=function(t,e,r){var i=!1,n=null,s=null,a=null,o,f,u,c,h=[];for(t=Pt.rc2.expandKey(t,e),u=0;u<64;u++)h.push(t.getInt16Le());r?(o=function(p){for(u=0;u<4;u++)p[u]+=h[c]+(p[(u+3)%4]&p[(u+2)%4])+(~p[(u+3)%4]&p[(u+1)%4]),p[u]=vS(p[u],wy[u]),c++},f=function(p){for(u=0;u<4;u++)p[u]+=h[p[(u+3)%4]&63]}):(o=function(p){for(u=3;u>=0;u--)p[u]=xS(p[u],wy[u]),p[u]-=h[c]+(p[(u+3)%4]&p[(u+2)%4])+(~p[(u+3)%4]&p[(u+1)%4]),c--},f=function(p){for(u=3;u>=0;u--)p[u]-=h[p[(u+3)%4]&63]});var l=function(p){var y=[];for(u=0;u<4;u++){var g=n.getInt16Le();a!==null&&(r?g^=a.getInt16Le():a.putInt16Le(g)),y.push(g&65535)}c=r?0:63;for(var v=0;v<p.length;v++)for(var x=0;x<p[v][0];x++)p[v][1](y);for(u=0;u<4;u++)a!==null&&(r?a.putInt16Le(y[u]):y[u]^=a.getInt16Le()),s.putInt16Le(y[u])},d=null;return d={start:function(p,y){p&&typeof p=="string"&&(p=Pt.util.createBuffer(p)),i=!1,n=Pt.util.createBuffer(),s=y||new Pt.util.createBuffer,a=p,d.output=s},update:function(p){for(i||n.putBuffer(p);n.length()>=8;)l([[5,o],[1,f],[6,o],[1,f],[5,o]])},finish:function(p){var y=!0;if(r)if(p)y=p(8,n,!r);else{var g=n.length()===8?8:8-n.length();n.fillWithByte(g,g)}if(y&&(i=!0,d.update()),!r&&(y=n.length()===0,y))if(p)y=p(8,s,!r);else{var v=s.length(),x=s.at(v-1);x>v?y=!1:s.truncate(x)}return y}},d};Pt.rc2.startEncrypting=function(t,e,r){var i=Pt.rc2.createEncryptionCipher(t,128);return i.start(e,r),i};Pt.rc2.createEncryptionCipher=function(t,e){return Sy(t,e,!0)};Pt.rc2.startDecrypting=function(t,e,r){var i=Pt.rc2.createDecryptionCipher(t,128);return i.start(e,r),i};Pt.rc2.createDecryptionCipher=function(t,e){return Sy(t,e,!1)}});var wo=E((P6,ky)=>{var ic=Se();ky.exports=ic.jsbn=ic.jsbn||{};var Zr,bS=244837814094590,By=(bS&16777215)==15715070;function k(t,e,r){this.data=[],t!=null&&(typeof t=="number"?this.fromNumber(t,e,r):e==null&&typeof t!="string"?this.fromString(t,256):this.fromString(t,e))}ic.jsbn.BigInteger=k;function fe(){return new k(null)}function mS(t,e,r,i,n,s){for(;--s>=0;){var a=e*this.data[t++]+r.data[i]+n;n=Math.floor(a/67108864),r.data[i++]=a&67108863}return n}function ES(t,e,r,i,n,s){for(var a=e&32767,o=e>>15;--s>=0;){var f=this.data[t]&32767,u=this.data[t++]>>15,c=o*f+u*a;f=a*f+((c&32767)<<15)+r.data[i]+(n&1073741823),n=(f>>>30)+(c>>>15)+o*u+(n>>>30),r.data[i++]=f&1073741823}return n}function Ay(t,e,r,i,n,s){for(var a=e&16383,o=e>>14;--s>=0;){var f=this.data[t]&16383,u=this.data[t++]>>14,c=o*f+u*a;f=a*f+((c&16383)<<14)+r.data[i]+n,n=(f>>28)+(c>>14)+o*u,r.data[i++]=f&268435455}return n}typeof navigator=="undefined"?(k.prototype.am=Ay,Zr=28):By&&navigator.appName=="Microsoft Internet Explorer"?(k.prototype.am=ES,Zr=30):By&&navigator.appName!="Netscape"?(k.prototype.am=mS,Zr=26):(k.prototype.am=Ay,Zr=28);k.prototype.DB=Zr;k.prototype.DM=(1<<Zr)-1;k.prototype.DV=1<<Zr;var nc=52;k.prototype.FV=Math.pow(2,nc);k.prototype.F1=nc-Zr;k.prototype.F2=2*Zr-nc;var wS="0123456789abcdefghijklmnopqrstuvwxyz",mo=new Array,Jn,Gt;Jn="0".charCodeAt(0);for(Gt=0;Gt<=9;++Gt)mo[Jn++]=Gt;Jn="a".charCodeAt(0);for(Gt=10;Gt<36;++Gt)mo[Jn++]=Gt;Jn="A".charCodeAt(0);for(Gt=10;Gt<36;++Gt)mo[Jn++]=Gt;function Cy(t){return wS.charAt(t)}function Ty(t,e){var r=mo[t.charCodeAt(e)];return r??-1}function SS(t){for(var e=this.t-1;e>=0;--e)t.data[e]=this.data[e];t.t=this.t,t.s=this.s}function _S(t){this.t=1,this.s=t<0?-1:0,t>0?this.data[0]=t:t<-1?this.data[0]=t+this.DV:this.t=0}function Ii(t){var e=fe();return e.fromInt(t),e}function IS(t,e){var r;if(e==16)r=4;else if(e==8)r=3;else if(e==256)r=8;else if(e==2)r=1;else if(e==32)r=5;else if(e==4)r=2;else{this.fromRadix(t,e);return}this.t=0,this.s=0;for(var i=t.length,n=!1,s=0;--i>=0;){var a=r==8?t[i]&255:Ty(t,i);if(a<0){t.charAt(i)=="-"&&(n=!0);continue}n=!1,s==0?this.data[this.t++]=a:s+r>this.DB?(this.data[this.t-1]|=(a&(1<<this.DB-s)-1)<<s,this.data[this.t++]=a>>this.DB-s):this.data[this.t-1]|=a<<s,s+=r,s>=this.DB&&(s-=this.DB)}r==8&&(t[0]&128)!=0&&(this.s=-1,s>0&&(this.data[this.t-1]|=(1<<this.DB-s)-1<<s)),this.clamp(),n&&k.ZERO.subTo(this,this)}function BS(){for(var t=this.s&this.DM;this.t>0&&this.data[this.t-1]==t;)--this.t}function AS(t){if(this.s<0)return"-"+this.negate().toString(t);var e;if(t==16)e=4;else if(t==8)e=3;else if(t==2)e=1;else if(t==32)e=5;else if(t==4)e=2;else return this.toRadix(t);var r=(1<<e)-1,i,n=!1,s="",a=this.t,o=this.DB-a*this.DB%e;if(a-- >0)for(o<this.DB&&(i=this.data[a]>>o)>0&&(n=!0,s=Cy(i));a>=0;)o<e?(i=(this.data[a]&(1<<o)-1)<<e-o,i|=this.data[--a]>>(o+=this.DB-e)):(i=this.data[a]>>(o-=e)&r,o<=0&&(o+=this.DB,--a)),i>0&&(n=!0),n&&(s+=Cy(i));return n?s:"0"}function CS(){var t=fe();return k.ZERO.subTo(this,t),t}function TS(){return this.s<0?this.negate():this}function RS(t){var e=this.s-t.s;if(e!=0)return e;var r=this.t;if(e=r-t.t,e!=0)return this.s<0?-e:e;for(;--r>=0;)if((e=this.data[r]-t.data[r])!=0)return e;return 0}function Eo(t){var e=1,r;return(r=t>>>16)!=0&&(t=r,e+=16),(r=t>>8)!=0&&(t=r,e+=8),(r=t>>4)!=0&&(t=r,e+=4),(r=t>>2)!=0&&(t=r,e+=2),(r=t>>1)!=0&&(t=r,e+=1),e}function DS(){return this.t<=0?0:this.DB*(this.t-1)+Eo(this.data[this.t-1]^this.s&this.DM)}function PS(t,e){var r;for(r=this.t-1;r>=0;--r)e.data[r+t]=this.data[r];for(r=t-1;r>=0;--r)e.data[r]=0;e.t=this.t+t,e.s=this.s}function kS(t,e){for(var r=t;r<this.t;++r)e.data[r-t]=this.data[r];e.t=Math.max(this.t-t,0),e.s=this.s}function NS(t,e){var r=t%this.DB,i=this.DB-r,n=(1<<i)-1,s=Math.floor(t/this.DB),a=this.s<<r&this.DM,o;for(o=this.t-1;o>=0;--o)e.data[o+s+1]=this.data[o]>>i|a,a=(this.data[o]&n)<<r;for(o=s-1;o>=0;--o)e.data[o]=0;e.data[s]=a,e.t=this.t+s+1,e.s=this.s,e.clamp()}function OS(t,e){e.s=this.s;var r=Math.floor(t/this.DB);if(r>=this.t){e.t=0;return}var i=t%this.DB,n=this.DB-i,s=(1<<i)-1;e.data[0]=this.data[r]>>i;for(var a=r+1;a<this.t;++a)e.data[a-r-1]|=(this.data[a]&s)<<n,e.data[a-r]=this.data[a]>>i;i>0&&(e.data[this.t-r-1]|=(this.s&s)<<n),e.t=this.t-r,e.clamp()}function LS(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;)i+=this.data[r]-t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;if(t.t<this.t){for(i-=t.s;r<this.t;)i+=this.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;r<t.t;)i-=t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i-=t.s}e.s=i<0?-1:0,i<-1?e.data[r++]=this.DV+i:i>0&&(e.data[r++]=i),e.t=r,e.clamp()}function MS(t,e){var r=this.abs(),i=t.abs(),n=r.t;for(e.t=n+i.t;--n>=0;)e.data[n]=0;for(n=0;n<i.t;++n)e.data[n+r.t]=r.am(0,i.data[n],e,n,0,r.t);e.s=0,e.clamp(),this.s!=t.s&&k.ZERO.subTo(e,e)}function KS(t){for(var e=this.abs(),r=t.t=2*e.t;--r>=0;)t.data[r]=0;for(r=0;r<e.t-1;++r){var i=e.am(r,e.data[r],t,2*r,0,1);(t.data[r+e.t]+=e.am(r+1,2*e.data[r],t,2*r+1,i,e.t-r-1))>=e.DV&&(t.data[r+e.t]-=e.DV,t.data[r+e.t+1]=1)}t.t>0&&(t.data[t.t-1]+=e.am(r,e.data[r],t,2*r,0,1)),t.s=0,t.clamp()}function FS(t,e,r){var i=t.abs();if(!(i.t<=0)){var n=this.abs();if(n.t<i.t){e!=null&&e.fromInt(0),r!=null&&this.copyTo(r);return}r==null&&(r=fe());var s=fe(),a=this.s,o=t.s,f=this.DB-Eo(i.data[i.t-1]);f>0?(i.lShiftTo(f,s),n.lShiftTo(f,r)):(i.copyTo(s),n.copyTo(r));var u=s.t,c=s.data[u-1];if(c!=0){var h=c*(1<<this.F1)+(u>1?s.data[u-2]>>this.F2:0),l=this.FV/h,d=(1<<this.F1)/h,p=1<<this.F2,y=r.t,g=y-u,v=e??fe();for(s.dlShiftTo(g,v),r.compareTo(v)>=0&&(r.data[r.t++]=1,r.subTo(v,r)),k.ONE.dlShiftTo(u,v),v.subTo(s,s);s.t<u;)s.data[s.t++]=0;for(;--g>=0;){var x=r.data[--y]==c?this.DM:Math.floor(r.data[y]*l+(r.data[y-1]+p)*d);if((r.data[y]+=s.am(0,x,r,g,0,u))<x)for(s.dlShiftTo(g,v),r.subTo(v,r);r.data[y]<--x;)r.subTo(v,r)}e!=null&&(r.drShiftTo(u,e),a!=o&&k.ZERO.subTo(e,e)),r.t=u,r.clamp(),f>0&&r.rShiftTo(f,r),a<0&&k.ZERO.subTo(r,r)}}}function US(t){var e=fe();return this.abs().divRemTo(t,null,e),this.s<0&&e.compareTo(k.ZERO)>0&&t.subTo(e,e),e}function hn(t){this.m=t}function qS(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t}function VS(t){return t}function GS(t){t.divRemTo(this.m,null,t)}function HS(t,e,r){t.multiplyTo(e,r),this.reduce(r)}function zS(t,e){t.squareTo(e),this.reduce(e)}hn.prototype.convert=qS;hn.prototype.revert=VS;hn.prototype.reduce=GS;hn.prototype.mulTo=HS;hn.prototype.sqrTo=zS;function jS(){if(this.t<1)return 0;var t=this.data[0];if((t&1)==0)return 0;var e=t&3;return e=e*(2-(t&15)*e)&15,e=e*(2-(t&255)*e)&255,e=e*(2-((t&65535)*e&65535))&65535,e=e*(2-t*e%this.DV)%this.DV,e>0?this.DV-e:-e}function ln(t){this.m=t,this.mp=t.invDigit(),this.mpl=this.mp&32767,this.mph=this.mp>>15,this.um=(1<<t.DB-15)-1,this.mt2=2*t.t}function WS(t){var e=fe();return t.abs().dlShiftTo(this.m.t,e),e.divRemTo(this.m,null,e),t.s<0&&e.compareTo(k.ZERO)>0&&this.m.subTo(e,e),e}function YS(t){var e=fe();return t.copyTo(e),this.reduce(e),e}function $S(t){for(;t.t<=this.mt2;)t.data[t.t++]=0;for(var e=0;e<this.m.t;++e){var r=t.data[e]&32767,i=r*this.mpl+((r*this.mph+(t.data[e]>>15)*this.mpl&this.um)<<15)&t.DM;for(r=e+this.m.t,t.data[r]+=this.m.am(0,i,t,e,0,this.m.t);t.data[r]>=t.DV;)t.data[r]-=t.DV,t.data[++r]++}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t)}function QS(t,e){t.squareTo(e),this.reduce(e)}function ZS(t,e,r){t.multiplyTo(e,r),this.reduce(r)}ln.prototype.convert=WS;ln.prototype.revert=YS;ln.prototype.reduce=$S;ln.prototype.mulTo=ZS;ln.prototype.sqrTo=QS;function XS(){return(this.t>0?this.data[0]&1:this.s)==0}function JS(t,e){if(t>4294967295||t<1)return k.ONE;var r=fe(),i=fe(),n=e.convert(this),s=Eo(t)-1;for(n.copyTo(r);--s>=0;)if(e.sqrTo(r,i),(t&1<<s)>0)e.mulTo(i,n,r);else{var a=r;r=i,i=a}return e.revert(r)}function e_(t,e){var r;return t<256||e.isEven()?r=new hn(e):r=new ln(e),this.exp(t,r)}k.prototype.copyTo=SS;k.prototype.fromInt=_S;k.prototype.fromString=IS;k.prototype.clamp=BS;k.prototype.dlShiftTo=PS;k.prototype.drShiftTo=kS;k.prototype.lShiftTo=NS;k.prototype.rShiftTo=OS;k.prototype.subTo=LS;k.prototype.multiplyTo=MS;k.prototype.squareTo=KS;k.prototype.divRemTo=FS;k.prototype.invDigit=jS;k.prototype.isEven=XS;k.prototype.exp=JS;k.prototype.toString=AS;k.prototype.negate=CS;k.prototype.abs=TS;k.prototype.compareTo=RS;k.prototype.bitLength=DS;k.prototype.mod=US;k.prototype.modPowInt=e_;k.ZERO=Ii(0);k.ONE=Ii(1);function t_(){var t=fe();return this.copyTo(t),t}function r_(){if(this.s<0){if(this.t==1)return this.data[0]-this.DV;if(this.t==0)return-1}else{if(this.t==1)return this.data[0];if(this.t==0)return 0}return(this.data[1]&(1<<32-this.DB)-1)<<this.DB|this.data[0]}function i_(){return this.t==0?this.s:this.data[0]<<24>>24}function n_(){return this.t==0?this.s:this.data[0]<<16>>16}function s_(t){return Math.floor(Math.LN2*this.DB/Math.log(t))}function a_(){return this.s<0?-1:this.t<=0||this.t==1&&this.data[0]<=0?0:1}function o_(t){if(t==null&&(t=10),this.signum()==0||t<2||t>36)return"0";var e=this.chunkSize(t),r=Math.pow(t,e),i=Ii(r),n=fe(),s=fe(),a="";for(this.divRemTo(i,n,s);n.signum()>0;)a=(r+s.intValue()).toString(t).substr(1)+a,n.divRemTo(i,n,s);return s.intValue().toString(t)+a}function u_(t,e){this.fromInt(0),e==null&&(e=10);for(var r=this.chunkSize(e),i=Math.pow(e,r),n=!1,s=0,a=0,o=0;o<t.length;++o){var f=Ty(t,o);if(f<0){t.charAt(o)=="-"&&this.signum()==0&&(n=!0);continue}a=e*a+f,++s>=r&&(this.dMultiply(i),this.dAddOffset(a,0),s=0,a=0)}s>0&&(this.dMultiply(Math.pow(e,s)),this.dAddOffset(a,0)),n&&k.ZERO.subTo(this,this)}function c_(t,e,r){if(typeof e=="number")if(t<2)this.fromInt(1);else for(this.fromNumber(t,r),this.testBit(t-1)||this.bitwiseTo(k.ONE.shiftLeft(t-1),sc,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(e);)this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(k.ONE.shiftLeft(t-1),this);else{var i=new Array,n=t&7;i.length=(t>>3)+1,e.nextBytes(i),n>0?i[0]&=(1<<n)-1:i[0]=0,this.fromString(i,256)}}function f_(){var t=this.t,e=new Array;e[0]=this.s;var r=this.DB-t*this.DB%8,i,n=0;if(t-- >0)for(r<this.DB&&(i=this.data[t]>>r)!=(this.s&this.DM)>>r&&(e[n++]=i|this.s<<this.DB-r);t>=0;)r<8?(i=(this.data[t]&(1<<r)-1)<<8-r,i|=this.data[--t]>>(r+=this.DB-8)):(i=this.data[t]>>(r-=8)&255,r<=0&&(r+=this.DB,--t)),(i&128)!=0&&(i|=-256),n==0&&(this.s&128)!=(i&128)&&++n,(n>0||i!=this.s)&&(e[n++]=i);return e}function h_(t){return this.compareTo(t)==0}function l_(t){return this.compareTo(t)<0?this:t}function p_(t){return this.compareTo(t)>0?this:t}function d_(t,e,r){var i,n,s=Math.min(t.t,this.t);for(i=0;i<s;++i)r.data[i]=e(this.data[i],t.data[i]);if(t.t<this.t){for(n=t.s&this.DM,i=s;i<this.t;++i)r.data[i]=e(this.data[i],n);r.t=this.t}else{for(n=this.s&this.DM,i=s;i<t.t;++i)r.data[i]=e(n,t.data[i]);r.t=t.t}r.s=e(this.s,t.s),r.clamp()}function y_(t,e){return t&e}function g_(t){var e=fe();return this.bitwiseTo(t,y_,e),e}function sc(t,e){return t|e}function v_(t){var e=fe();return this.bitwiseTo(t,sc,e),e}function Ry(t,e){return t^e}function x_(t){var e=fe();return this.bitwiseTo(t,Ry,e),e}function Dy(t,e){return t&~e}function b_(t){var e=fe();return this.bitwiseTo(t,Dy,e),e}function m_(){for(var t=fe(),e=0;e<this.t;++e)t.data[e]=this.DM&~this.data[e];return t.t=this.t,t.s=~this.s,t}function E_(t){var e=fe();return t<0?this.rShiftTo(-t,e):this.lShiftTo(t,e),e}function w_(t){var e=fe();return t<0?this.lShiftTo(-t,e):this.rShiftTo(t,e),e}function S_(t){if(t==0)return-1;var e=0;return(t&65535)==0&&(t>>=16,e+=16),(t&255)==0&&(t>>=8,e+=8),(t&15)==0&&(t>>=4,e+=4),(t&3)==0&&(t>>=2,e+=2),(t&1)==0&&++e,e}function __(){for(var t=0;t<this.t;++t)if(this.data[t]!=0)return t*this.DB+S_(this.data[t]);return this.s<0?this.t*this.DB:-1}function I_(t){for(var e=0;t!=0;)t&=t-1,++e;return e}function B_(){for(var t=0,e=this.s&this.DM,r=0;r<this.t;++r)t+=I_(this.data[r]^e);return t}function A_(t){var e=Math.floor(t/this.DB);return e>=this.t?this.s!=0:(this.data[e]&1<<t%this.DB)!=0}function C_(t,e){var r=k.ONE.shiftLeft(t);return this.bitwiseTo(r,e,r),r}function T_(t){return this.changeBit(t,sc)}function R_(t){return this.changeBit(t,Dy)}function D_(t){return this.changeBit(t,Ry)}function P_(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;)i+=this.data[r]+t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;if(t.t<this.t){for(i+=t.s;r<this.t;)i+=this.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;r<t.t;)i+=t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=t.s}e.s=i<0?-1:0,i>0?e.data[r++]=i:i<-1&&(e.data[r++]=this.DV+i),e.t=r,e.clamp()}function k_(t){var e=fe();return this.addTo(t,e),e}function N_(t){var e=fe();return this.subTo(t,e),e}function O_(t){var e=fe();return this.multiplyTo(t,e),e}function L_(t){var e=fe();return this.divRemTo(t,e,null),e}function M_(t){var e=fe();return this.divRemTo(t,null,e),e}function K_(t){var e=fe(),r=fe();return this.divRemTo(t,e,r),new Array(e,r)}function F_(t){this.data[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp()}function U_(t,e){if(t!=0){for(;this.t<=e;)this.data[this.t++]=0;for(this.data[e]+=t;this.data[e]>=this.DV;)this.data[e]-=this.DV,++e>=this.t&&(this.data[this.t++]=0),++this.data[e]}}function Gs(){}function Py(t){return t}function q_(t,e,r){t.multiplyTo(e,r)}function V_(t,e){t.squareTo(e)}Gs.prototype.convert=Py;Gs.prototype.revert=Py;Gs.prototype.mulTo=q_;Gs.prototype.sqrTo=V_;function G_(t){return this.exp(t,new Gs)}function H_(t,e,r){var i=Math.min(this.t+t.t,e);for(r.s=0,r.t=i;i>0;)r.data[--i]=0;var n;for(n=r.t-this.t;i<n;++i)r.data[i+this.t]=this.am(0,t.data[i],r,i,0,this.t);for(n=Math.min(t.t,e);i<n;++i)this.am(0,t.data[i],r,i,0,e-i);r.clamp()}function z_(t,e,r){--e;var i=r.t=this.t+t.t-e;for(r.s=0;--i>=0;)r.data[i]=0;for(i=Math.max(e-this.t,0);i<t.t;++i)r.data[this.t+i-e]=this.am(e-i,t.data[i],r,0,0,this.t+i-e);r.clamp(),r.drShiftTo(1,r)}function es(t){this.r2=fe(),this.q3=fe(),k.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t}function j_(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m);if(t.compareTo(this.m)<0)return t;var e=fe();return t.copyTo(e),this.reduce(e),e}function W_(t){return t}function Y_(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;)t.dAddOffset(1,this.m.t+1);for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;)t.subTo(this.m,t)}function $_(t,e){t.squareTo(e),this.reduce(e)}function Q_(t,e,r){t.multiplyTo(e,r),this.reduce(r)}es.prototype.convert=j_;es.prototype.revert=W_;es.prototype.reduce=Y_;es.prototype.mulTo=Q_;es.prototype.sqrTo=$_;function Z_(t,e){var r=t.bitLength(),i,n=Ii(1),s;if(r<=0)return n;r<18?i=1:r<48?i=3:r<144?i=4:r<768?i=5:i=6,r<8?s=new hn(e):e.isEven()?s=new es(e):s=new ln(e);var a=new Array,o=3,f=i-1,u=(1<<i)-1;if(a[1]=s.convert(this),i>1){var c=fe();for(s.sqrTo(a[1],c);o<=u;)a[o]=fe(),s.mulTo(c,a[o-2],a[o]),o+=2}var h=t.t-1,l,d=!0,p=fe(),y;for(r=Eo(t.data[h])-1;h>=0;){for(r>=f?l=t.data[h]>>r-f&u:(l=(t.data[h]&(1<<r+1)-1)<<f-r,h>0&&(l|=t.data[h-1]>>this.DB+r-f)),o=i;(l&1)==0;)l>>=1,--o;if((r-=o)<0&&(r+=this.DB,--h),d)a[l].copyTo(n),d=!1;else{for(;o>1;)s.sqrTo(n,p),s.sqrTo(p,n),o-=2;o>0?s.sqrTo(n,p):(y=n,n=p,p=y),s.mulTo(p,a[l],n)}for(;h>=0&&(t.data[h]&1<<r)==0;)s.sqrTo(n,p),y=n,n=p,p=y,--r<0&&(r=this.DB-1,--h)}return s.revert(n)}function X_(t){var e=this.s<0?this.negate():this.clone(),r=t.s<0?t.negate():t.clone();if(e.compareTo(r)<0){var i=e;e=r,r=i}var n=e.getLowestSetBit(),s=r.getLowestSetBit();if(s<0)return e;for(n<s&&(s=n),s>0&&(e.rShiftTo(s,e),r.rShiftTo(s,r));e.signum()>0;)(n=e.getLowestSetBit())>0&&e.rShiftTo(n,e),(n=r.getLowestSetBit())>0&&r.rShiftTo(n,r),e.compareTo(r)>=0?(e.subTo(r,e),e.rShiftTo(1,e)):(r.subTo(e,r),r.rShiftTo(1,r));return s>0&&r.lShiftTo(s,r),r}function J_(t){if(t<=0)return 0;var e=this.DV%t,r=this.s<0?t-1:0;if(this.t>0)if(e==0)r=this.data[0]%t;else for(var i=this.t-1;i>=0;--i)r=(e*r+this.data[i])%t;return r}function e8(t){var e=t.isEven();if(this.isEven()&&e||t.signum()==0)return k.ZERO;for(var r=t.clone(),i=this.clone(),n=Ii(1),s=Ii(0),a=Ii(0),o=Ii(1);r.signum()!=0;){for(;r.isEven();)r.rShiftTo(1,r),e?((!n.isEven()||!s.isEven())&&(n.addTo(this,n),s.subTo(t,s)),n.rShiftTo(1,n)):s.isEven()||s.subTo(t,s),s.rShiftTo(1,s);for(;i.isEven();)i.rShiftTo(1,i),e?((!a.isEven()||!o.isEven())&&(a.addTo(this,a),o.subTo(t,o)),a.rShiftTo(1,a)):o.isEven()||o.subTo(t,o),o.rShiftTo(1,o);r.compareTo(i)>=0?(r.subTo(i,r),e&&n.subTo(a,n),s.subTo(o,s)):(i.subTo(r,i),e&&a.subTo(n,a),o.subTo(s,o))}if(i.compareTo(k.ONE)!=0)return k.ZERO;if(o.compareTo(t)>=0)return o.subtract(t);if(o.signum()<0)o.addTo(t,o);else return o;return o.signum()<0?o.add(t):o}var nr=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],t8=(1<<26)/nr[nr.length-1];function r8(t){var e,r=this.abs();if(r.t==1&&r.data[0]<=nr[nr.length-1]){for(e=0;e<nr.length;++e)if(r.data[0]==nr[e])return!0;return!1}if(r.isEven())return!1;for(e=1;e<nr.length;){for(var i=nr[e],n=e+1;n<nr.length&&i<t8;)i*=nr[n++];for(i=r.modInt(i);e<n;)if(i%nr[e++]==0)return!1}return r.millerRabin(t)}function i8(t){var e=this.subtract(k.ONE),r=e.getLowestSetBit();if(r<=0)return!1;for(var i=e.shiftRight(r),n=n8(),s,a=0;a<t;++a){do s=new k(this.bitLength(),n);while(s.compareTo(k.ONE)<=0||s.compareTo(e)>=0);var o=s.modPow(i,this);if(o.compareTo(k.ONE)!=0&&o.compareTo(e)!=0){for(var f=1;f++<r&&o.compareTo(e)!=0;)if(o=o.modPowInt(2,this),o.compareTo(k.ONE)==0)return!1;if(o.compareTo(e)!=0)return!1}}return!0}function n8(){return{nextBytes:function(t){for(var e=0;e<t.length;++e)t[e]=Math.floor(Math.random()*256)}}}k.prototype.chunkSize=s_;k.prototype.toRadix=o_;k.prototype.fromRadix=u_;k.prototype.fromNumber=c_;k.prototype.bitwiseTo=d_;k.prototype.changeBit=C_;k.prototype.addTo=P_;k.prototype.dMultiply=F_;k.prototype.dAddOffset=U_;k.prototype.multiplyLowerTo=H_;k.prototype.multiplyUpperTo=z_;k.prototype.modInt=J_;k.prototype.millerRabin=i8;k.prototype.clone=t_;k.prototype.intValue=r_;k.prototype.byteValue=i_;k.prototype.shortValue=n_;k.prototype.signum=a_;k.prototype.toByteArray=f_;k.prototype.equals=h_;k.prototype.min=l_;k.prototype.max=p_;k.prototype.and=g_;k.prototype.or=v_;k.prototype.xor=x_;k.prototype.andNot=b_;k.prototype.not=m_;k.prototype.shiftLeft=E_;k.prototype.shiftRight=w_;k.prototype.getLowestSetBit=__;k.prototype.bitCount=B_;k.prototype.testBit=A_;k.prototype.setBit=T_;k.prototype.clearBit=R_;k.prototype.flipBit=D_;k.prototype.add=k_;k.prototype.subtract=N_;k.prototype.multiply=O_;k.prototype.divide=L_;k.prototype.remainder=M_;k.prototype.divideAndRemainder=K_;k.prototype.modPow=Z_;k.prototype.modInverse=e8;k.prototype.pow=G_;k.prototype.gcd=X_;k.prototype.isProbablePrime=r8});var Ky=E((k6,My)=>{var _r=Se();fn();$e();var Ny=My.exports=_r.sha1=_r.sha1||{};_r.md.sha1=_r.md.algorithms.sha1=Ny;Ny.create=function(){Oy||s8();var t=null,e=_r.util.createBuffer(),r=new Array(80),i={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,fullMessageLength:null,messageLengthSize:8};return i.start=function(){i.messageLength=0,i.fullMessageLength=i.messageLength64=[];for(var n=i.messageLengthSize/4,s=0;s<n;++s)i.fullMessageLength.push(0);return e=_r.util.createBuffer(),t={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520},i},i.start(),i.update=function(n,s){s==="utf8"&&(n=_r.util.encodeUtf8(n));var a=n.length;i.messageLength+=a,a=[a/4294967296>>>0,a>>>0];for(var o=i.fullMessageLength.length-1;o>=0;--o)i.fullMessageLength[o]+=a[1],a[1]=a[0]+(i.fullMessageLength[o]/4294967296>>>0),i.fullMessageLength[o]=i.fullMessageLength[o]>>>0,a[0]=a[1]/4294967296>>>0;return e.putBytes(n),Ly(t,r,e),(e.read>2048||e.length()===0)&&e.compact(),i},i.digest=function(){var n=_r.util.createBuffer();n.putBytes(e.bytes());var s=i.fullMessageLength[i.fullMessageLength.length-1]+i.messageLengthSize,a=s&i.blockLength-1;n.putBytes(ac.substr(0,i.blockLength-a));for(var o,f,u=i.fullMessageLength[0]*8,c=0;c<i.fullMessageLength.length-1;++c)o=i.fullMessageLength[c+1]*8,f=o/4294967296>>>0,u+=f,n.putInt32(u>>>0),u=o>>>0;n.putInt32(u);var h={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4};Ly(h,r,n);var l=_r.util.createBuffer();return l.putInt32(h.h0),l.putInt32(h.h1),l.putInt32(h.h2),l.putInt32(h.h3),l.putInt32(h.h4),l},i};var ac=null,Oy=!1;function s8(){ac=String.fromCharCode(128),ac+=_r.util.fillString(String.fromCharCode(0),64),Oy=!0}function Ly(t,e,r){for(var i,n,s,a,o,f,u,c,h=r.length();h>=64;){for(n=t.h0,s=t.h1,a=t.h2,o=t.h3,f=t.h4,c=0;c<16;++c)i=r.getInt32(),e[c]=i,u=o^s&(a^o),i=(n<<5|n>>>27)+u+f+1518500249+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<20;++c)i=e[c-3]^e[c-8]^e[c-14]^e[c-16],i=i<<1|i>>>31,e[c]=i,u=o^s&(a^o),i=(n<<5|n>>>27)+u+f+1518500249+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<32;++c)i=e[c-3]^e[c-8]^e[c-14]^e[c-16],i=i<<1|i>>>31,e[c]=i,u=s^a^o,i=(n<<5|n>>>27)+u+f+1859775393+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<40;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s^a^o,i=(n<<5|n>>>27)+u+f+1859775393+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<60;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s&a|o&(s^a),i=(n<<5|n>>>27)+u+f+2400959708+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<80;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s^a^o,i=(n<<5|n>>>27)+u+f+3395469782+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;t.h0=t.h0+n|0,t.h1=t.h1+s|0,t.h2=t.h2+a|0,t.h3=t.h3+o|0,t.h4=t.h4+f|0,h-=64}}});var qy=E((N6,Uy)=>{var Ir=Se();$e();Vs();Ky();var Fy=Uy.exports=Ir.pkcs1=Ir.pkcs1||{};Fy.encode_rsa_oaep=function(t,e,r){var i,n,s,a;typeof r=="string"?(i=r,n=arguments[3]||void 0,s=arguments[4]||void 0):r&&(i=r.label||void 0,n=r.seed||void 0,s=r.md||void 0,r.mgf1&&r.mgf1.md&&(a=r.mgf1.md)),s?s.start():s=Ir.md.sha1.create(),a||(a=s);var o=Math.ceil(t.n.bitLength()/8),f=o-2*s.digestLength-2;if(e.length>f){var u=new Error("RSAES-OAEP input message length is too long.");throw u.length=e.length,u.maxLength=f,u}i||(i=""),s.update(i,"raw");for(var c=s.digest(),h="",l=f-e.length,d=0;d<l;d++)h+="\0";var p=c.getBytes()+h+""+e;if(!n)n=Ir.random.getBytes(s.digestLength);else if(n.length!==s.digestLength){var u=new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");throw u.seedLength=n.length,u.digestLength=s.digestLength,u}var y=So(n,o-s.digestLength-1,a),g=Ir.util.xorBytes(p,y,p.length),v=So(g,s.digestLength,a),x=Ir.util.xorBytes(n,v,n.length);return"\0"+x+g};Fy.decode_rsa_oaep=function(t,e,r){var i,n,s;typeof r=="string"?(i=r,n=arguments[3]||void 0):r&&(i=r.label||void 0,n=r.md||void 0,r.mgf1&&r.mgf1.md&&(s=r.mgf1.md));var a=Math.ceil(t.n.bitLength()/8);if(e.length!==a){var g=new Error("RSAES-OAEP encoded message length is invalid.");throw g.length=e.length,g.expectedLength=a,g}if(n===void 0?n=Ir.md.sha1.create():n.start(),s||(s=n),a<2*n.digestLength+2)throw new Error("RSAES-OAEP key is too short for the hash function.");i||(i=""),n.update(i,"raw");for(var o=n.digest().getBytes(),f=e.charAt(0),u=e.substring(1,n.digestLength+1),c=e.substring(1+n.digestLength),h=So(c,n.digestLength,s),l=Ir.util.xorBytes(u,h,u.length),d=So(l,a-n.digestLength-1,s),p=Ir.util.xorBytes(c,d,c.length),y=p.substring(0,n.digestLength),g=f!=="\0",v=0;v<n.digestLength;++v)g|=o.charAt(v)!==y.charAt(v);for(var x=1,w=n.digestLength,P=n.digestLength;P<p.length;P++){var B=p.charCodeAt(P),S=B&1^1,G=x?65534:0;g|=B&G,x=x&S,w+=x}if(g||p.charCodeAt(w)!==1)throw new Error("Invalid RSAES-OAEP padding.");return p.substring(w+1)};function So(t,e,r){r||(r=Ir.md.sha1.create());for(var i="",n=Math.ceil(e/r.digestLength),s=0;s<n;++s){var a=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,s&255);r.start(),r.update(t+a),i+=r.digest().getBytes()}return i.substring(0,e)}});var Vy=E((O6,oc)=>{var Bi=Se();$e();wo();Vs();(function(){if(Bi.prime){oc.exports=Bi.prime;return}var t=oc.exports=Bi.prime=Bi.prime||{},e=Bi.jsbn.BigInteger,r=[6,4,2,4,2,4,6,2],i=new e(null);i.fromInt(30);var n=function(h,l){return h|l};t.generateProbablePrime=function(h,l,d){typeof l=="function"&&(d=l,l={}),l=l||{};var p=l.algorithm||"PRIMEINC";typeof p=="string"&&(p={name:p}),p.options=p.options||{};var y=l.prng||Bi.random,g={nextBytes:function(v){for(var x=y.getBytesSync(v.length),w=0;w<v.length;++w)v[w]=x.charCodeAt(w)}};if(p.name==="PRIMEINC")return s(h,g,p.options,d);throw new Error("Invalid prime generation algorithm: "+p.name)};function s(h,l,d,p){return"workers"in d?f(h,l,d,p):a(h,l,d,p)}function a(h,l,d,p){var y=u(h,l),g=0,v=c(y.bitLength());"millerRabinTests"in d&&(v=d.millerRabinTests);var x=10;"maxBlockTime"in d&&(x=d.maxBlockTime),o(y,h,l,g,v,x,p)}function o(h,l,d,p,y,g,v){var x=+new Date;do{if(h.bitLength()>l&&(h=u(l,d)),h.isProbablePrime(y))return v(null,h);h.dAddOffset(r[p++%8],0)}while(g<0||+new Date-x<g);Bi.util.setImmediate(function(){o(h,l,d,p,y,g,v)})}function f(h,l,d,p){if(typeof Worker=="undefined")return a(h,l,d,p);var y=u(h,l),g=d.workers,v=d.workLoad||100,x=v*30/8,w=d.workerScript||"forge/prime.worker.js";if(g===-1)return Bi.util.estimateCores(function(B,S){B&&(S=2),g=S-1,P()});P();function P(){g=Math.max(1,g);for(var B=[],S=0;S<g;++S)B[S]=new Worker(w);for(var G=g,S=0;S<g;++S)B[S].addEventListener("message",se);var z=!1;function se(Te){if(!z){--G;var ye=Te.data;if(ye.found){for(var pe=0;pe<B.length;++pe)B[pe].terminate();return z=!0,p(null,new e(ye.prime,16))}y.bitLength()>h&&(y=u(h,l));var Ot=y.toString(16);Te.target.postMessage({hex:Ot,workLoad:v}),y.dAddOffset(x,0)}}}}function u(h,l){var d=new e(h,l),p=h-1;return d.testBit(p)||d.bitwiseTo(e.ONE.shiftLeft(p),n,d),d.dAddOffset(31-d.mod(i).byteValue(),0),d}function c(h){return h<=100?27:h<=150?18:h<=200?15:h<=250?12:h<=300?9:h<=350?8:h<=400?7:h<=500?6:h<=600?5:h<=800?4:h<=1250?3:2}})()});var Io=E((L6,$y)=>{var W=Se();qs();wo();co();qy();Vy();Vs();$e();typeof ae=="undefined"&&(ae=W.jsbn.BigInteger);var ae,uc=W.util.isNodejs?$r():null,_=W.asn1,Ht=W.util;W.pki=W.pki||{};$y.exports=W.pki.rsa=W.rsa=W.rsa||{};var Y=W.pki,a8=[6,4,2,4,2,4,6,2],o8={name:"PrivateKeyInfo",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:_.Class.UNIVERSAL,type:_.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:_.Class.UNIVERSAL,type:_.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},u8={name:"RSAPrivateKey",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},c8={name:"RSAPublicKey",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},f8=W.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:_.Class.UNIVERSAL,type:_.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:_.Class.UNIVERSAL,type:_.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},h8=function(t){var e;if(t.algorithm in Y.oids)e=Y.oids[t.algorithm];else{var r=new Error("Unknown message digest algorithm.");throw r.algorithm=t.algorithm,r}var i=_.oidToDer(e).getBytes(),n=_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[]),s=_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[]);s.value.push(_.create(_.Class.UNIVERSAL,_.Type.OID,!1,i)),s.value.push(_.create(_.Class.UNIVERSAL,_.Type.NULL,!1,""));var a=_.create(_.Class.UNIVERSAL,_.Type.OCTETSTRING,!1,t.digest().getBytes());return n.value.push(s),n.value.push(a),_.toDer(n).getBytes()},Gy=function(t,e,r){if(r)return t.modPow(e.e,e.n);if(!e.p||!e.q)return t.modPow(e.d,e.n);e.dP||(e.dP=e.d.mod(e.p.subtract(ae.ONE))),e.dQ||(e.dQ=e.d.mod(e.q.subtract(ae.ONE))),e.qInv||(e.qInv=e.q.modInverse(e.p));var i;do i=new ae(W.util.bytesToHex(W.random.getBytes(e.n.bitLength()/8)),16);while(i.compareTo(e.n)>=0||!i.gcd(e.n).equals(ae.ONE));t=t.multiply(i.modPow(e.e,e.n)).mod(e.n);for(var n=t.mod(e.p).modPow(e.dP,e.p),s=t.mod(e.q).modPow(e.dQ,e.q);n.compareTo(s)<0;)n=n.add(e.p);var a=n.subtract(s).multiply(e.qInv).mod(e.p).multiply(e.q).add(s);return a=a.multiply(i.modInverse(e.n)).mod(e.n),a};Y.rsa.encrypt=function(t,e,r){var i=r,n,s=Math.ceil(e.n.bitLength()/8);r!==!1&&r!==!0?(i=r===2,n=Hy(t,e,r)):(n=W.util.createBuffer(),n.putBytes(t));for(var a=new ae(n.toHex(),16),o=Gy(a,e,i),f=o.toString(16),u=W.util.createBuffer(),c=s-Math.ceil(f.length/2);c>0;)u.putByte(0),--c;return u.putBytes(W.util.hexToBytes(f)),u.getBytes()};Y.rsa.decrypt=function(t,e,r,i){var n=Math.ceil(e.n.bitLength()/8);if(t.length!==n){var s=new Error("Encrypted message length is invalid.");throw s.length=t.length,s.expected=n,s}var a=new ae(W.util.createBuffer(t).toHex(),16);if(a.compareTo(e.n)>=0)throw new Error("Encrypted message is invalid.");for(var o=Gy(a,e,r),f=o.toString(16),u=W.util.createBuffer(),c=n-Math.ceil(f.length/2);c>0;)u.putByte(0),--c;return u.putBytes(W.util.hexToBytes(f)),i!==!1?_o(u.getBytes(),e,r):u.getBytes()};Y.rsa.createKeyPairGenerationState=function(t,e,r){typeof t=="string"&&(t=parseInt(t,10)),t=t||2048,r=r||{};var i=r.prng||W.random,n={nextBytes:function(o){for(var f=i.getBytesSync(o.length),u=0;u<o.length;++u)o[u]=f.charCodeAt(u)}},s=r.algorithm||"PRIMEINC",a;if(s==="PRIMEINC")a={algorithm:s,state:0,bits:t,rng:n,eInt:e||65537,e:new ae(null),p:null,q:null,qBits:t>>1,pBits:t-(t>>1),pqState:0,num:null,keys:null},a.e.fromInt(a.eInt);else throw new Error("Invalid key generation algorithm: "+s);return a};Y.rsa.stepKeyPairGenerationState=function(t,e){"algorithm"in t||(t.algorithm="PRIMEINC");var r=new ae(null);r.fromInt(30);for(var i=0,n=function(h,l){return h|l},s=+new Date,a,o=0;t.keys===null&&(e<=0||o<e);){if(t.state===0){var f=t.p===null?t.pBits:t.qBits,u=f-1;t.pqState===0?(t.num=new ae(f,t.rng),t.num.testBit(u)||t.num.bitwiseTo(ae.ONE.shiftLeft(u),n,t.num),t.num.dAddOffset(31-t.num.mod(r).byteValue(),0),i=0,++t.pqState):t.pqState===1?t.num.bitLength()>f?t.pqState=0:t.num.isProbablePrime(p8(t.num.bitLength()))?++t.pqState:t.num.dAddOffset(a8[i++%8],0):t.pqState===2?t.pqState=t.num.subtract(ae.ONE).gcd(t.e).compareTo(ae.ONE)===0?3:0:t.pqState===3&&(t.pqState=0,t.p===null?t.p=t.num:t.q=t.num,t.p!==null&&t.q!==null&&++t.state,t.num=null)}else if(t.state===1)t.p.compareTo(t.q)<0&&(t.num=t.p,t.p=t.q,t.q=t.num),++t.state;else if(t.state===2)t.p1=t.p.subtract(ae.ONE),t.q1=t.q.subtract(ae.ONE),t.phi=t.p1.multiply(t.q1),++t.state;else if(t.state===3)t.phi.gcd(t.e).compareTo(ae.ONE)===0?++t.state:(t.p=null,t.q=null,t.state=0);else if(t.state===4)t.n=t.p.multiply(t.q),t.n.bitLength()===t.bits?++t.state:(t.q=null,t.state=0);else if(t.state===5){var c=t.e.modInverse(t.phi);t.keys={privateKey:Y.rsa.setPrivateKey(t.n,t.e,c,t.p,t.q,c.mod(t.p1),c.mod(t.q1),t.q.modInverse(t.p)),publicKey:Y.rsa.setPublicKey(t.n,t.e)}}a=+new Date,o+=a-s,s=a}return t.keys!==null};Y.rsa.generateKeyPair=function(t,e,r,i){if(arguments.length===1?typeof t=="object"?(r=t,t=void 0):typeof t=="function"&&(i=t,t=void 0):arguments.length===2?typeof t=="number"?typeof e=="function"?(i=e,e=void 0):typeof e!="number"&&(r=e,e=void 0):(r=t,i=e,t=void 0,e=void 0):arguments.length===3&&(typeof e=="number"?typeof r=="function"&&(i=r,r=void 0):(i=r,r=e,e=void 0)),r=r||{},t===void 0&&(t=r.bits||2048),e===void 0&&(e=r.e||65537),!W.options.usePureJavaScript&&!r.prng&&t>=256&&t<=16384&&(e===65537||e===3)){if(i){if(zy("generateKeyPair"))return uc.generateKeyPair("rsa",{modulusLength:t,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}},function(o,f,u){if(o)return i(o);i(null,{privateKey:Y.privateKeyFromPem(u),publicKey:Y.publicKeyFromPem(f)})});if(jy("generateKey")&&jy("exportKey"))return Ht.globalScope.crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:Yy(e),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(function(o){return Ht.globalScope.crypto.subtle.exportKey("pkcs8",o.privateKey)}).then(void 0,function(o){i(o)}).then(function(o){if(o){var f=Y.privateKeyFromAsn1(_.fromDer(W.util.createBuffer(o)));i(null,{privateKey:f,publicKey:Y.setRsaPublicKey(f.n,f.e)})}});if(Wy("generateKey")&&Wy("exportKey")){var n=Ht.globalScope.msCrypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:Yy(e),hash:{name:"SHA-256"}},!0,["sign","verify"]);n.oncomplete=function(o){var f=o.target.result,u=Ht.globalScope.msCrypto.subtle.exportKey("pkcs8",f.privateKey);u.oncomplete=function(c){var h=c.target.result,l=Y.privateKeyFromAsn1(_.fromDer(W.util.createBuffer(h)));i(null,{privateKey:l,publicKey:Y.setRsaPublicKey(l.n,l.e)})},u.onerror=function(c){i(c)}},n.onerror=function(o){i(o)};return}}else if(zy("generateKeyPairSync")){var s=uc.generateKeyPairSync("rsa",{modulusLength:t,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}});return{privateKey:Y.privateKeyFromPem(s.privateKey),publicKey:Y.publicKeyFromPem(s.publicKey)}}}var a=Y.rsa.createKeyPairGenerationState(t,e,r);if(!i)return Y.rsa.stepKeyPairGenerationState(a,0),a.keys;l8(a,r,i)};Y.setRsaPublicKey=Y.rsa.setPublicKey=function(t,e){var r={n:t,e};return r.encrypt=function(i,n,s){if(typeof n=="string"?n=n.toUpperCase():n===void 0&&(n="RSAES-PKCS1-V1_5"),n==="RSAES-PKCS1-V1_5")n={encode:function(o,f,u){return Hy(o,f,2).getBytes()}};else if(n==="RSA-OAEP"||n==="RSAES-OAEP")n={encode:function(o,f){return W.pkcs1.encode_rsa_oaep(f,o,s)}};else if(["RAW","NONE","NULL",null].indexOf(n)!==-1)n={encode:function(o){return o}};else if(typeof n=="string")throw new Error('Unsupported encryption scheme: "'+n+'".');var a=n.encode(i,r,!0);return Y.rsa.encrypt(a,r,!0)},r.verify=function(i,n,s){typeof s=="string"?s=s.toUpperCase():s===void 0&&(s="RSASSA-PKCS1-V1_5"),s==="RSASSA-PKCS1-V1_5"?s={verify:function(o,f){f=_o(f,r,!0);var u=_.fromDer(f);return o===u.value[1].value}}:(s==="NONE"||s==="NULL"||s===null)&&(s={verify:function(o,f){return f=_o(f,r,!0),o===f}});var a=Y.rsa.decrypt(n,r,!0,!1);return s.verify(i,a,r.n.bitLength())},r};Y.setRsaPrivateKey=Y.rsa.setPrivateKey=function(t,e,r,i,n,s,a,o){var f={n:t,e,d:r,p:i,q:n,dP:s,dQ:a,qInv:o};return f.decrypt=function(u,c,h){typeof c=="string"?c=c.toUpperCase():c===void 0&&(c="RSAES-PKCS1-V1_5");var l=Y.rsa.decrypt(u,f,!1,!1);if(c==="RSAES-PKCS1-V1_5")c={decode:_o};else if(c==="RSA-OAEP"||c==="RSAES-OAEP")c={decode:function(d,p){return W.pkcs1.decode_rsa_oaep(p,d,h)}};else if(["RAW","NONE","NULL",null].indexOf(c)!==-1)c={decode:function(d){return d}};else throw new Error('Unsupported encryption scheme: "'+c+'".');return c.decode(l,f,!1)},f.sign=function(u,c){var h=!1;typeof c=="string"&&(c=c.toUpperCase()),c===void 0||c==="RSASSA-PKCS1-V1_5"?(c={encode:h8},h=1):(c==="NONE"||c==="NULL"||c===null)&&(c={encode:function(){return u}},h=1);var l=c.encode(u,f.n.bitLength());return Y.rsa.encrypt(l,f,h)},f};Y.wrapRsaPrivateKey=function(t){return _.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,_.integerToDer(0).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(Y.oids.rsaEncryption).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.NULL,!1,"")]),_.create(_.Class.UNIVERSAL,_.Type.OCTETSTRING,!1,_.toDer(t).getBytes())])};Y.privateKeyFromAsn1=function(t){var e={},r=[];if(_.validate(t,o8,e,r)&&(t=_.fromDer(W.util.createBuffer(e.privateKey))),e={},r=[],!_.validate(t,u8,e,r)){var i=new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");throw i.errors=r,i}var n,s,a,o,f,u,c,h;return n=W.util.createBuffer(e.privateKeyModulus).toHex(),s=W.util.createBuffer(e.privateKeyPublicExponent).toHex(),a=W.util.createBuffer(e.privateKeyPrivateExponent).toHex(),o=W.util.createBuffer(e.privateKeyPrime1).toHex(),f=W.util.createBuffer(e.privateKeyPrime2).toHex(),u=W.util.createBuffer(e.privateKeyExponent1).toHex(),c=W.util.createBuffer(e.privateKeyExponent2).toHex(),h=W.util.createBuffer(e.privateKeyCoefficient).toHex(),Y.setRsaPrivateKey(new ae(n,16),new ae(s,16),new ae(a,16),new ae(o,16),new ae(f,16),new ae(u,16),new ae(c,16),new ae(h,16))};Y.privateKeyToAsn1=Y.privateKeyToRSAPrivateKey=function(t){return _.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,_.integerToDer(0).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.n)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.e)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.d)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.p)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.q)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.dP)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.dQ)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.qInv))])};Y.publicKeyFromAsn1=function(t){var e={},r=[];if(_.validate(t,f8,e,r)){var i=_.derToOid(e.publicKeyOid);if(i!==Y.oids.rsaEncryption){var n=new Error("Cannot read public key. Unknown OID.");throw n.oid=i,n}t=e.rsaPublicKey}if(r=[],!_.validate(t,c8,e,r)){var n=new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");throw n.errors=r,n}var s=W.util.createBuffer(e.publicKeyModulus).toHex(),a=W.util.createBuffer(e.publicKeyExponent).toHex();return Y.setRsaPublicKey(new ae(s,16),new ae(a,16))};Y.publicKeyToAsn1=Y.publicKeyToSubjectPublicKeyInfo=function(t){return _.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(Y.oids.rsaEncryption).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.NULL,!1,"")]),_.create(_.Class.UNIVERSAL,_.Type.BITSTRING,!1,[Y.publicKeyToRSAPublicKey(t)])])};Y.publicKeyToRSAPublicKey=function(t){return _.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.n)),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,Br(t.e))])};function Hy(t,e,r){var i=W.util.createBuffer(),n=Math.ceil(e.n.bitLength()/8);if(t.length>n-11){var s=new Error("Message is too long for PKCS#1 v1.5 padding.");throw s.length=t.length,s.max=n-11,s}i.putByte(0),i.putByte(r);var a=n-3-t.length,o;if(r===0||r===1){o=r===0?0:255;for(var f=0;f<a;++f)i.putByte(o)}else for(;a>0;){for(var u=0,c=W.random.getBytes(a),f=0;f<a;++f)o=c.charCodeAt(f),o===0?++u:i.putByte(o);a=u}return i.putByte(0),i.putBytes(t),i}function _o(t,e,r,i){var n=Math.ceil(e.n.bitLength()/8),s=W.util.createBuffer(t),a=s.getByte(),o=s.getByte();if(a!==0||r&&o!==0&&o!==1||!r&&o!=2||r&&o===0&&typeof i=="undefined")throw new Error("Encryption block is invalid.");var f=0;if(o===0){f=n-3-i;for(var u=0;u<f;++u)if(s.getByte()!==0)throw new Error("Encryption block is invalid.")}else if(o===1)for(f=0;s.length()>1;){if(s.getByte()!==255){--s.read;break}++f}else if(o===2)for(f=0;s.length()>1;){if(s.getByte()===0){--s.read;break}++f}var c=s.getByte();if(c!==0||f!==n-3-s.length())throw new Error("Encryption block is invalid.");return s.getBytes()}function l8(t,e,r){typeof e=="function"&&(r=e,e={}),e=e||{};var i={algorithm:{name:e.algorithm||"PRIMEINC",options:{workers:e.workers||2,workLoad:e.workLoad||100,workerScript:e.workerScript}}};"prng"in e&&(i.prng=e.prng),n();function n(){s(t.pBits,function(o,f){if(o)return r(o);if(t.p=f,t.q!==null)return a(o,t.q);s(t.qBits,a)})}function s(o,f){W.prime.generateProbablePrime(o,i,f)}function a(o,f){if(o)return r(o);if(t.q=f,t.p.compareTo(t.q)<0){var u=t.p;t.p=t.q,t.q=u}if(t.p.subtract(ae.ONE).gcd(t.e).compareTo(ae.ONE)!==0){t.p=null,n();return}if(t.q.subtract(ae.ONE).gcd(t.e).compareTo(ae.ONE)!==0){t.q=null,s(t.qBits,a);return}if(t.p1=t.p.subtract(ae.ONE),t.q1=t.q.subtract(ae.ONE),t.phi=t.p1.multiply(t.q1),t.phi.gcd(t.e).compareTo(ae.ONE)!==0){t.p=t.q=null,n();return}if(t.n=t.p.multiply(t.q),t.n.bitLength()!==t.bits){t.q=null,s(t.qBits,a);return}var c=t.e.modInverse(t.phi);t.keys={privateKey:Y.rsa.setPrivateKey(t.n,t.e,c,t.p,t.q,c.mod(t.p1),c.mod(t.q1),t.q.modInverse(t.p)),publicKey:Y.rsa.setPublicKey(t.n,t.e)},r(null,t.keys)}}function Br(t){var e=t.toString(16);e[0]>="8"&&(e="00"+e);var r=W.util.hexToBytes(e);return r.length>1&&(r.charCodeAt(0)===0&&(r.charCodeAt(1)&128)==0||r.charCodeAt(0)===255&&(r.charCodeAt(1)&128)==128)?r.substr(1):r}function p8(t){return t<=100?27:t<=150?18:t<=200?15:t<=250?12:t<=300?9:t<=350?8:t<=400?7:t<=500?6:t<=600?5:t<=800?4:t<=1250?3:2}function zy(t){return W.util.isNodejs&&typeof uc[t]=="function"}function jy(t){return typeof Ht.globalScope!="undefined"&&typeof Ht.globalScope.crypto=="object"&&typeof Ht.globalScope.crypto.subtle=="object"&&typeof Ht.globalScope.crypto.subtle[t]=="function"}function Wy(t){return typeof Ht.globalScope!="undefined"&&typeof Ht.globalScope.msCrypto=="object"&&typeof Ht.globalScope.msCrypto.subtle=="object"&&typeof Ht.globalScope.msCrypto.subtle[t]=="function"}function Yy(t){for(var e=W.util.hexToBytes(t.toString(16)),r=new Uint8Array(e.length),i=0;i<e.length;++i)r[i]=e.charCodeAt(i);return r}});var tg=E((M6,eg)=>{var q=Se();Ju();qs();sy();fn();co();fy();py();Vs();Iy();Io();$e();typeof Qy=="undefined"&&(Qy=q.jsbn.BigInteger);var Qy,T=q.asn1,X=q.pki=q.pki||{};eg.exports=X.pbe=q.pbe=q.pbe||{};var pn=X.oids,d8={name:"EncryptedPrivateKeyInfo",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:T.Class.UNIVERSAL,type:T.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:T.Class.UNIVERSAL,type:T.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},y8={name:"PBES2Algorithms",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:T.Class.UNIVERSAL,type:T.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:T.Class.UNIVERSAL,type:T.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:T.Class.UNIVERSAL,type:T.Type.INTEGER,constructed:!1,capture:"kdfIterationCount"},{name:"PBES2Algorithms.params.keyLength",tagClass:T.Class.UNIVERSAL,type:T.Type.INTEGER,constructed:!1,optional:!0,capture:"keyLength"},{name:"PBES2Algorithms.params.prf",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,optional:!0,value:[{name:"PBES2Algorithms.params.prf.algorithm",tagClass:T.Class.UNIVERSAL,type:T.Type.OID,constructed:!1,capture:"prfOid"}]}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:T.Class.UNIVERSAL,type:T.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:T.Class.UNIVERSAL,type:T.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},g8={name:"pkcs-12PbeParams",tagClass:T.Class.UNIVERSAL,type:T.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:T.Class.UNIVERSAL,type:T.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:T.Class.UNIVERSAL,type:T.Type.INTEGER,constructed:!1,capture:"iterations"}]};X.encryptPrivateKeyInfo=function(t,e,r){r=r||{},r.saltSize=r.saltSize||8,r.count=r.count||2048,r.algorithm=r.algorithm||"aes128",r.prfAlgorithm=r.prfAlgorithm||"sha1";var i=q.random.getBytesSync(r.saltSize),n=r.count,s=T.integerToDer(n),a,o,f;if(r.algorithm.indexOf("aes")===0||r.algorithm==="des"){var u,c,h;switch(r.algorithm){case"aes128":a=16,u=16,c=pn["aes128-CBC"],h=q.aes.createEncryptionCipher;break;case"aes192":a=24,u=16,c=pn["aes192-CBC"],h=q.aes.createEncryptionCipher;break;case"aes256":a=32,u=16,c=pn["aes256-CBC"],h=q.aes.createEncryptionCipher;break;case"des":a=8,u=8,c=pn.desCBC,h=q.des.createEncryptionCipher;break;default:var l=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw l.algorithm=r.algorithm,l}var d="hmacWith"+r.prfAlgorithm.toUpperCase(),p=Jy(d),y=q.pkcs5.pbkdf2(e,i,n,a,p),g=q.random.getBytesSync(u),v=h(y);v.start(g),v.update(T.toDer(t)),v.finish(),f=v.output.getBytes();var x=v8(i,s,a,d);o=T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OID,!1,T.oidToDer(pn.pkcs5PBES2).getBytes()),T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OID,!1,T.oidToDer(pn.pkcs5PBKDF2).getBytes()),x]),T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OID,!1,T.oidToDer(c).getBytes()),T.create(T.Class.UNIVERSAL,T.Type.OCTETSTRING,!1,g)])])])}else if(r.algorithm==="3des"){a=24;var w=new q.util.ByteBuffer(i),y=X.pbe.generatePkcs12Key(e,w,1,n,a),g=X.pbe.generatePkcs12Key(e,w,2,n,a),v=q.des.createEncryptionCipher(y);v.start(g),v.update(T.toDer(t)),v.finish(),f=v.output.getBytes(),o=T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OID,!1,T.oidToDer(pn["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OCTETSTRING,!1,i),T.create(T.Class.UNIVERSAL,T.Type.INTEGER,!1,s.getBytes())])])}else{var l=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw l.algorithm=r.algorithm,l}var P=T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[o,T.create(T.Class.UNIVERSAL,T.Type.OCTETSTRING,!1,f)]);return P};X.decryptPrivateKeyInfo=function(t,e){var r=null,i={},n=[];if(!T.validate(t,d8,i,n)){var s=new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}var a=T.derToOid(i.encryptionOid),o=X.pbe.getCipher(a,i.encryptionParams,e),f=q.util.createBuffer(i.encryptedData);return o.update(f),o.finish()&&(r=T.fromDer(o.output)),r};X.encryptedPrivateKeyToPem=function(t,e){var r={type:"ENCRYPTED PRIVATE KEY",body:T.toDer(t).getBytes()};return q.pem.encode(r,{maxline:e})};X.encryptedPrivateKeyFromPem=function(t){var e=q.pem.decode(t)[0];if(e.type!=="ENCRYPTED PRIVATE KEY"){var r=new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');throw r.headerType=e.type,r}if(e.procType&&e.procType.type==="ENCRYPTED")throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");return T.fromDer(e.body)};X.encryptRsaPrivateKey=function(t,e,r){if(r=r||{},!r.legacy){var i=X.wrapRsaPrivateKey(X.privateKeyToAsn1(t));return i=X.encryptPrivateKeyInfo(i,e,r),X.encryptedPrivateKeyToPem(i)}var n,s,a,o;switch(r.algorithm){case"aes128":n="AES-128-CBC",a=16,s=q.random.getBytesSync(16),o=q.aes.createEncryptionCipher;break;case"aes192":n="AES-192-CBC",a=24,s=q.random.getBytesSync(16),o=q.aes.createEncryptionCipher;break;case"aes256":n="AES-256-CBC",a=32,s=q.random.getBytesSync(16),o=q.aes.createEncryptionCipher;break;case"3des":n="DES-EDE3-CBC",a=24,s=q.random.getBytesSync(8),o=q.des.createEncryptionCipher;break;case"des":n="DES-CBC",a=8,s=q.random.getBytesSync(8),o=q.des.createEncryptionCipher;break;default:var f=new Error('Could not encrypt RSA private key; unsupported encryption algorithm "'+r.algorithm+'".');throw f.algorithm=r.algorithm,f}var u=q.pbe.opensslDeriveBytes(e,s.substr(0,8),a),c=o(u);c.start(s),c.update(T.toDer(X.privateKeyToAsn1(t))),c.finish();var h={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:n,parameters:q.util.bytesToHex(s).toUpperCase()},body:c.output.getBytes()};return q.pem.encode(h)};X.decryptRsaPrivateKey=function(t,e){var r=null,i=q.pem.decode(t)[0];if(i.type!=="ENCRYPTED PRIVATE KEY"&&i.type!=="PRIVATE KEY"&&i.type!=="RSA PRIVATE KEY"){var n=new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');throw n.headerType=n,n}if(i.procType&&i.procType.type==="ENCRYPTED"){var s,a;switch(i.dekInfo.algorithm){case"DES-CBC":s=8,a=q.des.createDecryptionCipher;break;case"DES-EDE3-CBC":s=24,a=q.des.createDecryptionCipher;break;case"AES-128-CBC":s=16,a=q.aes.createDecryptionCipher;break;case"AES-192-CBC":s=24,a=q.aes.createDecryptionCipher;break;case"AES-256-CBC":s=32,a=q.aes.createDecryptionCipher;break;case"RC2-40-CBC":s=5,a=function(h){return q.rc2.createDecryptionCipher(h,40)};break;case"RC2-64-CBC":s=8,a=function(h){return q.rc2.createDecryptionCipher(h,64)};break;case"RC2-128-CBC":s=16,a=function(h){return q.rc2.createDecryptionCipher(h,128)};break;default:var n=new Error('Could not decrypt private key; unsupported encryption algorithm "'+i.dekInfo.algorithm+'".');throw n.algorithm=i.dekInfo.algorithm,n}var o=q.util.hexToBytes(i.dekInfo.parameters),f=q.pbe.opensslDeriveBytes(e,o.substr(0,8),s),u=a(f);if(u.start(o),u.update(q.util.createBuffer(i.body)),u.finish())r=u.output.getBytes();else return r}else r=i.body;return i.type==="ENCRYPTED PRIVATE KEY"?r=X.decryptPrivateKeyInfo(T.fromDer(r),e):r=T.fromDer(r),r!==null&&(r=X.privateKeyFromAsn1(r)),r};X.pbe.generatePkcs12Key=function(t,e,r,i,n,s){var a,o;if(typeof s=="undefined"||s===null){if(!("sha1"in q.md))throw new Error('"sha1" hash algorithm unavailable.');s=q.md.sha1.create()}var f=s.digestLength,u=s.blockLength,c=new q.util.ByteBuffer,h=new q.util.ByteBuffer;if(t!=null){for(o=0;o<t.length;o++)h.putInt16(t.charCodeAt(o));h.putInt16(0)}var l=h.length(),d=e.length(),p=new q.util.ByteBuffer;p.fillWithByte(r,u);var y=u*Math.ceil(d/u),g=new q.util.ByteBuffer;for(o=0;o<y;o++)g.putByte(e.at(o%d));var v=u*Math.ceil(l/u),x=new q.util.ByteBuffer;for(o=0;o<v;o++)x.putByte(h.at(o%l));var w=g;w.putBuffer(x);for(var P=Math.ceil(n/f),B=1;B<=P;B++){var S=new q.util.ByteBuffer;S.putBytes(p.bytes()),S.putBytes(w.bytes());for(var G=0;G<i;G++)s.start(),s.update(S.getBytes()),S=s.digest();var z=new q.util.ByteBuffer;for(o=0;o<u;o++)z.putByte(S.at(o%f));var se=Math.ceil(d/u)+Math.ceil(l/u),Te=new q.util.ByteBuffer;for(a=0;a<se;a++){var ye=new q.util.ByteBuffer(w.getBytes(u)),pe=511;for(o=z.length()-1;o>=0;o--)pe=pe>>8,pe+=z.at(o)+ye.at(o),ye.setAt(o,pe&255);Te.putBuffer(ye)}w=Te,c.putBuffer(S)}return c.truncate(c.length()-n),c};X.pbe.getCipher=function(t,e,r){switch(t){case X.oids.pkcs5PBES2:return X.pbe.getCipherForPBES2(t,e,r);case X.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case X.oids["pbewithSHAAnd40BitRC2-CBC"]:return X.pbe.getCipherForPKCS12PBE(t,e,r);default:var i=new Error("Cannot read encrypted PBE data block. Unsupported OID.");throw i.oid=t,i.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"],i}};X.pbe.getCipherForPBES2=function(t,e,r){var i={},n=[];if(!T.validate(e,y8,i,n)){var s=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}if(t=T.derToOid(i.kdfOid),t!==X.oids.pkcs5PBKDF2){var s=new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");throw s.oid=t,s.supportedOids=["pkcs5PBKDF2"],s}if(t=T.derToOid(i.encOid),t!==X.oids["aes128-CBC"]&&t!==X.oids["aes192-CBC"]&&t!==X.oids["aes256-CBC"]&&t!==X.oids["des-EDE3-CBC"]&&t!==X.oids.desCBC){var s=new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");throw s.oid=t,s.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC","des-EDE3-CBC","desCBC"],s}var a=i.kdfSalt,o=q.util.createBuffer(i.kdfIterationCount);o=o.getInt(o.length()<<3);var f,u;switch(X.oids[t]){case"aes128-CBC":f=16,u=q.aes.createDecryptionCipher;break;case"aes192-CBC":f=24,u=q.aes.createDecryptionCipher;break;case"aes256-CBC":f=32,u=q.aes.createDecryptionCipher;break;case"des-EDE3-CBC":f=24,u=q.des.createDecryptionCipher;break;case"desCBC":f=8,u=q.des.createDecryptionCipher;break}var c=Xy(i.prfOid),h=q.pkcs5.pbkdf2(r,a,o,f,c),l=i.encIv,d=u(h);return d.start(l),d};X.pbe.getCipherForPKCS12PBE=function(t,e,r){var i={},n=[];if(!T.validate(e,g8,i,n)){var s=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}var a=q.util.createBuffer(i.salt),o=q.util.createBuffer(i.iterations);o=o.getInt(o.length()<<3);var f,u,c;switch(t){case X.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:f=24,u=8,c=q.des.startDecrypting;break;case X.oids["pbewithSHAAnd40BitRC2-CBC"]:f=5,u=8,c=function(y,g){var v=q.rc2.createDecryptionCipher(y,40);return v.start(g,null),v};break;default:var s=new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");throw s.oid=t,s}var h=Xy(i.prfOid),l=X.pbe.generatePkcs12Key(r,a,1,o,f,h);h.start();var d=X.pbe.generatePkcs12Key(r,a,2,o,u,h);return c(l,d)};X.pbe.opensslDeriveBytes=function(t,e,r,i){if(typeof i=="undefined"||i===null){if(!("md5"in q.md))throw new Error('"md5" hash algorithm unavailable.');i=q.md.md5.create()}e===null&&(e="");for(var n=[Zy(i,t+e)],s=16,a=1;s<r;++a,s+=16)n.push(Zy(i,n[a-1]+t+e));return n.join("").substr(0,r)};function Zy(t,e){return t.start().update(e).digest().getBytes()}function Xy(t){var e;if(!t)e="hmacWithSHA1";else if(e=X.oids[T.derToOid(t)],!e){var r=new Error("Unsupported PRF OID.");throw r.oid=t,r.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],r}return Jy(e)}function Jy(t){var e=q.md;switch(t){case"hmacWithSHA224":e=q.md.sha512;case"hmacWithSHA1":case"hmacWithSHA256":case"hmacWithSHA384":case"hmacWithSHA512":t=t.substr(8).toLowerCase();break;default:var r=new Error("Unsupported PRF algorithm.");throw r.algorithm=t,r.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],r}if(!e||!(t in e))throw new Error("Unknown hash algorithm: "+t);return e[t].create()}function v8(t,e,r,i){var n=T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OCTETSTRING,!1,t),T.create(T.Class.UNIVERSAL,T.Type.INTEGER,!1,e.getBytes())]);return i!=="hmacWithSHA1"&&n.value.push(T.create(T.Class.UNIVERSAL,T.Type.INTEGER,!1,q.util.hexToBytes(r.toString(16))),T.create(T.Class.UNIVERSAL,T.Type.SEQUENCE,!0,[T.create(T.Class.UNIVERSAL,T.Type.OID,!1,T.oidToDer(X.oids[i]).getBytes()),T.create(T.Class.UNIVERSAL,T.Type.NULL,!1,"")])),n}});var sr={};lt(sr,{concat:()=>x8});function x8(t,e){e||(e=t.reduce((n,s)=>n+s.length,0));let r=new Uint8Array(e),i=0;for(let n of t)r.set(n,i),i+=n.length;return r}var ar=Ee(()=>{});var Hs=E(rg=>{"use strict";rg.get=(t=globalThis)=>{let e=t.crypto;if(!e||!e.subtle)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}});var cc=E((F6,ng)=>{"use strict";var{concat:b8}=(ar(),sr),{fromString:ig}=(st(),nt),m8=Hs();function E8({algorithm:t="AES-GCM",nonceLength:e=12,keyLength:r=16,digest:i="SHA-256",saltLength:n=16,iterations:s=32767}={}){let a=m8.get();r*=8;async function o(u,c){let h=a.getRandomValues(new Uint8Array(n)),l=a.getRandomValues(new Uint8Array(e)),d={name:t,iv:l},p={name:"PBKDF2",salt:h,iterations:s,hash:{name:i}},y=await a.subtle.importKey("raw",ig(c),{name:"PBKDF2"},!1,["deriveKey","deriveBits"]),g=await a.subtle.deriveKey(p,y,{name:t,length:r},!0,["encrypt"]),v=await a.subtle.encrypt(d,g,u);return b8([h,d.iv,new Uint8Array(v)])}async function f(u,c){let h=u.slice(0,n),l=u.slice(n,n+e),d=u.slice(n+e),p={name:t,iv:l},y={name:"PBKDF2",salt:h,iterations:s,hash:{name:i}},g=await a.subtle.importKey("raw",ig(c),{name:"PBKDF2"},!1,["deriveKey","deriveBits"]),v=await a.subtle.deriveKey(y,g,{name:t,length:r},!0,["decrypt"]),x=await a.subtle.decrypt(p,v,d);return new Uint8Array(x)}return{encrypt:o,decrypt:f}}ng.exports={create:E8}});var ag=E((U6,sg)=>{"use strict";var{base64:w8}=(on(),Ei),S8=cc();sg.exports={import:async function(t,e){let r=w8.decode(t);return await S8.create().decrypt(r,e)}}});var or={};lt(or,{equals:()=>_8});function _8(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}var ur=Ee(()=>{});var hg=E((q6,fg)=>{var ke=Se();fn();$e();var zs=fg.exports=ke.sha512=ke.sha512||{};ke.md.sha512=ke.md.algorithms.sha512=zs;var og=ke.sha384=ke.sha512.sha384=ke.sha512.sha384||{};og.create=function(){return zs.create("SHA-384")};ke.md.sha384=ke.md.algorithms.sha384=og;ke.sha512.sha256=ke.sha512.sha256||{create:function(){return zs.create("SHA-512/256")}};ke.md["sha512/256"]=ke.md.algorithms["sha512/256"]=ke.sha512.sha256;ke.sha512.sha224=ke.sha512.sha224||{create:function(){return zs.create("SHA-512/224")}};ke.md["sha512/224"]=ke.md.algorithms["sha512/224"]=ke.sha512.sha224;zs.create=function(t){if(ug||I8(),typeof t=="undefined"&&(t="SHA-512"),!(t in dn))throw new Error("Invalid SHA-512 algorithm: "+t);for(var e=dn[t],r=null,i=ke.util.createBuffer(),n=new Array(80),s=0;s<80;++s)n[s]=new Array(2);var a=64;switch(t){case"SHA-384":a=48;break;case"SHA-512/256":a=32;break;case"SHA-512/224":a=28;break}var o={algorithm:t.replace("-","").toLowerCase(),blockLength:128,digestLength:a,messageLength:0,fullMessageLength:null,messageLengthSize:16};return o.start=function(){o.messageLength=0,o.fullMessageLength=o.messageLength128=[];for(var f=o.messageLengthSize/4,u=0;u<f;++u)o.fullMessageLength.push(0);i=ke.util.createBuffer(),r=new Array(e.length);for(var u=0;u<e.length;++u)r[u]=e[u].slice(0);return o},o.start(),o.update=function(f,u){u==="utf8"&&(f=ke.util.encodeUtf8(f));var c=f.length;o.messageLength+=c,c=[c/4294967296>>>0,c>>>0];for(var h=o.fullMessageLength.length-1;h>=0;--h)o.fullMessageLength[h]+=c[1],c[1]=c[0]+(o.fullMessageLength[h]/4294967296>>>0),o.fullMessageLength[h]=o.fullMessageLength[h]>>>0,c[0]=c[1]/4294967296>>>0;return i.putBytes(f),cg(r,n,i),(i.read>2048||i.length()===0)&&i.compact(),o},o.digest=function(){var f=ke.util.createBuffer();f.putBytes(i.bytes());var u=o.fullMessageLength[o.fullMessageLength.length-1]+o.messageLengthSize,c=u&o.blockLength-1;f.putBytes(fc.substr(0,o.blockLength-c));for(var h,l,d=o.fullMessageLength[0]*8,p=0;p<o.fullMessageLength.length-1;++p)h=o.fullMessageLength[p+1]*8,l=h/4294967296>>>0,d+=l,f.putInt32(d>>>0),d=h>>>0;f.putInt32(d);for(var y=new Array(r.length),p=0;p<r.length;++p)y[p]=r[p].slice(0);cg(y,n,f);var g=ke.util.createBuffer(),v;t==="SHA-512"?v=y.length:t==="SHA-384"?v=y.length-2:v=y.length-4;for(var p=0;p<v;++p)g.putInt32(y[p][0]),(p!==v-1||t!=="SHA-512/224")&&g.putInt32(y[p][1]);return g},o};var fc=null,ug=!1,hc=null,dn=null;function I8(){fc=String.fromCharCode(128),fc+=ke.util.fillString(String.fromCharCode(0),128),hc=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]],dn={},dn["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]],dn["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]],dn["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,1401305490],[721525244,746961066],[246885852,2177182882]],dn["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]],ug=!0}function cg(t,e,r){for(var i,n,s,a,o,f,u,c,h,l,d,p,y,g,v,x,w,P,B,S,G,z,se,Te,ye,pe,Ot,Hr,Z,be,O,zi,ji,Wi,Yi,_s=r.length();_s>=128;){for(Z=0;Z<16;++Z)e[Z][0]=r.getInt32()>>>0,e[Z][1]=r.getInt32()>>>0;for(;Z<80;++Z)zi=e[Z-2],be=zi[0],O=zi[1],i=((be>>>19|O<<13)^(O>>>29|be<<3)^be>>>6)>>>0,n=((be<<13|O>>>19)^(O<<3|be>>>29)^(be<<26|O>>>6))>>>0,Wi=e[Z-15],be=Wi[0],O=Wi[1],s=((be>>>1|O<<31)^(be>>>8|O<<24)^be>>>7)>>>0,a=((be<<31|O>>>1)^(be<<24|O>>>8)^(be<<25|O>>>7))>>>0,ji=e[Z-7],Yi=e[Z-16],O=n+ji[1]+a+Yi[1],e[Z][0]=i+ji[0]+s+Yi[0]+(O/4294967296>>>0)>>>0,e[Z][1]=O>>>0;for(y=t[0][0],g=t[0][1],v=t[1][0],x=t[1][1],w=t[2][0],P=t[2][1],B=t[3][0],S=t[3][1],G=t[4][0],z=t[4][1],se=t[5][0],Te=t[5][1],ye=t[6][0],pe=t[6][1],Ot=t[7][0],Hr=t[7][1],Z=0;Z<80;++Z)u=((G>>>14|z<<18)^(G>>>18|z<<14)^(z>>>9|G<<23))>>>0,c=((G<<18|z>>>14)^(G<<14|z>>>18)^(z<<23|G>>>9))>>>0,h=(ye^G&(se^ye))>>>0,l=(pe^z&(Te^pe))>>>0,o=((y>>>28|g<<4)^(g>>>2|y<<30)^(g>>>7|y<<25))>>>0,f=((y<<4|g>>>28)^(g<<30|y>>>2)^(g<<25|y>>>7))>>>0,d=(y&v|w&(y^v))>>>0,p=(g&x|P&(g^x))>>>0,O=Hr+c+l+hc[Z][1]+e[Z][1],i=Ot+u+h+hc[Z][0]+e[Z][0]+(O/4294967296>>>0)>>>0,n=O>>>0,O=f+p,s=o+d+(O/4294967296>>>0)>>>0,a=O>>>0,Ot=ye,Hr=pe,ye=se,pe=Te,se=G,Te=z,O=S+n,G=B+i+(O/4294967296>>>0)>>>0,z=O>>>0,B=w,S=P,w=v,P=x,v=y,x=g,O=n+a,y=i+s+(O/4294967296>>>0)>>>0,g=O>>>0;O=t[0][1]+g,t[0][0]=t[0][0]+y+(O/4294967296>>>0)>>>0,t[0][1]=O>>>0,O=t[1][1]+x,t[1][0]=t[1][0]+v+(O/4294967296>>>0)>>>0,t[1][1]=O>>>0,O=t[2][1]+P,t[2][0]=t[2][0]+w+(O/4294967296>>>0)>>>0,t[2][1]=O>>>0,O=t[3][1]+S,t[3][0]=t[3][0]+B+(O/4294967296>>>0)>>>0,t[3][1]=O>>>0,O=t[4][1]+z,t[4][0]=t[4][0]+G+(O/4294967296>>>0)>>>0,t[4][1]=O>>>0,O=t[5][1]+Te,t[5][0]=t[5][0]+se+(O/4294967296>>>0)>>>0,t[5][1]=O>>>0,O=t[6][1]+pe,t[6][0]=t[6][0]+ye+(O/4294967296>>>0)>>>0,t[6][1]=O>>>0,O=t[7][1]+Hr,t[7][0]=t[7][0]+Ot+(O/4294967296>>>0)>>>0,t[7][1]=O>>>0,_s-=128}}});var lc=E((V6,lg)=>{"use strict";var B8=Za(),A8=Oe();lg.exports=function(t){if(isNaN(t)||t<=0)throw A8(new Error("random bytes length must be a Number bigger than 0"),"ERR_INVALID_LENGTH");return B8(t)}});var Bo=E(js=>{"use strict";$e();wo();var C8=Se(),{fromString:T8}=(st(),nt),{toString:pg}=(yt(),dt),{concat:dg}=(ar(),sr);js.bigIntegerToUintBase64url=(t,e)=>{let r=Uint8Array.from(t.abs().toByteArray());if(r=r[0]===0?r.slice(1):r,e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=dg([new Uint8Array(e-r.length),r])}return pg(r,"base64url")};js.base64urlToBigInteger=t=>{let e=js.base64urlToBuffer(t);return new C8.jsbn.BigInteger(pg(e,"base16"),16)};js.base64urlToBuffer=(t,e)=>{let r=T8(t,"base64urlpad");if(e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=dg([new Uint8Array(e-r.length),r])}return r}});var vg=E(Ws=>{"use strict";qs();Io();var Ai=Se(),{bigIntegerToUintBase64url:Ar,base64urlToBigInteger:Cr}=Bo(),{fromString:yg}=(st(),nt),{toString:gg}=(yt(),dt);Ws.pkcs1ToJwk=function(t){let e=Ai.asn1.fromDer(gg(t,"ascii")),r=Ai.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:Ar(r.n),e:Ar(r.e),d:Ar(r.d),p:Ar(r.p),q:Ar(r.q),dp:Ar(r.dP),dq:Ar(r.dQ),qi:Ar(r.qInv),alg:"RS256",kid:"2011-04-29"}};Ws.jwkToPkcs1=function(t){let e=Ai.pki.privateKeyToAsn1({n:Cr(t.n),e:Cr(t.e),d:Cr(t.d),p:Cr(t.p),q:Cr(t.q),dP:Cr(t.dp),dQ:Cr(t.dq),qInv:Cr(t.qi)});return yg(Ai.asn1.toDer(e).getBytes(),"ascii")};Ws.pkixToJwk=function(t){let e=Ai.asn1.fromDer(gg(t,"ascii")),r=Ai.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:Ar(r.n),e:Ar(r.e),alg:"RS256",kid:"2011-04-29"}};Ws.jwkToPkix=function(t){let e=Ai.pki.publicKeyToAsn1({n:Cr(t.n),e:Cr(t.e)});return yg(Ai.asn1.toDer(e).getBytes(),"ascii")}});var Eg=E((z6,mg)=>{"use strict";Io();var xg=Se(),{base64urlToBigInteger:R8}=Bo();function bg(t,e){return e.map(r=>R8(t[r]))}function D8(t){return xg.pki.setRsaPrivateKey(...bg(t,["n","e","d","p","q","dp","dq","qi"]))}function P8(t){return xg.pki.setRsaPublicKey(...bg(t,["n","e"]))}mg.exports={jwk2pub:P8,jwk2priv:D8}});var _g=E(Jr=>{"use strict";var Xr=Hs(),k8=lc(),{toString:N8}=(yt(),dt),{fromString:O8}=(st(),nt);Jr.utils=vg();Jr.generateKey=async function(t){let e=await Xr.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),r=await wg(e);return{privateKey:r[0],publicKey:r[1]}};Jr.unmarshalPrivateKey=async function(t){let r=[await Xr.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await L8(t)],i=await wg({privateKey:r[0],publicKey:r[1]});return{privateKey:i[0],publicKey:i[1]}};Jr.getRandomValues=k8;Jr.hashAndSign=async function(t,e){let r=await Xr.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),i=await Xr.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},r,Uint8Array.from(e));return new Uint8Array(i,i.byteOffset,i.byteLength)};Jr.hashAndVerify=async function(t,e,r){let i=await Xr.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return Xr.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},i,e,r)};function wg(t){return Promise.all([Xr.get().subtle.exportKey("jwk",t.privateKey),Xr.get().subtle.exportKey("jwk",t.publicKey)])}function L8(t){return Xr.get().subtle.importKey("jwk",{kty:t.kty,n:t.n,e:t.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}var{jwk2pub:M8,jwk2priv:K8}=Eg();function Sg(t,e,r,i){let n=e?M8(t):K8(t),s=N8(Uint8Array.from(r),"ascii"),a=i(s,n);return O8(a,"ascii")}Jr.encrypt=function(t,e){return Sg(t,!0,e,(r,i)=>i.encrypt(r))};Jr.decrypt=function(t,e){return Sg(t,!1,e,(r,i)=>i.decrypt(r))}});var Ao=E((W6,Ig)=>{"use strict";var{base64:F8}=(on(),Ei),U8=cc();Ig.exports={export:async function(t,e){let i=await U8.create().encrypt(t,e);return F8.encode(i)}}});var Rg=E((Y6,Tg)=>{"use strict";var{sha256:Bg}=(rr(),qt),Ag=Oe(),{equals:Cg}=(ur(),or),{toString:q8}=(yt(),dt);hg();var Co=Se(),zt=_g(),To=oo(),V8=Ao(),Ro=class{constructor(e){this._key=e}async verify(e,r){return zt.hashAndVerify(this._key,r,e)}marshal(){return zt.utils.jwkToPkix(this._key)}get bytes(){return To.PublicKey.encode({Type:To.KeyType.RSA,Data:this.marshal()}).finish()}encrypt(e){return zt.encrypt(this._key,e)}equals(e){return Cg(this.bytes,e.bytes)}async hash(){let{bytes:e}=await Bg.digest(this.bytes);return e}},Ys=class{constructor(e,r){this._key=e,this._publicKey=r}genSecret(){return zt.getRandomValues(16)}async sign(e){return zt.hashAndSign(this._key,e)}get public(){if(!this._publicKey)throw Ag(new Error("public key not provided"),"ERR_PUBKEY_NOT_PROVIDED");return new Ro(this._publicKey)}decrypt(e){return zt.decrypt(this._key,e)}marshal(){return zt.utils.jwkToPkcs1(this._key)}get bytes(){return To.PrivateKey.encode({Type:To.KeyType.RSA,Data:this.marshal()}).finish()}equals(e){return Cg(this.bytes,e.bytes)}async hash(){let{bytes:e}=await Bg.digest(this.bytes);return e}async id(){let e=await this.public.hash();return q8(e,"base58btc")}async export(e,r="pkcs-8"){if(r==="pkcs-8"){let i=new Co.util.ByteBuffer(this.marshal()),n=Co.asn1.fromDer(i),s=Co.pki.privateKeyFromAsn1(n),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return Co.pki.encryptRsaPrivateKey(s,e,a)}else{if(r==="libp2p-key")return V8.export(this.bytes,e);throw Ag(new Error(`export format '${r}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}}};async function G8(t){let e=zt.utils.pkcs1ToJwk(t),r=await zt.unmarshalPrivateKey(e);return new Ys(r.privateKey,r.publicKey)}function H8(t){let e=zt.utils.pkixToJwk(t);return new Ro(e)}async function z8(t){let e=await zt.unmarshalPrivateKey(t);return new Ys(e.privateKey,e.publicKey)}async function j8(t){let e=await zt.generateKey(t);return new Ys(e.privateKey,e.publicKey)}Tg.exports={RsaPublicKey:Ro,RsaPrivateKey:Ys,unmarshalRsaPublicKey:H8,unmarshalRsaPrivateKey:G8,generateKeyPair:j8,fromJwk:z8}});var bc=E(me=>{"use strict";var W8=me&&me.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(me,"__esModule",{value:!0});me.utils=me.curve25519=me.getSharedSecret=me.verify=me.sign=me.getPublicKey=me.Signature=me.Point=me.ExtendedPoint=me.CURVE=void 0;var Y8=W8($r()),We=BigInt(0),ie=BigInt(1),vt=BigInt(2),Dg=BigInt(255),Ve={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:vt**Dg-BigInt(19),n:vt**BigInt(252)+BigInt("27742317777372353535851937790883648493"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")};me.CURVE=Ve;var $s=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),$6=BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742"),$8=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),Q8=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),Z8=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),X8=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),Ie=class{constructor(e,r,i,n){this.x=e,this.y=r,this.z=i,this.t=n}static fromAffine(e){if(!(e instanceof Ke))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return e.equals(Ke.ZERO)?Ie.ZERO:new Ie(e.x,e.y,ie,D(e.x*e.y))}static toAffineBatch(e){let r=t4(e.map(i=>i.z));return e.map((i,n)=>i.toAffine(r[n]))}static normalizeZ(e){return this.toAffineBatch(e).map(this.fromAffine)}static fromRistrettoHash(e){e=ei(e),gn(64,e);let r=yc(e.slice(0,32)),i=this.calcElligatorRistrettoMap(r),n=yc(e.slice(32,64)),s=this.calcElligatorRistrettoMap(n);return i.add(s)}static calcElligatorRistrettoMap(e){let{d:r}=Ve,i=D($s*e*e),n=D((i+ie)*Z8),s=BigInt(-1),a=D((s-r*i)*D(i+r)),{isValid:o,value:f}=vc(n,a),u=D(f*e);Ci(u)||(u=D(-u)),o||(f=u),o||(s=i);let c=D(s*(i-ie)*X8-a),h=f*f,l=D((f+f)*a),d=D(c*$8),p=D(ie-h),y=D(ie+h);return new Ie(D(l*y),D(p*d),D(d*y),D(l*p))}static fromRistrettoBytes(e){e=ei(e),gn(32,e);let{a:r,d:i}=Ve,n="ExtendedPoint.fromRistrettoBytes: Cannot convert bytes to Ristretto Point",s=yc(e);if(!r4(Qs(s,32),e)||Ci(s))throw new Error(n);let a=D(s*s),o=D(ie+r*a),f=D(ie-r*a),u=D(o*o),c=D(f*f),h=D(r*i*u-c),{isValid:l,value:d}=Og(D(h*c)),p=D(d*f),y=D(d*p*h),g=D((s+s)*p);Ci(g)&&(g=D(-g));let v=D(o*y),x=D(g*v);if(!l||Ci(x)||v===We)throw new Error(n);return new Ie(g,v,ie,x)}toRistrettoBytes(){let{x:e,y:r,z:i,t:n}=this,s=D(D(i+r)*D(i-r)),a=D(e*r),{value:o}=Og(D(s*a**vt)),f=D(o*s),u=D(o*a),c=D(f*u*n),h;if(Ci(n*c)){let d=D(r*$s),p=D(e*$s);e=d,r=p,h=D(f*Q8)}else h=u;Ci(e*c)&&(r=D(-r));let l=D((i-r)*h);return Ci(l)&&(l=D(-l)),Qs(l,32)}equals(e){let r=this,i=e;return D(r.t*i.z)===D(i.t*r.z)}negate(){return new Ie(D(-this.x),this.y,this.z,D(-this.t))}double(){let e=this.x,r=this.y,i=this.z,{a:n}=Ve,s=D(e**vt),a=D(r**vt),o=D(vt*i**vt),f=D(n*s),u=D((e+r)**vt-s-a),c=D(f+a),h=D(c-o),l=D(f-a),d=D(u*h),p=D(c*l),y=D(u*l),g=D(h*c);return new Ie(d,p,g,y)}add(e){let r=this.x,i=this.y,n=this.z,s=this.t,a=e.x,o=e.y,f=e.z,u=e.t,c=D((i-r)*(o+a)),h=D((i+r)*(o-a)),l=D(h-c);if(l===We)return this.double();let d=D(n*vt*u),p=D(s*vt*f),y=D(p+d),g=D(h+c),v=D(p-d),x=D(y*l),w=D(g*v),P=D(y*v),B=D(l*g);return new Ie(x,w,B,P)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let r=rs(e),i=Ie.ZERO;if(this.equals(i)||r===ie)return this;let n=i,s=this;for(;r>We;)r&ie&&(n=n.add(s)),s=s.double(),r>>=ie;return n}precomputeWindow(e){let r=256/e+1,i=[],n=this,s=n;for(let a=0;a<r;a++){s=n,i.push(s);for(let o=1;o<2**(e-1);o++)s=s.add(n),i.push(s);n=s.double()}return i}wNAF(e,r){!r&&this.equals(Ie.BASE)&&(r=Ke.BASE);let i=r&&r._WINDOW_SIZE||1;if(256%i)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let n=r&&pc.get(r);n||(n=this.precomputeWindow(i),r&&i!==1&&(n=Ie.normalizeZ(n),pc.set(r,n)));let s=Ie.ZERO,a=Ie.ZERO,o=256/i+1,f=2**(i-1),u=BigInt(2**i-1),c=2**i,h=BigInt(i);for(let l=0;l<o;l++){let d=l*f,p=Number(e&u);if(e>>=h,p>f&&(p-=c,e+=ie),p===0){let y=n[d];l%2&&(y=y.negate()),a=a.add(y)}else{let y=n[d+Math.abs(p)-1];p<0&&(y=y.negate()),s=s.add(y)}}return[s,a]}multiply(e,r){let i=rs(e);return Ie.normalizeZ(this.wNAF(i,r))[0]}toAffine(e=gc(this.z)){let r=D(this.x*e),i=D(this.y*e);return new Ke(r,i)}};me.ExtendedPoint=Ie;Ie.BASE=new Ie(Ve.Gx,Ve.Gy,ie,D(Ve.Gx*Ve.Gy));Ie.ZERO=new Ie(We,ie,ie,We);var pc=new WeakMap,Ke=class{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,pc.delete(this)}static fromHex(e){let{d:r,P:i}=Ve,n=ei(e);gn(32,n);let s=n.slice();s[31]=n[31]&~128;let a=ts(s);if(a>=i)throw new Error("Point.fromHex expects hex <= Fp");let o=D(a*a),f=D(o-ie),u=D(r*o+ie),{isValid:c,value:h}=vc(f,u);if(!c)throw new Error("Point.fromHex: invalid y coordinate");let l=(h&ie)===ie;return(n[31]&128)!=0!==l&&(h=D(-h)),new Ke(h,a)}static async fromPrivateKey(e){return(await Zs(e)).point}toRawBytes(){let e=Qs(this.y,32);return e[31]|=this.x&ie?128:0,e}toHex(){return dc(this.toRawBytes())}toX25519(){let{y:e}=this;return D((ie+e)*gc(ie-e))}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new Ke(D(-this.x),this.y)}add(e){return Ie.fromAffine(this).add(Ie.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return Ie.fromAffine(this).multiply(e,this).toAffine()}};me.Point=Ke;Ke.BASE=new Ke(Ve.Gx,Ve.Gy);Ke.ZERO=new Ke(We,ie);var yn=class{constructor(e,r){if(this.r=e,!(e instanceof Ke))throw new Error("Expected Point instance");this.s=rs(r)}static fromHex(e){let r=ei(e);gn(64,r);let i=Ke.fromHex(r.slice(0,32)),n=ts(r.slice(32,64));return new yn(i,n)}toRawBytes(){let e=new Uint8Array(64);return e.set(this.r.toRawBytes()),e.set(Qs(this.s,32),32),e}toHex(){return dc(this.toRawBytes())}};me.Signature=yn;function J8(...t){if(!t.every(i=>i instanceof Uint8Array))throw new Error("Expected Uint8Array list");if(t.length===1)return t[0];let e=t.reduce((i,n)=>i+n.length,0),r=new Uint8Array(e);for(let i=0,n=0;i<t.length;i++){let s=t[i];r.set(s,n),n+=s.length}return r}var e4=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function dc(t){let e="";for(let r=0;r<t.length;r++)e+=e4[t[r]];return e}function Pg(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex");let e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){let i=r*2,n=t.slice(i,i+2),s=Number.parseInt(n,16);if(Number.isNaN(s))throw new Error("Invalid byte sequence");e[r]=s}return e}function kg(t,e){let r=t.toString(16).padStart(e*2,"0");return Pg(r)}function Qs(t,e){return kg(t,e).reverse()}function Ci(t){return(D(t)&ie)===ie}function ts(t){if(!(t instanceof Uint8Array))throw new Error(`bytesToNumberLE: expected Uint8Array, got ${t}`);let e=We,r=BigInt(8);for(let i=0;i<t.length;i++)e+=BigInt(t[i])<<r*BigInt(i);return e}function yc(t){return D(ts(t)&vt**Dg-ie)}function D(t,e=Ve.P){let r=t%e;return r>=We?r:e+r}function gc(t,e=Ve.P){if(t===We||e<=We)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=D(t,e),i=e,n=We,s=ie,a=ie,o=We;for(;r!==We;){let u=i/r,c=i%r,h=n-a*u,l=s-o*u;i=r,r=c,n=a,s=o,a=h,o=l}if(i!==ie)throw new Error("invert: does not exist");return D(n,e)}function t4(t,e=Ve.P){let r=t.length,i=new Array(r),n=ie;for(let s=0;s<r;s++)t[s]!==We&&(i[s]=n,n=D(n*t[s],e));n=gc(n,e);for(let s=r-1;s>=0;s--){if(t[s]===We)continue;let a=D(n*t[s],e);t[s]=D(n*i[s],e),n=a}return t}function cr(t,e){let{P:r}=Ve,i=t;for(;e-- >We;)i*=i,i%=r;return i}function Ng(t){let{P:e}=Ve,r=BigInt(5),i=BigInt(10),n=BigInt(20),s=BigInt(40),a=BigInt(80),f=t*t%e*t%e,u=cr(f,vt)*f%e,c=cr(u,ie)*t%e,h=cr(c,r)*c%e,l=cr(h,i)*h%e,d=cr(l,n)*l%e,p=cr(d,s)*d%e,y=cr(p,a)*p%e,g=cr(y,a)*p%e,v=cr(g,i)*h%e;return{pow_p_5_8:cr(v,vt)*t%e,b2:f}}function vc(t,e){let r=D(e*e*e),i=D(r*r*e),n=Ng(t*i).pow_p_5_8,s=D(t*r*n),a=D(e*s*s),o=s,f=D(s*$s),u=a===t,c=a===D(-t),h=a===D(-t*$s);return u&&(s=o),(c||h)&&(s=f),Ci(s)&&(s=D(-s)),{isValid:u||c,value:s}}function Og(t){return vc(ie,t)}async function xc(...t){let e=J8(...t),r=await me.utils.sha512(e),i=ts(r);return D(i,Ve.n)}function r4(t,e){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function ei(t){return t instanceof Uint8Array?Uint8Array.from(t):Pg(t)}function gn(t,e){if(e.length!==t)throw new Error(`Expected ${t} bytes`)}function rs(t,e=Ve.n){if(typeof t=="number"&&t>0&&Number.isSafeInteger(t))return BigInt(t);if(typeof t=="bigint"&&We<t&&t<e)return t;throw new TypeError("Expected valid scalar: 0 < scalar < max")}function i4(t){let e=typeof t=="bigint"||typeof t=="number"?kg(rs(t,vt**BigInt(256)),32):ei(t);return gn(32,e),e}function Lg(t){return t=ei(t),gn(32,t),t[0]&=248,t[31]&=127,t[31]|=64,ts(t)}async function Zs(t){let e=await me.utils.sha512(i4(t)),r=e.slice(0,32),i=e.slice(32,64),n=D(Lg(r),Ve.n),s=Ke.BASE.multiply(n),a=s.toRawBytes();return{head:r,prefix:i,scalar:n,point:s,pubBytes:a}}async function n4(t){return(await Zs(t)).pubBytes}me.getPublicKey=n4;async function s4(t,e){let r=ei(t),{prefix:i,scalar:n,pubBytes:s}=await Zs(e),a=await xc(i,r),o=Ke.BASE.multiply(a),f=await xc(o.toRawBytes(),s,r),u=D(a+f*n,Ve.n);return new yn(o,u).toRawBytes()}me.sign=s4;async function a4(t,e,r){e=ei(e),r instanceof Ke||(r=Ke.fromHex(r)),t instanceof yn||(t=yn.fromHex(t));let i=Ie.BASE.multiply(t.s),n=await xc(t.r.toRawBytes(),r.toRawBytes(),e),s=Ie.fromAffine(r).multiplyUnsafe(n);return Ie.fromAffine(t.r).add(s).subtract(i).multiplyUnsafe(Ve.h).equals(Ie.ZERO)}me.verify=a4;async function o4(t,e){let{scalar:r}=await Zs(t),i=Ke.fromHex(e).toX25519();return Mg(r,i)}me.getSharedSecret=o4;Ke.BASE._setWindowSize(8);function Do(t,e,r){let i=D(t*(e-r));return e=D(e-i),r=D(r+i),[e,r]}function u4(t,e){let{P:r,n:i}=Ve,n=rs(t,r),s=rs(e,r),a=BigInt(121665),o=n,f=ie,u=We,c=n,h=ie,l=We,d;for(let v=BigInt(255-1);v>=We;v--){let x=s>>v&ie;l^=x,d=Do(l,f,c),f=d[0],c=d[1],d=Do(l,u,h),u=d[0],h=d[1],l=x;let w=D(f+u),P=D(w*w),B=D(f-u),S=D(B*B),G=D(P-S),z=D(c+h),se=D(c-h),Te=D(se*w),ye=D(z*B);c=D(D(Te+ye)**vt),h=D(o*D(Te-ye)**vt),f=D(P*S),u=D(G*(P+D(a*G)))}d=Do(l,f,c),f=d[0],c=d[1],d=Do(l,u,h),u=d[0],h=d[1];let{pow_p_5_8:p,b2:y}=Ng(u),g=D(cr(p,BigInt(3))*y);return D(f*g)}function c4(t){return Qs(D(t,Ve.P),32)}function Mg(t,e){let r=u4(t,e);if(r===We)throw new Error("Invalid private or public key received");return c4(r)}function f4(t){let e=ei(t);return gn(32,e),e[31]&=127,ts(e)}me.curve25519={BASE_POINT_U:"0900000000000000000000000000000000000000000000000000000000000000",scalarMult(t,e){let r=f4(e),i=Lg(t);return Mg(r,i)},scalarMultBase(t){return me.curve25519.scalarMult(t,me.curve25519.BASE_POINT_U)}};var Ti={node:Y8.default,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0};me.utils={TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],bytesToHex:dc,getExtendedPublicKey:Zs,randomBytes:(t=32)=>{if(Ti.web)return Ti.web.getRandomValues(new Uint8Array(t));if(Ti.node){let{randomBytes:e}=Ti.node;return new Uint8Array(e(t).buffer)}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>me.utils.randomBytes(32),sha512:async t=>{if(Ti.web){let e=await Ti.web.subtle.digest("SHA-512",t.buffer);return new Uint8Array(e)}else{if(Ti.node)return Uint8Array.from(Ti.node.createHash("sha512").update(t).digest());throw new Error("The environment doesn't have sha512 function")}},precompute(t=8,e=Ke.BASE){let r=e.equals(Ke.BASE)?e:new Ke(e.x,e.y);return r._setWindowSize(t),r.multiply(ie),r}}});var Fg=E(Ri=>{"use strict";var Xs=bc(),h4=32,l4=64,Po=32;Ri.publicKeyLength=h4;Ri.privateKeyLength=l4;Ri.generateKey=async function(){let t=Xs.utils.randomPrivateKey(),e=await Xs.getPublicKey(t);return{privateKey:Kg(t,e),publicKey:e}};Ri.generateKeyFromSeed=async function(t){if(t.length!==Po)throw new TypeError('"seed" must be 32 bytes in length.');if(!(t instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');let e=t,r=await Xs.getPublicKey(e);return{privateKey:Kg(e,r),publicKey:r}};Ri.hashAndSign=function(t,e){let r=t.slice(0,Po);return Xs.sign(e,r)};Ri.hashAndVerify=function(t,e,r){return Xs.verify(e,r,t)};function Kg(t,e){let r=new Uint8Array(Ri.privateKeyLength);for(let i=0;i<Po;i++)r[i]=t[i],r[Po+i]=e[i];return r}});var Hg=E((X6,Gg)=>{"use strict";var Ug=Oe(),{equals:qg}=(ur(),or),{sha256:Vg}=(rr(),qt),{base58btc:p4}=(an(),sn),{identity:d4}=(Ls(),Qn),xt=Fg(),ko=oo(),y4=Ao(),No=class{constructor(e){this._key=ns(e,xt.publicKeyLength)}async verify(e,r){return xt.hashAndVerify(this._key,r,e)}marshal(){return this._key}get bytes(){return ko.PublicKey.encode({Type:ko.KeyType.Ed25519,Data:this.marshal()}).finish()}equals(e){return qg(this.bytes,e.bytes)}async hash(){let{bytes:e}=await Vg.digest(this.bytes);return e}},is=class{constructor(e,r){this._key=ns(e,xt.privateKeyLength),this._publicKey=ns(r,xt.publicKeyLength)}async sign(e){return xt.hashAndSign(this._key,e)}get public(){return new No(this._publicKey)}marshal(){return this._key}get bytes(){return ko.PrivateKey.encode({Type:ko.KeyType.Ed25519,Data:this.marshal()}).finish()}equals(e){return qg(this.bytes,e.bytes)}async hash(){let{bytes:e}=await Vg.digest(this.bytes);return e}async id(){let e=await d4.digest(this.public.bytes);return p4.encode(e.bytes).substring(1)}async export(e,r="libp2p-key"){if(r==="libp2p-key")return y4.export(this.bytes,e);throw Ug(new Error(`export format '${r}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}};function g4(t){if(t.length>xt.privateKeyLength){t=ns(t,xt.privateKeyLength+xt.publicKeyLength);let i=t.slice(0,xt.privateKeyLength),n=t.slice(xt.privateKeyLength,t.length);return new is(i,n)}t=ns(t,xt.privateKeyLength);let e=t.slice(0,xt.privateKeyLength),r=t.slice(xt.publicKeyLength);return new is(e,r)}function v4(t){return t=ns(t,xt.publicKeyLength),new No(t)}async function x4(){let{privateKey:t,publicKey:e}=await xt.generateKey();return new is(t,e)}async function b4(t){let{privateKey:e,publicKey:r}=await xt.generateKeyFromSeed(t);return new is(e,r)}function ns(t,e){if(t=Uint8Array.from(t||[]),t.length!==e)throw Ug(new Error(`Key must be a Uint8Array of length ${e}, got ${t.length}`),"ERR_INVALID_KEY_TYPE");return t}Gg.exports={Ed25519PublicKey:No,Ed25519PrivateKey:is,unmarshalEd25519PrivateKey:g4,unmarshalEd25519PublicKey:v4,generateKeyPair:x4,generateKeyPairFromSeed:b4}});var Tc=E(oe=>{"use strict";var m4=oe&&oe.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(oe,"__esModule",{value:!0});oe.utils=oe.schnorr=oe.verify=oe.signSync=oe.sign=oe.getSharedSecret=oe.recoverPublicKey=oe.getPublicKey=oe.Signature=oe.Point=oe.CURVE=void 0;var E4=m4($r()),de=BigInt(0),He=BigInt(1),Ye=BigInt(2),Js=BigInt(3),w4=BigInt(8),mc=Ye**BigInt(256),Be={a:de,b:BigInt(7),P:mc-Ye**BigInt(32)-BigInt(977),n:mc-BigInt("432420386565659656852420866394968145599"),h:He,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};oe.CURVE=Be;function zg(t){let{a:e,b:r}=Be,i=H(t*t),n=H(i*t);return H(n+e*t+r)}var Oo=Be.a===de,le=class{constructor(e,r,i){this.x=e,this.y=r,this.z=i}static fromAffine(e){if(!(e instanceof ve))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new le(e.x,e.y,He)}static toAffineBatch(e){let r=B4(e.map(i=>i.z));return e.map((i,n)=>i.toAffine(r[n]))}static normalizeZ(e){return le.toAffineBatch(e).map(le.fromAffine)}equals(e){let r=this,i=e,n=H(r.z*r.z),s=H(r.z*n),a=H(i.z*i.z),o=H(i.z*a);return H(r.x*a)===H(n*i.x)&&H(r.y*o)===H(s*i.y)}negate(){return new le(this.x,H(-this.y),this.z)}double(){let e=this.x,r=this.y,i=this.z,n=H(e**Ye),s=H(r**Ye),a=H(s**Ye),o=H(Ye*(H(H((e+s)**Ye))-n-a)),f=H(Js*n),u=H(f**Ye),c=H(u-Ye*o),h=H(f*(o-c)-w4*a),l=H(Ye*r*i);return new le(c,h,l)}add(e){if(!(e instanceof le))throw new TypeError("JacobianPoint#add: expected JacobianPoint");let r=this.x,i=this.y,n=this.z,s=e.x,a=e.y,o=e.z;if(s===de||a===de)return this;if(r===de||i===de)return e;let f=H(n**Ye),u=H(o**Ye),c=H(r*u),h=H(s*f),l=H(i*o*u),d=H(H(a*n)*f),p=H(h-c),y=H(d-l);if(p===de)return y===de?this.double():le.ZERO;let g=H(p**Ye),v=H(p*g),x=H(c*g),w=H(y**Ye-v-Ye*x),P=H(y*(x-w)-l*v),B=H(n*o*p);return new le(w,P,B)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let r=Yg(e);if(!Oo){let c=le.ZERO,h=this;for(;r>de;)r&He&&(c=c.add(h)),h=h.double(),r>>=He;return c}let{k1neg:i,k1:n,k2neg:s,k2:a}=Qg(r),o=le.ZERO,f=le.ZERO,u=this;for(;n>de||a>de;)n&He&&(o=o.add(u)),a&He&&(f=f.add(u)),u=u.double(),n>>=He,a>>=He;return i&&(o=o.negate()),s&&(f=f.negate()),f=new le(H(f.x*Be.beta),f.y,f.z),o.add(f)}precomputeWindow(e){let r=Oo?128/e+1:256/e+1,i=[],n=this,s=n;for(let a=0;a<r;a++){s=n,i.push(s);for(let o=1;o<2**(e-1);o++)s=s.add(n),i.push(s);n=s.double()}return i}wNAF(e,r){!r&&this.equals(le.BASE)&&(r=ve.BASE);let i=r&&r._WINDOW_SIZE||1;if(256%i)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let n=r&&Ec.get(r);n||(n=this.precomputeWindow(i),r&&i!==1&&(n=le.normalizeZ(n),Ec.set(r,n)));let s=le.ZERO,a=le.ZERO,o=Oo?128/i+1:256/i+1,f=2**(i-1),u=BigInt(2**i-1),c=2**i,h=BigInt(i);for(let l=0;l<o;l++){let d=l*f,p=Number(e&u);if(e>>=h,p>f&&(p-=c,e+=He),p===0){let y=n[d];l%2&&(y=y.negate()),a=a.add(y)}else{let y=n[d+Math.abs(p)-1];p<0&&(y=y.negate()),s=s.add(y)}}return{p:s,f:a}}multiply(e,r){let i=Yg(e),n,s;if(Oo){let{k1neg:a,k1:o,k2neg:f,k2:u}=Qg(i),{p:c,f:h}=this.wNAF(o,r),{p:l,f:d}=this.wNAF(u,r);a&&(c=c.negate()),f&&(l=l.negate()),l=new le(H(l.x*Be.beta),l.y,l.z),n=c.add(l),s=h.add(d)}else{let{p:a,f:o}=this.wNAF(i,r);n=a,s=o}return le.normalizeZ([n,s])[0]}toAffine(e=ta(this.z)){let r=e**Ye,i=H(this.x*r),n=H(this.y*r*e);return new ve(i,n)}};le.BASE=new le(Be.Gx,Be.Gy,He);le.ZERO=new le(de,He,de);var Ec=new WeakMap,ve=class{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,Ec.delete(this)}static fromCompressedHex(e){let r=e.length===32,i=Mt(r?e:e.slice(1)),n=zg(i),s=I4(n),a=(s&He)===He;r?a&&(s=H(-s)):(e[0]&1)==1!==a&&(s=H(-s));let o=new ve(i,s);return o.assertValidity(),o}static fromUncompressedHex(e){let r=Mt(e.slice(1,33)),i=Mt(e.slice(33)),n=new ve(r,i);return n.assertValidity(),n}static fromHex(e){let r=xn(e),i=r[0];if(r.length===32||r.length===33&&(i===2||i===3))return this.fromCompressedHex(r);if(r.length===65&&i===4)return this.fromUncompressedHex(r);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${r.length}`)}static fromPrivateKey(e){return ve.BASE.multiply(ra(e))}static fromSignature(e,r,i){let n=e instanceof Uint8Array?Mt(e):ss(e),s=Xg(r),{r:a,s:o}=s;if(i!==0&&i!==1)throw new Error("Cannot recover signature: invalid recovery bit");let f=2+(i&1),u=ve.fromHex(`0${f}${ti(a)}`),c=le.fromAffine(u).multiplyUnsafe(o),h=le.BASE.multiply(n),l=ta(a,Be.n),p=c.subtract(h).multiplyUnsafe(l).toAffine();return p.assertValidity(),p}toRawBytes(e=!1){return Di(this.toHex(e))}toHex(e=!1){let r=ti(this.x);return e?`${this.y&He?"03":"02"}${r}`:`04${r}${ti(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){let e="Point is not on elliptic curve",{x:r,y:i}=this;if(!Ic(r)||!Ic(i))throw new Error(e);let n=H(i*i),s=zg(r);if(H(n-s)!==de)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new ve(this.x,H(-this.y))}double(){return le.fromAffine(this).double().toAffine()}add(e){return le.fromAffine(this).add(le.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return le.fromAffine(this).multiply(e,this).toAffine()}};oe.Point=ve;ve.BASE=new ve(Be.Gx,Be.Gy);ve.ZERO=new ve(de,de);function jg(t){return Number.parseInt(t[0],16)>=8?"00"+t:t}function Wg(t){if(t.length<2||t[0]!==2)throw new Error(`Invalid signature integer tag: ${vn(t)}`);let e=t[1],r=t.subarray(2,e+2);if(!e||r.length!==e)throw new Error("Invalid signature integer: wrong length");if(r[0]===0&&r[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:Mt(r),left:t.subarray(e+2)}}function S4(t){if(t.length<2||t[0]!=48)throw new Error(`Invalid signature tag: ${vn(t)}`);if(t[1]!==t.length-2)throw new Error("Invalid signature: incorrect length");let{data:e,left:r}=Wg(t.subarray(2)),{data:i,left:n}=Wg(r);if(n.length)throw new Error(`Invalid signature: left bytes after parsing: ${vn(n)}`);return{r:e,s:i}}var Tr=class{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromCompact(e){let r=e instanceof Uint8Array,i="Signature.fromCompact";if(typeof e!="string"&&!r)throw new TypeError(`${i}: Expected string or Uint8Array`);let n=r?vn(e):e;if(n.length!==128)throw new Error(`${i}: Expected 64-byte hex`);return new Tr(ss(n.slice(0,64)),ss(n.slice(64,128)))}static fromDER(e){let r=e instanceof Uint8Array;if(typeof e!="string"&&!r)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");let{r:i,s:n}=S4(r?e:Di(e));return new Tr(i,n)}static fromHex(e){return this.fromDER(e)}assertValidity(){let{r:e,s:r}=this;if(!bn(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!bn(r))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){let e=Be.n>>He;return this.s>e}normalizeS(){return this.hasHighS()?new Tr(this.r,Be.n-this.s):this}toDERRawBytes(e=!1){return Di(this.toDERHex(e))}toDERHex(e=!1){let r=jg(ea(this.s));if(e)return r;let i=jg(ea(this.r)),n=ea(i.length/2),s=ea(r.length/2);return`30${ea(i.length/2+r.length/2+4)}02${n}${i}02${s}${r}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return Di(this.toCompactHex())}toCompactHex(){return ti(this.r)+ti(this.s)}};oe.Signature=Tr;function wc(...t){if(!t.every(i=>i instanceof Uint8Array))throw new Error("Uint8Array list expected");if(t.length===1)return t[0];let e=t.reduce((i,n)=>i+n.length,0),r=new Uint8Array(e);for(let i=0,n=0;i<t.length;i++){let s=t[i];r.set(s,n),n+=s.length}return r}var _4=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function vn(t){let e="";for(let r=0;r<t.length;r++)e+=_4[t[r]];return e}function ti(t){if(t>mc)throw new Error("pad64: invalid number");return t.toString(16).padStart(64,"0")}function Sc(t){return Di(ti(t))}function ea(t){let e=t.toString(16);return e.length&1?`0${e}`:e}function ss(t){if(typeof t!="string")throw new TypeError("hexToNumber: expected string, got "+typeof t);return BigInt(`0x${t}`)}function Di(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+t.length);let e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){let i=r*2,n=t.slice(i,i+2),s=Number.parseInt(n,16);if(Number.isNaN(s))throw new Error("Invalid byte sequence");e[r]=s}return e}function xn(t){return t instanceof Uint8Array?t:Di(t)}function Mt(t){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");return ss(vn(t))}function Yg(t){if(typeof t=="number"&&t>0&&Number.isSafeInteger(t))return BigInt(t);if(typeof t=="bigint"&&bn(t))return t;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function H(t,e=Be.P){let r=t%e;return r>=0?r:e+r}function jt(t,e){let{P:r}=Be,i=t;for(;e-- >de;)i*=i,i%=r;return i}function I4(t){let{P:e}=Be,r=BigInt(6),i=BigInt(11),n=BigInt(22),s=BigInt(23),a=BigInt(44),o=BigInt(88),f=t*t*t%e,u=f*f*t%e,c=jt(u,Js)*u%e,h=jt(c,Js)*u%e,l=jt(h,Ye)*f%e,d=jt(l,i)*l%e,p=jt(d,n)*d%e,y=jt(p,a)*p%e,g=jt(y,o)*y%e,v=jt(g,a)*p%e,x=jt(v,Js)*u%e,w=jt(x,s)*d%e,P=jt(w,r)*f%e;return jt(P,Ye)}function ta(t,e=Be.P){if(t===de||e<=de)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=H(t,e),i=e,n=de,s=He,a=He,o=de;for(;r!==de;){let u=i/r,c=i%r,h=n-a*u,l=s-o*u;i=r,r=c,n=a,s=o,a=h,o=l}if(i!==He)throw new Error("invert: does not exist");return H(n,e)}function B4(t,e=Be.P){let r=t.length,i=new Array(r),n=He;for(let s=0;s<r;s++)t[s]!==de&&(i[s]=n,n=H(n*t[s],e));n=ta(n,e);for(let s=r-1;s>=0;s--){if(t[s]===de)continue;let a=H(n*t[s],e);t[s]=H(n*i[s],e),n=a}return t}var $g=(t,e)=>(t+e/Ye)/e,Lo=Ye**BigInt(128);function Qg(t){let{n:e}=Be,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),i=-He*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),n=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=r,a=$g(s*t,e),o=$g(-i*t,e),f=H(t-a*r-o*n,e),u=H(-a*i-o*s,e),c=f>Lo,h=u>Lo;if(c&&(f=e-f),h&&(u=e-u),f>Lo||u>Lo)throw new Error("splitScalarEndo: Endomorphism failed");return{k1neg:c,k1:f,k2neg:h,k2:u}}function A4(t){typeof t!="string"&&(t=vn(t));let e=ss(t||"0"),i=t.length/2*8-256;return i>0&&(e=e>>BigInt(i)),e>=Be.n&&(e-=Be.n),e}var _c=class{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(...e){return oe.utils.hmacSha256(this.k,...e)}hmacSync(...e){if(typeof oe.utils.hmacSha256Sync!="function")throw new Error("utils.hmacSha256Sync is undefined, you need to set it");let r=oe.utils.hmacSha256Sync(this.k,...e);if(r instanceof Promise)throw new Error("To use sync sign(), ensure utils.hmacSha256 is sync");return r}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),e.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),e.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}};function bn(t){return de<t&&t<Be.n}function Ic(t){return 0n<t&&t<Be.P}function Zg(t,e,r){let i=Mt(t);if(!bn(i))return;let{n}=Be,s=ve.BASE.multiply(i),a=H(s.x,n);if(a===de)return;let o=H(ta(i,n)*H(e+r*a,n),n);if(o===de)return;let f=new Tr(a,o),u=(s.x===f.r?0:2)|Number(s.y&He);return{sig:f,recovery:u}}function ra(t){let e;if(typeof t=="bigint")e=t;else if(typeof t=="number"&&Number.isSafeInteger(t)&&t>0)e=BigInt(t);else if(typeof t=="string"){if(t.length!==64)throw new Error("Expected 32 bytes of private key");e=ss(t)}else if(t instanceof Uint8Array){if(t.length!==32)throw new Error("Expected 32 bytes of private key");e=Mt(t)}else throw new TypeError("Expected valid private key");if(!bn(e))throw new Error("Expected private key: 0 < key < n");return e}function Bc(t){return t instanceof ve?(t.assertValidity(),t):ve.fromHex(t)}function Xg(t){if(t instanceof Tr)return t.assertValidity(),t;try{return Tr.fromDER(t)}catch(e){return Tr.fromCompact(t)}}function C4(t,e=!1){return ve.fromPrivateKey(t).toRawBytes(e)}oe.getPublicKey=C4;function T4(t,e,r){return ve.fromSignature(t,e,r).toRawBytes()}oe.recoverPublicKey=T4;function Jg(t){let e=t instanceof Uint8Array,r=typeof t=="string",i=(e||r)&&t.length;return e?i===33||i===65:r?i===66||i===130:t instanceof ve}function R4(t,e,r=!1){if(Jg(t))throw new TypeError("getSharedSecret: first arg must be private key");if(!Jg(e))throw new TypeError("getSharedSecret: second arg must be public key");let i=Bc(e);return i.assertValidity(),i.multiply(ra(t)).toRawBytes(r)}oe.getSharedSecret=R4;function e1(t){let e=t.length>32?t.slice(0,32):t;return Mt(e)}function D4(t){let e=e1(t),r=H(e,Be.n);return t1(r<de?e:r)}function t1(t){if(typeof t!="bigint")throw new Error("Expected bigint");let e=ti(t);return Di(e)}function r1(t,e,r){if(t==null)throw new Error(`sign: expected valid msgHash, not "${t}"`);let i=xn(t),n=ra(e),s=[t1(n),D4(i)];if(r!=null){r===!0&&(r=oe.utils.randomBytes(32));let f=Sc(Mt(xn(r)));if(f.length!==32)throw new Error("secp256k1: Expected 32 bytes of extra data");s.push(f)}let a=wc(...s),o=e1(i);return{seed:a,m:o,d:n}}function i1(t,e){let{sig:r,recovery:i}=t,{canonical:n,der:s,recovered:a}=Object.assign({canonical:!0,der:!0},e);n&&r.hasHighS()&&(r=r.normalizeS(),i^=1);let o=s?r.toDERRawBytes():r.toCompactRawBytes();return a?[o,i]:o}async function P4(t,e,r={}){let{seed:i,m:n,d:s}=r1(t,e,r.extraEntropy),a,o=new _c;for(await o.reseed(i);!(a=Zg(await o.generate(),n,s));)await o.reseed();return i1(a,r)}oe.sign=P4;function k4(t,e,r={}){let{seed:i,m:n,d:s}=r1(t,e,r.extraEntropy),a,o=new _c;for(o.reseedSync(i);!(a=Zg(o.generateSync(),n,s));)o.reseedSync();return i1(a,r)}oe.signSync=k4;var N4={strict:!0};function O4(t,e,r,i=N4){let n;try{n=Xg(t)}catch(v){return!1}let{r:s,s:a}=n;if(i.strict&&n.hasHighS())return!1;let o=A4(e);if(o===de)return!1;let f;try{f=le.fromAffine(Bc(r))}catch(v){return!1}let{n:u}=Be,c=ta(a,u),h=H(o*c,u),l=H(s*c,u),d=le.BASE.multiply(h),p=f.multiplyUnsafe(l),y=d.add(p).toAffine();return H(y.x,u)===s}oe.verify=O4;async function Ac(t,...e){let r=new Uint8Array(t.split("").map(s=>s.charCodeAt(0))),i=await oe.utils.sha256(r),n=await oe.utils.sha256(wc(i,i,...e));return Mt(n)}async function n1(t,e,r){let i=Sc(t),n=await Ac("BIP0340/challenge",i,e.toRawX(),r);return H(n,Be.n)}function Cc(t){return H(t.y,Ye)===de}var mn=class{constructor(e,r){if(this.r=e,this.s=r,!Ic(e)||!bn(r))throw new Error("Invalid signature")}static fromHex(e){let r=xn(e);if(r.length!==64)throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${r.length}`);let i=Mt(r.slice(0,32)),n=Mt(r.slice(32,64));return new mn(i,n)}toHex(){return ti(this.r)+ti(this.s)}toRawBytes(){return Di(this.toHex())}};function L4(t){return ve.fromPrivateKey(t).toRawX()}async function M4(t,e,r=oe.utils.randomBytes()){if(t==null)throw new TypeError(`sign: Expected valid message, not "${t}"`);let{n:i}=Be,n=xn(t),s=ra(e),a=xn(r);if(a.length!==32)throw new TypeError("sign: Expected 32 bytes of aux randomness");let o=ve.fromPrivateKey(s),f=Cc(o)?s:i-s,u=await Ac("BIP0340/aux",a),c=f^u,h=await Ac("BIP0340/nonce",Sc(c),o.toRawX(),n),l=H(h,i);if(l===de)throw new Error("sign: Creation of signature failed. k is zero");let d=ve.fromPrivateKey(l),p=Cc(d)?l:i-l,y=await n1(d.x,o,n),g=new mn(d.x,H(p+y*f,i));if(!await s1(g.toRawBytes(),n,o.toRawX()))throw new Error("sign: Invalid signature produced");return g.toRawBytes()}async function s1(t,e,r){let i=t instanceof mn?t:mn.fromHex(t),n=xn(e),s=Bc(r),a=await n1(i.r,s,n),o=ve.fromPrivateKey(i.s),f=s.multiply(a),u=o.subtract(f);return!(u.equals(ve.BASE)||!Cc(u)||u.x!==i.r)}oe.schnorr={Signature:mn,getPublicKey:L4,sign:M4,verify:s1};ve.BASE._setWindowSize(8);var Kt={node:E4.default,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0};oe.utils={isValidPrivateKey(t){try{return ra(t),!0}catch(e){return!1}},randomBytes:(t=32)=>{if(Kt.web)return Kt.web.getRandomValues(new Uint8Array(t));if(Kt.node){let{randomBytes:e}=Kt.node;return Uint8Array.from(e(t))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>{let t=8;for(;t--;){let e=oe.utils.randomBytes(32),r=Mt(e);if(bn(r)&&r!==He)return e}throw new Error("Valid private key was not found in 8 iterations. PRNG is broken")},bytesToHex:vn,sha256:async t=>{if(Kt.web){let e=await Kt.web.subtle.digest("SHA-256",t.buffer);return new Uint8Array(e)}else if(Kt.node){let{createHash:e}=Kt.node;return Uint8Array.from(e("sha256").update(t).digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(t,...e)=>{if(Kt.web){let r=await Kt.web.subtle.importKey("raw",t,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),i=wc(...e),n=await Kt.web.subtle.sign("HMAC",r,i);return new Uint8Array(n)}else if(Kt.node){let{createHmac:r}=Kt.node,i=r("sha256",t);return e.forEach(n=>i.update(n)),Uint8Array.from(i.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,precompute(t=8,e=ve.BASE){let r=e===ve.BASE?e:new ve(e.x,e.y);return r._setWindowSize(t),r.multiply(Js),r}}});var u1=E((e5,o1)=>{"use strict";var ia=Oe(),Pi=Tc(),{sha256:a1}=(rr(),qt);o1.exports=()=>{let t=32;function e(){return Pi.utils.randomPrivateKey()}async function r(u,c){let{digest:h}=await a1.digest(c);try{return await Pi.sign(h,u)}catch(l){throw ia(l,"ERR_INVALID_INPUT")}}async function i(u,c,h){try{let{digest:l}=await a1.digest(h);return Pi.verify(c,l,u)}catch(l){throw ia(l,"ERR_INVALID_INPUT")}}function n(u){return Pi.Point.fromHex(u).toRawBytes(!0)}function s(u){return Pi.Point.fromHex(u).toRawBytes(!1)}function a(u){try{Pi.getPublicKey(u,!0)}catch(c){throw ia(c,"ERR_INVALID_PRIVATE_KEY")}}function o(u){try{Pi.Point.fromHex(u)}catch(c){throw ia(c,"ERR_INVALID_PUBLIC_KEY")}}function f(u){try{return Pi.getPublicKey(u,!0)}catch(c){throw ia(c,"ERR_INVALID_PRIVATE_KEY")}}return{generateKey:e,privateKeyLength:t,hashAndSign:r,hashAndVerify:i,compressPublicKey:n,decompressPublicKey:s,validatePrivateKey:a,validatePublicKey:o,computePublicKey:f}}});var l1=E((t5,h1)=>{"use strict";var{sha256:c1}=(rr(),qt),K4=Oe(),{equals:f1}=(ur(),or),{toString:F4}=(yt(),dt),U4=Ao();h1.exports=(t,e,r)=>{r=r||u1()();class i{constructor(u){r.validatePublicKey(u),this._key=u}verify(u,c){return r.hashAndVerify(this._key,c,u)}marshal(){return r.compressPublicKey(this._key)}get bytes(){return t.PublicKey.encode({Type:t.KeyType.Secp256k1,Data:this.marshal()}).finish()}equals(u){return f1(this.bytes,u.bytes)}async hash(){let{bytes:u}=await c1.digest(this.bytes);return u}}class n{constructor(u,c){this._key=u,this._publicKey=c||r.computePublicKey(u),r.validatePrivateKey(this._key),r.validatePublicKey(this._publicKey)}sign(u){return r.hashAndSign(this._key,u)}get public(){return new i(this._publicKey)}marshal(){return this._key}get bytes(){return t.PrivateKey.encode({Type:t.KeyType.Secp256k1,Data:this.marshal()}).finish()}equals(u){return f1(this.bytes,u.bytes)}async hash(){let{bytes:u}=await c1.digest(this.bytes);return u}async id(){let u=await this.public.hash();return F4(u,"base58btc")}async export(u,c="libp2p-key"){if(c==="libp2p-key")return U4.export(this.bytes,u);throw K4(new Error(`export format '${c}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}}function s(f){return new n(f)}function a(f){return new i(f)}async function o(){let f=await r.generateKey();return new n(f)}return{Secp256k1PublicKey:i,Secp256k1PrivateKey:n,unmarshalSecp256k1PrivateKey:s,unmarshalSecp256k1PublicKey:a,generateKeyPair:o}}});var d1=E((r5,p1)=>{"use strict";p1.exports={SHA1:20,SHA256:32,SHA512:64}});var v1=E(g1=>{"use strict";var y1=Hs(),q4=d1(),V4={SHA1:"SHA-1",SHA256:"SHA-256",SHA512:"SHA-512"},G4=async(t,e)=>{let r=await y1.get().subtle.sign({name:"HMAC"},t,e);return new Uint8Array(r,r.byteOffset,r.byteLength)};g1.create=async function(t,e){let r=V4[t],i=await y1.get().subtle.importKey("raw",e,{name:"HMAC",hash:{name:r}},!1,["sign"]);return{async digest(n){return G4(i,n)},length:q4[t]}}});var w1=E((n5,E1)=>{"use strict";var x1=Oe(),{concat:b1}=(ar(),sr),{fromString:H4}=(st(),nt),z4=v1(),m1={"AES-128":{ivSize:16,keySize:16},"AES-256":{ivSize:16,keySize:32},Blowfish:{ivSize:8,cipherKeySize:32}};E1.exports=async(t,e,r)=>{let i=m1[t];if(!i){let x=Object.keys(m1).join(" / ");throw x1(new Error(`unknown cipher type '${t}'. Must be ${x}`),"ERR_INVALID_CIPHER_TYPE")}if(!e)throw x1(new Error("missing hash type"),"ERR_MISSING_HASH_TYPE");let n=i.keySize,s=i.ivSize,a=20,o=H4("key expansion"),f=2*(s+n+a),u=await z4.create(e,r),c=await u.digest(o),h=[],l=0;for(;l<f;){let x=await u.digest(b1([c,o])),w=x.length;l+w>f&&(w=f-l),h.push(x),l+=w,c=await u.digest(c)}let d=f/2,p=b1(h),y=p.slice(0,d),g=p.slice(d,f),v=x=>({iv:x.slice(0,s),cipherKey:x.slice(s,s+n),macKey:x.slice(s+n)});return{k1:v(y),k2:v(g)}}});var _1=E((s5,S1)=>{"use strict";var j4=Oe();S1.exports=function(t,e){if(!t.includes(e)){let r=t.join(" / ");throw j4(new Error(`Unknown curve: ${e}. Must be ${r}`),"ERR_INVALID_CURVE")}}});var R1=E(T1=>{"use strict";var W4=Oe(),na=Hs(),{base64urlToBuffer:I1}=Bo(),Y4=_1(),{toString:Rc}=(yt(),dt),{concat:$4}=(ar(),sr),{equals:Q4}=(ur(),or),B1={"P-256":256,"P-384":384,"P-521":521};T1.generateEphmeralKeyPair=async function(t){Y4(Object.keys(B1),t);let e=await na.get().subtle.generateKey({name:"ECDH",namedCurve:t},!0,["deriveBits"]),r=async(n,s)=>{let a;s?a=await na.get().subtle.importKey("jwk",X4(t,s),{name:"ECDH",namedCurve:t},!1,["deriveBits"]):a=e.privateKey;let o=[await na.get().subtle.importKey("jwk",C1(t,n),{name:"ECDH",namedCurve:t},!1,[]),a],f=await na.get().subtle.deriveBits({name:"ECDH",namedCurve:t,public:o[0]},o[1],B1[t]);return new Uint8Array(f,f.byteOffset,f.byteLength)},i=await na.get().subtle.exportKey("jwk",e.publicKey);return{key:Z4(i),genSharedKey:r}};var A1={"P-256":32,"P-384":48,"P-521":66};function Z4(t){let e=A1[t.crv];return $4([Uint8Array.from([4]),I1(t.x,e),I1(t.y,e)],1+e*2)}function C1(t,e){let r=A1[t];if(Q4(!e.slice(0,1),Uint8Array.from([4])))throw W4(new Error("Cannot unmarshal public key - invalid key format"),"ERR_INVALID_KEY_FORMAT");return{kty:"EC",crv:t,x:Rc(e.slice(1,r+1),"base64url"),y:Rc(e.slice(1+r),"base64url"),ext:!0}}var X4=(t,e)=>({...C1(t,e.public),d:Rc(e.private,"base64url")})});var P1=E((o5,D1)=>{"use strict";var J4=R1();D1.exports=async t=>J4.generateEphmeralKeyPair(t)});var O1=E((u5,N1)=>{"use strict";var Rr=oo();qs();tg();var Dc=Se(),sa=Oe(),{fromString:eI}=(st(),nt),tI=ag(),Wt={rsa:Rg(),ed25519:Hg(),secp256k1:l1()(Rr,lc())},Mo={message:"secp256k1 support requires libp2p-crypto-secp256k1 package",code:"ERR_MISSING_PACKAGE"};function as(t){let e=Wt[t.toLowerCase()];if(!e){let r=Object.keys(Wt).join(" / ");throw sa(new Error(`invalid or unsupported key type ${t}. Must be ${r}`),"ERR_UNSUPPORTED_KEY_TYPE")}return e}var rI=async(t,e)=>as(t).generateKeyPair(e),iI=async(t,e,r)=>{let i=as(t);if(t.toLowerCase()!=="ed25519")throw sa(new Error("Seed key derivation is unimplemented for RSA or secp256k1"),"ERR_UNSUPPORTED_KEY_DERIVATION_TYPE");return i.generateKeyPairFromSeed(e,r)},nI=t=>{let e=Rr.PublicKey.decode(t),r=e.Data;switch(e.Type){case Rr.KeyType.RSA:return Wt.rsa.unmarshalRsaPublicKey(r);case Rr.KeyType.Ed25519:return Wt.ed25519.unmarshalEd25519PublicKey(r);case Rr.KeyType.Secp256k1:if(Wt.secp256k1)return Wt.secp256k1.unmarshalSecp256k1PublicKey(r);throw sa(new Error(Mo.message),Mo.code);default:as(e.Type)}},sI=(t,e)=>(e=(e||"rsa").toLowerCase(),as(e),t.bytes),k1=async t=>{let e=Rr.PrivateKey.decode(t),r=e.Data;switch(e.Type){case Rr.KeyType.RSA:return Wt.rsa.unmarshalRsaPrivateKey(r);case Rr.KeyType.Ed25519:return Wt.ed25519.unmarshalEd25519PrivateKey(r);case Rr.KeyType.Secp256k1:if(Wt.secp256k1)return Wt.secp256k1.unmarshalSecp256k1PrivateKey(r);throw sa(new Error(Mo.message),Mo.code);default:as(e.Type)}},aI=(t,e)=>(e=(e||"rsa").toLowerCase(),as(e),t.bytes),oI=async(t,e)=>{try{let n=await tI.import(t,e);return k1(n)}catch(n){}let r=Dc.pki.decryptRsaPrivateKey(t,e);if(r===null)throw sa(new Error("Cannot read the key, most likely the password is wrong or not a RSA key"),"ERR_CANNOT_DECRYPT_PEM");let i=Dc.asn1.toDer(Dc.pki.privateKeyToAsn1(r));return i=eI(i.getBytes(),"ascii"),Wt.rsa.unmarshalRsaPrivateKey(i)};N1.exports={supportedKeys:Wt,keysPBM:Rr,keyStretcher:w1(),generateEphemeralKeyPair:P1(),generateKeyPair:rI,generateKeyPairFromSeed:iI,unmarshalPublicKey:nI,marshalPublicKey:sI,unmarshalPrivateKey:k1,marshalPrivateKey:aI,import:oI}});var L1=E((c5,Pc)=>{"use strict";function uI(t,{className:e,symbolName:r}){let i=Symbol.for(r),n={[e]:class extends t{constructor(...s){super(...s);Object.defineProperty(this,i,{value:!0})}get[Symbol.toStringTag](){return e}}}[e];return n[`is${e}`]=s=>!!(s&&s[i]),n}function cI(t,{className:e,symbolName:r,withoutNew:i}){let n=Symbol.for(r),s={[e]:function(...a){if(i&&!(this instanceof s))return new s(...a);let o=t.call(this,...a)||this;return o&&!o[n]&&Object.defineProperty(o,n,{value:!0}),o}}[e];return s.prototype=Object.create(t.prototype),s.prototype.constructor=s,Object.defineProperty(s.prototype,Symbol.toStringTag,{get(){return e}}),s[`is${e}`]=a=>!!(a&&a[n]),s}Pc.exports=uI;Pc.exports.proto=cI});var F1=E((f5,K1)=>{"use strict";var os=Xi(),M1=os.Reader,fI=os.Writer,et=os.util,aa=os.roots["libp2p-peer-id"]||(os.roots["libp2p-peer-id"]={});aa.PeerIdProto=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.id=et.newBuffer([]),t.prototype.pubKey=et.newBuffer([]),t.prototype.privKey=et.newBuffer([]),t.encode=function(r,i){return i||(i=fI.create()),i.uint32(10).bytes(r.id),r.pubKey!=null&&Object.hasOwnProperty.call(r,"pubKey")&&i.uint32(18).bytes(r.pubKey),r.privKey!=null&&Object.hasOwnProperty.call(r,"privKey")&&i.uint32(26).bytes(r.privKey),i},t.decode=function(r,i){r instanceof M1||(r=M1.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new aa.PeerIdProto;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.id=r.bytes();break;case 2:s.pubKey=r.bytes();break;case 3:s.privKey=r.bytes();break;default:r.skipType(a&7);break}}if(!s.hasOwnProperty("id"))throw et.ProtocolError("missing required 'id'",{instance:s});return s},t.fromObject=function(r){if(r instanceof aa.PeerIdProto)return r;var i=new aa.PeerIdProto;return r.id!=null&&(typeof r.id=="string"?et.base64.decode(r.id,i.id=et.newBuffer(et.base64.length(r.id)),0):r.id.length&&(i.id=r.id)),r.pubKey!=null&&(typeof r.pubKey=="string"?et.base64.decode(r.pubKey,i.pubKey=et.newBuffer(et.base64.length(r.pubKey)),0):r.pubKey.length&&(i.pubKey=r.pubKey)),r.privKey!=null&&(typeof r.privKey=="string"?et.base64.decode(r.privKey,i.privKey=et.newBuffer(et.base64.length(r.privKey)),0):r.privKey.length&&(i.privKey=r.privKey)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(i.bytes===String?n.id="":(n.id=[],i.bytes!==Array&&(n.id=et.newBuffer(n.id))),i.bytes===String?n.pubKey="":(n.pubKey=[],i.bytes!==Array&&(n.pubKey=et.newBuffer(n.pubKey))),i.bytes===String?n.privKey="":(n.privKey=[],i.bytes!==Array&&(n.privKey=et.newBuffer(n.privKey)))),r.id!=null&&r.hasOwnProperty("id")&&(n.id=i.bytes===String?et.base64.encode(r.id,0,r.id.length):i.bytes===Array?Array.prototype.slice.call(r.id):r.id),r.pubKey!=null&&r.hasOwnProperty("pubKey")&&(n.pubKey=i.bytes===String?et.base64.encode(r.pubKey,0,r.pubKey.length):i.bytes===Array?Array.prototype.slice.call(r.pubKey):r.pubKey),r.privKey!=null&&r.hasOwnProperty("privKey")&&(n.privKey=i.bytes===String?et.base64.encode(r.privKey,0,r.privKey.length):i.bytes===Array?Array.prototype.slice.call(r.privKey):r.privKey),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,os.util.toJSONOptions)},t}();K1.exports=aa});var us=E((bt,W1)=>{"use strict";var{CID:kc}=(Mu(),kd),hI=(ks(),Ps),lI=(Du(),eo),pI=(an(),sn),dI=(on(),Ei),{base58btc:Nc}=(an(),sn),{base32:yI}=(ks(),Ps),{base16:U1}=(Ru(),Ja),oa=($n(),ro),Dr=O1(),gI=L1(),{PeerIdProto:q1}=F1(),{equals:En}=(ur(),or),{fromString:ua}=(st(),nt),{toString:vI}=(yt(),dt),{identity:Ko}=(Ls(),Qn),V1={...hI,...lI,...pI,...dI},xI=Object.keys(V1).reduce((t,e)=>t.or(V1[e]),yI.decoder),bI=112,G1=114,H1=class{constructor(e,r,i){if(!(e instanceof Uint8Array))throw new Error("invalid id provided");if(r&&i&&!En(r.public.bytes,i.bytes))throw new Error("inconsistent arguments");this._id=e,this._idB58String=Nc.encode(this.id).substring(1),this._privKey=r,this._pubKey=i}get id(){return this._id}set id(e){throw new Error("Id is immutable")}get privKey(){return this._privKey}set privKey(e){this._privKey=e}get pubKey(){if(this._pubKey)return this._pubKey;if(this._privKey)return this._privKey.public;try{let e=oa.decode(this.id);e.code===Ko.code&&(this._pubKey=Dr.unmarshalPublicKey(e.digest))}catch(e){}return this._pubKey}set pubKey(e){this._pubKey=e}marshalPubKey(){if(this.pubKey)return Dr.marshalPublicKey(this.pubKey)}marshalPrivKey(){if(this.privKey)return Dr.marshalPrivateKey(this.privKey)}marshal(e){return q1.encode({id:this.toBytes(),pubKey:this.marshalPubKey(),privKey:e?null:this.marshalPrivKey()}).finish()}toPrint(){let e=this.toB58String();e.startsWith("Qm")&&(e=e.slice(2));let r=6;return e.length<r&&(r=e.length),"<peer.ID "+e.substr(0,r)+">"}toJSON(){return{id:this.toB58String(),privKey:j1(this.marshalPrivKey()),pubKey:j1(this.marshalPubKey())}}toHexString(){return U1.encode(this.id).substring(1)}toBytes(){return this.id}toB58String(){return this._idB58String}toString(){if(!this._idCIDString){let e=kc.createV1(G1,oa.decode(this.id));Object.defineProperty(this,"_idCIDString",{value:e.toString(),enumerable:!1})}return this._idCIDString}equals(e){if(e instanceof Uint8Array)return En(this.id,e);if(e.id)return En(this.id,e.id);throw new Error("not valid Id")}isEqual(e){return this.equals(e)}isValid(){return Boolean(this.privKey&&this.privKey.public&&this.privKey.public.bytes&&this.pubKey.bytes instanceof Uint8Array&&En(this.privKey.public.bytes,this.pubKey.bytes))}hasInlinePublicKey(){try{if(oa.decode(this.id).code===Ko.code)return!0}catch(e){}return!1}},Pr=gI(H1,{className:"PeerId",symbolName:"@libp2p/js-peer-id/PeerId"});bt=W1.exports=Pr;var ca=t=>t.bytes.length<=42?oa.create(Ko.code,t.bytes).bytes:t.hash(),Oc=async(t,e)=>{let r=await ca(e);return new Pr(r,t,e)};bt.create=async t=>{t=t||{},t.bits=t.bits||2048,t.keyType=t.keyType||"RSA";let e=await Dr.generateKeyPair(t.keyType,t.bits);return Oc(e,e.public)};bt.createFromHexString=t=>new Pr(U1.decode("f"+t));bt.createFromBytes=t=>{try{let e=kc.decode(t);if(!z1(e))throw new Error("Supplied PeerID CID is invalid");return bt.createFromCID(e)}catch{if(oa.decode(t).code!==Ko.code)throw new Error("Supplied PeerID CID is invalid");return new Pr(t)}};bt.createFromB58String=t=>bt.createFromBytes(Nc.decode("z"+t));var z1=t=>t.code===G1||t.code===bI;bt.createFromCID=t=>{if(t=kc.asCID(t),!t||!z1(t))throw new Error("Supplied PeerID CID is invalid");return new Pr(t.multihash.bytes)};bt.createFromPubKey=async t=>{let e=t;if(typeof e=="string"&&(e=ua(t,"base64pad")),!(e instanceof Uint8Array))throw new Error("Supplied key is neither a base64 string nor a Uint8Array");let r=await Dr.unmarshalPublicKey(e);return Oc(void 0,r)};bt.createFromPrivKey=async t=>{if(typeof t=="string"&&(t=ua(t,"base64pad")),!(t instanceof Uint8Array))throw new Error("Supplied key is neither a base64 string nor a Uint8Array");let e=await Dr.unmarshalPrivateKey(t);return Oc(e,e.public)};bt.createFromJSON=async t=>{let e=Nc.decode("z"+t.id),r=t.privKey&&ua(t.privKey,"base64pad"),i=t.pubKey&&ua(t.pubKey,"base64pad"),n=i&&await Dr.unmarshalPublicKey(i);if(!r)return new Pr(e,void 0,n);let s=await Dr.unmarshalPrivateKey(r),a=await ca(s.public),o;if(n&&(o=await ca(n)),n&&!En(a,o))throw new Error("Public and private key do not match");if(e&&!En(a,e))throw new Error("Id and private key do not match");return new Pr(e,s,n)};bt.createFromProtobuf=async t=>{typeof t=="string"&&(t=ua(t,"base16"));let{id:e,privKey:r,pubKey:i}=q1.decode(t);r=r?await Dr.unmarshalPrivateKey(r):!1,i=i?await Dr.unmarshalPublicKey(i):!1;let n,s;if(r&&(s=await ca(r.public)),i&&(n=await ca(i)),r){if(i&&!En(s,n))throw new Error("Public and private key do not match");return new Pr(s,r,r.public)}if(i)return new Pr(n,void 0,i);if(e)return new Pr(e);throw new Error("Protobuf did not contain any usable key material")};bt.parse=t=>((t.charAt(0)==="1"||t.charAt(0)==="Q")&&(t=`z${t}`),bt.createFromBytes(xI.decode(t)));bt.isPeerId=t=>Boolean(typeof t=="object"&&t._id&&t._idB58String);function j1(t){if(t)return vI(t,"base64pad")}});var Lc=E((h5,Q1)=>{"use strict";var mI=nd(),{toString:EI}=(yt(),dt),{fromString:Y1}=(st(),nt),$1=us(),{sha256:wI}=(rr(),qt),SI=()=>mI(8),_I=(t,e)=>{let r;t instanceof Uint8Array?r=$1.createFromBytes(t).id:r=$1.parse(t).id;let i=new Uint8Array(r.length+e.length);return i.set(r,0),i.set(e,r.length),i},II=t=>wI.encode(t),BI=(t,e)=>{let r;Array.isArray(e)?r=i=>e.indexOf(i)>-1:r=i=>e.has(i);for(let i of t)if(r(i))return!0;return!1},AI=t=>Array.isArray(t)?t:[t],CI=(t,e)=>{let r=Object.assign({},t);return t.from instanceof Uint8Array&&(r.from=EI(t.from,"base58btc")),e&&(r.receivedFrom=e),r},TI=t=>{let e=Object.assign({},t);return typeof t.from=="string"&&(e.from=Y1(t.from,"base58btc")),typeof t.data=="string"&&(e.data=Y1(t.data)),e};Q1.exports={randomSeqno:SI,msgId:_I,noSignMsgId:II,anyMatch:BI,ensureArray:AI,normalizeInRpcMessage:CI,normalizeOutRpcMessage:TI}});var t2=E((l5,e2)=>{"use strict";var Mc=us(),{RPC:Z1}=Y0(),{concat:X1}=(ar(),sr),{fromString:RI}=(st(),nt),Kc=RI("libp2p-pubsub:"),{normalizeOutRpcMessage:DI}=Lc();async function PI(t,e){let r=X1([Kc,Z1.Message.encode(DI(e)).finish()]),i=await t.privKey.sign(r);return{...e,signature:i,key:t.pubKey.bytes}}async function kI(t){if(!t.signature)throw new Error("Message must contain a signature to be verified");if(!t.from)throw new Error("Message must contain a from property to be verified");let e=X1([Kc,Z1.Message.encode({...t,from:Mc.createFromB58String(t.from).toBytes(),signature:void 0,key:void 0}).finish()]);return(await J1(t)).verify(e,t.signature)}async function J1(t){if(!t.from)throw new Error("Could not get the public key from the originator id");let e=Mc.createFromB58String(t.from);if(t.key){let r=await Mc.createFromPubKey(t.key);if(r.equals(e))return r.pubKey;throw new Error("Public Key does not match the originator")}else{if(e.pubKey)return e.pubKey;throw new Error("Could not get the public key from the originator id")}}e2.exports={messagePublicKey:J1,signMessage:PI,SignPrefix:Kc,verifySignature:kI}});var s2=E((p5,n2)=>{"use strict";var r2=Is(),{EventEmitter:NI}=B0(),kt=Oe(),{pipe:OI}=C0(),{default:LI}=ah(),MI=vh(),{codes:fr}=Ma(),{RPC:i2}=Y0(),KI=Jp(),{SignaturePolicy:ri}=td(),ki=Lc(),{signMessage:FI,verifySignature:UI}=t2(),Fo=class extends NI{constructor({debugName:e,multicodecs:r,libp2p:i,globalSignaturePolicy:n=ri.StrictSign,canRelayMessage:s=!1,emitSelf:a=!1,messageProcessingConcurrency:o=10}){if(typeof e!="string")throw new Error("a debugname `string` is required");if(!r)throw new Error("multicodecs are required");if(!i)throw new Error("libp2p is required");super();if(this.log=Object.assign(r2(e),{err:r2(`${e}:error`)}),this.multicodecs=ki.ensureArray(r),this._libp2p=i,this.registrar=i.registrar,this.peerId=i.peerId,this.started=!1,this.topics=new Map,this.subscriptions=new Set,this.peers=new Map,!ri[n])throw kt(new Error("Invalid global signature policy"),fr.ERR_INVALID_SIGNATURE_POLICY);this.globalSignaturePolicy=n,this.canRelayMessage=s,this.emitSelf=a,this.topicValidators=new Map,this.queue=new LI({concurrency:o}),this._registrarId=void 0,this._onIncomingStream=this._onIncomingStream.bind(this),this._onPeerConnected=this._onPeerConnected.bind(this),this._onPeerDisconnected=this._onPeerDisconnected.bind(this)}async start(){if(this.started)return;this.log("starting"),this.registrar.handle(this.multicodecs,this._onIncomingStream);let e=new MI({multicodecs:this.multicodecs,handlers:{onConnect:this._onPeerConnected,onDisconnect:this._onPeerDisconnected}});this._registrarId=await this.registrar.register(e),this.log("started"),this.started=!0}async stop(){!this.started||(this.registrar.unregister(this._registrarId),this.log("stopping"),this.peers.forEach(e=>e.close()),this.peers=new Map,this.subscriptions=new Set,this.started=!1,this.log("stopped"))}_onIncomingStream({protocol:e,stream:r,connection:i}){let n=i.remotePeer,s=n.toB58String(),a=this._addPeer(n,e),o=a.attachInboundStream(r);this._processMessages(s,o,a)}async _onPeerConnected(e,r){let i=e.toB58String();this.log("connected",i);try{let{stream:n,protocol:s}=await r.newStream(this.multicodecs);await this._addPeer(e,s).attachOutboundStream(n)}catch(n){this.log.err(n)}this._sendSubscriptions(i,Array.from(this.subscriptions),!0)}_onPeerDisconnected(e,r){let i=e.toB58String();this.log("connection ended",i,r?r.message:""),this._removePeer(e)}_addPeer(e,r){let i=e.toB58String(),n=this.peers.get(i);if(n)return n;this.log("new peer",i);let s=new KI({id:e,protocol:r});return this.peers.set(i,s),s.once("close",()=>this._removePeer(e)),s}_removePeer(e){if(!e)return;let r=e.toB58String(),i=this.peers.get(r);if(!!i){i.removeAllListeners(),i.close(),this.log("delete peer",r),this.peers.delete(r);for(let n of this.topics.values())n.delete(r);return i}}async _processMessages(e,r,i){try{await OI(r,async n=>{for await(let s of n){let a=s instanceof Uint8Array?s:s.slice(),o=this._decodeRpc(a);(async()=>{try{await this._processRpc(e,i,o)}catch(f){this.log.err(f)}})()}})}catch(n){this._onPeerDisconnected(i.id,n)}}async _processRpc(e,r,i){this.log("rpc from",e);let n=i.subscriptions,s=i.msgs;return n.length&&(n.forEach(a=>{this._processRpcSubOpt(e,a)}),this.emit("pubsub:subscription-change",r.id,n)),this._acceptFrom(e)?(s.length&&this.queue.addAll(s.map(a=>async()=>{if(!(this.canRelayMessage||a.topicIDs&&a.topicIDs.some(o=>this.subscriptions.has(o)))){this.log("received message we didn't subscribe to. Dropping.");return}try{let o=ki.normalizeInRpcMessage(a,e);await this._processRpcMessage(o)}catch(o){this.log.err(o)}})),!0):(this.log("received message from unacceptable peer %s",e),!1)}_processRpcSubOpt(e,r){let i=r.topicID;if(!i)return;let n=this.topics.get(i);n||(n=new Set,this.topics.set(i,n)),r.subscribe?n.add(e):n.delete(e)}async _processRpcMessage(e){if(!(this.peerId.toB58String()===e.from&&!this.emitSelf)){try{await this.validate(e)}catch(r){this.log("Message is invalid, dropping it. %O",r);return}return this._emitMessage(e),this._publish(ki.normalizeOutRpcMessage(e))}}_emitMessage(e){e.topicIDs.forEach(r=>{this.subscriptions.has(r)&&this.emit(r,e)})}getMsgId(e){let r=this.globalSignaturePolicy;switch(r){case ri.StrictSign:return ki.msgId(e.from,e.seqno);case ri.StrictNoSign:return ki.noSignMsgId(e.data);default:throw kt(new Error("Cannot get message id: unhandled signature policy: "+r),fr.ERR_UNHANDLED_SIGNATURE_POLICY)}}_acceptFrom(e){return!0}_decodeRpc(e){return i2.decode(e)}_encodeRpc(e){return i2.encode(e).finish()}_sendRpc(e,r){let i=this.peers.get(e);if(!i||!i.isWritable){let n=`Cannot send RPC to ${e} as there is no open stream to it available`;this.log.err(n);return}i.write(this._encodeRpc(r))}_sendSubscriptions(e,r,i){return this._sendRpc(e,{subscriptions:r.map(n=>({topicID:n,subscribe:i}))})}async validate(e){let r=this.globalSignaturePolicy;switch(r){case ri.StrictNoSign:if(e.from)throw kt(new Error("StrictNoSigning: from should not be present"),fr.ERR_UNEXPECTED_FROM);if(e.signature)throw kt(new Error("StrictNoSigning: signature should not be present"),fr.ERR_UNEXPECTED_SIGNATURE);if(e.key)throw kt(new Error("StrictNoSigning: key should not be present"),fr.ERR_UNEXPECTED_KEY);if(e.seqno)throw kt(new Error("StrictNoSigning: seqno should not be present"),fr.ERR_UNEXPECTED_SEQNO);break;case ri.StrictSign:if(!e.signature)throw kt(new Error("StrictSigning: Signing required and no signature was present"),fr.ERR_MISSING_SIGNATURE);if(!e.seqno)throw kt(new Error("StrictSigning: Signing required and no seqno was present"),fr.ERR_MISSING_SEQNO);if(!await UI(e))throw kt(new Error("StrictSigning: Invalid message signature"),fr.ERR_INVALID_SIGNATURE);break;default:throw kt(new Error("Cannot validate message: unhandled signature policy: "+r),fr.ERR_UNHANDLED_SIGNATURE_POLICY)}for(let i of e.topicIDs){let n=this.topicValidators.get(i);n&&await n(i,e)}}_buildMessage(e){let r=this.globalSignaturePolicy;switch(r){case ri.StrictSign:return e.from=this.peerId.toB58String(),e.seqno=ki.randomSeqno(),FI(this.peerId,e);case ri.StrictNoSign:return Promise.resolve(e);default:throw kt(new Error("Cannot build message: unhandled signature policy: "+r),fr.ERR_UNHANDLED_SIGNATURE_POLICY)}}getSubscribers(e){if(!this.started)throw kt(new Error("not started yet"),"ERR_NOT_STARTED_YET");if(!e||typeof e!="string")throw kt(new Error("a string topic must be provided"),"ERR_NOT_VALID_TOPIC");let r=this.topics.get(e);return r?Array.from(r):[]}async publish(e,r){if(!this.started)throw new Error("Pubsub has not started");this.log("publish",e,r);let n={receivedFrom:this.peerId.toB58String(),data:r,topicIDs:[e]},s=await this._buildMessage(n),a=ki.normalizeInRpcMessage(s);this.emitSelf&&this._emitMessage(a),await this._publish(a)}_publish(e){throw kt(new Error("publish must be implemented by the subclass"),"ERR_NOT_IMPLEMENTED")}subscribe(e){if(!this.started)throw new Error("Pubsub has not started");this.subscriptions.has(e)||(this.subscriptions.add(e),this.peers.forEach((r,i)=>this._sendSubscriptions(i,[e],!0)))}unsubscribe(e){if(!this.started)throw new Error("Pubsub is not started");this.subscriptions.has(e)&&this.listenerCount(e)===0&&(this.subscriptions.delete(e),this.peers.forEach((r,i)=>this._sendSubscriptions(i,[e],!1)))}getTopics(){if(!this.started)throw new Error("Pubsub is not started");return Array.from(this.subscriptions)}};Fo.utils=ki;Fo.SignaturePolicy=ri;n2.exports=Fo});var a2=E(Uo=>{"use strict";Object.defineProperty(Uo,"__esModule",{value:!0});Uo.createGossipRpc=void 0;function qI(t=[],e={}){return{subscriptions:[],msgs:t,control:Object.assign({ihave:[],iwant:[],graft:[],prune:[]},e)}}Uo.createGossipRpc=qI});var o2=E(qo=>{"use strict";Object.defineProperty(qo,"__esModule",{value:!0});qo.shuffle=void 0;function VI(t){if(t.length<=1)return t;let e=()=>Math.floor(Math.random()*Math.floor(t.length));for(let r=0;r<t.length;r++){let i=e(),n=t[r];t[r]=t[i],t[i]=n}return t}qo.shuffle=VI});var Ni=E(K=>{"use strict";Object.defineProperty(K,"__esModule",{value:!0});K.ACCEPT_FROM_WHITELIST_DURATION_MS=K.ACCEPT_FROM_WHITELIST_MAX_MESSAGES=K.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE=K.ERR_TOPIC_VALIDATOR_IGNORE=K.ERR_TOPIC_VALIDATOR_REJECT=K.TimeCacheDuration=K.GossipsubSeenTTL=K.GossipsubIWantFollowupTime=K.GossipsubMaxIHaveMessages=K.GossipsubMaxIHaveLength=K.GossipsubGraftFloodThreshold=K.GossipsubOpportunisticGraftPeers=K.GossipsubOpportunisticGraftTicks=K.GossipsubDirectConnectInitialDelay=K.GossipsubDirectConnectTicks=K.GossipsubConnectionTimeout=K.GossipsubMaxPendingConnections=K.GossipsubConnectors=K.GossipsubPruneBackoffTicks=K.GossipsubPruneBackoff=K.GossipsubPrunePeers=K.GossipsubFanoutTTL=K.GossipsubHeartbeatInterval=K.GossipsubHeartbeatInitialDelay=K.GossipsubGossipRetransmission=K.GossipsubGossipFactor=K.GossipsubDlazy=K.GossipsubHistoryGossip=K.GossipsubHistoryLength=K.GossipsubDout=K.GossipsubDscore=K.GossipsubDhi=K.GossipsubDlo=K.GossipsubD=K.GossipsubIDv11=K.GossipsubIDv10=K.FloodsubID=K.minute=K.second=void 0;K.second=1e3;K.minute=60*K.second;K.FloodsubID="/floodsub/1.0.0";K.GossipsubIDv10="/meshsub/1.0.0";K.GossipsubIDv11="/meshsub/1.1.0";K.GossipsubD=6;K.GossipsubDlo=4;K.GossipsubDhi=12;K.GossipsubDscore=4;K.GossipsubDout=2;K.GossipsubHistoryLength=5;K.GossipsubHistoryGossip=3;K.GossipsubDlazy=6;K.GossipsubGossipFactor=.25;K.GossipsubGossipRetransmission=3;K.GossipsubHeartbeatInitialDelay=100;K.GossipsubHeartbeatInterval=K.second;K.GossipsubFanoutTTL=K.minute;K.GossipsubPrunePeers=16;K.GossipsubPruneBackoff=K.minute;K.GossipsubPruneBackoffTicks=15;K.GossipsubConnectors=8;K.GossipsubMaxPendingConnections=128;K.GossipsubConnectionTimeout=30*K.second;K.GossipsubDirectConnectTicks=300;K.GossipsubDirectConnectInitialDelay=K.second;K.GossipsubOpportunisticGraftTicks=60;K.GossipsubOpportunisticGraftPeers=2;K.GossipsubGraftFloodThreshold=10*K.second;K.GossipsubMaxIHaveLength=5e3;K.GossipsubMaxIHaveMessages=10;K.GossipsubIWantFollowupTime=3*K.second;K.GossipsubSeenTTL=30*K.second;K.TimeCacheDuration=120*1e3;K.ERR_TOPIC_VALIDATOR_REJECT="ERR_TOPIC_VALIDATOR_REJECT";K.ERR_TOPIC_VALIDATOR_IGNORE="ERR_TOPIC_VALIDATOR_IGNORE";K.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE=0;K.ACCEPT_FROM_WHITELIST_MAX_MESSAGES=128;K.ACCEPT_FROM_WHITELIST_DURATION_MS=1e3});var c2=E(Vo=>{"use strict";Object.defineProperty(Vo,"__esModule",{value:!0});Vo.hasGossipProtocol=void 0;var u2=Ni();function GI(t){return t===u2.GossipsubIDv10||t===u2.GossipsubIDv11}Vo.hasGossipProtocol=GI});var f2=E(cs=>{"use strict";Object.defineProperty(cs,"__esModule",{value:!0});cs.messageIdFromString=cs.messageIdToString=void 0;var HI=(st(),nt),zI=(yt(),dt);function jI(t){return zI.toString(t,"base64")}cs.messageIdToString=jI;function WI(t){return HI.fromString(t,"base64")}cs.messageIdFromString=WI});var fs=E(kr=>{"use strict";var YI=kr&&kr.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),Go=kr&&kr.__exportStar||function(t,e){for(var r in t)r!=="default"&&!Object.prototype.hasOwnProperty.call(e,r)&&YI(e,t,r)};Object.defineProperty(kr,"__esModule",{value:!0});Go(a2(),kr);Go(o2(),kr);Go(c2(),kr);Go(f2(),kr)});var l2=E(hs=>{"use strict";var $I=hs&&hs.__awaiter||function(t,e,r,i){function n(s){return s instanceof r?s:new r(function(a){a(s)})}return new(r||(r=Promise))(function(s,a){function o(c){try{u(i.next(c))}catch(h){a(h)}}function f(c){try{u(i.throw(c))}catch(h){a(h)}}function u(c){c.done?s(c.value):n(c.value).then(o,f)}u((i=i.apply(t,e||[])).next())})};Object.defineProperty(hs,"__esModule",{value:!0});hs.MessageCache=void 0;var Fc=fs(),h2=class{constructor(e,r){this.msgs=new Map,this.peertx=new Map,this.history=[];for(let i=0;i<r;i++)this.history[i]=[];this.gossip=e}put(e,r){return $I(this,void 0,void 0,function*(){this.msgs.set(r,e);let i=Fc.messageIdFromString(r);this.history[0].push({msgId:i,topics:e.topicIDs})})}get(e){return this.msgs.get(Fc.messageIdToString(e))}getForPeer(e,r){let i=this.msgs.get(e);if(!i)return[void 0,0];let n=this.peertx.get(e);n||(n=new Map,this.peertx.set(e,n));let s=(n.get(r)||0)+1;return n.set(r,s),[i,s]}getGossipIDs(e){let r=[];for(let i=0;i<this.gossip;i++)this.history[i].forEach(n=>{for(let s of n.topics)if(s===e){r.push(n.msgId);break}});return r}shift(){this.history[this.history.length-1].forEach(r=>{let i=Fc.messageIdToString(r.msgId);this.msgs.delete(i),this.peertx.delete(i)}),this.history.pop(),this.history.unshift([])}};hs.MessageCache=h2});var d2=E((p2,fa)=>{(function(t,e){typeof define=="function"&&define.amd?define(["protobufjs/minimal"],e):typeof Rf=="function"&&typeof fa=="object"&&fa&&fa.exports&&(fa.exports=e(Xi()))})(p2,function(t){"use strict";var e=t.Reader,r=t.Writer,i=t.util,n=t.roots.default||(t.roots.default={});return n.RPC=function(){function s(o){if(this.subscriptions=[],this.msgs=[],o)for(var f=Object.keys(o),u=0;u<f.length;++u)o[f[u]]!=null&&(this[f[u]]=o[f[u]])}s.prototype.subscriptions=i.emptyArray,s.prototype.msgs=i.emptyArray,s.prototype.control=null;var a;return Object.defineProperty(s.prototype,"_control",{get:i.oneOfGetter(a=["control"]),set:i.oneOfSetter(a)}),s.encode=function(f,u){if(u||(u=r.create()),f.subscriptions!=null&&f.subscriptions.length)for(var c=0;c<f.subscriptions.length;++c)n.RPC.SubOpts.encode(f.subscriptions[c],u.uint32(10).fork()).ldelim();if(f.msgs!=null&&f.msgs.length)for(var c=0;c<f.msgs.length;++c)n.RPC.Message.encode(f.msgs[c],u.uint32(18).fork()).ldelim();return f.control!=null&&Object.hasOwnProperty.call(f,"control")&&n.RPC.ControlMessage.encode(f.control,u.uint32(26).fork()).ldelim(),u},s.decode=function(f,u){f instanceof e||(f=e.create(f));for(var c=u===void 0?f.len:f.pos+u,h=new n.RPC;f.pos<c;){var l=f.uint32();switch(l>>>3){case 1:h.subscriptions&&h.subscriptions.length||(h.subscriptions=[]),h.subscriptions.push(n.RPC.SubOpts.decode(f,f.uint32()));break;case 2:h.msgs&&h.msgs.length||(h.msgs=[]),h.msgs.push(n.RPC.Message.decode(f,f.uint32()));break;case 3:h.control=n.RPC.ControlMessage.decode(f,f.uint32());break;default:f.skipType(l&7);break}}return h},s.fromObject=function(f){if(f instanceof n.RPC)return f;var u=new n.RPC;if(f.subscriptions){if(!Array.isArray(f.subscriptions))throw TypeError(".RPC.subscriptions: array expected");u.subscriptions=[];for(var c=0;c<f.subscriptions.length;++c){if(typeof f.subscriptions[c]!="object")throw TypeError(".RPC.subscriptions: object expected");u.subscriptions[c]=n.RPC.SubOpts.fromObject(f.subscriptions[c])}}if(f.msgs){if(!Array.isArray(f.msgs))throw TypeError(".RPC.msgs: array expected");u.msgs=[];for(var c=0;c<f.msgs.length;++c){if(typeof f.msgs[c]!="object")throw TypeError(".RPC.msgs: object expected");u.msgs[c]=n.RPC.Message.fromObject(f.msgs[c])}}if(f.control!=null){if(typeof f.control!="object")throw TypeError(".RPC.control: object expected");u.control=n.RPC.ControlMessage.fromObject(f.control)}return u},s.toObject=function(f,u){u||(u={});var c={};if((u.arrays||u.defaults)&&(c.subscriptions=[],c.msgs=[]),f.subscriptions&&f.subscriptions.length){c.subscriptions=[];for(var h=0;h<f.subscriptions.length;++h)c.subscriptions[h]=n.RPC.SubOpts.toObject(f.subscriptions[h],u)}if(f.msgs&&f.msgs.length){c.msgs=[];for(var h=0;h<f.msgs.length;++h)c.msgs[h]=n.RPC.Message.toObject(f.msgs[h],u)}return f.control!=null&&f.hasOwnProperty("control")&&(c.control=n.RPC.ControlMessage.toObject(f.control,u),u.oneofs&&(c._control="control")),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},s.SubOpts=function(){function o(u){if(u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}o.prototype.subscribe=null,o.prototype.topicID=null;var f;return Object.defineProperty(o.prototype,"_subscribe",{get:i.oneOfGetter(f=["subscribe"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),o.encode=function(c,h){return h||(h=r.create()),c.subscribe!=null&&Object.hasOwnProperty.call(c,"subscribe")&&h.uint32(8).bool(c.subscribe),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(18).string(c.topicID),h},o.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.SubOpts;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.subscribe=c.bool();break;case 2:d.topicID=c.string();break;default:c.skipType(p&7);break}}return d},o.fromObject=function(c){if(c instanceof n.RPC.SubOpts)return c;var h=new n.RPC.SubOpts;return c.subscribe!=null&&(h.subscribe=Boolean(c.subscribe)),c.topicID!=null&&(h.topicID=String(c.topicID)),h},o.toObject=function(c,h){h||(h={});var l={};return c.subscribe!=null&&c.hasOwnProperty("subscribe")&&(l.subscribe=c.subscribe,h.oneofs&&(l._subscribe="subscribe")),c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),l},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.Message=function(){function o(u){if(this.topicIDs=[],u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}o.prototype.from=null,o.prototype.data=null,o.prototype.seqno=null,o.prototype.topicIDs=i.emptyArray,o.prototype.signature=null,o.prototype.key=null;var f;return Object.defineProperty(o.prototype,"_from",{get:i.oneOfGetter(f=["from"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_data",{get:i.oneOfGetter(f=["data"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_seqno",{get:i.oneOfGetter(f=["seqno"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_signature",{get:i.oneOfGetter(f=["signature"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_key",{get:i.oneOfGetter(f=["key"]),set:i.oneOfSetter(f)}),o.encode=function(c,h){if(h||(h=r.create()),c.from!=null&&Object.hasOwnProperty.call(c,"from")&&h.uint32(10).bytes(c.from),c.data!=null&&Object.hasOwnProperty.call(c,"data")&&h.uint32(18).bytes(c.data),c.seqno!=null&&Object.hasOwnProperty.call(c,"seqno")&&h.uint32(26).bytes(c.seqno),c.topicIDs!=null&&c.topicIDs.length)for(var l=0;l<c.topicIDs.length;++l)h.uint32(34).string(c.topicIDs[l]);return c.signature!=null&&Object.hasOwnProperty.call(c,"signature")&&h.uint32(42).bytes(c.signature),c.key!=null&&Object.hasOwnProperty.call(c,"key")&&h.uint32(50).bytes(c.key),h},o.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.Message;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.from=c.bytes();break;case 2:d.data=c.bytes();break;case 3:d.seqno=c.bytes();break;case 4:d.topicIDs&&d.topicIDs.length||(d.topicIDs=[]),d.topicIDs.push(c.string());break;case 5:d.signature=c.bytes();break;case 6:d.key=c.bytes();break;default:c.skipType(p&7);break}}return d},o.fromObject=function(c){if(c instanceof n.RPC.Message)return c;var h=new n.RPC.Message;if(c.from!=null&&(typeof c.from=="string"?i.base64.decode(c.from,h.from=i.newBuffer(i.base64.length(c.from)),0):c.from.length&&(h.from=c.from)),c.data!=null&&(typeof c.data=="string"?i.base64.decode(c.data,h.data=i.newBuffer(i.base64.length(c.data)),0):c.data.length&&(h.data=c.data)),c.seqno!=null&&(typeof c.seqno=="string"?i.base64.decode(c.seqno,h.seqno=i.newBuffer(i.base64.length(c.seqno)),0):c.seqno.length&&(h.seqno=c.seqno)),c.topicIDs){if(!Array.isArray(c.topicIDs))throw TypeError(".RPC.Message.topicIDs: array expected");h.topicIDs=[];for(var l=0;l<c.topicIDs.length;++l)h.topicIDs[l]=String(c.topicIDs[l])}return c.signature!=null&&(typeof c.signature=="string"?i.base64.decode(c.signature,h.signature=i.newBuffer(i.base64.length(c.signature)),0):c.signature.length&&(h.signature=c.signature)),c.key!=null&&(typeof c.key=="string"?i.base64.decode(c.key,h.key=i.newBuffer(i.base64.length(c.key)),0):c.key.length&&(h.key=c.key)),h},o.toObject=function(c,h){h||(h={});var l={};if((h.arrays||h.defaults)&&(l.topicIDs=[]),c.from!=null&&c.hasOwnProperty("from")&&(l.from=h.bytes===String?i.base64.encode(c.from,0,c.from.length):h.bytes===Array?Array.prototype.slice.call(c.from):c.from,h.oneofs&&(l._from="from")),c.data!=null&&c.hasOwnProperty("data")&&(l.data=h.bytes===String?i.base64.encode(c.data,0,c.data.length):h.bytes===Array?Array.prototype.slice.call(c.data):c.data,h.oneofs&&(l._data="data")),c.seqno!=null&&c.hasOwnProperty("seqno")&&(l.seqno=h.bytes===String?i.base64.encode(c.seqno,0,c.seqno.length):h.bytes===Array?Array.prototype.slice.call(c.seqno):c.seqno,h.oneofs&&(l._seqno="seqno")),c.topicIDs&&c.topicIDs.length){l.topicIDs=[];for(var d=0;d<c.topicIDs.length;++d)l.topicIDs[d]=c.topicIDs[d]}return c.signature!=null&&c.hasOwnProperty("signature")&&(l.signature=h.bytes===String?i.base64.encode(c.signature,0,c.signature.length):h.bytes===Array?Array.prototype.slice.call(c.signature):c.signature,h.oneofs&&(l._signature="signature")),c.key!=null&&c.hasOwnProperty("key")&&(l.key=h.bytes===String?i.base64.encode(c.key,0,c.key.length):h.bytes===Array?Array.prototype.slice.call(c.key):c.key,h.oneofs&&(l._key="key")),l},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.ControlMessage=function(){function o(f){if(this.ihave=[],this.iwant=[],this.graft=[],this.prune=[],f)for(var u=Object.keys(f),c=0;c<u.length;++c)f[u[c]]!=null&&(this[u[c]]=f[u[c]])}return o.prototype.ihave=i.emptyArray,o.prototype.iwant=i.emptyArray,o.prototype.graft=i.emptyArray,o.prototype.prune=i.emptyArray,o.encode=function(u,c){if(c||(c=r.create()),u.ihave!=null&&u.ihave.length)for(var h=0;h<u.ihave.length;++h)n.RPC.ControlIHave.encode(u.ihave[h],c.uint32(10).fork()).ldelim();if(u.iwant!=null&&u.iwant.length)for(var h=0;h<u.iwant.length;++h)n.RPC.ControlIWant.encode(u.iwant[h],c.uint32(18).fork()).ldelim();if(u.graft!=null&&u.graft.length)for(var h=0;h<u.graft.length;++h)n.RPC.ControlGraft.encode(u.graft[h],c.uint32(26).fork()).ldelim();if(u.prune!=null&&u.prune.length)for(var h=0;h<u.prune.length;++h)n.RPC.ControlPrune.encode(u.prune[h],c.uint32(34).fork()).ldelim();return c},o.decode=function(u,c){u instanceof e||(u=e.create(u));for(var h=c===void 0?u.len:u.pos+c,l=new n.RPC.ControlMessage;u.pos<h;){var d=u.uint32();switch(d>>>3){case 1:l.ihave&&l.ihave.length||(l.ihave=[]),l.ihave.push(n.RPC.ControlIHave.decode(u,u.uint32()));break;case 2:l.iwant&&l.iwant.length||(l.iwant=[]),l.iwant.push(n.RPC.ControlIWant.decode(u,u.uint32()));break;case 3:l.graft&&l.graft.length||(l.graft=[]),l.graft.push(n.RPC.ControlGraft.decode(u,u.uint32()));break;case 4:l.prune&&l.prune.length||(l.prune=[]),l.prune.push(n.RPC.ControlPrune.decode(u,u.uint32()));break;default:u.skipType(d&7);break}}return l},o.fromObject=function(u){if(u instanceof n.RPC.ControlMessage)return u;var c=new n.RPC.ControlMessage;if(u.ihave){if(!Array.isArray(u.ihave))throw TypeError(".RPC.ControlMessage.ihave: array expected");c.ihave=[];for(var h=0;h<u.ihave.length;++h){if(typeof u.ihave[h]!="object")throw TypeError(".RPC.ControlMessage.ihave: object expected");c.ihave[h]=n.RPC.ControlIHave.fromObject(u.ihave[h])}}if(u.iwant){if(!Array.isArray(u.iwant))throw TypeError(".RPC.ControlMessage.iwant: array expected");c.iwant=[];for(var h=0;h<u.iwant.length;++h){if(typeof u.iwant[h]!="object")throw TypeError(".RPC.ControlMessage.iwant: object expected");c.iwant[h]=n.RPC.ControlIWant.fromObject(u.iwant[h])}}if(u.graft){if(!Array.isArray(u.graft))throw TypeError(".RPC.ControlMessage.graft: array expected");c.graft=[];for(var h=0;h<u.graft.length;++h){if(typeof u.graft[h]!="object")throw TypeError(".RPC.ControlMessage.graft: object expected");c.graft[h]=n.RPC.ControlGraft.fromObject(u.graft[h])}}if(u.prune){if(!Array.isArray(u.prune))throw TypeError(".RPC.ControlMessage.prune: array expected");c.prune=[];for(var h=0;h<u.prune.length;++h){if(typeof u.prune[h]!="object")throw TypeError(".RPC.ControlMessage.prune: object expected");c.prune[h]=n.RPC.ControlPrune.fromObject(u.prune[h])}}return c},o.toObject=function(u,c){c||(c={});var h={};if((c.arrays||c.defaults)&&(h.ihave=[],h.iwant=[],h.graft=[],h.prune=[]),u.ihave&&u.ihave.length){h.ihave=[];for(var l=0;l<u.ihave.length;++l)h.ihave[l]=n.RPC.ControlIHave.toObject(u.ihave[l],c)}if(u.iwant&&u.iwant.length){h.iwant=[];for(var l=0;l<u.iwant.length;++l)h.iwant[l]=n.RPC.ControlIWant.toObject(u.iwant[l],c)}if(u.graft&&u.graft.length){h.graft=[];for(var l=0;l<u.graft.length;++l)h.graft[l]=n.RPC.ControlGraft.toObject(u.graft[l],c)}if(u.prune&&u.prune.length){h.prune=[];for(var l=0;l<u.prune.length;++l)h.prune[l]=n.RPC.ControlPrune.toObject(u.prune[l],c)}return h},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.ControlIHave=function(){function o(u){if(this.messageIDs=[],u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}o.prototype.topicID=null,o.prototype.messageIDs=i.emptyArray;var f;return Object.defineProperty(o.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),o.encode=function(c,h){if(h||(h=r.create()),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(10).string(c.topicID),c.messageIDs!=null&&c.messageIDs.length)for(var l=0;l<c.messageIDs.length;++l)h.uint32(18).bytes(c.messageIDs[l]);return h},o.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.ControlIHave;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.topicID=c.string();break;case 2:d.messageIDs&&d.messageIDs.length||(d.messageIDs=[]),d.messageIDs.push(c.bytes());break;default:c.skipType(p&7);break}}return d},o.fromObject=function(c){if(c instanceof n.RPC.ControlIHave)return c;var h=new n.RPC.ControlIHave;if(c.topicID!=null&&(h.topicID=String(c.topicID)),c.messageIDs){if(!Array.isArray(c.messageIDs))throw TypeError(".RPC.ControlIHave.messageIDs: array expected");h.messageIDs=[];for(var l=0;l<c.messageIDs.length;++l)typeof c.messageIDs[l]=="string"?i.base64.decode(c.messageIDs[l],h.messageIDs[l]=i.newBuffer(i.base64.length(c.messageIDs[l])),0):c.messageIDs[l].length&&(h.messageIDs[l]=c.messageIDs[l])}return h},o.toObject=function(c,h){h||(h={});var l={};if((h.arrays||h.defaults)&&(l.messageIDs=[]),c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),c.messageIDs&&c.messageIDs.length){l.messageIDs=[];for(var d=0;d<c.messageIDs.length;++d)l.messageIDs[d]=h.bytes===String?i.base64.encode(c.messageIDs[d],0,c.messageIDs[d].length):h.bytes===Array?Array.prototype.slice.call(c.messageIDs[d]):c.messageIDs[d]}return l},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.ControlIWant=function(){function o(f){if(this.messageIDs=[],f)for(var u=Object.keys(f),c=0;c<u.length;++c)f[u[c]]!=null&&(this[u[c]]=f[u[c]])}return o.prototype.messageIDs=i.emptyArray,o.encode=function(u,c){if(c||(c=r.create()),u.messageIDs!=null&&u.messageIDs.length)for(var h=0;h<u.messageIDs.length;++h)c.uint32(10).bytes(u.messageIDs[h]);return c},o.decode=function(u,c){u instanceof e||(u=e.create(u));for(var h=c===void 0?u.len:u.pos+c,l=new n.RPC.ControlIWant;u.pos<h;){var d=u.uint32();switch(d>>>3){case 1:l.messageIDs&&l.messageIDs.length||(l.messageIDs=[]),l.messageIDs.push(u.bytes());break;default:u.skipType(d&7);break}}return l},o.fromObject=function(u){if(u instanceof n.RPC.ControlIWant)return u;var c=new n.RPC.ControlIWant;if(u.messageIDs){if(!Array.isArray(u.messageIDs))throw TypeError(".RPC.ControlIWant.messageIDs: array expected");c.messageIDs=[];for(var h=0;h<u.messageIDs.length;++h)typeof u.messageIDs[h]=="string"?i.base64.decode(u.messageIDs[h],c.messageIDs[h]=i.newBuffer(i.base64.length(u.messageIDs[h])),0):u.messageIDs[h].length&&(c.messageIDs[h]=u.messageIDs[h])}return c},o.toObject=function(u,c){c||(c={});var h={};if((c.arrays||c.defaults)&&(h.messageIDs=[]),u.messageIDs&&u.messageIDs.length){h.messageIDs=[];for(var l=0;l<u.messageIDs.length;++l)h.messageIDs[l]=c.bytes===String?i.base64.encode(u.messageIDs[l],0,u.messageIDs[l].length):c.bytes===Array?Array.prototype.slice.call(u.messageIDs[l]):u.messageIDs[l]}return h},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.ControlGraft=function(){function o(u){if(u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}o.prototype.topicID=null;var f;return Object.defineProperty(o.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),o.encode=function(c,h){return h||(h=r.create()),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(10).string(c.topicID),h},o.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.ControlGraft;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.topicID=c.string();break;default:c.skipType(p&7);break}}return d},o.fromObject=function(c){if(c instanceof n.RPC.ControlGraft)return c;var h=new n.RPC.ControlGraft;return c.topicID!=null&&(h.topicID=String(c.topicID)),h},o.toObject=function(c,h){h||(h={});var l={};return c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),l},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.ControlPrune=function(){function o(u){if(this.peers=[],u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}o.prototype.topicID=null,o.prototype.peers=i.emptyArray,o.prototype.backoff=null;var f;return Object.defineProperty(o.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_backoff",{get:i.oneOfGetter(f=["backoff"]),set:i.oneOfSetter(f)}),o.encode=function(c,h){if(h||(h=r.create()),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(10).string(c.topicID),c.peers!=null&&c.peers.length)for(var l=0;l<c.peers.length;++l)n.RPC.PeerInfo.encode(c.peers[l],h.uint32(18).fork()).ldelim();return c.backoff!=null&&Object.hasOwnProperty.call(c,"backoff")&&h.uint32(24).uint64(c.backoff),h},o.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.ControlPrune;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.topicID=c.string();break;case 2:d.peers&&d.peers.length||(d.peers=[]),d.peers.push(n.RPC.PeerInfo.decode(c,c.uint32()));break;case 3:d.backoff=c.uint64();break;default:c.skipType(p&7);break}}return d},o.fromObject=function(c){if(c instanceof n.RPC.ControlPrune)return c;var h=new n.RPC.ControlPrune;if(c.topicID!=null&&(h.topicID=String(c.topicID)),c.peers){if(!Array.isArray(c.peers))throw TypeError(".RPC.ControlPrune.peers: array expected");h.peers=[];for(var l=0;l<c.peers.length;++l){if(typeof c.peers[l]!="object")throw TypeError(".RPC.ControlPrune.peers: object expected");h.peers[l]=n.RPC.PeerInfo.fromObject(c.peers[l])}}return c.backoff!=null&&(i.Long?(h.backoff=i.Long.fromValue(c.backoff)).unsigned=!0:typeof c.backoff=="string"?h.backoff=parseInt(c.backoff,10):typeof c.backoff=="number"?h.backoff=c.backoff:typeof c.backoff=="object"&&(h.backoff=new i.LongBits(c.backoff.low>>>0,c.backoff.high>>>0).toNumber(!0))),h},o.toObject=function(c,h){h||(h={});var l={};if((h.arrays||h.defaults)&&(l.peers=[]),c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),c.peers&&c.peers.length){l.peers=[];for(var d=0;d<c.peers.length;++d)l.peers[d]=n.RPC.PeerInfo.toObject(c.peers[d],h)}return c.backoff!=null&&c.hasOwnProperty("backoff")&&(typeof c.backoff=="number"?l.backoff=h.longs===String?String(c.backoff):c.backoff:l.backoff=h.longs===String?i.Long.prototype.toString.call(c.backoff):h.longs===Number?new i.LongBits(c.backoff.low>>>0,c.backoff.high>>>0).toNumber(!0):c.backoff,h.oneofs&&(l._backoff="backoff")),l},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s.PeerInfo=function(){function o(u){if(u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}o.prototype.peerID=null,o.prototype.signedPeerRecord=null;var f;return Object.defineProperty(o.prototype,"_peerID",{get:i.oneOfGetter(f=["peerID"]),set:i.oneOfSetter(f)}),Object.defineProperty(o.prototype,"_signedPeerRecord",{get:i.oneOfGetter(f=["signedPeerRecord"]),set:i.oneOfSetter(f)}),o.encode=function(c,h){return h||(h=r.create()),c.peerID!=null&&Object.hasOwnProperty.call(c,"peerID")&&h.uint32(10).bytes(c.peerID),c.signedPeerRecord!=null&&Object.hasOwnProperty.call(c,"signedPeerRecord")&&h.uint32(18).bytes(c.signedPeerRecord),h},o.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.PeerInfo;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.peerID=c.bytes();break;case 2:d.signedPeerRecord=c.bytes();break;default:c.skipType(p&7);break}}return d},o.fromObject=function(c){if(c instanceof n.RPC.PeerInfo)return c;var h=new n.RPC.PeerInfo;return c.peerID!=null&&(typeof c.peerID=="string"?i.base64.decode(c.peerID,h.peerID=i.newBuffer(i.base64.length(c.peerID)),0):c.peerID.length&&(h.peerID=c.peerID)),c.signedPeerRecord!=null&&(typeof c.signedPeerRecord=="string"?i.base64.decode(c.signedPeerRecord,h.signedPeerRecord=i.newBuffer(i.base64.length(c.signedPeerRecord)),0):c.signedPeerRecord.length&&(h.signedPeerRecord=c.signedPeerRecord)),h},o.toObject=function(c,h){h||(h={});var l={};return c.peerID!=null&&c.hasOwnProperty("peerID")&&(l.peerID=h.bytes===String?i.base64.encode(c.peerID,0,c.peerID.length):h.bytes===Array?Array.prototype.slice.call(c.peerID):c.peerID,h.oneofs&&(l._peerID="peerID")),c.signedPeerRecord!=null&&c.hasOwnProperty("signedPeerRecord")&&(l.signedPeerRecord=h.bytes===String?i.base64.encode(c.signedPeerRecord,0,c.signedPeerRecord.length):h.bytes===Array?Array.prototype.slice.call(c.signedPeerRecord):c.signedPeerRecord,h.oneofs&&(l._signedPeerRecord="signedPeerRecord")),l},o.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},o}(),s}(),n})});var Uc=E(Ho=>{"use strict";Object.defineProperty(Ho,"__esModule",{value:!0});Ho.getGossipPeers=void 0;var y2=fs();function QI(t,e,r,i=()=>!0){let n=t.topics.get(e);if(!n)return new Set;let s=[];return n.forEach(a=>{let o=t.peers.get(a);!o||y2.hasGossipProtocol(o.protocol)&&i(a)&&s.push(a)}),s=y2.shuffle(s),r>0&&s.length>r&&(s=s.slice(0,r)),new Set(s)}Ho.getGossipPeers=QI});var v2=E(Nr=>{"use strict";var ZI=Nr&&Nr.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),XI=Nr&&Nr.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),JI=Nr&&Nr.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)r!=="default"&&Object.prototype.hasOwnProperty.call(t,r)&&ZI(e,t,r);return XI(e,t),e};Object.defineProperty(Nr,"__esModule",{value:!0});Nr.Heartbeat=void 0;var qc=JI(Ni()),zo=Uc(),eB=fs(),g2=class{constructor(e){this.gossipsub=e}start(){if(this._heartbeatTimer)return;let e=this._heartbeat.bind(this),r=setTimeout(()=>{e(),this._heartbeatTimer.runPeriodically(e,this.gossipsub._options.heartbeatInterval)},qc.GossipsubHeartbeatInitialDelay);this._heartbeatTimer={_intervalId:void 0,runPeriodically:(i,n)=>{this._heartbeatTimer._intervalId=setInterval(i,n)},cancel:()=>{clearTimeout(r),clearInterval(this._heartbeatTimer._intervalId)}}}stop(){!this._heartbeatTimer||(this._heartbeatTimer.cancel(),this._heartbeatTimer=null)}_heartbeat(){let{D:e,Dlo:r,Dhi:i,Dscore:n,Dout:s,fanoutTTL:a}=this.gossipsub._options;this.gossipsub.heartbeatTicks++;let o=new Map,f=d=>{let p=o.get(d);return p===void 0&&(p=this.gossipsub.score.score(d),o.set(d,p)),p},u=new Map,c=new Map,h=new Map;this.gossipsub._clearBackoff(),this.gossipsub.peerhave.clear(),this.gossipsub.iasked.clear(),this.gossipsub._applyIwantPenalties(),this.gossipsub._directConnect(),this.gossipsub.mesh.forEach((d,p)=>{let y=v=>{this.gossipsub.log("HEARTBEAT: Remove mesh link to %s in %s",v,p),this.gossipsub.score.prune(v,p),this.gossipsub._addBackoff(v,p),d.delete(v);let x=c.get(v);x?x.push(p):c.set(v,[p])},g=v=>{this.gossipsub.log("HEARTBEAT: Add mesh link to %s in %s",v,p),this.gossipsub.score.graft(v,p),d.add(v);let x=u.get(v);x?x.push(p):u.set(v,[p])};if(d.forEach(v=>{let x=f(v);x<0&&(this.gossipsub.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s",v,x,p),y(v),h.set(v,!0))}),d.size<r){let v=this.gossipsub.backoff.get(p),x=e-d.size;zo.getGossipPeers(this.gossipsub,p,x,P=>!d.has(P)&&!this.gossipsub.direct.has(P)&&(!v||!v.has(P))&&f(P)>=0).forEach(g)}if(d.size>i){let v=Array.from(d);v.sort((w,P)=>f(P)-f(w)),v=v.slice(0,n).concat(eB.shuffle(v.slice(n)));let x=0;if(v.slice(0,e).forEach(w=>{this.gossipsub.outbound.get(w)&&x++}),x<s){let w=B=>{let S=v[B];for(let G=B;G>0;G--)v[G]=v[G-1];v[0]=S};if(x>0){let B=x;for(let S=1;S<e&&B>0;S++)this.gossipsub.outbound.get(v[S])&&(w(S),B--)}let P=e-x;for(let B=e;B<v.length&&P>0;B++)this.gossipsub.outbound.get(v[B])&&(w(B),P--)}v.slice(e).forEach(y)}if(d.size>=r){let v=0;if(d.forEach(x=>{this.gossipsub.outbound.get(x)&&v++}),v<s){let x=s-v,w=this.gossipsub.backoff.get(p);zo.getGossipPeers(this.gossipsub,p,x,P=>!d.has(P)&&!this.gossipsub.direct.has(P)&&(!w||!w.has(P))&&f(P)>=0).forEach(g)}}if(this.gossipsub.heartbeatTicks%qc.GossipsubOpportunisticGraftTicks==0&&d.size>1){let v=Array.from(d).sort((P,B)=>f(P)-f(B)),x=Math.floor(d.size/2),w=f(v[x]);if(w<this.gossipsub._options.scoreThresholds.opportunisticGraftThreshold){let P=this.gossipsub.backoff.get(p);zo.getGossipPeers(this.gossipsub,p,qc.GossipsubOpportunisticGraftPeers,S=>d.has(S)&&!this.gossipsub.direct.has(S)&&(!P||!P.has(S))&&f(S)>w).forEach(S=>{this.gossipsub.log("HEARTBEAT: Opportunistically graft peer %s on topic %s",S,p),g(S)})}}this.gossipsub._emitGossip(p,d)});let l=this.gossipsub._now();this.gossipsub.lastpub.forEach((d,p)=>{d+a<l&&(this.gossipsub.fanout.delete(p),this.gossipsub.lastpub.delete(p))}),this.gossipsub.fanout.forEach((d,p)=>{let y=this.gossipsub.topics.get(p);if(d.forEach(g=>{(!y.has(g)||f(g)<this.gossipsub._options.scoreThresholds.publishThreshold)&&d.delete(g)}),d.size<e){let g=e-d.size;zo.getGossipPeers(this.gossipsub,p,g,x=>!d.has(x)&&!this.gossipsub.direct.has(x)&&f(x)>=this.gossipsub._options.scoreThresholds.publishThreshold).forEach(x=>{d.add(x)})}this.gossipsub._emitGossip(p,d)}),this.gossipsub._sendGraftPrune(u,c,h),this.gossipsub._flush(),this.gossipsub.messageCache.shift(),this.gossipsub.emit("gossipsub:heartbeat")}};Nr.Heartbeat=g2});var Vc=E(ls=>{"use strict";Object.defineProperty(ls,"__esModule",{value:!0});ls.ERR_INVALID_PEER_SCORE_THRESHOLDS=ls.ERR_INVALID_PEER_SCORE_PARAMS=void 0;ls.ERR_INVALID_PEER_SCORE_PARAMS="ERR_INVALID_PEER_SCORE_PARAMS";ls.ERR_INVALID_PEER_SCORE_THRESHOLDS="ERR_INVALID_PEER_SCORE_THRESHOLDS"});var Gc=E(mt=>{"use strict";Object.defineProperty(mt,"__esModule",{value:!0});mt.validateTopicScoreParams=mt.validatePeerScoreParams=mt.createTopicScoreParams=mt.createPeerScoreParams=mt.defaultTopicScoreParams=mt.defaultPeerScoreParams=void 0;var Ae=Vc(),Ce=Oe();mt.defaultPeerScoreParams={topics:{},topicScoreCap:10,appSpecificScore:()=>0,appSpecificWeight:10,IPColocationFactorWeight:-5,IPColocationFactorThreshold:10,IPColocationFactorWhitelist:new Set,behaviourPenaltyWeight:-10,behaviourPenaltyDecay:.2,decayInterval:1e3,decayToZero:.1,retainScore:3600*1e3};mt.defaultTopicScoreParams={topicWeight:.5,timeInMeshWeight:1,timeInMeshQuantum:1,timeInMeshCap:3600,firstMessageDeliveriesWeight:1,firstMessageDeliveriesDecay:.5,firstMessageDeliveriesCap:2e3,meshMessageDeliveriesWeight:-1,meshMessageDeliveriesDecay:.5,meshMessageDeliveriesCap:100,meshMessageDeliveriesThreshold:20,meshMessageDeliveriesWindow:10,meshMessageDeliveriesActivation:5e3,meshFailurePenaltyWeight:-1,meshFailurePenaltyDecay:.5,invalidMessageDeliveriesWeight:-1,invalidMessageDeliveriesDecay:.3};function tB(t={}){return Object.assign(Object.assign(Object.assign({},mt.defaultPeerScoreParams),t),{topics:t.topics?Object.entries(t.topics).reduce((e,[r,i])=>(e[r]=x2(i),e),{}):{}})}mt.createPeerScoreParams=tB;function x2(t={}){return Object.assign(Object.assign({},mt.defaultTopicScoreParams),t)}mt.createTopicScoreParams=x2;function rB(t){for(let[e,r]of Object.entries(t.topics))try{b2(r)}catch(i){throw Ce(new Error(`invalid score parameters for topic ${e}: ${i.message}`),Ae.ERR_INVALID_PEER_SCORE_PARAMS)}if(t.topicScoreCap<0)throw Ce(new Error("invalid topic score cap; must be positive (or 0 for no cap)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.appSpecificScore===null||t.appSpecificScore===void 0)throw Ce(new Error("missing application specific score function"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.IPColocationFactorWeight>0)throw Ce(new Error("invalid IPColocationFactorWeight; must be negative (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.IPColocationFactorWeight!==0&&t.IPColocationFactorThreshold<1)throw Ce(new Error("invalid IPColocationFactorThreshold; must be at least 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.behaviourPenaltyWeight>0)throw Ce(new Error("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.behaviourPenaltyWeight!==0&&(t.behaviourPenaltyDecay<=0||t.behaviourPenaltyDecay>=1))throw Ce(new Error("invalid BehaviourPenaltyDecay; must be between 0 and 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.decayInterval<1e3)throw Ce(new Error("invalid DecayInterval; must be at least 1s"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.decayToZero<=0||t.decayToZero>=1)throw Ce(new Error("invalid DecayToZero; must be between 0 and 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS)}mt.validatePeerScoreParams=rB;function b2(t){if(t.topicWeight<0)throw Ce(new Error("invalid topic weight; must be >= 0"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshQuantum===0)throw Ce(new Error("invalid TimeInMeshQuantum; must be non zero"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight<0)throw Ce(new Error("invalid TimeInMeshWeight; must be positive (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight!==0&&t.timeInMeshQuantum<=0)throw Ce(new Error("invalid TimeInMeshQuantum; must be positive"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight!==0&&t.timeInMeshCap<=0)throw Ce(new Error("invalid TimeInMeshCap; must be positive"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight<0)throw Ce(new Error("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight!==0&&(t.firstMessageDeliveriesDecay<=0||t.firstMessageDeliveriesDecay>=1))throw Ce(new Error("invalid FirstMessageDeliveriesDecay; must be between 0 and 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight!==0&&t.firstMessageDeliveriesCap<=0)throw Ce(new Error("invalid FirstMessageDeliveriesCap; must be positive"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight>0)throw Ce(new Error("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&(t.meshMessageDeliveriesDecay<=0||t.meshMessageDeliveriesDecay>=1))throw Ce(new Error("invalid MeshMessageDeliveriesDecay; must be between 0 and 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesCap<=0)throw Ce(new Error("invalid MeshMessageDeliveriesCap; must be positive"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesThreshold<=0)throw Ce(new Error("invalid MeshMessageDeliveriesThreshold; must be positive"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWindow<0)throw Ce(new Error("invalid MeshMessageDeliveriesWindow; must be non-negative"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesActivation<1e3)throw Ce(new Error("invalid MeshMessageDeliveriesActivation; must be at least 1s"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshFailurePenaltyWeight>0)throw Ce(new Error("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshFailurePenaltyWeight!==0&&(t.meshFailurePenaltyDecay<=0||t.meshFailurePenaltyDecay>=1))throw Ce(new Error("invalid MeshFailurePenaltyDecay; must be between 0 and 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.invalidMessageDeliveriesWeight>0)throw Ce(new Error("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)"),Ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.invalidMessageDeliveriesDecay<=0||t.invalidMessageDeliveriesDecay>=1)throw Ce(new Error("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1"),Ae.ERR_INVALID_PEER_SCORE_PARAMS)}mt.validateTopicScoreParams=b2});var m2=E(ii=>{"use strict";Object.defineProperty(ii,"__esModule",{value:!0});ii.validatePeerScoreThresholds=ii.createPeerScoreThresholds=ii.defaultPeerScoreThresholds=void 0;var ha=Vc(),la=Oe();ii.defaultPeerScoreThresholds={gossipThreshold:-10,publishThreshold:-50,graylistThreshold:-80,acceptPXThreshold:10,opportunisticGraftThreshold:20};function iB(t={}){return Object.assign(Object.assign({},ii.defaultPeerScoreThresholds),t)}ii.createPeerScoreThresholds=iB;function nB(t){if(t.gossipThreshold>0)throw la(new Error("invalid gossip threshold; it must be <= 0"),ha.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.publishThreshold>0||t.publishThreshold>t.gossipThreshold)throw la(new Error("invalid publish threshold; it must be <= 0 and <= gossip threshold"),ha.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.graylistThreshold>0||t.graylistThreshold>t.publishThreshold)throw la(new Error("invalid graylist threshold; it must be <= 0 and <= publish threshold"),ha.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.acceptPXThreshold<0)throw la(new Error("invalid accept PX threshold; it must be >= 0"),ha.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.opportunisticGraftThreshold<0)throw la(new Error("invalid opportunistic grafting threshold; it must be >= 0"),ha.ERR_INVALID_PEER_SCORE_THRESHOLDS)}ii.validatePeerScoreThresholds=nB});var E2=E(Oi=>{"use strict";Object.defineProperty(Oi,"__esModule",{value:!0});Oi.ensureTopicStats=Oi.createTopicStats=Oi.createPeerStats=void 0;function sB(t={}){return Object.assign(Object.assign({connected:!1,expire:0,ips:[],behaviourPenalty:0},t),{topics:t.topics?Object.entries(t.topics).reduce((e,[r,i])=>(e[r]=Hc(i),e),{}):{}})}Oi.createPeerStats=sB;function Hc(t={}){return Object.assign({inMesh:!1,graftTime:0,meshTime:0,firstMessageDeliveries:0,meshMessageDeliveries:0,meshMessageDeliveriesActive:!1,meshFailurePenalty:0,invalidMessageDeliveries:0},t)}Oi.createTopicStats=Hc;function aB(t,e,r){let i=e.topics[t];if(i)return i;if(!!r.topics[t])return e.topics[t]=i=Hc(),i}Oi.ensureTopicStats=aB});var w2=E(jo=>{"use strict";Object.defineProperty(jo,"__esModule",{value:!0});jo.computeScore=void 0;function oB(t,e,r,i){let n=0;return Object.entries(e.topics).forEach(([o,f])=>{let u=r.topics[o];if(!u)return;let c=0;if(f.inMesh){let p=f.meshTime/u.timeInMeshQuantum;p>u.timeInMeshCap&&(p=u.timeInMeshCap),c+=p*u.timeInMeshWeight}if(c+=f.firstMessageDeliveries*u.firstMessageDeliveriesWeight,f.meshMessageDeliveriesActive&&f.meshMessageDeliveries<u.meshMessageDeliveriesThreshold){let p=u.meshMessageDeliveriesThreshold-f.meshMessageDeliveries;c+=p*p*u.meshMessageDeliveriesWeight}c+=f.meshFailurePenalty*u.meshFailurePenaltyWeight,c+=f.invalidMessageDeliveries*f.invalidMessageDeliveries*u.invalidMessageDeliveriesWeight,n+=c*u.topicWeight}),r.topicScoreCap>0&&n>r.topicScoreCap&&(n=r.topicScoreCap),n+=r.appSpecificScore(t)*r.appSpecificWeight,e.ips.forEach(o=>{if(r.IPColocationFactorWhitelist.has(o))return;let f=i.get(o),u=f?f.size:0;if(u>r.IPColocationFactorThreshold){let c=u-r.IPColocationFactorThreshold;n+=c*c*r.IPColocationFactorWeight}}),n+=e.behaviourPenalty*e.behaviourPenalty*r.behaviourPenaltyWeight,n}jo.computeScore=oB});var _2=E((C5,S2)=>{"use strict";function ze(t,e){var e=e||{};this._head=0,this._tail=0,this._capacity=e.capacity,this._capacityMask=3,this._list=new Array(4),Array.isArray(t)&&this._fromArray(t)}ze.prototype.peekAt=function(e){var r=e;if(r===(r|0)){var i=this.size();if(!(r>=i||r<-i))return r<0&&(r+=i),r=this._head+r&this._capacityMask,this._list[r]}};ze.prototype.get=function(e){return this.peekAt(e)};ze.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]};ze.prototype.peekFront=function(){return this.peek()};ze.prototype.peekBack=function(){return this.peekAt(-1)};Object.defineProperty(ze.prototype,"length",{get:function(){return this.size()}});ze.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};ze.prototype.unshift=function(e){if(e===void 0)return this.size();var r=this._list.length;return this._head=this._head-1+r&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};ze.prototype.shift=function(){var e=this._head;if(e!==this._tail){var r=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),r}};ze.prototype.push=function(e){if(e===void 0)return this.size();var r=this._tail;return this._list[r]=e,this._tail=r+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};ze.prototype.pop=function(){var e=this._tail;if(e!==this._head){var r=this._list.length;this._tail=e-1+r&this._capacityMask;var i=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=r>>>2&&this._shrinkArray(),i}};ze.prototype.removeOne=function(e){var r=e;if(r===(r|0)&&this._head!==this._tail){var i=this.size(),n=this._list.length;if(!(r>=i||r<-i)){r<0&&(r+=i),r=this._head+r&this._capacityMask;var s=this._list[r],a;if(e<i/2){for(a=e;a>0;a--)this._list[r]=this._list[r=r-1+n&this._capacityMask];this._list[r]=void 0,this._head=this._head+1+n&this._capacityMask}else{for(a=i-1-e;a>0;a--)this._list[r]=this._list[r=r+1+n&this._capacityMask];this._list[r]=void 0,this._tail=this._tail-1+n&this._capacityMask}return s}}};ze.prototype.remove=function(e,r){var i=e,n,s=r;if(i===(i|0)&&this._head!==this._tail){var a=this.size(),o=this._list.length;if(!(i>=a||i<-a||r<1)){if(i<0&&(i+=a),r===1||!r)return n=new Array(1),n[0]=this.removeOne(i),n;if(i===0&&i+r>=a)return n=this.toArray(),this.clear(),n;i+r>a&&(r=a-i);var f;for(n=new Array(r),f=0;f<r;f++)n[f]=this._list[this._head+i+f&this._capacityMask];if(i=this._head+i&this._capacityMask,e+r===a){for(this._tail=this._tail-r+o&this._capacityMask,f=r;f>0;f--)this._list[i=i+1+o&this._capacityMask]=void 0;return n}if(e===0){for(this._head=this._head+r+o&this._capacityMask,f=r-1;f>0;f--)this._list[i=i+1+o&this._capacityMask]=void 0;return n}if(i<a/2){for(this._head=this._head+e+r+o&this._capacityMask,f=e;f>0;f--)this.unshift(this._list[i=i-1+o&this._capacityMask]);for(i=this._head-1+o&this._capacityMask;s>0;)this._list[i=i-1+o&this._capacityMask]=void 0,s--;e<0&&(this._tail=i)}else{for(this._tail=i,i=i+r+o&this._capacityMask,f=a-(r+e);f>0;f--)this.push(this._list[i++]);for(i=this._tail;s>0;)this._list[i=i+1+o&this._capacityMask]=void 0,s--}return this._head<2&&this._tail>1e4&&this._tail<=o>>>2&&this._shrinkArray(),n}}};ze.prototype.splice=function(e,r){var i=e;if(i===(i|0)){var n=this.size();if(i<0&&(i+=n),!(i>n))if(arguments.length>2){var s,a,o,f=arguments.length,u=this._list.length,c=2;if(!n||i<n/2){for(a=new Array(i),s=0;s<i;s++)a[s]=this._list[this._head+s&this._capacityMask];for(r===0?(o=[],i>0&&(this._head=this._head+i+u&this._capacityMask)):(o=this.remove(i,r),this._head=this._head+i+u&this._capacityMask);f>c;)this.unshift(arguments[--f]);for(s=i;s>0;s--)this.unshift(a[s-1])}else{a=new Array(n-(i+r));var h=a.length;for(s=0;s<h;s++)a[s]=this._list[this._head+i+r+s&this._capacityMask];for(r===0?(o=[],i!=n&&(this._tail=this._head+i+u&this._capacityMask)):(o=this.remove(i,r),this._tail=this._tail-h+u&this._capacityMask);c<f;)this.push(arguments[c++]);for(s=0;s<h;s++)this.push(a[s])}return o}else return this.remove(i,r)}};ze.prototype.clear=function(){this._head=0,this._tail=0};ze.prototype.isEmpty=function(){return this._head===this._tail};ze.prototype.toArray=function(){return this._copyArray(!1)};ze.prototype._fromArray=function(e){for(var r=0;r<e.length;r++)this.push(e[r])};ze.prototype._copyArray=function(e){var r=[],i=this._list,n=i.length,s;if(e||this._head>this._tail){for(s=this._head;s<n;s++)r.push(i[s]);for(s=0;s<this._tail;s++)r.push(i[s])}else for(s=this._head;s<this._tail;s++)r.push(i[s]);return r};ze.prototype._growArray=function(){this._head&&(this._list=this._copyArray(!0),this._head=0),this._tail=this._list.length,this._list.length<<=1,this._capacityMask=this._capacityMask<<1|1};ze.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1};S2.exports=ze});var A2=E(ni=>{"use strict";var uB=ni&&ni.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(ni,"__esModule",{value:!0});ni.MessageDeliveries=ni.DeliveryRecordStatus=void 0;var cB=Ni(),fB=uB(_2()),I2;(function(t){t[t.unknown=0]="unknown",t[t.valid=1]="valid",t[t.invalid=2]="invalid",t[t.ignored=3]="ignored"})(I2=ni.DeliveryRecordStatus||(ni.DeliveryRecordStatus={}));var B2=class{constructor(){this.records=new Map,this.queue=new fB.default}ensureRecord(e){let r=this.records.get(e);if(r)return r;r={status:I2.unknown,firstSeen:Date.now(),validated:0,peers:new Set},this.records.set(e,r);let i={msgId:e,expire:Date.now()+cB.TimeCacheDuration};return this.queue.push(i),r}gc(){let e=Date.now(),r=this.queue.peekFront();for(;r&&r.expire<e;)this.records.delete(r.msgId),this.queue.shift(),r=this.queue.peekFront()}clear(){this.records.clear(),this.queue.clear()}};ni.MessageDeliveries=B2});var T2=E(Li=>{"use strict";var Wo=Li&&Li.__awaiter||function(t,e,r,i){function n(s){return s instanceof r?s:new r(function(a){a(s)})}return new(r||(r=Promise))(function(s,a){function o(c){try{u(i.next(c))}catch(h){a(h)}}function f(c){try{u(i.throw(c))}catch(h){a(h)}}function u(c){c.done?s(c.value):n(c.value).then(o,f)}u((i=i.apply(t,e||[])).next())})},hB=Li&&Li.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(Li,"__esModule",{value:!0});Li.PeerScore=void 0;var lB=Gc(),ps=E2(),pB=w2(),hr=A2(),dB=Ni(),yB=hB(us()),gB=Is(),vB=Ma(),{ERR_INVALID_SIGNATURE:xB,ERR_MISSING_SIGNATURE:bB}=vB.codes,ds=gB("libp2p:gossipsub:score"),C2=class{constructor(e,r){lB.validatePeerScoreParams(e),this.params=e,this._connectionManager=r,this.peerStats=new Map,this.peerIPs=new Map,this.scoreCache=new Map,this.deliveryRecords=new hr.MessageDeliveries}start(){if(this._backgroundInterval){ds("Peer score already running");return}this._backgroundInterval=setInterval(()=>this.background(),this.params.decayInterval),ds("started")}stop(){if(!this._backgroundInterval){ds("Peer score already stopped");return}clearInterval(this._backgroundInterval),delete this._backgroundInterval,this.peerIPs.clear(),this.peerStats.clear(),this.deliveryRecords.clear(),ds("stopped")}background(){this._refreshScores(),this._updateIPs(),this.deliveryRecords.gc()}_refreshScores(){let e=Date.now(),r=this.params.decayToZero;this.peerStats.forEach((i,n)=>{if(!i.connected){e>i.expire&&(this._removeIPs(n,i.ips),this.peerStats.delete(n));return}Object.entries(i.topics).forEach(([s,a])=>{let o=this.params.topics[s];!o||(a.firstMessageDeliveries*=o.firstMessageDeliveriesDecay,a.firstMessageDeliveries<r&&(a.firstMessageDeliveries=0),a.meshMessageDeliveries*=o.meshMessageDeliveriesDecay,a.meshMessageDeliveries<r&&(a.meshMessageDeliveries=0),a.meshFailurePenalty*=o.meshFailurePenaltyDecay,a.meshFailurePenalty<r&&(a.meshFailurePenalty=0),a.invalidMessageDeliveries*=o.invalidMessageDeliveriesDecay,a.invalidMessageDeliveries<r&&(a.invalidMessageDeliveries=0),a.inMesh&&(a.meshTime=e-a.graftTime,a.meshTime>o.meshMessageDeliveriesActivation&&(a.meshMessageDeliveriesActive=!0)))}),i.behaviourPenalty*=this.params.behaviourPenaltyDecay,i.behaviourPenalty<r&&(i.behaviourPenalty=0),this.scoreCache.set(n,{score:null,cacheUntil:0})})}score(e){let r=this.peerStats.get(e);if(!r)return 0;let i=Date.now(),n=this.scoreCache.get(e);n===void 0&&(n={score:null,cacheUntil:0},this.scoreCache.set(e,n));let{score:s,cacheUntil:a}=n;return a>i&&s!==null?s:(n.score=pB.computeScore(e,r,this.params,this.peerIPs),n.cacheUntil=i+this.params.decayInterval,n.score)}addPenalty(e,r){let i=this.peerStats.get(e);!i||(i.behaviourPenalty+=r,this.scoreCache.set(e,{score:null,cacheUntil:0}))}addPeer(e){let r=ps.createPeerStats({connected:!0});this.peerStats.set(e,r);let i=this._getIPs(e);this._setIPs(e,i,r.ips),r.ips=i}removePeer(e){let r=this.peerStats.get(e);if(!!r){if(this.score(e)>0){this._removeIPs(e,r.ips),this.peerStats.delete(e);return}this.scoreCache.delete(e),Object.entries(r.topics).forEach(([i,n])=>{n.firstMessageDeliveries=0;let s=this.params.topics[i].meshMessageDeliveriesThreshold;if(n.inMesh&&n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<s){let a=s-n.meshMessageDeliveries;n.meshFailurePenalty+=a*a}n.inMesh=!1}),r.connected=!1,r.expire=Date.now()+this.params.retainScore}}graft(e,r){let i=this.peerStats.get(e);if(!i)return;let n=ps.ensureTopicStats(r,i,this.params);!n||(n.inMesh=!0,n.graftTime=Date.now(),n.meshTime=0,n.meshMessageDeliveriesActive=!1,this.scoreCache.set(e,{score:null,cacheUntil:0}))}prune(e,r){let i=this.peerStats.get(e);if(!i)return;let n=ps.ensureTopicStats(r,i,this.params);if(!n)return;let s=this.params.topics[r].meshMessageDeliveriesThreshold;if(n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<s){let a=s-n.meshMessageDeliveries;n.meshFailurePenalty+=a*a}n.inMesh=!1,this.scoreCache.set(e,{score:null,cacheUntil:0})}validateMessage(e){return Wo(this,void 0,void 0,function*(){this.deliveryRecords.ensureRecord(e)})}deliverMessage(e,r){return Wo(this,void 0,void 0,function*(){let i=e.receivedFrom;this._markFirstMessageDelivery(i,e);let n=this.deliveryRecords.ensureRecord(r),s=Date.now();if(n.status!==hr.DeliveryRecordStatus.unknown){ds("unexpected delivery: message from %s was first seen %s ago and has delivery status %d",i,s-n.firstSeen,hr.DeliveryRecordStatus[n.status]);return}n.status=hr.DeliveryRecordStatus.valid,n.validated=s,n.peers.forEach(a=>{a!==i&&this._markDuplicateMessageDelivery(a,e)})})}rejectMessage(e,r,i){return Wo(this,void 0,void 0,function*(){let n=e.receivedFrom;switch(i){case bB:case xB:this._markInvalidMessageDelivery(n,e);return}let s=this.deliveryRecords.ensureRecord(r);if(s.status!==hr.DeliveryRecordStatus.unknown){ds("unexpected rejection: message from %s was first seen %s ago and has delivery status %d",n,Date.now()-s.firstSeen,hr.DeliveryRecordStatus[s.status]);return}switch(i){case dB.ERR_TOPIC_VALIDATOR_IGNORE:s.status=hr.DeliveryRecordStatus.ignored;return}s.status=hr.DeliveryRecordStatus.invalid,this._markInvalidMessageDelivery(n,e),s.peers.forEach(a=>{this._markInvalidMessageDelivery(a,e)})})}duplicateMessage(e,r){return Wo(this,void 0,void 0,function*(){let i=e.receivedFrom,n=this.deliveryRecords.ensureRecord(r);if(!n.peers.has(i))switch(n.status){case hr.DeliveryRecordStatus.unknown:n.peers.add(i);break;case hr.DeliveryRecordStatus.valid:n.peers.add(i),this._markDuplicateMessageDelivery(i,e,n.validated);break;case hr.DeliveryRecordStatus.invalid:this._markInvalidMessageDelivery(i,e);break}})}_markInvalidMessageDelivery(e,r){let i=this.peerStats.get(e);!i||(r.topicIDs.forEach(n=>{let s=ps.ensureTopicStats(n,i,this.params);!s||(s.invalidMessageDeliveries+=1)}),this.scoreCache.set(e,{score:null,cacheUntil:0}))}_markFirstMessageDelivery(e,r){let i=this.peerStats.get(e);!i||(r.topicIDs.forEach(n=>{let s=ps.ensureTopicStats(n,i,this.params);if(!s)return;let a=this.params.topics[n].firstMessageDeliveriesCap;s.firstMessageDeliveries+=1,s.firstMessageDeliveries>a&&(s.firstMessageDeliveries=a),!!s.inMesh&&(a=this.params.topics[n].meshMessageDeliveriesCap,s.meshMessageDeliveries+=1,s.meshMessageDeliveries>a&&(s.meshMessageDeliveries=a))}),this.scoreCache.set(e,{score:null,cacheUntil:0}))}_markDuplicateMessageDelivery(e,r,i=0){let n=this.peerStats.get(e);if(!n)return;let s=i?Date.now():0;r.topicIDs.forEach(a=>{let o=ps.ensureTopicStats(a,n,this.params);if(!o||!o.inMesh)return;let f=this.params.topics[a];if(i&&s>i+f.meshMessageDeliveriesWindow)return;let u=f.meshMessageDeliveriesCap;o.meshMessageDeliveries+=1,o.meshMessageDeliveries>u&&(o.meshMessageDeliveries=u)}),this.scoreCache.set(e,{score:null,cacheUntil:0})}_getIPs(e){return this._connectionManager.getAll(yB.default.createFromB58String(e)).map(r=>r.remoteAddr.toOptions().host)}_setIPs(e,r,i){e:for(let n of r){for(let a of i)if(n===a)continue e;let s=this.peerIPs.get(n);s||(s=new Set,this.peerIPs.set(n,s)),s.add(e)}e:for(let n of i){for(let a of r)if(n===a)continue e;let s=this.peerIPs.get(n);!s||(s.delete(e),s.size||this.peerIPs.delete(n))}this.scoreCache.set(e,{score:null,cacheUntil:0})}_removeIPs(e,r){r.forEach(i=>{let n=this.peerIPs.get(i);!n||(n.delete(e),n.size||this.peerIPs.delete(i))}),this.scoreCache.set(e,{score:null,cacheUntil:0})}_updateIPs(){this.peerStats.forEach((e,r)=>{let i=this._getIPs(r);this._setIPs(r,i,e.ips),e.ips=i,this.scoreCache.set(r,{score:null,cacheUntil:0})})}};Li.PeerScore=C2});var R2=E(si=>{"use strict";var mB=si&&si.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),zc=si&&si.__exportStar||function(t,e){for(var r in t)r!=="default"&&!Object.prototype.hasOwnProperty.call(e,r)&&mB(e,t,r)};Object.defineProperty(si,"__esModule",{value:!0});zc(Gc(),si);zc(m2(),si);zc(T2(),si)});var k2=E(ys=>{"use strict";var D2=ys&&ys.__awaiter||function(t,e,r,i){function n(s){return s instanceof r?s:new r(function(a){a(s)})}return new(r||(r=Promise))(function(s,a){function o(c){try{u(i.next(c))}catch(h){a(h)}}function f(c){try{u(i.throw(c))}catch(h){a(h)}}function u(c){c.done?s(c.value):n(c.value).then(o,f)}u((i=i.apply(t,e||[])).next())})};Object.defineProperty(ys,"__esModule",{value:!0});ys.IWantTracer=void 0;var EB=Ni(),wB=fs(),SB=Ma(),{ERR_INVALID_SIGNATURE:_B,ERR_MISSING_SIGNATURE:IB}=SB.codes,P2=class{constructor(){this.promises=new Map}addPromise(e,r){let i=Math.floor(Math.random()*r.length),n=r[i],s=wB.messageIdToString(n),a=this.promises.get(s);a||(a=new Map,this.promises.set(s,a)),a.has(e)||a.set(e,Date.now()+EB.GossipsubIWantFollowupTime)}getBrokenPromises(){let e=Date.now(),r=new Map;return this.promises.forEach((i,n)=>{i.forEach((s,a)=>{s<e&&(r.set(a,(r.get(a)||0)+1),i.delete(a))}),i.size||this.promises.delete(n)}),r}deliverMessage(e){return D2(this,void 0,void 0,function*(){this.promises.delete(e)})}rejectMessage(e,r){return D2(this,void 0,void 0,function*(){switch(r){case _B:case IB:return}this.promises.delete(e)})}clear(){this.promises.clear()}};ys.IWantTracer=P2});var O2=E(Yo=>{"use strict";Object.defineProperty(Yo,"__esModule",{value:!0});Yo.SimpleTimeCache=void 0;var N2=class{constructor(e){this.lastPruneTime=0,this.entries=new Map,this.validityMs=e.validityMs}put(e,r){this.entries.set(e,{value:r,validUntilMs:Date.now()+this.validityMs}),this.prune()}prune(){let e=Date.now();if(!(e-this.lastPruneTime<200)){this.lastPruneTime=e;for(let[r,i]of this.entries.entries())if(i.validUntilMs<e)this.entries.delete(r);else break}}has(e){return this.entries.has(e)}get(e){let r=this.entries.get(e);return r&&r.validUntilMs>=Date.now()?r.value:void 0}clear(){this.entries=new Map,this.lastPruneTime=0}};Yo.SimpleTimeCache=N2});var Qo=E((N5,M2)=>{"use strict";var wn=Xi(),$o=wn.Reader,L2=wn.Writer,Et=wn.util,Yt=wn.roots["libp2p-crypto-keys"]||(wn.roots["libp2p-crypto-keys"]={});Yt.KeyType=function(){var t={},e=Object.create(t);return e[t[0]="RSA"]=0,e[t[1]="Ed25519"]=1,e[t[2]="Secp256k1"]=2,e}();Yt.PublicKey=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.Type=0,t.prototype.Data=Et.newBuffer([]),t.encode=function(r,i){return i||(i=L2.create()),i.uint32(8).int32(r.Type),i.uint32(18).bytes(r.Data),i},t.decode=function(r,i){r instanceof $o||(r=$o.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Yt.PublicKey;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.Type=r.int32();break;case 2:s.Data=r.bytes();break;default:r.skipType(a&7);break}}if(!s.hasOwnProperty("Type"))throw Et.ProtocolError("missing required 'Type'",{instance:s});if(!s.hasOwnProperty("Data"))throw Et.ProtocolError("missing required 'Data'",{instance:s});return s},t.fromObject=function(r){if(r instanceof Yt.PublicKey)return r;var i=new Yt.PublicKey;switch(r.Type){case"RSA":case 0:i.Type=0;break;case"Ed25519":case 1:i.Type=1;break;case"Secp256k1":case 2:i.Type=2;break}return r.Data!=null&&(typeof r.Data=="string"?Et.base64.decode(r.Data,i.Data=Et.newBuffer(Et.base64.length(r.Data)),0):r.Data.length&&(i.Data=r.Data)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(n.Type=i.enums===String?"RSA":0,i.bytes===String?n.Data="":(n.Data=[],i.bytes!==Array&&(n.Data=Et.newBuffer(n.Data)))),r.Type!=null&&r.hasOwnProperty("Type")&&(n.Type=i.enums===String?Yt.KeyType[r.Type]:r.Type),r.Data!=null&&r.hasOwnProperty("Data")&&(n.Data=i.bytes===String?Et.base64.encode(r.Data,0,r.Data.length):i.bytes===Array?Array.prototype.slice.call(r.Data):r.Data),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,wn.util.toJSONOptions)},t}();Yt.PrivateKey=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.Type=0,t.prototype.Data=Et.newBuffer([]),t.encode=function(r,i){return i||(i=L2.create()),i.uint32(8).int32(r.Type),i.uint32(18).bytes(r.Data),i},t.decode=function(r,i){r instanceof $o||(r=$o.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Yt.PrivateKey;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.Type=r.int32();break;case 2:s.Data=r.bytes();break;default:r.skipType(a&7);break}}if(!s.hasOwnProperty("Type"))throw Et.ProtocolError("missing required 'Type'",{instance:s});if(!s.hasOwnProperty("Data"))throw Et.ProtocolError("missing required 'Data'",{instance:s});return s},t.fromObject=function(r){if(r instanceof Yt.PrivateKey)return r;var i=new Yt.PrivateKey;switch(r.Type){case"RSA":case 0:i.Type=0;break;case"Ed25519":case 1:i.Type=1;break;case"Secp256k1":case 2:i.Type=2;break}return r.Data!=null&&(typeof r.Data=="string"?Et.base64.decode(r.Data,i.Data=Et.newBuffer(Et.base64.length(r.Data)),0):r.Data.length&&(i.Data=r.Data)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(n.Type=i.enums===String?"RSA":0,i.bytes===String?n.Data="":(n.Data=[],i.bytes!==Array&&(n.Data=Et.newBuffer(n.Data)))),r.Type!=null&&r.hasOwnProperty("Type")&&(n.Type=i.enums===String?Yt.KeyType[r.Type]:r.Type),r.Data!=null&&r.hasOwnProperty("Data")&&(n.Data=i.bytes===String?Et.base64.encode(r.Data,0,r.Data.length):i.bytes===Array?Array.prototype.slice.call(r.Data):r.Data),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,wn.util.toJSONOptions)},t}();M2.exports=Yt});var _e=E((O5,K2)=>{K2.exports={options:{usePureJavaScript:!1}}});var q2=E((L5,U2)=>{var jc={};U2.exports=jc;var F2={};jc.encode=function(t,e,r){if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');if(r!==void 0&&typeof r!="number")throw new TypeError('"maxline" must be a number.');var i="";if(!(t instanceof Uint8Array))i=BB(t,e);else{var n=0,s=e.length,a=e.charAt(0),o=[0];for(n=0;n<t.length;++n){for(var f=0,u=t[n];f<o.length;++f)u+=o[f]<<8,o[f]=u%s,u=u/s|0;for(;u>0;)o.push(u%s),u=u/s|0}for(n=0;t[n]===0&&n<t.length-1;++n)i+=a;for(n=o.length-1;n>=0;--n)i+=e[o[n]]}if(r){var c=new RegExp(".{1,"+r+"}","g");i=i.match(c).join(`\r
-`)}return i};jc.decode=function(t,e){if(typeof t!="string")throw new TypeError('"input" must be a string.');if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');var r=F2[e];if(!r){r=F2[e]=[];for(var i=0;i<e.length;++i)r[e.charCodeAt(i)]=i}t=t.replace(/\s/g,"");for(var n=e.length,s=e.charAt(0),a=[0],i=0;i<t.length;i++){var o=r[t.charCodeAt(i)];if(o===void 0)return;for(var f=0,u=o;f<a.length;++f)u+=a[f]*n,a[f]=u&255,u>>=8;for(;u>0;)a.push(u&255),u>>=8}for(var c=0;t[c]===s&&c<t.length-1;++c)a.push(0);return typeof Buffer!="undefined"?Buffer.from(a.reverse()):new Uint8Array(a.reverse())};function BB(t,e){var r=0,i=e.length,n=e.charAt(0),s=[0];for(r=0;r<t.length();++r){for(var a=0,o=t.at(r);a<s.length;++a)o+=s[a]<<8,s[a]=o%i,o=o/i|0;for(;o>0;)s.push(o%i),o=o/i|0}var f="";for(r=0;t.at(r)===0&&r<t.length()-1;++r)f+=n;for(r=s.length-1;r>=0;--r)f+=e[s[r]];return f}});var Qe=E((M5,z2)=>{var V2=_e(),G2=q2(),m=z2.exports=V2.util=V2.util||{};(function(){if(typeof process!="undefined"&&process.nextTick&&!process.browser){m.nextTick=process.nextTick,typeof setImmediate=="function"?m.setImmediate=setImmediate:m.setImmediate=m.nextTick;return}if(typeof setImmediate=="function"){m.setImmediate=function(){return setImmediate.apply(void 0,arguments)},m.nextTick=function(o){return setImmediate(o)};return}if(m.setImmediate=function(o){setTimeout(o,0)},typeof window!="undefined"&&typeof window.postMessage=="function"){let o=function(f){if(f.source===window&&f.data===t){f.stopPropagation();var u=e.slice();e.length=0,u.forEach(function(c){c()})}};var a=o,t="forge.setImmediate",e=[];m.setImmediate=function(f){e.push(f),e.length===1&&window.postMessage(t,"*")},window.addEventListener("message",o,!0)}if(typeof MutationObserver!="undefined"){var r=Date.now(),i=!0,n=document.createElement("div"),e=[];new MutationObserver(function(){var f=e.slice();e.length=0,f.forEach(function(u){u()})}).observe(n,{attributes:!0});var s=m.setImmediate;m.setImmediate=function(f){Date.now()-r>15?(r=Date.now(),s(f)):(e.push(f),e.length===1&&n.setAttribute("a",i=!i))}}m.nextTick=m.setImmediate})();m.isNodejs=typeof process!="undefined"&&process.versions&&process.versions.node;m.globalScope=function(){return m.isNodejs?globalThis:typeof self=="undefined"?window:self}();m.isArray=Array.isArray||function(t){return Object.prototype.toString.call(t)==="[object Array]"};m.isArrayBuffer=function(t){return typeof ArrayBuffer!="undefined"&&t instanceof ArrayBuffer};m.isArrayBufferView=function(t){return t&&m.isArrayBuffer(t.buffer)&&t.byteLength!==void 0};function pa(t){if(!(t===8||t===16||t===24||t===32))throw new Error("Only 8, 16, 24, or 32 bits supported: "+t)}m.ByteBuffer=Wc;function Wc(t){if(this.data="",this.read=0,typeof t=="string")this.data=t;else if(m.isArrayBuffer(t)||m.isArrayBufferView(t))if(typeof Buffer!="undefined"&&t instanceof Buffer)this.data=t.toString("binary");else{var e=new Uint8Array(t);try{this.data=String.fromCharCode.apply(null,e)}catch(i){for(var r=0;r<e.length;++r)this.putByte(e[r])}}else(t instanceof Wc||typeof t=="object"&&typeof t.data=="string"&&typeof t.read=="number")&&(this.data=t.data,this.read=t.read);this._constructedStringLength=0}m.ByteStringBuffer=Wc;var AB=4096;m.ByteStringBuffer.prototype._optimizeConstructedString=function(t){this._constructedStringLength+=t,this._constructedStringLength>AB&&(this.data.substr(0,1),this._constructedStringLength=0)};m.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read};m.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0};m.ByteStringBuffer.prototype.putByte=function(t){return this.putBytes(String.fromCharCode(t))};m.ByteStringBuffer.prototype.fillWithByte=function(t,e){t=String.fromCharCode(t);for(var r=this.data;e>0;)e&1&&(r+=t),e>>>=1,e>0&&(t+=t);return this.data=r,this._optimizeConstructedString(e),this};m.ByteStringBuffer.prototype.putBytes=function(t){return this.data+=t,this._optimizeConstructedString(t.length),this};m.ByteStringBuffer.prototype.putString=function(t){return this.putBytes(m.encodeUtf8(t))};m.ByteStringBuffer.prototype.putInt16=function(t){return this.putBytes(String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};m.ByteStringBuffer.prototype.putInt24=function(t){return this.putBytes(String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};m.ByteStringBuffer.prototype.putInt32=function(t){return this.putBytes(String.fromCharCode(t>>24&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255))};m.ByteStringBuffer.prototype.putInt16Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255))};m.ByteStringBuffer.prototype.putInt24Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t>>16&255))};m.ByteStringBuffer.prototype.putInt32Le=function(t){return this.putBytes(String.fromCharCode(t&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>24&255))};m.ByteStringBuffer.prototype.putInt=function(t,e){pa(e);var r="";do e-=8,r+=String.fromCharCode(t>>e&255);while(e>0);return this.putBytes(r)};m.ByteStringBuffer.prototype.putSignedInt=function(t,e){return t<0&&(t+=2<<e-1),this.putInt(t,e)};m.ByteStringBuffer.prototype.putBuffer=function(t){return this.putBytes(t.getBytes())};m.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)};m.ByteStringBuffer.prototype.getInt16=function(){var t=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);return this.read+=2,t};m.ByteStringBuffer.prototype.getInt24=function(){var t=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);return this.read+=3,t};m.ByteStringBuffer.prototype.getInt32=function(){var t=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+2)<<8^this.data.charCodeAt(this.read+3);return this.read+=4,t};m.ByteStringBuffer.prototype.getInt16Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;return this.read+=2,t};m.ByteStringBuffer.prototype.getInt24Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;return this.read+=3,t};m.ByteStringBuffer.prototype.getInt32Le=function(){var t=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;return this.read+=4,t};m.ByteStringBuffer.prototype.getInt=function(t){pa(t);var e=0;do e=(e<<8)+this.data.charCodeAt(this.read++),t-=8;while(t>0);return e};m.ByteStringBuffer.prototype.getSignedInt=function(t){var e=this.getInt(t),r=2<<t-2;return e>=r&&(e-=r<<1),e};m.ByteStringBuffer.prototype.getBytes=function(t){var e;return t?(t=Math.min(this.length(),t),e=this.data.slice(this.read,this.read+t),this.read+=t):t===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};m.ByteStringBuffer.prototype.bytes=function(t){return typeof t=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+t)};m.ByteStringBuffer.prototype.at=function(t){return this.data.charCodeAt(this.read+t)};m.ByteStringBuffer.prototype.setAt=function(t,e){return this.data=this.data.substr(0,this.read+t)+String.fromCharCode(e)+this.data.substr(this.read+t+1),this};m.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)};m.ByteStringBuffer.prototype.copy=function(){var t=m.createBuffer(this.data);return t.read=this.read,t};m.ByteStringBuffer.prototype.compact=function(){return this.read>0&&(this.data=this.data.slice(this.read),this.read=0),this};m.ByteStringBuffer.prototype.clear=function(){return this.data="",this.read=0,this};m.ByteStringBuffer.prototype.truncate=function(t){var e=Math.max(0,this.length()-t);return this.data=this.data.substr(this.read,e),this.read=0,this};m.ByteStringBuffer.prototype.toHex=function(){for(var t="",e=this.read;e<this.data.length;++e){var r=this.data.charCodeAt(e);r<16&&(t+="0"),t+=r.toString(16)}return t};m.ByteStringBuffer.prototype.toString=function(){return m.decodeUtf8(this.bytes())};function CB(t,e){e=e||{},this.read=e.readOffset||0,this.growSize=e.growSize||1024;var r=m.isArrayBuffer(t),i=m.isArrayBufferView(t);if(r||i){r?this.data=new DataView(t):this.data=new DataView(t.buffer,t.byteOffset,t.byteLength),this.write="writeOffset"in e?e.writeOffset:this.data.byteLength;return}this.data=new DataView(new ArrayBuffer(0)),this.write=0,t!=null&&this.putBytes(t),"writeOffset"in e&&(this.write=e.writeOffset)}m.DataBuffer=CB;m.DataBuffer.prototype.length=function(){return this.write-this.read};m.DataBuffer.prototype.isEmpty=function(){return this.length()<=0};m.DataBuffer.prototype.accommodate=function(t,e){if(this.length()>=t)return this;e=Math.max(e||this.growSize,t);var r=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength),i=new Uint8Array(this.length()+e);return i.set(r),this.data=new DataView(i.buffer),this};m.DataBuffer.prototype.putByte=function(t){return this.accommodate(1),this.data.setUint8(this.write++,t),this};m.DataBuffer.prototype.fillWithByte=function(t,e){this.accommodate(e);for(var r=0;r<e;++r)this.data.setUint8(t);return this};m.DataBuffer.prototype.putBytes=function(t,e){if(m.isArrayBufferView(t)){var r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),i=r.byteLength-r.byteOffset;this.accommodate(i);var n=new Uint8Array(this.data.buffer,this.write);return n.set(r),this.write+=i,this}if(m.isArrayBuffer(t)){var r=new Uint8Array(t);this.accommodate(r.byteLength);var n=new Uint8Array(this.data.buffer);return n.set(r,this.write),this.write+=r.byteLength,this}if(t instanceof m.DataBuffer||typeof t=="object"&&typeof t.read=="number"&&typeof t.write=="number"&&m.isArrayBufferView(t.data)){var r=new Uint8Array(t.data.byteLength,t.read,t.length());this.accommodate(r.byteLength);var n=new Uint8Array(t.data.byteLength,this.write);return n.set(r),this.write+=r.byteLength,this}if(t instanceof m.ByteStringBuffer&&(t=t.data,e="binary"),e=e||"binary",typeof t=="string"){var s;if(e==="hex")return this.accommodate(Math.ceil(t.length/2)),s=new Uint8Array(this.data.buffer,this.write),this.write+=m.binary.hex.decode(t,s,this.write),this;if(e==="base64")return this.accommodate(Math.ceil(t.length/4)*3),s=new Uint8Array(this.data.buffer,this.write),this.write+=m.binary.base64.decode(t,s,this.write),this;if(e==="utf8"&&(t=m.encodeUtf8(t),e="binary"),e==="binary"||e==="raw")return this.accommodate(t.length),s=new Uint8Array(this.data.buffer,this.write),this.write+=m.binary.raw.decode(s),this;if(e==="utf16")return this.accommodate(t.length*2),s=new Uint16Array(this.data.buffer,this.write),this.write+=m.text.utf16.encode(s),this;throw new Error("Invalid encoding: "+e)}throw Error("Invalid parameter: "+t)};m.DataBuffer.prototype.putBuffer=function(t){return this.putBytes(t),t.clear(),this};m.DataBuffer.prototype.putString=function(t){return this.putBytes(t,"utf16")};m.DataBuffer.prototype.putInt16=function(t){return this.accommodate(2),this.data.setInt16(this.write,t),this.write+=2,this};m.DataBuffer.prototype.putInt24=function(t){return this.accommodate(3),this.data.setInt16(this.write,t>>8&65535),this.data.setInt8(this.write,t>>16&255),this.write+=3,this};m.DataBuffer.prototype.putInt32=function(t){return this.accommodate(4),this.data.setInt32(this.write,t),this.write+=4,this};m.DataBuffer.prototype.putInt16Le=function(t){return this.accommodate(2),this.data.setInt16(this.write,t,!0),this.write+=2,this};m.DataBuffer.prototype.putInt24Le=function(t){return this.accommodate(3),this.data.setInt8(this.write,t>>16&255),this.data.setInt16(this.write,t>>8&65535,!0),this.write+=3,this};m.DataBuffer.prototype.putInt32Le=function(t){return this.accommodate(4),this.data.setInt32(this.write,t,!0),this.write+=4,this};m.DataBuffer.prototype.putInt=function(t,e){pa(e),this.accommodate(e/8);do e-=8,this.data.setInt8(this.write++,t>>e&255);while(e>0);return this};m.DataBuffer.prototype.putSignedInt=function(t,e){return pa(e),this.accommodate(e/8),t<0&&(t+=2<<e-1),this.putInt(t,e)};m.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)};m.DataBuffer.prototype.getInt16=function(){var t=this.data.getInt16(this.read);return this.read+=2,t};m.DataBuffer.prototype.getInt24=function(){var t=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);return this.read+=3,t};m.DataBuffer.prototype.getInt32=function(){var t=this.data.getInt32(this.read);return this.read+=4,t};m.DataBuffer.prototype.getInt16Le=function(){var t=this.data.getInt16(this.read,!0);return this.read+=2,t};m.DataBuffer.prototype.getInt24Le=function(){var t=this.data.getInt8(this.read)^this.data.getInt16(this.read+1,!0)<<8;return this.read+=3,t};m.DataBuffer.prototype.getInt32Le=function(){var t=this.data.getInt32(this.read,!0);return this.read+=4,t};m.DataBuffer.prototype.getInt=function(t){pa(t);var e=0;do e=(e<<8)+this.data.getInt8(this.read++),t-=8;while(t>0);return e};m.DataBuffer.prototype.getSignedInt=function(t){var e=this.getInt(t),r=2<<t-2;return e>=r&&(e-=r<<1),e};m.DataBuffer.prototype.getBytes=function(t){var e;return t?(t=Math.min(this.length(),t),e=this.data.slice(this.read,this.read+t),this.read+=t):t===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};m.DataBuffer.prototype.bytes=function(t){return typeof t=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+t)};m.DataBuffer.prototype.at=function(t){return this.data.getUint8(this.read+t)};m.DataBuffer.prototype.setAt=function(t,e){return this.data.setUint8(t,e),this};m.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)};m.DataBuffer.prototype.copy=function(){return new m.DataBuffer(this)};m.DataBuffer.prototype.compact=function(){if(this.read>0){var t=new Uint8Array(this.data.buffer,this.read),e=new Uint8Array(t.byteLength);e.set(t),this.data=new DataView(e),this.write-=this.read,this.read=0}return this};m.DataBuffer.prototype.clear=function(){return this.data=new DataView(new ArrayBuffer(0)),this.read=this.write=0,this};m.DataBuffer.prototype.truncate=function(t){return this.write=Math.max(0,this.length()-t),this.read=Math.min(this.read,this.write),this};m.DataBuffer.prototype.toHex=function(){for(var t="",e=this.read;e<this.data.byteLength;++e){var r=this.data.getUint8(e);r<16&&(t+="0"),t+=r.toString(16)}return t};m.DataBuffer.prototype.toString=function(t){var e=new Uint8Array(this.data,this.read,this.length());if(t=t||"utf8",t==="binary"||t==="raw")return m.binary.raw.encode(e);if(t==="hex")return m.binary.hex.encode(e);if(t==="base64")return m.binary.base64.encode(e);if(t==="utf8")return m.text.utf8.decode(e);if(t==="utf16")return m.text.utf16.decode(e);throw new Error("Invalid encoding: "+t)};m.createBuffer=function(t,e){return e=e||"raw",t!==void 0&&e==="utf8"&&(t=m.encodeUtf8(t)),new m.ByteBuffer(t)};m.fillString=function(t,e){for(var r="";e>0;)e&1&&(r+=t),e>>>=1,e>0&&(t+=t);return r};m.xorBytes=function(t,e,r){for(var i="",n="",s="",a=0,o=0;r>0;--r,++a)n=t.charCodeAt(a)^e.charCodeAt(a),o>=10&&(i+=s,s="",o=0),s+=String.fromCharCode(n),++o;return i+=s,i};m.hexToBytes=function(t){var e="",r=0;for(t.length&!0&&(r=1,e+=String.fromCharCode(parseInt(t[0],16)));r<t.length;r+=2)e+=String.fromCharCode(parseInt(t.substr(r,2),16));return e};m.bytesToHex=function(t){return m.createBuffer(t).toHex()};m.int32ToBytes=function(t){return String.fromCharCode(t>>24&255)+String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(t&255)};var Mi="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",Ki=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],H2="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";m.encode64=function(t,e){for(var r="",i="",n,s,a,o=0;o<t.length;)n=t.charCodeAt(o++),s=t.charCodeAt(o++),a=t.charCodeAt(o++),r+=Mi.charAt(n>>2),r+=Mi.charAt((n&3)<<4|s>>4),isNaN(s)?r+="==":(r+=Mi.charAt((s&15)<<2|a>>6),r+=isNaN(a)?"=":Mi.charAt(a&63)),e&&r.length>e&&(i+=r.substr(0,e)+`\r
-`,r=r.substr(e));return i+=r,i};m.decode64=function(t){t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");for(var e="",r,i,n,s,a=0;a<t.length;)r=Ki[t.charCodeAt(a++)-43],i=Ki[t.charCodeAt(a++)-43],n=Ki[t.charCodeAt(a++)-43],s=Ki[t.charCodeAt(a++)-43],e+=String.fromCharCode(r<<2|i>>4),n!==64&&(e+=String.fromCharCode((i&15)<<4|n>>2),s!==64&&(e+=String.fromCharCode((n&3)<<6|s)));return e};m.encodeUtf8=function(t){return unescape(encodeURIComponent(t))};m.decodeUtf8=function(t){return decodeURIComponent(escape(t))};m.binary={raw:{},hex:{},base64:{},base58:{},baseN:{encode:G2.encode,decode:G2.decode}};m.binary.raw.encode=function(t){return String.fromCharCode.apply(null,t)};m.binary.raw.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(t.length)),r=r||0;for(var n=r,s=0;s<t.length;++s)i[n++]=t.charCodeAt(s);return e?n-r:i};m.binary.hex.encode=m.bytesToHex;m.binary.hex.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(Math.ceil(t.length/2))),r=r||0;var n=0,s=r;for(t.length&1&&(n=1,i[s++]=parseInt(t[0],16));n<t.length;n+=2)i[s++]=parseInt(t.substr(n,2),16);return e?s-r:i};m.binary.base64.encode=function(t,e){for(var r="",i="",n,s,a,o=0;o<t.byteLength;)n=t[o++],s=t[o++],a=t[o++],r+=Mi.charAt(n>>2),r+=Mi.charAt((n&3)<<4|s>>4),isNaN(s)?r+="==":(r+=Mi.charAt((s&15)<<2|a>>6),r+=isNaN(a)?"=":Mi.charAt(a&63)),e&&r.length>e&&(i+=r.substr(0,e)+`\r
-`,r=r.substr(e));return i+=r,i};m.binary.base64.decode=function(t,e,r){var i=e;i||(i=new Uint8Array(Math.ceil(t.length/4)*3)),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,""),r=r||0;for(var n,s,a,o,f=0,u=r;f<t.length;)n=Ki[t.charCodeAt(f++)-43],s=Ki[t.charCodeAt(f++)-43],a=Ki[t.charCodeAt(f++)-43],o=Ki[t.charCodeAt(f++)-43],i[u++]=n<<2|s>>4,a!==64&&(i[u++]=(s&15)<<4|a>>2,o!==64&&(i[u++]=(a&3)<<6|o));return e?u-r:i.subarray(0,u)};m.binary.base58.encode=function(t,e){return m.binary.baseN.encode(t,H2,e)};m.binary.base58.decode=function(t,e){return m.binary.baseN.decode(t,H2,e)};m.text={utf8:{},utf16:{}};m.text.utf8.encode=function(t,e,r){t=m.encodeUtf8(t);var i=e;i||(i=new Uint8Array(t.length)),r=r||0;for(var n=r,s=0;s<t.length;++s)i[n++]=t.charCodeAt(s);return e?n-r:i};m.text.utf8.decode=function(t){return m.decodeUtf8(String.fromCharCode.apply(null,t))};m.text.utf16.encode=function(t,e,r){var i=e;i||(i=new Uint8Array(t.length*2));var n=new Uint16Array(i.buffer);r=r||0;for(var s=r,a=r,o=0;o<t.length;++o)n[a++]=t.charCodeAt(o),s+=2;return e?s-r:i};m.text.utf16.decode=function(t){return String.fromCharCode.apply(null,new Uint16Array(t.buffer))};m.deflate=function(t,e,r){if(e=m.decode64(t.deflate(m.encode64(e)).rval),r){var i=2,n=e.charCodeAt(1);n&32&&(i=6),e=e.substring(i,e.length-4)}return e};m.inflate=function(t,e,r){var i=t.inflate(m.encode64(e)).rval;return i===null?null:m.decode64(i)};var Yc=function(t,e,r){if(!t)throw new Error("WebStorage not available.");var i;if(r===null?i=t.removeItem(e):(r=m.encode64(JSON.stringify(r)),i=t.setItem(e,r)),typeof i!="undefined"&&i.rval!==!0){var n=new Error(i.error.message);throw n.id=i.error.id,n.name=i.error.name,n}},$c=function(t,e){if(!t)throw new Error("WebStorage not available.");var r=t.getItem(e);if(t.init)if(r.rval===null){if(r.error){var i=new Error(r.error.message);throw i.id=r.error.id,i.name=r.error.name,i}r=null}else r=r.rval;return r!==null&&(r=JSON.parse(m.decode64(r))),r},TB=function(t,e,r,i){var n=$c(t,e);n===null&&(n={}),n[r]=i,Yc(t,e,n)},RB=function(t,e,r){var i=$c(t,e);return i!==null&&(i=r in i?i[r]:null),i},DB=function(t,e,r){var i=$c(t,e);if(i!==null&&r in i){delete i[r];var n=!0;for(var s in i){n=!1;break}n&&(i=null),Yc(t,e,i)}},PB=function(t,e){Yc(t,e,null)},Zo=function(t,e,r){var i=null;typeof r=="undefined"&&(r=["web","flash"]);var n,s=!1,a=null;for(var o in r){n=r[o];try{if(n==="flash"||n==="both"){if(e[0]===null)throw new Error("Flash local storage not available.");i=t.apply(this,e),s=n==="flash"}(n==="web"||n==="both")&&(e[0]=localStorage,i=t.apply(this,e),s=!0)}catch(f){a=f}if(s)break}if(!s)throw a;return i};m.setItem=function(t,e,r,i,n){Zo(TB,arguments,n)};m.getItem=function(t,e,r,i){return Zo(RB,arguments,i)};m.removeItem=function(t,e,r,i){Zo(DB,arguments,i)};m.clearItems=function(t,e,r){Zo(PB,arguments,r)};m.isEmpty=function(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0};m.format=function(t){for(var e=/%./g,r,i,n=0,s=[],a=0;r=e.exec(t);){i=t.substring(a,e.lastIndex-2),i.length>0&&s.push(i),a=e.lastIndex;var o=r[0][1];switch(o){case"s":case"o":n<arguments.length?s.push(arguments[n+++1]):s.push("<?>");break;case"%":s.push("%");break;default:s.push("<%"+o+"?>")}}return s.push(t.substring(a)),s.join("")};m.formatNumber=function(t,e,r,i){var n=t,s=isNaN(e=Math.abs(e))?2:e,a=r===void 0?",":r,o=i===void 0?".":i,f=n<0?"-":"",u=parseInt(n=Math.abs(+n||0).toFixed(s),10)+"",c=u.length>3?u.length%3:0;return f+(c?u.substr(0,c)+o:"")+u.substr(c).replace(/(\d{3})(?=\d)/g,"$1"+o)+(s?a+Math.abs(n-u).toFixed(s).slice(2):"")};m.formatSize=function(t){return t>=1073741824?t=m.formatNumber(t/1073741824,2,".","")+" GiB":t>=1048576?t=m.formatNumber(t/1048576,2,".","")+" MiB":t>=1024?t=m.formatNumber(t/1024,0)+" KiB":t=m.formatNumber(t,0)+" bytes",t};m.bytesFromIP=function(t){return t.indexOf(".")!==-1?m.bytesFromIPv4(t):t.indexOf(":")!==-1?m.bytesFromIPv6(t):null};m.bytesFromIPv4=function(t){if(t=t.split("."),t.length!==4)return null;for(var e=m.createBuffer(),r=0;r<t.length;++r){var i=parseInt(t[r],10);if(isNaN(i))return null;e.putByte(i)}return e.getBytes()};m.bytesFromIPv6=function(t){var e=0;t=t.split(":").filter(function(a){return a.length===0&&++e,!0});for(var r=(8-t.length+e)*2,i=m.createBuffer(),n=0;n<8;++n){if(!t[n]||t[n].length===0){i.fillWithByte(0,r),r=0;continue}var s=m.hexToBytes(t[n]);s.length<2&&i.putByte(0),i.putBytes(s)}return i.getBytes()};m.bytesToIP=function(t){return t.length===4?m.bytesToIPv4(t):t.length===16?m.bytesToIPv6(t):null};m.bytesToIPv4=function(t){if(t.length!==4)return null;for(var e=[],r=0;r<t.length;++r)e.push(t.charCodeAt(r));return e.join(".")};m.bytesToIPv6=function(t){if(t.length!==16)return null;for(var e=[],r=[],i=0,n=0;n<t.length;n+=2){for(var s=m.bytesToHex(t[n]+t[n+1]);s[0]==="0"&&s!=="0";)s=s.substr(1);if(s==="0"){var a=r[r.length-1],o=e.length;!a||o!==a.end+1?r.push({start:o,end:o}):(a.end=o,a.end-a.start>r[i].end-r[i].start&&(i=r.length-1))}e.push(s)}if(r.length>0){var f=r[i];f.end-f.start>0&&(e.splice(f.start,f.end-f.start+1,""),f.start===0&&e.unshift(""),f.end===7&&e.push(""))}return e.join(":")};m.estimateCores=function(t,e){if(typeof t=="function"&&(e=t,t={}),t=t||{},"cores"in m&&!t.update)return e(null,m.cores);if(typeof navigator!="undefined"&&"hardwareConcurrency"in navigator&&navigator.hardwareConcurrency>0)return m.cores=navigator.hardwareConcurrency,e(null,m.cores);if(typeof Worker=="undefined")return m.cores=1,e(null,m.cores);if(typeof Blob=="undefined")return m.cores=2,e(null,m.cores);var r=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(a){for(var o=Date.now(),f=o+4;Date.now()<f;);self.postMessage({st:o,et:f})})}.toString(),")()"],{type:"application/javascript"}));i([],5,16);function i(a,o,f){if(o===0){var u=Math.floor(a.reduce(function(c,h){return c+h},0)/a.length);return m.cores=Math.max(1,u),URL.revokeObjectURL(r),e(null,m.cores)}n(f,function(c,h){a.push(s(f,h)),i(a,o-1,f)})}function n(a,o){for(var f=[],u=[],c=0;c<a;++c){var h=new Worker(r);h.addEventListener("message",function(l){if(u.push(l.data),u.length===a){for(var d=0;d<a;++d)f[d].terminate();o(null,u)}}),f.push(h)}for(var c=0;c<a;++c)f[c].postMessage(c)}function s(a,o){for(var f=[],u=0;u<a;++u)for(var c=o[u],h=f[u]=[],l=0;l<a;++l)if(u!==l){var d=o[l];(c.st>d.st&&c.st<d.et||d.st>c.st&&d.st<c.et)&&h.push(l)}return f.reduce(function(p,y){return Math.max(p,y.length)},0)}}});var Xo=E((K5,j2)=>{var da=_e();da.pki=da.pki||{};var Qc=j2.exports=da.pki.oids=da.oids=da.oids||{};function M(t,e){Qc[t]=e,Qc[e]=t}function xe(t,e){Qc[t]=e}M("1.2.840.113549.1.1.1","rsaEncryption");M("1.2.840.113549.1.1.4","md5WithRSAEncryption");M("1.2.840.113549.1.1.5","sha1WithRSAEncryption");M("1.2.840.113549.1.1.7","RSAES-OAEP");M("1.2.840.113549.1.1.8","mgf1");M("1.2.840.113549.1.1.9","pSpecified");M("1.2.840.113549.1.1.10","RSASSA-PSS");M("1.2.840.113549.1.1.11","sha256WithRSAEncryption");M("1.2.840.113549.1.1.12","sha384WithRSAEncryption");M("1.2.840.113549.1.1.13","sha512WithRSAEncryption");M("1.3.101.112","EdDSA25519");M("1.2.840.10040.4.3","dsa-with-sha1");M("1.3.14.3.2.7","desCBC");M("1.3.14.3.2.26","sha1");M("1.3.14.3.2.29","sha1WithRSASignature");M("2.16.840.1.101.3.4.2.1","sha256");M("2.16.840.1.101.3.4.2.2","sha384");M("2.16.840.1.101.3.4.2.3","sha512");M("1.2.840.113549.2.5","md5");M("1.2.840.113549.1.7.1","data");M("1.2.840.113549.1.7.2","signedData");M("1.2.840.113549.1.7.3","envelopedData");M("1.2.840.113549.1.7.4","signedAndEnvelopedData");M("1.2.840.113549.1.7.5","digestedData");M("1.2.840.113549.1.7.6","encryptedData");M("1.2.840.113549.1.9.1","emailAddress");M("1.2.840.113549.1.9.2","unstructuredName");M("1.2.840.113549.1.9.3","contentType");M("1.2.840.113549.1.9.4","messageDigest");M("1.2.840.113549.1.9.5","signingTime");M("1.2.840.113549.1.9.6","counterSignature");M("1.2.840.113549.1.9.7","challengePassword");M("1.2.840.113549.1.9.8","unstructuredAddress");M("1.2.840.113549.1.9.14","extensionRequest");M("1.2.840.113549.1.9.20","friendlyName");M("1.2.840.113549.1.9.21","localKeyId");M("1.2.840.113549.1.9.22.1","x509Certificate");M("1.2.840.113549.1.12.10.1.1","keyBag");M("1.2.840.113549.1.12.10.1.2","pkcs8ShroudedKeyBag");M("1.2.840.113549.1.12.10.1.3","certBag");M("1.2.840.113549.1.12.10.1.4","crlBag");M("1.2.840.113549.1.12.10.1.5","secretBag");M("1.2.840.113549.1.12.10.1.6","safeContentsBag");M("1.2.840.113549.1.5.13","pkcs5PBES2");M("1.2.840.113549.1.5.12","pkcs5PBKDF2");M("1.2.840.113549.1.12.1.1","pbeWithSHAAnd128BitRC4");M("1.2.840.113549.1.12.1.2","pbeWithSHAAnd40BitRC4");M("1.2.840.113549.1.12.1.3","pbeWithSHAAnd3-KeyTripleDES-CBC");M("1.2.840.113549.1.12.1.4","pbeWithSHAAnd2-KeyTripleDES-CBC");M("1.2.840.113549.1.12.1.5","pbeWithSHAAnd128BitRC2-CBC");M("1.2.840.113549.1.12.1.6","pbewithSHAAnd40BitRC2-CBC");M("1.2.840.113549.2.7","hmacWithSHA1");M("1.2.840.113549.2.8","hmacWithSHA224");M("1.2.840.113549.2.9","hmacWithSHA256");M("1.2.840.113549.2.10","hmacWithSHA384");M("1.2.840.113549.2.11","hmacWithSHA512");M("1.2.840.113549.3.7","des-EDE3-CBC");M("2.16.840.1.101.3.4.1.2","aes128-CBC");M("2.16.840.1.101.3.4.1.22","aes192-CBC");M("2.16.840.1.101.3.4.1.42","aes256-CBC");M("2.5.4.3","commonName");M("2.5.4.4","surname");M("2.5.4.5","serialNumber");M("2.5.4.6","countryName");M("2.5.4.7","localityName");M("2.5.4.8","stateOrProvinceName");M("2.5.4.9","streetAddress");M("2.5.4.10","organizationName");M("2.5.4.11","organizationalUnitName");M("2.5.4.12","title");M("2.5.4.13","description");M("2.5.4.15","businessCategory");M("2.5.4.17","postalCode");M("2.5.4.42","givenName");M("1.3.6.1.4.1.311.60.2.1.2","jurisdictionOfIncorporationStateOrProvinceName");M("1.3.6.1.4.1.311.60.2.1.3","jurisdictionOfIncorporationCountryName");M("2.16.840.1.113730.1.1","nsCertType");M("2.16.840.1.113730.1.13","nsComment");xe("2.5.29.1","authorityKeyIdentifier");xe("2.5.29.2","keyAttributes");xe("2.5.29.3","certificatePolicies");xe("2.5.29.4","keyUsageRestriction");xe("2.5.29.5","policyMapping");xe("2.5.29.6","subtreesConstraint");xe("2.5.29.7","subjectAltName");xe("2.5.29.8","issuerAltName");xe("2.5.29.9","subjectDirectoryAttributes");xe("2.5.29.10","basicConstraints");xe("2.5.29.11","nameConstraints");xe("2.5.29.12","policyConstraints");xe("2.5.29.13","basicConstraints");M("2.5.29.14","subjectKeyIdentifier");M("2.5.29.15","keyUsage");xe("2.5.29.16","privateKeyUsagePeriod");M("2.5.29.17","subjectAltName");M("2.5.29.18","issuerAltName");M("2.5.29.19","basicConstraints");xe("2.5.29.20","cRLNumber");xe("2.5.29.21","cRLReason");xe("2.5.29.22","expirationDate");xe("2.5.29.23","instructionCode");xe("2.5.29.24","invalidityDate");xe("2.5.29.25","cRLDistributionPoints");xe("2.5.29.26","issuingDistributionPoint");xe("2.5.29.27","deltaCRLIndicator");xe("2.5.29.28","issuingDistributionPoint");xe("2.5.29.29","certificateIssuer");xe("2.5.29.30","nameConstraints");M("2.5.29.31","cRLDistributionPoints");M("2.5.29.32","certificatePolicies");xe("2.5.29.33","policyMappings");xe("2.5.29.34","policyConstraints");M("2.5.29.35","authorityKeyIdentifier");xe("2.5.29.36","policyConstraints");M("2.5.29.37","extKeyUsage");xe("2.5.29.46","freshestCRL");xe("2.5.29.54","inhibitAnyPolicy");M("1.3.6.1.4.1.11129.2.4.2","timestampList");M("1.3.6.1.5.5.7.1.1","authorityInfoAccess");M("1.3.6.1.5.5.7.3.1","serverAuth");M("1.3.6.1.5.5.7.3.2","clientAuth");M("1.3.6.1.5.5.7.3.3","codeSigning");M("1.3.6.1.5.5.7.3.4","emailProtection");M("1.3.6.1.5.5.7.3.8","timeStamping")});var ga=E((F5,Y2)=>{var Fe=_e();Qe();Xo();var U=Y2.exports=Fe.asn1=Fe.asn1||{};U.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192};U.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30};U.create=function(t,e,r,i,n){if(Fe.util.isArray(i)){for(var s=[],a=0;a<i.length;++a)i[a]!==void 0&&s.push(i[a]);i=s}var o={tagClass:t,type:e,constructed:r,composed:r||Fe.util.isArray(i),value:i};return n&&"bitStringContents"in n&&(o.bitStringContents=n.bitStringContents,o.original=U.copy(o)),o};U.copy=function(t,e){var r;if(Fe.util.isArray(t)){r=[];for(var i=0;i<t.length;++i)r.push(U.copy(t[i],e));return r}return typeof t=="string"?t:(r={tagClass:t.tagClass,type:t.type,constructed:t.constructed,composed:t.composed,value:U.copy(t.value,e)},e&&!e.excludeBitStringContents&&(r.bitStringContents=t.bitStringContents),r)};U.equals=function(t,e,r){if(Fe.util.isArray(t)){if(!Fe.util.isArray(e)||t.length!==e.length)return!1;for(var i=0;i<t.length;++i)if(!U.equals(t[i],e[i]))return!1;return!0}if(typeof t!=typeof e)return!1;if(typeof t=="string")return t===e;var n=t.tagClass===e.tagClass&&t.type===e.type&&t.constructed===e.constructed&&t.composed===e.composed&&U.equals(t.value,e.value);return r&&r.includeBitStringContents&&(n=n&&t.bitStringContents===e.bitStringContents),n};U.getBerValueLength=function(t){var e=t.getByte();if(e!==128){var r,i=e&128;return i?r=t.getInt((e&127)<<3):r=e,r}};function ya(t,e,r){if(r>e){var i=new Error("Too few bytes to parse DER.");throw i.available=t.length(),i.remaining=e,i.requested=r,i}}var kB=function(t,e){var r=t.getByte();if(e--,r!==128){var i,n=r&128;if(!n)i=r;else{var s=r&127;ya(t,e,s),i=t.getInt(s<<3)}if(i<0)throw new Error("Negative length: "+i);return i}};U.fromDer=function(t,e){return e===void 0&&(e={strict:!0,decodeBitStrings:!0}),typeof e=="boolean"&&(e={strict:e,decodeBitStrings:!0}),"strict"in e||(e.strict=!0),"decodeBitStrings"in e||(e.decodeBitStrings=!0),typeof t=="string"&&(t=Fe.util.createBuffer(t)),Jo(t,t.length(),0,e)};function Jo(t,e,r,i){var n;ya(t,e,2);var s=t.getByte();e--;var a=s&192,o=s&31;n=t.length();var f=kB(t,e);if(e-=n-t.length(),f!==void 0&&f>e){if(i.strict){var u=new Error("Too few bytes to read ASN.1 value.");throw u.available=t.length(),u.remaining=e,u.requested=f,u}f=e}var c,h,l=(s&32)==32;if(l)if(c=[],f===void 0)for(;;){if(ya(t,e,2),t.bytes(2)===String.fromCharCode(0,0)){t.getBytes(2),e-=2;break}n=t.length(),c.push(Jo(t,e,r+1,i)),e-=n-t.length()}else for(;f>0;)n=t.length(),c.push(Jo(t,f,r+1,i)),e-=n-t.length(),f-=n-t.length();if(c===void 0&&a===U.Class.UNIVERSAL&&o===U.Type.BITSTRING&&(h=t.bytes(f)),c===void 0&&i.decodeBitStrings&&a===U.Class.UNIVERSAL&&o===U.Type.BITSTRING&&f>1){var d=t.read,p=e,y=0;if(o===U.Type.BITSTRING&&(ya(t,e,1),y=t.getByte(),e--),y===0)try{n=t.length();var g={verbose:i.verbose,strict:!0,decodeBitStrings:!0},v=Jo(t,e,r+1,g),x=n-t.length();e-=x,o==U.Type.BITSTRING&&x++;var w=v.tagClass;x===f&&(w===U.Class.UNIVERSAL||w===U.Class.CONTEXT_SPECIFIC)&&(c=[v])}catch(B){}c===void 0&&(t.read=d,e=p)}if(c===void 0){if(f===void 0){if(i.strict)throw new Error("Non-constructed ASN.1 object of indefinite length.");f=e}if(o===U.Type.BMPSTRING)for(c="";f>0;f-=2)ya(t,e,2),c+=String.fromCharCode(t.getInt16()),e-=2;else c=t.getBytes(f)}var P=h===void 0?null:{bitStringContents:h};return U.create(a,o,l,c,P)}U.toDer=function(t){var e=Fe.util.createBuffer(),r=t.tagClass|t.type,i=Fe.util.createBuffer(),n=!1;if("bitStringContents"in t&&(n=!0,t.original&&(n=U.equals(t,t.original))),n)i.putBytes(t.bitStringContents);else if(t.composed){t.constructed?r|=32:i.putByte(0);for(var s=0;s<t.value.length;++s)t.value[s]!==void 0&&i.putBuffer(U.toDer(t.value[s]))}else if(t.type===U.Type.BMPSTRING)for(var s=0;s<t.value.length;++s)i.putInt16(t.value.charCodeAt(s));else t.type===U.Type.INTEGER&&t.value.length>1&&(t.value.charCodeAt(0)===0&&(t.value.charCodeAt(1)&128)==0||t.value.charCodeAt(0)===255&&(t.value.charCodeAt(1)&128)==128)?i.putBytes(t.value.substr(1)):i.putBytes(t.value);if(e.putByte(r),i.length()<=127)e.putByte(i.length()&127);else{var a=i.length(),o="";do o+=String.fromCharCode(a&255),a=a>>>8;while(a>0);e.putByte(o.length|128);for(var s=o.length-1;s>=0;--s)e.putByte(o.charCodeAt(s))}return e.putBuffer(i),e};U.oidToDer=function(t){var e=t.split("."),r=Fe.util.createBuffer();r.putByte(40*parseInt(e[0],10)+parseInt(e[1],10));for(var i,n,s,a,o=2;o<e.length;++o){i=!0,n=[],s=parseInt(e[o],10);do a=s&127,s=s>>>7,i||(a|=128),n.push(a),i=!1;while(s>0);for(var f=n.length-1;f>=0;--f)r.putByte(n[f])}return r};U.derToOid=function(t){var e;typeof t=="string"&&(t=Fe.util.createBuffer(t));var r=t.getByte();e=Math.floor(r/40)+"."+r%40;for(var i=0;t.length()>0;)r=t.getByte(),i=i<<7,r&128?i+=r&127:(e+="."+(i+r),i=0);return e};U.utcTimeToDate=function(t){var e=new Date,r=parseInt(t.substr(0,2),10);r=r>=50?1900+r:2e3+r;var i=parseInt(t.substr(2,2),10)-1,n=parseInt(t.substr(4,2),10),s=parseInt(t.substr(6,2),10),a=parseInt(t.substr(8,2),10),o=0;if(t.length>11){var f=t.charAt(10),u=10;f!=="+"&&f!=="-"&&(o=parseInt(t.substr(10,2),10),u+=2)}if(e.setUTCFullYear(r,i,n),e.setUTCHours(s,a,o,0),u&&(f=t.charAt(u),f==="+"||f==="-")){var c=parseInt(t.substr(u+1,2),10),h=parseInt(t.substr(u+4,2),10),l=c*60+h;l*=6e4,f==="+"?e.setTime(+e-l):e.setTime(+e+l)}return e};U.generalizedTimeToDate=function(t){var e=new Date,r=parseInt(t.substr(0,4),10),i=parseInt(t.substr(4,2),10)-1,n=parseInt(t.substr(6,2),10),s=parseInt(t.substr(8,2),10),a=parseInt(t.substr(10,2),10),o=parseInt(t.substr(12,2),10),f=0,u=0,c=!1;t.charAt(t.length-1)==="Z"&&(c=!0);var h=t.length-5,l=t.charAt(h);if(l==="+"||l==="-"){var d=parseInt(t.substr(h+1,2),10),p=parseInt(t.substr(h+4,2),10);u=d*60+p,u*=6e4,l==="+"&&(u*=-1),c=!0}return t.charAt(14)==="."&&(f=parseFloat(t.substr(14),10)*1e3),c?(e.setUTCFullYear(r,i,n),e.setUTCHours(s,a,o,f),e.setTime(+e+u)):(e.setFullYear(r,i,n),e.setHours(s,a,o,f)),e};U.dateToUtcTime=function(t){if(typeof t=="string")return t;var e="",r=[];r.push((""+t.getUTCFullYear()).substr(2)),r.push(""+(t.getUTCMonth()+1)),r.push(""+t.getUTCDate()),r.push(""+t.getUTCHours()),r.push(""+t.getUTCMinutes()),r.push(""+t.getUTCSeconds());for(var i=0;i<r.length;++i)r[i].length<2&&(e+="0"),e+=r[i];return e+="Z",e};U.dateToGeneralizedTime=function(t){if(typeof t=="string")return t;var e="",r=[];r.push(""+t.getUTCFullYear()),r.push(""+(t.getUTCMonth()+1)),r.push(""+t.getUTCDate()),r.push(""+t.getUTCHours()),r.push(""+t.getUTCMinutes()),r.push(""+t.getUTCSeconds());for(var i=0;i<r.length;++i)r[i].length<2&&(e+="0"),e+=r[i];return e+="Z",e};U.integerToDer=function(t){var e=Fe.util.createBuffer();if(t>=-128&&t<128)return e.putSignedInt(t,8);if(t>=-32768&&t<32768)return e.putSignedInt(t,16);if(t>=-8388608&&t<8388608)return e.putSignedInt(t,24);if(t>=-2147483648&&t<2147483648)return e.putSignedInt(t,32);var r=new Error("Integer too large; max is 32-bits.");throw r.integer=t,r};U.derToInteger=function(t){typeof t=="string"&&(t=Fe.util.createBuffer(t));var e=t.length()*8;if(e>32)throw new Error("Integer too large; max is 32-bits.");return t.getSignedInt(e)};U.validate=function(t,e,r,i){var n=!1;if((t.tagClass===e.tagClass||typeof e.tagClass=="undefined")&&(t.type===e.type||typeof e.type=="undefined"))if(t.constructed===e.constructed||typeof e.constructed=="undefined"){if(n=!0,e.value&&Fe.util.isArray(e.value))for(var s=0,a=0;n&&a<e.value.length;++a)n=e.value[a].optional||!1,t.value[s]&&(n=U.validate(t.value[s],e.value[a],r,i),n?++s:e.value[a].optional&&(n=!0)),!n&&i&&i.push("["+e.name+'] Tag class "'+e.tagClass+'", type "'+e.type+'" expected value length "'+e.value.length+'", got "'+t.value.length+'"');if(n&&r&&(e.capture&&(r[e.capture]=t.value),e.captureAsn1&&(r[e.captureAsn1]=t),e.captureBitStringContents&&"bitStringContents"in t&&(r[e.captureBitStringContents]=t.bitStringContents),e.captureBitStringValue&&"bitStringContents"in t)){var o;if(t.bitStringContents.length<2)r[e.captureBitStringValue]="";else{var f=t.bitStringContents.charCodeAt(0);if(f!==0)throw new Error("captureBitStringValue only supported for zero unused bits");r[e.captureBitStringValue]=t.bitStringContents.slice(1)}}}else i&&i.push("["+e.name+'] Expected constructed "'+e.constructed+'", got "'+t.constructed+'"');else i&&(t.tagClass!==e.tagClass&&i.push("["+e.name+'] Expected tag class "'+e.tagClass+'", got "'+t.tagClass+'"'),t.type!==e.type&&i.push("["+e.name+'] Expected type "'+e.type+'", got "'+t.type+'"'));return n};var W2=/[^\\u0000-\\u00ff]/;U.prettyPrint=function(t,e,r){var i="";e=e||0,r=r||2,e>0&&(i+=`
-`);for(var n="",s=0;s<e*r;++s)n+=" ";switch(i+=n+"Tag: ",t.tagClass){case U.Class.UNIVERSAL:i+="Universal:";break;case U.Class.APPLICATION:i+="Application:";break;case U.Class.CONTEXT_SPECIFIC:i+="Context-Specific:";break;case U.Class.PRIVATE:i+="Private:";break}if(t.tagClass===U.Class.UNIVERSAL)switch(i+=t.type,t.type){case U.Type.NONE:i+=" (None)";break;case U.Type.BOOLEAN:i+=" (Boolean)";break;case U.Type.INTEGER:i+=" (Integer)";break;case U.Type.BITSTRING:i+=" (Bit string)";break;case U.Type.OCTETSTRING:i+=" (Octet string)";break;case U.Type.NULL:i+=" (Null)";break;case U.Type.OID:i+=" (Object Identifier)";break;case U.Type.ODESC:i+=" (Object Descriptor)";break;case U.Type.EXTERNAL:i+=" (External or Instance of)";break;case U.Type.REAL:i+=" (Real)";break;case U.Type.ENUMERATED:i+=" (Enumerated)";break;case U.Type.EMBEDDED:i+=" (Embedded PDV)";break;case U.Type.UTF8:i+=" (UTF8)";break;case U.Type.ROID:i+=" (Relative Object Identifier)";break;case U.Type.SEQUENCE:i+=" (Sequence)";break;case U.Type.SET:i+=" (Set)";break;case U.Type.PRINTABLESTRING:i+=" (Printable String)";break;case U.Type.IA5String:i+=" (IA5String (ASCII))";break;case U.Type.UTCTIME:i+=" (UTC time)";break;case U.Type.GENERALIZEDTIME:i+=" (Generalized time)";break;case U.Type.BMPSTRING:i+=" (BMP String)";break}else i+=t.type;if(i+=`
-`,i+=n+"Constructed: "+t.constructed+`
-`,t.composed){for(var a=0,o="",s=0;s<t.value.length;++s)t.value[s]!==void 0&&(a+=1,o+=U.prettyPrint(t.value[s],e+1,r),s+1<t.value.length&&(o+=","));i+=n+"Sub values: "+a+o}else{if(i+=n+"Value: ",t.type===U.Type.OID){var f=U.derToOid(t.value);i+=f,Fe.pki&&Fe.pki.oids&&f in Fe.pki.oids&&(i+=" ("+Fe.pki.oids[f]+") ")}if(t.type===U.Type.INTEGER)try{i+=U.derToInteger(t.value)}catch(c){i+="0x"+Fe.util.bytesToHex(t.value)}else if(t.type===U.Type.BITSTRING){if(t.value.length>1?i+="0x"+Fe.util.bytesToHex(t.value.slice(1)):i+="(none)",t.value.length>0){var u=t.value.charCodeAt(0);u==1?i+=" (1 unused bit shown)":u>1&&(i+=" ("+u+" unused bits shown)")}}else t.type===U.Type.OCTETSTRING?(W2.test(t.value)||(i+="("+t.value+") "),i+="0x"+Fe.util.bytesToHex(t.value)):t.type===U.Type.UTF8?i+=Fe.util.decodeUtf8(t.value):t.type===U.Type.PRINTABLESTRING||t.type===U.Type.IA5String?i+=t.value:W2.test(t.value)?i+="0x"+Fe.util.bytesToHex(t.value):t.value.length===0?i+="[null]":i+=t.value}return i}});var Xc=E((U5,$2)=>{var ct=_e();Qe();$2.exports=ct.cipher=ct.cipher||{};ct.cipher.algorithms=ct.cipher.algorithms||{};ct.cipher.createCipher=function(t,e){var r=t;if(typeof r=="string"&&(r=ct.cipher.getAlgorithm(r),r&&(r=r())),!r)throw new Error("Unsupported algorithm: "+t);return new ct.cipher.BlockCipher({algorithm:r,key:e,decrypt:!1})};ct.cipher.createDecipher=function(t,e){var r=t;if(typeof r=="string"&&(r=ct.cipher.getAlgorithm(r),r&&(r=r())),!r)throw new Error("Unsupported algorithm: "+t);return new ct.cipher.BlockCipher({algorithm:r,key:e,decrypt:!0})};ct.cipher.registerAlgorithm=function(t,e){t=t.toUpperCase(),ct.cipher.algorithms[t]=e};ct.cipher.getAlgorithm=function(t){return t=t.toUpperCase(),t in ct.cipher.algorithms?ct.cipher.algorithms[t]:null};var Zc=ct.cipher.BlockCipher=function(t){this.algorithm=t.algorithm,this.mode=this.algorithm.mode,this.blockSize=this.mode.blockSize,this._finish=!1,this._input=null,this.output=null,this._op=t.decrypt?this.mode.decrypt:this.mode.encrypt,this._decrypt=t.decrypt,this.algorithm.initialize(t)};Zc.prototype.start=function(t){t=t||{};var e={};for(var r in t)e[r]=t[r];e.decrypt=this._decrypt,this._finish=!1,this._input=ct.util.createBuffer(),this.output=t.output||ct.util.createBuffer(),this.mode.start(e)};Zc.prototype.update=function(t){for(t&&this._input.putBuffer(t);!this._op.call(this.mode,this._input,this.output,this._finish)&&!this._finish;);this._input.compact()};Zc.prototype.finish=function(t){t&&(this.mode.name==="ECB"||this.mode.name==="CBC")&&(this.mode.pad=function(r){return t(this.blockSize,r,!1)},this.mode.unpad=function(r){return t(this.blockSize,r,!0)});var e={};return e.decrypt=this._decrypt,e.overflow=this._input.length()%this.blockSize,!(!this._decrypt&&this.mode.pad&&!this.mode.pad(this._input,e)||(this._finish=!0,this.update(),this._decrypt&&this.mode.unpad&&!this.mode.unpad(this.output,e))||this.mode.afterFinish&&!this.mode.afterFinish(this.output,e))}});var ef=E((q5,Q2)=>{var ft=_e();Qe();ft.cipher=ft.cipher||{};var re=Q2.exports=ft.cipher.modes=ft.cipher.modes||{};re.ecb=function(t){t=t||{},this.name="ECB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};re.ecb.prototype.start=function(t){};re.ecb.prototype.encrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i])};re.ecb.prototype.decrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i])};re.ecb.prototype.pad=function(t,e){var r=t.length()===this.blockSize?this.blockSize:this.blockSize-t.length();return t.fillWithByte(r,r),!0};re.ecb.prototype.unpad=function(t,e){if(e.overflow>0)return!1;var r=t.length(),i=t.at(r-1);return i>this.blockSize<<2?!1:(t.truncate(i),!0)};re.cbc=function(t){t=t||{},this.name="CBC",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};re.cbc.prototype.start=function(t){if(t.iv===null){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else if("iv"in t)this._iv=e0(t.iv,this.blockSize),this._prev=this._iv.slice(0);else throw new Error("Invalid IV parameter.")};re.cbc.prototype.encrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=this._prev[i]^t.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i]);this._prev=this._outBlock};re.cbc.prototype.decrypt=function(t,e,r){if(t.length()<this.blockSize&&!(r&&t.length()>0))return!0;for(var i=0;i<this._ints;++i)this._inBlock[i]=t.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._prev[i]^this._outBlock[i]);this._prev=this._inBlock.slice(0)};re.cbc.prototype.pad=function(t,e){var r=t.length()===this.blockSize?this.blockSize:this.blockSize-t.length();return t.fillWithByte(r,r),!0};re.cbc.prototype.unpad=function(t,e){if(e.overflow>0)return!1;var r=t.length(),i=t.at(r-1);return i>this.blockSize<<2?!1:(t.truncate(i),!0)};re.cfb=function(t){t=t||{},this.name="CFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialBlock=new Array(this._ints),this._partialOutput=ft.util.createBuffer(),this._partialBytes=0};re.cfb.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=e0(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};re.cfb.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)this._inBlock[n]=t.getInt32()^this._outBlock[n],e.putInt32(this._inBlock[n]);return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialBlock[n]=t.getInt32()^this._outBlock[n],this._partialOutput.putInt32(this._partialBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._partialBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};re.cfb.prototype.decrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)this._inBlock[n]=t.getInt32(),e.putInt32(this._inBlock[n]^this._outBlock[n]);return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialBlock[n]=t.getInt32(),this._partialOutput.putInt32(this._partialBlock[n]^this._outBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._partialBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};re.ofb=function(t){t=t||{},this.name="OFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=ft.util.createBuffer(),this._partialBytes=0};re.ofb.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=e0(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};re.ofb.prototype.encrypt=function(t,e,r){var i=t.length();if(t.length()===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)e.putInt32(t.getInt32()^this._outBlock[n]),this._inBlock[n]=this._outBlock[n];return}var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s>0)t.read-=this.blockSize;else for(var n=0;n<this._ints;++n)this._inBlock[n]=this._outBlock[n];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0};re.ofb.prototype.decrypt=re.ofb.prototype.encrypt;re.ctr=function(t){t=t||{},this.name="CTR",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=ft.util.createBuffer(),this._partialBytes=0};re.ctr.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");this._iv=e0(t.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};re.ctr.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize)for(var n=0;n<this._ints;++n)e.putInt32(t.getInt32()^this._outBlock[n]);else{var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s>0&&(t.read-=this.blockSize),this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}t0(this._inBlock)};re.ctr.prototype.decrypt=re.ctr.prototype.encrypt;re.gcm=function(t){t=t||{},this.name="GCM",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints),this._partialOutput=ft.util.createBuffer(),this._partialBytes=0,this._R=3774873600};re.gcm.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");var e=ft.util.createBuffer(t.iv);this._cipherLength=0;var r;if("additionalData"in t?r=ft.util.createBuffer(t.additionalData):r=ft.util.createBuffer(),"tagLength"in t?this._tagLength=t.tagLength:this._tagLength=128,this._tag=null,t.decrypt&&(this._tag=ft.util.createBuffer(t.tag).getBytes(),this._tag.length!==this._tagLength/8))throw new Error("Authentication tag does not match tag length.");this._hashBlock=new Array(this._ints),this.tag=null,this._hashSubkey=new Array(this._ints),this.cipher.encrypt([0,0,0,0],this._hashSubkey),this.componentBits=4,this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var i=e.length();if(i===12)this._j0=[e.getInt32(),e.getInt32(),e.getInt32(),1];else{for(this._j0=[0,0,0,0];e.length()>0;)this._j0=this.ghash(this._hashSubkey,this._j0,[e.getInt32(),e.getInt32(),e.getInt32(),e.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(Jc(i*8)))}this._inBlock=this._j0.slice(0),t0(this._inBlock),this._partialBytes=0,r=ft.util.createBuffer(r),this._aDataLength=Jc(r.length()*8);var n=r.length()%this.blockSize;for(n&&r.fillWithByte(0,this.blockSize-n),this._s=[0,0,0,0];r.length()>0;)this._s=this.ghash(this._hashSubkey,this._s,[r.getInt32(),r.getInt32(),r.getInt32(),r.getInt32()])};re.gcm.prototype.encrypt=function(t,e,r){var i=t.length();if(i===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&i>=this.blockSize){for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]^=t.getInt32());this._cipherLength+=this.blockSize}else{var s=(this.blockSize-i)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var n=0;n<this._ints;++n)this._partialOutput.putInt32(t.getInt32()^this._outBlock[n]);if(s<=0||r){if(r){var a=i%this.blockSize;this._cipherLength+=a,this._partialOutput.truncate(this.blockSize-a)}else this._cipherLength+=this.blockSize;for(var n=0;n<this._ints;++n)this._outBlock[n]=this._partialOutput.getInt32();this._partialOutput.read-=this.blockSize}if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),s>0&&!r)return t.read-=this.blockSize,e.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;e.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}this._s=this.ghash(this._hashSubkey,this._s,this._outBlock),t0(this._inBlock)};re.gcm.prototype.decrypt=function(t,e,r){var i=t.length();if(i<this.blockSize&&!(r&&i>0))return!0;this.cipher.encrypt(this._inBlock,this._outBlock),t0(this._inBlock),this._hashBlock[0]=t.getInt32(),this._hashBlock[1]=t.getInt32(),this._hashBlock[2]=t.getInt32(),this._hashBlock[3]=t.getInt32(),this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]^this._hashBlock[n]);i<this.blockSize?this._cipherLength+=i%this.blockSize:this._cipherLength+=this.blockSize};re.gcm.prototype.afterFinish=function(t,e){var r=!0;e.decrypt&&e.overflow&&t.truncate(this.blockSize-e.overflow),this.tag=ft.util.createBuffer();var i=this._aDataLength.concat(Jc(this._cipherLength*8));this._s=this.ghash(this._hashSubkey,this._s,i);var n=[];this.cipher.encrypt(this._j0,n);for(var s=0;s<this._ints;++s)this.tag.putInt32(this._s[s]^n[s]);return this.tag.truncate(this.tag.length()%(this._tagLength/8)),e.decrypt&&this.tag.bytes()!==this._tag&&(r=!1),r};re.gcm.prototype.multiply=function(t,e){for(var r=[0,0,0,0],i=e.slice(0),n=0;n<128;++n){var s=t[n/32|0]&1<<31-n%32;s&&(r[0]^=i[0],r[1]^=i[1],r[2]^=i[2],r[3]^=i[3]),this.pow(i,i)}return r};re.gcm.prototype.pow=function(t,e){for(var r=t[3]&1,i=3;i>0;--i)e[i]=t[i]>>>1|(t[i-1]&1)<<31;e[0]=t[0]>>>1,r&&(e[0]^=this._R)};re.gcm.prototype.tableMultiply=function(t){for(var e=[0,0,0,0],r=0;r<32;++r){var i=r/8|0,n=t[i]>>>(7-r%8)*4&15,s=this._m[r][n];e[0]^=s[0],e[1]^=s[1],e[2]^=s[2],e[3]^=s[3]}return e};re.gcm.prototype.ghash=function(t,e,r){return e[0]^=r[0],e[1]^=r[1],e[2]^=r[2],e[3]^=r[3],this.tableMultiply(e)};re.gcm.prototype.generateHashTable=function(t,e){for(var r=8/e,i=4*r,n=16*r,s=new Array(n),a=0;a<n;++a){var o=[0,0,0,0],f=a/i|0,u=(i-1-a%i)*e;o[f]=1<<e-1<<u,s[a]=this.generateSubHashTable(this.multiply(o,t),e)}return s};re.gcm.prototype.generateSubHashTable=function(t,e){var r=1<<e,i=r>>>1,n=new Array(r);n[i]=t.slice(0);for(var s=i>>>1;s>0;)this.pow(n[2*s],n[s]=[]),s>>=1;for(s=2;s<i;){for(var a=1;a<s;++a){var o=n[s],f=n[a];n[s+a]=[o[0]^f[0],o[1]^f[1],o[2]^f[2],o[3]^f[3]]}s*=2}for(n[0]=[0,0,0,0],s=i+1;s<r;++s){var u=n[s^i];n[s]=[t[0]^u[0],t[1]^u[1],t[2]^u[2],t[3]^u[3]]}return n};function e0(t,e){if(typeof t=="string"&&(t=ft.util.createBuffer(t)),ft.util.isArray(t)&&t.length>4){var r=t;t=ft.util.createBuffer();for(var i=0;i<r.length;++i)t.putByte(r[i])}if(t.length()<e)throw new Error("Invalid IV length; got "+t.length()+" bytes and expected "+e+" bytes.");if(!ft.util.isArray(t)){for(var n=[],s=e/4,i=0;i<s;++i)n.push(t.getInt32());t=n}return t}function t0(t){t[t.length-1]=t[t.length-1]+1&4294967295}function Jc(t){return[t/4294967296|0,t&4294967295]}});var sf=E((V5,ev)=>{var Pe=_e();Xc();ef();Qe();ev.exports=Pe.aes=Pe.aes||{};Pe.aes.startEncrypting=function(t,e,r,i){var n=r0({key:t,output:r,decrypt:!1,mode:i});return n.start(e),n};Pe.aes.createEncryptionCipher=function(t,e){return r0({key:t,output:null,decrypt:!1,mode:e})};Pe.aes.startDecrypting=function(t,e,r,i){var n=r0({key:t,output:r,decrypt:!0,mode:i});return n.start(e),n};Pe.aes.createDecryptionCipher=function(t,e){return r0({key:t,output:null,decrypt:!0,mode:e})};Pe.aes.Algorithm=function(t,e){tf||X2();var r=this;r.name=t,r.mode=new e({blockSize:16,cipher:{encrypt:function(i,n){return nf(r._w,i,n,!1)},decrypt:function(i,n){return nf(r._w,i,n,!0)}}}),r._init=!1};Pe.aes.Algorithm.prototype.initialize=function(t){if(!this._init){var e=t.key,r;if(typeof e=="string"&&(e.length===16||e.length===24||e.length===32))e=Pe.util.createBuffer(e);else if(Pe.util.isArray(e)&&(e.length===16||e.length===24||e.length===32)){r=e,e=Pe.util.createBuffer();for(var i=0;i<r.length;++i)e.putByte(r[i])}if(!Pe.util.isArray(e)){r=e,e=[];var n=r.length();if(n===16||n===24||n===32){n=n>>>2;for(var i=0;i<n;++i)e.push(r.getInt32())}}if(!Pe.util.isArray(e)||!(e.length===4||e.length===6||e.length===8))throw new Error("Invalid key parameter.");var s=this.mode.name,a=["CFB","OFB","CTR","GCM"].indexOf(s)!==-1;this._w=J2(e,t.decrypt&&!a),this._init=!0}};Pe.aes._expandKey=function(t,e){return tf||X2(),J2(t,e)};Pe.aes._updateBlock=nf;gs("AES-ECB",Pe.cipher.modes.ecb);gs("AES-CBC",Pe.cipher.modes.cbc);gs("AES-CFB",Pe.cipher.modes.cfb);gs("AES-OFB",Pe.cipher.modes.ofb);gs("AES-CTR",Pe.cipher.modes.ctr);gs("AES-GCM",Pe.cipher.modes.gcm);function gs(t,e){var r=function(){return new Pe.aes.Algorithm(t,e)};Pe.cipher.registerAlgorithm(t,r)}var tf=!1,vs=4,Bt,rf,Z2,Sn,lr;function X2(){tf=!0,Z2=[0,1,2,4,8,16,32,64,128,27,54];for(var t=new Array(256),e=0;e<128;++e)t[e]=e<<1,t[e+128]=e+128<<1^283;Bt=new Array(256),rf=new Array(256),Sn=new Array(4),lr=new Array(4);for(var e=0;e<4;++e)Sn[e]=new Array(256),lr[e]=new Array(256);for(var r=0,i=0,n,s,a,o,f,u,c,e=0;e<256;++e){o=i^i<<1^i<<2^i<<3^i<<4,o=o>>8^o&255^99,Bt[r]=o,rf[o]=r,f=t[o],n=t[r],s=t[n],a=t[s],u=f<<24^o<<16^o<<8^(o^f),c=(n^s^a)<<24^(r^a)<<16^(r^s^a)<<8^(r^n^a);for(var h=0;h<4;++h)Sn[h][r]=u,lr[h][o]=c,u=u<<24|u>>>8,c=c<<24|c>>>8;r===0?r=i=1:(r=n^t[t[t[n^a]]],i^=t[t[i]])}}function J2(t,e){for(var r=t.slice(0),i,n=1,s=r.length,a=s+6+1,o=vs*a,f=s;f<o;++f)i=r[f-1],f%s==0?(i=Bt[i>>>16&255]<<24^Bt[i>>>8&255]<<16^Bt[i&255]<<8^Bt[i>>>24]^Z2[n]<<24,n++):s>6&&f%s==4&&(i=Bt[i>>>24]<<24^Bt[i>>>16&255]<<16^Bt[i>>>8&255]<<8^Bt[i&255]),r[f]=r[f-s]^i;if(e){var u,c=lr[0],h=lr[1],l=lr[2],d=lr[3],p=r.slice(0);o=r.length;for(var f=0,y=o-vs;f<o;f+=vs,y-=vs)if(f===0||f===o-vs)p[f]=r[y],p[f+1]=r[y+3],p[f+2]=r[y+2],p[f+3]=r[y+1];else for(var g=0;g<vs;++g)u=r[y+g],p[f+(3&-g)]=c[Bt[u>>>24]]^h[Bt[u>>>16&255]]^l[Bt[u>>>8&255]]^d[Bt[u&255]];r=p}return r}function nf(t,e,r,i){var n=t.length/4-1,s,a,o,f,u;i?(s=lr[0],a=lr[1],o=lr[2],f=lr[3],u=rf):(s=Sn[0],a=Sn[1],o=Sn[2],f=Sn[3],u=Bt);var c,h,l,d,p,y,g;c=e[0]^t[0],h=e[i?3:1]^t[1],l=e[2]^t[2],d=e[i?1:3]^t[3];for(var v=3,x=1;x<n;++x)p=s[c>>>24]^a[h>>>16&255]^o[l>>>8&255]^f[d&255]^t[++v],y=s[h>>>24]^a[l>>>16&255]^o[d>>>8&255]^f[c&255]^t[++v],g=s[l>>>24]^a[d>>>16&255]^o[c>>>8&255]^f[h&255]^t[++v],d=s[d>>>24]^a[c>>>16&255]^o[h>>>8&255]^f[l&255]^t[++v],c=p,h=y,l=g;r[0]=u[c>>>24]<<24^u[h>>>16&255]<<16^u[l>>>8&255]<<8^u[d&255]^t[++v],r[i?3:1]=u[h>>>24]<<24^u[l>>>16&255]<<16^u[d>>>8&255]<<8^u[c&255]^t[++v],r[2]=u[l>>>24]<<24^u[d>>>16&255]<<16^u[c>>>8&255]<<8^u[h&255]^t[++v],r[i?1:3]=u[d>>>24]<<24^u[c>>>16&255]<<16^u[h>>>8&255]<<8^u[l&255]^t[++v]}function r0(t){t=t||{};var e=(t.mode||"CBC").toUpperCase(),r="AES-"+e,i;t.decrypt?i=Pe.cipher.createDecipher(r,t.key):i=Pe.cipher.createCipher(r,t.key);var n=i.start;return i.start=function(s,a){var o=null;a instanceof Pe.util.ByteBuffer&&(o=a,a={}),a=a||{},a.output=o,a.iv=s,n.call(i,a)},i}});var iv=E((G5,rv)=>{var Ue=_e();Xc();ef();Qe();rv.exports=Ue.des=Ue.des||{};Ue.des.startEncrypting=function(t,e,r,i){var n=i0({key:t,output:r,decrypt:!1,mode:i||(e===null?"ECB":"CBC")});return n.start(e),n};Ue.des.createEncryptionCipher=function(t,e){return i0({key:t,output:null,decrypt:!1,mode:e})};Ue.des.startDecrypting=function(t,e,r,i){var n=i0({key:t,output:r,decrypt:!0,mode:i||(e===null?"ECB":"CBC")});return n.start(e),n};Ue.des.createDecryptionCipher=function(t,e){return i0({key:t,output:null,decrypt:!0,mode:e})};Ue.des.Algorithm=function(t,e){var r=this;r.name=t,r.mode=new e({blockSize:8,cipher:{encrypt:function(i,n){return tv(r._keys,i,n,!1)},decrypt:function(i,n){return tv(r._keys,i,n,!0)}}}),r._init=!1};Ue.des.Algorithm.prototype.initialize=function(t){if(!this._init){var e=Ue.util.createBuffer(t.key);if(this.name.indexOf("3DES")===0&&e.length()!==24)throw new Error("Invalid Triple-DES key size: "+e.length()*8);this._keys=VB(e),this._init=!0}};Or("DES-ECB",Ue.cipher.modes.ecb);Or("DES-CBC",Ue.cipher.modes.cbc);Or("DES-CFB",Ue.cipher.modes.cfb);Or("DES-OFB",Ue.cipher.modes.ofb);Or("DES-CTR",Ue.cipher.modes.ctr);Or("3DES-ECB",Ue.cipher.modes.ecb);Or("3DES-CBC",Ue.cipher.modes.cbc);Or("3DES-CFB",Ue.cipher.modes.cfb);Or("3DES-OFB",Ue.cipher.modes.ofb);Or("3DES-CTR",Ue.cipher.modes.ctr);function Or(t,e){var r=function(){return new Ue.des.Algorithm(t,e)};Ue.cipher.registerAlgorithm(t,r)}var NB=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756],OB=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344],LB=[520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584],MB=[8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928],KB=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080],FB=[536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312],UB=[2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154],qB=[268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696];function VB(t){for(var e=[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],r=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],i=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],n=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],s=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],a=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],o=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],f=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],u=[0,262144,0,262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],c=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],h=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],l=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],d=[0,4096,134217728,134221824,524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],p=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261],y=t.length()>8?3:1,g=[],v=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],x=0,w,P=0;P<y;P++){var B=t.getInt32(),S=t.getInt32();w=(B>>>4^S)&252645135,S^=w,B^=w<<4,w=(S>>>-16^B)&65535,B^=w,S^=w<<-16,w=(B>>>2^S)&858993459,S^=w,B^=w<<2,w=(S>>>-16^B)&65535,B^=w,S^=w<<-16,w=(B>>>1^S)&1431655765,S^=w,B^=w<<1,w=(S>>>8^B)&16711935,B^=w,S^=w<<8,w=(B>>>1^S)&1431655765,S^=w,B^=w<<1,w=B<<8|S>>>20&240,B=S<<24|S<<8&16711680|S>>>8&65280|S>>>24&240,S=w;for(var G=0;G<v.length;++G){v[G]?(B=B<<2|B>>>26,S=S<<2|S>>>26):(B=B<<1|B>>>27,S=S<<1|S>>>27),B&=-15,S&=-15;var z=e[B>>>28]|r[B>>>24&15]|i[B>>>20&15]|n[B>>>16&15]|s[B>>>12&15]|a[B>>>8&15]|o[B>>>4&15],se=f[S>>>28]|u[S>>>24&15]|c[S>>>20&15]|h[S>>>16&15]|l[S>>>12&15]|d[S>>>8&15]|p[S>>>4&15];w=(se>>>16^z)&65535,g[x++]=z^w,g[x++]=se^w<<16}}return g}function tv(t,e,r,i){var n=t.length===32?3:9,s;n===3?s=i?[30,-2,-2]:[0,32,2]:s=i?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var a,o=e[0],f=e[1];a=(o>>>4^f)&252645135,f^=a,o^=a<<4,a=(o>>>16^f)&65535,f^=a,o^=a<<16,a=(f>>>2^o)&858993459,o^=a,f^=a<<2,a=(f>>>8^o)&16711935,o^=a,f^=a<<8,a=(o>>>1^f)&1431655765,f^=a,o^=a<<1,o=o<<1|o>>>31,f=f<<1|f>>>31;for(var u=0;u<n;u+=3){for(var c=s[u+1],h=s[u+2],l=s[u];l!=c;l+=h){var d=f^t[l],p=(f>>>4|f<<28)^t[l+1];a=o,o=f,f=a^(OB[d>>>24&63]|MB[d>>>16&63]|FB[d>>>8&63]|qB[d&63]|NB[p>>>24&63]|LB[p>>>16&63]|KB[p>>>8&63]|UB[p&63])}a=o,o=f,f=a}o=o>>>1|o<<31,f=f>>>1|f<<31,a=(o>>>1^f)&1431655765,f^=a,o^=a<<1,a=(f>>>8^o)&16711935,o^=a,f^=a<<8,a=(f>>>2^o)&858993459,o^=a,f^=a<<2,a=(o>>>16^f)&65535,f^=a,o^=a<<16,a=(o>>>4^f)&252645135,f^=a,o^=a<<4,r[0]=o,r[1]=f}function i0(t){t=t||{};var e=(t.mode||"CBC").toUpperCase(),r="DES-"+e,i;t.decrypt?i=Ue.cipher.createDecipher(r,t.key):i=Ue.cipher.createCipher(r,t.key);var n=i.start;return i.start=function(s,a){var o=null;a instanceof Ue.util.ByteBuffer&&(o=a,a={}),a=a||{},a.output=o,a.iv=s,n.call(i,a)},i}});var _n=E((H5,nv)=>{var n0=_e();nv.exports=n0.md=n0.md||{};n0.md.algorithms=n0.md.algorithms||{}});var av=E((z5,sv)=>{var ai=_e();_n();Qe();var GB=sv.exports=ai.hmac=ai.hmac||{};GB.create=function(){var t=null,e=null,r=null,i=null,n={};return n.start=function(s,a){if(s!==null)if(typeof s=="string")if(s=s.toLowerCase(),s in ai.md.algorithms)e=ai.md.algorithms[s].create();else throw new Error('Unknown hash algorithm "'+s+'"');else e=s;if(a===null)a=t;else{if(typeof a=="string")a=ai.util.createBuffer(a);else if(ai.util.isArray(a)){var o=a;a=ai.util.createBuffer();for(var f=0;f<o.length;++f)a.putByte(o[f])}var u=a.length();u>e.blockLength&&(e.start(),e.update(a.bytes()),a=e.digest()),r=ai.util.createBuffer(),i=ai.util.createBuffer(),u=a.length();for(var f=0;f<u;++f){var o=a.at(f);r.putByte(54^o),i.putByte(92^o)}if(u<e.blockLength)for(var o=e.blockLength-u,f=0;f<o;++f)r.putByte(54),i.putByte(92);t=a,r=r.bytes(),i=i.bytes()}e.start(),e.update(r)},n.update=function(s){e.update(s)},n.getMac=function(){var s=e.digest().bytes();return e.start(),e.update(i),e.update(s),e.digest()},n.digest=n.getMac,n}});var uv=E((j5,ov)=>{var At=_e();av();_n();Qe();var HB=At.pkcs5=At.pkcs5||{},oi;At.util.isNodejs&&!At.options.usePureJavaScript&&(oi=$r());ov.exports=At.pbkdf2=HB.pbkdf2=function(t,e,r,i,n,s){if(typeof n=="function"&&(s=n,n=null),At.util.isNodejs&&!At.options.usePureJavaScript&&oi.pbkdf2&&(n===null||typeof n!="object")&&(oi.pbkdf2Sync.length>4||!n||n==="sha1"))return typeof n!="string"&&(n="sha1"),t=Buffer.from(t,"binary"),e=Buffer.from(e,"binary"),s?oi.pbkdf2Sync.length===4?oi.pbkdf2(t,e,r,i,function(w,P){if(w)return s(w);s(null,P.toString("binary"))}):oi.pbkdf2(t,e,r,i,n,function(w,P){if(w)return s(w);s(null,P.toString("binary"))}):oi.pbkdf2Sync.length===4?oi.pbkdf2Sync(t,e,r,i).toString("binary"):oi.pbkdf2Sync(t,e,r,i,n).toString("binary");if((typeof n=="undefined"||n===null)&&(n="sha1"),typeof n=="string"){if(!(n in At.md.algorithms))throw new Error("Unknown hash algorithm: "+n);n=At.md[n].create()}var a=n.digestLength;if(i>4294967295*a){var o=new Error("Derived key is too long.");if(s)return s(o);throw o}var f=Math.ceil(i/a),u=i-(f-1)*a,c=At.hmac.create();c.start(n,t);var h="",l,d,p;if(!s){for(var y=1;y<=f;++y){c.start(null,null),c.update(e),c.update(At.util.int32ToBytes(y)),l=p=c.digest().getBytes();for(var g=2;g<=r;++g)c.start(null,null),c.update(p),d=c.digest().getBytes(),l=At.util.xorBytes(l,d,a),p=d;h+=y<f?l:l.substr(0,u)}return h}var y=1,g;function v(){if(y>f)return s(null,h);c.start(null,null),c.update(e),c.update(At.util.int32ToBytes(y)),l=p=c.digest().getBytes(),g=2,x()}function x(){if(g<=r)return c.start(null,null),c.update(p),d=c.digest().getBytes(),l=At.util.xorBytes(l,d,a),p=d,++g,At.util.setImmediate(x);h+=y<f?l:l.substr(0,u),++y,v()}v()}});var hv=E((W5,fv)=>{var s0=_e();Qe();var cv=fv.exports=s0.pem=s0.pem||{};cv.encode=function(t,e){e=e||{};var r="-----BEGIN "+t.type+`-----\r
-`,i;if(t.procType&&(i={name:"Proc-Type",values:[String(t.procType.version),t.procType.type]},r+=a0(i)),t.contentDomain&&(i={name:"Content-Domain",values:[t.contentDomain]},r+=a0(i)),t.dekInfo&&(i={name:"DEK-Info",values:[t.dekInfo.algorithm]},t.dekInfo.parameters&&i.values.push(t.dekInfo.parameters),r+=a0(i)),t.headers)for(var n=0;n<t.headers.length;++n)r+=a0(t.headers[n]);return t.procType&&(r+=`\r
-`),r+=s0.util.encode64(t.body,e.maxline||64)+`\r
-`,r+="-----END "+t.type+`-----\r
-`,r};cv.decode=function(t){for(var e=[],r=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,i=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,n=/\r?\n/,s;s=r.exec(t),!!s;){var a=s[1];a==="NEW CERTIFICATE REQUEST"&&(a="CERTIFICATE REQUEST");var o={type:a,procType:null,contentDomain:null,dekInfo:null,headers:[],body:s0.util.decode64(s[3])};if(e.push(o),!!s[2]){for(var f=s[2].split(n),u=0;s&&u<f.length;){for(var c=f[u].replace(/\s+$/,""),h=u+1;h<f.length;++h){var l=f[h];if(!/\s/.test(l[0]))break;c+=l,u=h}if(s=c.match(i),s){for(var d={name:s[1],values:[]},p=s[2].split(","),y=0;y<p.length;++y)d.values.push(zB(p[y]));if(o.procType)if(!o.contentDomain&&d.name==="Content-Domain")o.contentDomain=p[0]||"";else if(!o.dekInfo&&d.name==="DEK-Info"){if(d.values.length===0)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');o.dekInfo={algorithm:p[0],parameters:p[1]||null}}else o.headers.push(d);else{if(d.name!=="Proc-Type")throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');if(d.values.length!==2)throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');o.procType={version:p[0],type:p[1]}}}++u}if(o.procType==="ENCRYPTED"&&!o.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')}}if(e.length===0)throw new Error("Invalid PEM formatted message.");return e};function a0(t){for(var e=t.name+": ",r=[],i=function(f,u){return" "+u},n=0;n<t.values.length;++n)r.push(t.values[n].replace(/^(\S+\r\n)/,i));e+=r.join(",")+`\r
-`;for(var s=0,a=-1,n=0;n<e.length;++n,++s)if(s>65&&a!==-1){var o=e[a];o===","?(++a,e=e.substr(0,a)+`\r
- `+e.substr(a)):e=e.substr(0,a)+`\r
-`+o+e.substr(a+1),s=n-a-1,a=-1,++n}else(e[n]===" "||e[n]==="	"||e[n]===",")&&(a=n);return e}function zB(t){return t.replace(/^\s+/,"")}});var vv=E((Y5,gv)=>{var Lr=_e();_n();Qe();var lv=gv.exports=Lr.sha256=Lr.sha256||{};Lr.md.sha256=Lr.md.algorithms.sha256=lv;lv.create=function(){pv||jB();var t=null,e=Lr.util.createBuffer(),r=new Array(64),i={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,fullMessageLength:null,messageLengthSize:8};return i.start=function(){i.messageLength=0,i.fullMessageLength=i.messageLength64=[];for(var n=i.messageLengthSize/4,s=0;s<n;++s)i.fullMessageLength.push(0);return e=Lr.util.createBuffer(),t={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225},i},i.start(),i.update=function(n,s){s==="utf8"&&(n=Lr.util.encodeUtf8(n));var a=n.length;i.messageLength+=a,a=[a/4294967296>>>0,a>>>0];for(var o=i.fullMessageLength.length-1;o>=0;--o)i.fullMessageLength[o]+=a[1],a[1]=a[0]+(i.fullMessageLength[o]/4294967296>>>0),i.fullMessageLength[o]=i.fullMessageLength[o]>>>0,a[0]=a[1]/4294967296>>>0;return e.putBytes(n),yv(t,r,e),(e.read>2048||e.length()===0)&&e.compact(),i},i.digest=function(){var n=Lr.util.createBuffer();n.putBytes(e.bytes());var s=i.fullMessageLength[i.fullMessageLength.length-1]+i.messageLengthSize,a=s&i.blockLength-1;n.putBytes(af.substr(0,i.blockLength-a));for(var o,f,u=i.fullMessageLength[0]*8,c=0;c<i.fullMessageLength.length-1;++c)o=i.fullMessageLength[c+1]*8,f=o/4294967296>>>0,u+=f,n.putInt32(u>>>0),u=o>>>0;n.putInt32(u);var h={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4,h5:t.h5,h6:t.h6,h7:t.h7};yv(h,r,n);var l=Lr.util.createBuffer();return l.putInt32(h.h0),l.putInt32(h.h1),l.putInt32(h.h2),l.putInt32(h.h3),l.putInt32(h.h4),l.putInt32(h.h5),l.putInt32(h.h6),l.putInt32(h.h7),l},i};var af=null,pv=!1,dv=null;function jB(){af=String.fromCharCode(128),af+=Lr.util.fillString(String.fromCharCode(0),64),dv=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],pv=!0}function yv(t,e,r){for(var i,n,s,a,o,f,u,c,h,l,d,p,y,g,v,x=r.length();x>=64;){for(u=0;u<16;++u)e[u]=r.getInt32();for(;u<64;++u)i=e[u-2],i=(i>>>17|i<<15)^(i>>>19|i<<13)^i>>>10,n=e[u-15],n=(n>>>7|n<<25)^(n>>>18|n<<14)^n>>>3,e[u]=i+e[u-7]+n+e[u-16]|0;for(c=t.h0,h=t.h1,l=t.h2,d=t.h3,p=t.h4,y=t.h5,g=t.h6,v=t.h7,u=0;u<64;++u)a=(p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7),o=g^p&(y^g),s=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),f=c&h|l&(c^h),i=v+a+o+dv[u]+e[u],n=s+f,v=g,g=y,y=p,p=d+i>>>0,d=l,l=h,h=c,c=i+n>>>0;t.h0=t.h0+c|0,t.h1=t.h1+h|0,t.h2=t.h2+l|0,t.h3=t.h3+d|0,t.h4=t.h4+p|0,t.h5=t.h5+y|0,t.h6=t.h6+g|0,t.h7=t.h7+v|0,x-=64}}});var bv=E(($5,xv)=>{var Mr=_e();Qe();var o0=null;Mr.util.isNodejs&&!Mr.options.usePureJavaScript&&!process.versions["node-webkit"]&&(o0=$r());var WB=xv.exports=Mr.prng=Mr.prng||{};WB.create=function(t){for(var e={plugin:t,key:null,seed:null,time:null,reseeds:0,generated:0,keyBytes:""},r=t.md,i=new Array(32),n=0;n<32;++n)i[n]=r.create();e.pools=i,e.pool=0,e.generate=function(u,c){if(!c)return e.generateSync(u);var h=e.plugin.cipher,l=e.plugin.increment,d=e.plugin.formatKey,p=e.plugin.formatSeed,y=Mr.util.createBuffer();e.key=null,g();function g(v){if(v)return c(v);if(y.length()>=u)return c(null,y.getBytes(u));if(e.generated>1048575&&(e.key=null),e.key===null)return Mr.util.nextTick(function(){s(g)});var x=h(e.key,e.seed);e.generated+=x.length,y.putBytes(x),e.key=d(h(e.key,l(e.seed))),e.seed=p(h(e.key,e.seed)),Mr.util.setImmediate(g)}},e.generateSync=function(u){var c=e.plugin.cipher,h=e.plugin.increment,l=e.plugin.formatKey,d=e.plugin.formatSeed;e.key=null;for(var p=Mr.util.createBuffer();p.length()<u;){e.generated>1048575&&(e.key=null),e.key===null&&a();var y=c(e.key,e.seed);e.generated+=y.length,p.putBytes(y),e.key=l(c(e.key,h(e.seed))),e.seed=d(c(e.key,e.seed))}return p.getBytes(u)};function s(u){if(e.pools[0].messageLength>=32)return o(),u();var c=32-e.pools[0].messageLength<<5;e.seedFile(c,function(h,l){if(h)return u(h);e.collect(l),o(),u()})}function a(){if(e.pools[0].messageLength>=32)return o();var u=32-e.pools[0].messageLength<<5;e.collect(e.seedFileSync(u)),o()}function o(){e.reseeds=e.reseeds===4294967295?0:e.reseeds+1;var u=e.plugin.md.create();u.update(e.keyBytes);for(var c=1,h=0;h<32;++h)e.reseeds%c==0&&(u.update(e.pools[h].digest().getBytes()),e.pools[h].start()),c=c<<1;e.keyBytes=u.digest().getBytes(),u.start(),u.update(e.keyBytes);var l=u.digest().getBytes();e.key=e.plugin.formatKey(e.keyBytes),e.seed=e.plugin.formatSeed(l),e.generated=0}function f(u){var c=null,h=Mr.util.globalScope,l=h.crypto||h.msCrypto;l&&l.getRandomValues&&(c=function(B){return l.getRandomValues(B)});var d=Mr.util.createBuffer();if(c)for(;d.length()<u;){var p=Math.max(1,Math.min(u-d.length(),65536)/4),y=new Uint32Array(Math.floor(p));try{c(y);for(var g=0;g<y.length;++g)d.putInt32(y[g])}catch(B){if(!(typeof QuotaExceededError!="undefined"&&B instanceof QuotaExceededError))throw B}}if(d.length()<u)for(var v,x,w,P=Math.floor(Math.random()*65536);d.length()<u;){x=16807*(P&65535),v=16807*(P>>16),x+=(v&32767)<<16,x+=v>>15,x=(x&2147483647)+(x>>31),P=x&4294967295;for(var g=0;g<3;++g)w=P>>>(g<<3),w^=Math.floor(Math.random()*256),d.putByte(w&255)}return d.getBytes(u)}return o0?(e.seedFile=function(u,c){o0.randomBytes(u,function(h,l){if(h)return c(h);c(null,l.toString())})},e.seedFileSync=function(u){return o0.randomBytes(u).toString()}):(e.seedFile=function(u,c){try{c(null,f(u))}catch(h){c(h)}},e.seedFileSync=f),e.collect=function(u){for(var c=u.length,h=0;h<c;++h)e.pools[e.pool].update(u.substr(h,1)),e.pool=e.pool===31?0:e.pool+1},e.collectInt=function(u,c){for(var h="",l=0;l<c;l+=8)h+=String.fromCharCode(u>>l&255);e.collect(h)},e.registerWorker=function(u){if(u===self)e.seedFile=function(h,l){function d(p){var y=p.data;y.forge&&y.forge.prng&&(self.removeEventListener("message",d),l(y.forge.prng.err,y.forge.prng.bytes))}self.addEventListener("message",d),self.postMessage({forge:{prng:{needed:h}}})};else{var c=function(h){var l=h.data;l.forge&&l.forge.prng&&e.seedFile(l.forge.prng.needed,function(d,p){u.postMessage({forge:{prng:{err:d,bytes:p}}})})};u.addEventListener("message",c)}},e}});var va=E((Q5,of)=>{var ht=_e();sf();vv();bv();Qe();(function(){if(ht.random&&ht.random.getBytes){of.exports=ht.random;return}(function(t){var e={},r=new Array(4),i=ht.util.createBuffer();e.formatKey=function(h){var l=ht.util.createBuffer(h);return h=new Array(4),h[0]=l.getInt32(),h[1]=l.getInt32(),h[2]=l.getInt32(),h[3]=l.getInt32(),ht.aes._expandKey(h,!1)},e.formatSeed=function(h){var l=ht.util.createBuffer(h);return h=new Array(4),h[0]=l.getInt32(),h[1]=l.getInt32(),h[2]=l.getInt32(),h[3]=l.getInt32(),h},e.cipher=function(h,l){return ht.aes._updateBlock(h,l,r,!1),i.putInt32(r[0]),i.putInt32(r[1]),i.putInt32(r[2]),i.putInt32(r[3]),i.getBytes()},e.increment=function(h){return++h[3],h},e.md=ht.md.sha256;function n(){var h=ht.prng.create(e);return h.getBytes=function(l,d){return h.generate(l,d)},h.getBytesSync=function(l){return h.generate(l)},h}var s=n(),a=null,o=ht.util.globalScope,f=o.crypto||o.msCrypto;if(f&&f.getRandomValues&&(a=function(h){return f.getRandomValues(h)}),ht.options.usePureJavaScript||!ht.util.isNodejs&&!a){if(typeof window=="undefined"||window.document===void 0,s.collectInt(+new Date,32),typeof navigator!="undefined"){var u="";for(var c in navigator)try{typeof navigator[c]=="string"&&(u+=navigator[c])}catch(h){}s.collect(u),u=null}t&&(t().mousemove(function(h){s.collectInt(h.clientX,16),s.collectInt(h.clientY,16)}),t().keypress(function(h){s.collectInt(h.charCode,8)}))}if(!ht.random)ht.random=s;else for(var c in s)ht.random[c]=s[c];ht.random.createInstance=n,of.exports=ht.random})(typeof jQuery!="undefined"?jQuery:null)})()});var Sv=E((Z5,wv)=>{var Nt=_e();Qe();var uf=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],mv=[1,2,3,5],YB=function(t,e){return t<<e&65535|(t&65535)>>16-e},$B=function(t,e){return(t&65535)>>e|t<<16-e&65535};wv.exports=Nt.rc2=Nt.rc2||{};Nt.rc2.expandKey=function(t,e){typeof t=="string"&&(t=Nt.util.createBuffer(t)),e=e||128;var r=t,i=t.length(),n=e,s=Math.ceil(n/8),a=255>>(n&7),o;for(o=i;o<128;o++)r.putByte(uf[r.at(o-1)+r.at(o-i)&255]);for(r.setAt(128-s,uf[r.at(128-s)&a]),o=127-s;o>=0;o--)r.setAt(o,uf[r.at(o+1)^r.at(o+s)]);return r};var Ev=function(t,e,r){var i=!1,n=null,s=null,a=null,o,f,u,c,h=[];for(t=Nt.rc2.expandKey(t,e),u=0;u<64;u++)h.push(t.getInt16Le());r?(o=function(p){for(u=0;u<4;u++)p[u]+=h[c]+(p[(u+3)%4]&p[(u+2)%4])+(~p[(u+3)%4]&p[(u+1)%4]),p[u]=YB(p[u],mv[u]),c++},f=function(p){for(u=0;u<4;u++)p[u]+=h[p[(u+3)%4]&63]}):(o=function(p){for(u=3;u>=0;u--)p[u]=$B(p[u],mv[u]),p[u]-=h[c]+(p[(u+3)%4]&p[(u+2)%4])+(~p[(u+3)%4]&p[(u+1)%4]),c--},f=function(p){for(u=3;u>=0;u--)p[u]-=h[p[(u+3)%4]&63]});var l=function(p){var y=[];for(u=0;u<4;u++){var g=n.getInt16Le();a!==null&&(r?g^=a.getInt16Le():a.putInt16Le(g)),y.push(g&65535)}c=r?0:63;for(var v=0;v<p.length;v++)for(var x=0;x<p[v][0];x++)p[v][1](y);for(u=0;u<4;u++)a!==null&&(r?a.putInt16Le(y[u]):y[u]^=a.getInt16Le()),s.putInt16Le(y[u])},d=null;return d={start:function(p,y){p&&typeof p=="string"&&(p=Nt.util.createBuffer(p)),i=!1,n=Nt.util.createBuffer(),s=y||new Nt.util.createBuffer,a=p,d.output=s},update:function(p){for(i||n.putBuffer(p);n.length()>=8;)l([[5,o],[1,f],[6,o],[1,f],[5,o]])},finish:function(p){var y=!0;if(r)if(p)y=p(8,n,!r);else{var g=n.length()===8?8:8-n.length();n.fillWithByte(g,g)}if(y&&(i=!0,d.update()),!r&&(y=n.length()===0,y))if(p)y=p(8,s,!r);else{var v=s.length(),x=s.at(v-1);x>v?y=!1:s.truncate(x)}return y}},d};Nt.rc2.startEncrypting=function(t,e,r){var i=Nt.rc2.createEncryptionCipher(t,128);return i.start(e,r),i};Nt.rc2.createEncryptionCipher=function(t,e){return Ev(t,e,!0)};Nt.rc2.startDecrypting=function(t,e,r){var i=Nt.rc2.createDecryptionCipher(t,128);return i.start(e,r),i};Nt.rc2.createDecryptionCipher=function(t,e){return Ev(t,e,!1)}});var f0=E((X5,Dv)=>{var cf=_e();Dv.exports=cf.jsbn=cf.jsbn||{};var ui,QB=244837814094590,_v=(QB&16777215)==15715070;function N(t,e,r){this.data=[],t!=null&&(typeof t=="number"?this.fromNumber(t,e,r):e==null&&typeof t!="string"?this.fromString(t,256):this.fromString(t,e))}cf.jsbn.BigInteger=N;function he(){return new N(null)}function ZB(t,e,r,i,n,s){for(;--s>=0;){var a=e*this.data[t++]+r.data[i]+n;n=Math.floor(a/67108864),r.data[i++]=a&67108863}return n}function XB(t,e,r,i,n,s){for(var a=e&32767,o=e>>15;--s>=0;){var f=this.data[t]&32767,u=this.data[t++]>>15,c=o*f+u*a;f=a*f+((c&32767)<<15)+r.data[i]+(n&1073741823),n=(f>>>30)+(c>>>15)+o*u+(n>>>30),r.data[i++]=f&1073741823}return n}function Iv(t,e,r,i,n,s){for(var a=e&16383,o=e>>14;--s>=0;){var f=this.data[t]&16383,u=this.data[t++]>>14,c=o*f+u*a;f=a*f+((c&16383)<<14)+r.data[i]+n,n=(f>>28)+(c>>14)+o*u,r.data[i++]=f&268435455}return n}typeof navigator=="undefined"?(N.prototype.am=Iv,ui=28):_v&&navigator.appName=="Microsoft Internet Explorer"?(N.prototype.am=XB,ui=30):_v&&navigator.appName!="Netscape"?(N.prototype.am=ZB,ui=26):(N.prototype.am=Iv,ui=28);N.prototype.DB=ui;N.prototype.DM=(1<<ui)-1;N.prototype.DV=1<<ui;var ff=52;N.prototype.FV=Math.pow(2,ff);N.prototype.F1=ff-ui;N.prototype.F2=2*ui-ff;var JB="0123456789abcdefghijklmnopqrstuvwxyz",u0=new Array,xs,$t;xs="0".charCodeAt(0);for($t=0;$t<=9;++$t)u0[xs++]=$t;xs="a".charCodeAt(0);for($t=10;$t<36;++$t)u0[xs++]=$t;xs="A".charCodeAt(0);for($t=10;$t<36;++$t)u0[xs++]=$t;function Bv(t){return JB.charAt(t)}function Av(t,e){var r=u0[t.charCodeAt(e)];return r??-1}function eA(t){for(var e=this.t-1;e>=0;--e)t.data[e]=this.data[e];t.t=this.t,t.s=this.s}function tA(t){this.t=1,this.s=t<0?-1:0,t>0?this.data[0]=t:t<-1?this.data[0]=t+this.DV:this.t=0}function Fi(t){var e=he();return e.fromInt(t),e}function rA(t,e){var r;if(e==16)r=4;else if(e==8)r=3;else if(e==256)r=8;else if(e==2)r=1;else if(e==32)r=5;else if(e==4)r=2;else{this.fromRadix(t,e);return}this.t=0,this.s=0;for(var i=t.length,n=!1,s=0;--i>=0;){var a=r==8?t[i]&255:Av(t,i);if(a<0){t.charAt(i)=="-"&&(n=!0);continue}n=!1,s==0?this.data[this.t++]=a:s+r>this.DB?(this.data[this.t-1]|=(a&(1<<this.DB-s)-1)<<s,this.data[this.t++]=a>>this.DB-s):this.data[this.t-1]|=a<<s,s+=r,s>=this.DB&&(s-=this.DB)}r==8&&(t[0]&128)!=0&&(this.s=-1,s>0&&(this.data[this.t-1]|=(1<<this.DB-s)-1<<s)),this.clamp(),n&&N.ZERO.subTo(this,this)}function iA(){for(var t=this.s&this.DM;this.t>0&&this.data[this.t-1]==t;)--this.t}function nA(t){if(this.s<0)return"-"+this.negate().toString(t);var e;if(t==16)e=4;else if(t==8)e=3;else if(t==2)e=1;else if(t==32)e=5;else if(t==4)e=2;else return this.toRadix(t);var r=(1<<e)-1,i,n=!1,s="",a=this.t,o=this.DB-a*this.DB%e;if(a-- >0)for(o<this.DB&&(i=this.data[a]>>o)>0&&(n=!0,s=Bv(i));a>=0;)o<e?(i=(this.data[a]&(1<<o)-1)<<e-o,i|=this.data[--a]>>(o+=this.DB-e)):(i=this.data[a]>>(o-=e)&r,o<=0&&(o+=this.DB,--a)),i>0&&(n=!0),n&&(s+=Bv(i));return n?s:"0"}function sA(){var t=he();return N.ZERO.subTo(this,t),t}function aA(){return this.s<0?this.negate():this}function oA(t){var e=this.s-t.s;if(e!=0)return e;var r=this.t;if(e=r-t.t,e!=0)return this.s<0?-e:e;for(;--r>=0;)if((e=this.data[r]-t.data[r])!=0)return e;return 0}function c0(t){var e=1,r;return(r=t>>>16)!=0&&(t=r,e+=16),(r=t>>8)!=0&&(t=r,e+=8),(r=t>>4)!=0&&(t=r,e+=4),(r=t>>2)!=0&&(t=r,e+=2),(r=t>>1)!=0&&(t=r,e+=1),e}function uA(){return this.t<=0?0:this.DB*(this.t-1)+c0(this.data[this.t-1]^this.s&this.DM)}function cA(t,e){var r;for(r=this.t-1;r>=0;--r)e.data[r+t]=this.data[r];for(r=t-1;r>=0;--r)e.data[r]=0;e.t=this.t+t,e.s=this.s}function fA(t,e){for(var r=t;r<this.t;++r)e.data[r-t]=this.data[r];e.t=Math.max(this.t-t,0),e.s=this.s}function hA(t,e){var r=t%this.DB,i=this.DB-r,n=(1<<i)-1,s=Math.floor(t/this.DB),a=this.s<<r&this.DM,o;for(o=this.t-1;o>=0;--o)e.data[o+s+1]=this.data[o]>>i|a,a=(this.data[o]&n)<<r;for(o=s-1;o>=0;--o)e.data[o]=0;e.data[s]=a,e.t=this.t+s+1,e.s=this.s,e.clamp()}function lA(t,e){e.s=this.s;var r=Math.floor(t/this.DB);if(r>=this.t){e.t=0;return}var i=t%this.DB,n=this.DB-i,s=(1<<i)-1;e.data[0]=this.data[r]>>i;for(var a=r+1;a<this.t;++a)e.data[a-r-1]|=(this.data[a]&s)<<n,e.data[a-r]=this.data[a]>>i;i>0&&(e.data[this.t-r-1]|=(this.s&s)<<n),e.t=this.t-r,e.clamp()}function pA(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;)i+=this.data[r]-t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;if(t.t<this.t){for(i-=t.s;r<this.t;)i+=this.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;r<t.t;)i-=t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i-=t.s}e.s=i<0?-1:0,i<-1?e.data[r++]=this.DV+i:i>0&&(e.data[r++]=i),e.t=r,e.clamp()}function dA(t,e){var r=this.abs(),i=t.abs(),n=r.t;for(e.t=n+i.t;--n>=0;)e.data[n]=0;for(n=0;n<i.t;++n)e.data[n+r.t]=r.am(0,i.data[n],e,n,0,r.t);e.s=0,e.clamp(),this.s!=t.s&&N.ZERO.subTo(e,e)}function yA(t){for(var e=this.abs(),r=t.t=2*e.t;--r>=0;)t.data[r]=0;for(r=0;r<e.t-1;++r){var i=e.am(r,e.data[r],t,2*r,0,1);(t.data[r+e.t]+=e.am(r+1,2*e.data[r],t,2*r+1,i,e.t-r-1))>=e.DV&&(t.data[r+e.t]-=e.DV,t.data[r+e.t+1]=1)}t.t>0&&(t.data[t.t-1]+=e.am(r,e.data[r],t,2*r,0,1)),t.s=0,t.clamp()}function gA(t,e,r){var i=t.abs();if(!(i.t<=0)){var n=this.abs();if(n.t<i.t){e!=null&&e.fromInt(0),r!=null&&this.copyTo(r);return}r==null&&(r=he());var s=he(),a=this.s,o=t.s,f=this.DB-c0(i.data[i.t-1]);f>0?(i.lShiftTo(f,s),n.lShiftTo(f,r)):(i.copyTo(s),n.copyTo(r));var u=s.t,c=s.data[u-1];if(c!=0){var h=c*(1<<this.F1)+(u>1?s.data[u-2]>>this.F2:0),l=this.FV/h,d=(1<<this.F1)/h,p=1<<this.F2,y=r.t,g=y-u,v=e??he();for(s.dlShiftTo(g,v),r.compareTo(v)>=0&&(r.data[r.t++]=1,r.subTo(v,r)),N.ONE.dlShiftTo(u,v),v.subTo(s,s);s.t<u;)s.data[s.t++]=0;for(;--g>=0;){var x=r.data[--y]==c?this.DM:Math.floor(r.data[y]*l+(r.data[y-1]+p)*d);if((r.data[y]+=s.am(0,x,r,g,0,u))<x)for(s.dlShiftTo(g,v),r.subTo(v,r);r.data[y]<--x;)r.subTo(v,r)}e!=null&&(r.drShiftTo(u,e),a!=o&&N.ZERO.subTo(e,e)),r.t=u,r.clamp(),f>0&&r.rShiftTo(f,r),a<0&&N.ZERO.subTo(r,r)}}}function vA(t){var e=he();return this.abs().divRemTo(t,null,e),this.s<0&&e.compareTo(N.ZERO)>0&&t.subTo(e,e),e}function In(t){this.m=t}function xA(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t}function bA(t){return t}function mA(t){t.divRemTo(this.m,null,t)}function EA(t,e,r){t.multiplyTo(e,r),this.reduce(r)}function wA(t,e){t.squareTo(e),this.reduce(e)}In.prototype.convert=xA;In.prototype.revert=bA;In.prototype.reduce=mA;In.prototype.mulTo=EA;In.prototype.sqrTo=wA;function SA(){if(this.t<1)return 0;var t=this.data[0];if((t&1)==0)return 0;var e=t&3;return e=e*(2-(t&15)*e)&15,e=e*(2-(t&255)*e)&255,e=e*(2-((t&65535)*e&65535))&65535,e=e*(2-t*e%this.DV)%this.DV,e>0?this.DV-e:-e}function Bn(t){this.m=t,this.mp=t.invDigit(),this.mpl=this.mp&32767,this.mph=this.mp>>15,this.um=(1<<t.DB-15)-1,this.mt2=2*t.t}function _A(t){var e=he();return t.abs().dlShiftTo(this.m.t,e),e.divRemTo(this.m,null,e),t.s<0&&e.compareTo(N.ZERO)>0&&this.m.subTo(e,e),e}function IA(t){var e=he();return t.copyTo(e),this.reduce(e),e}function BA(t){for(;t.t<=this.mt2;)t.data[t.t++]=0;for(var e=0;e<this.m.t;++e){var r=t.data[e]&32767,i=r*this.mpl+((r*this.mph+(t.data[e]>>15)*this.mpl&this.um)<<15)&t.DM;for(r=e+this.m.t,t.data[r]+=this.m.am(0,i,t,e,0,this.m.t);t.data[r]>=t.DV;)t.data[r]-=t.DV,t.data[++r]++}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t)}function AA(t,e){t.squareTo(e),this.reduce(e)}function CA(t,e,r){t.multiplyTo(e,r),this.reduce(r)}Bn.prototype.convert=_A;Bn.prototype.revert=IA;Bn.prototype.reduce=BA;Bn.prototype.mulTo=CA;Bn.prototype.sqrTo=AA;function TA(){return(this.t>0?this.data[0]&1:this.s)==0}function RA(t,e){if(t>4294967295||t<1)return N.ONE;var r=he(),i=he(),n=e.convert(this),s=c0(t)-1;for(n.copyTo(r);--s>=0;)if(e.sqrTo(r,i),(t&1<<s)>0)e.mulTo(i,n,r);else{var a=r;r=i,i=a}return e.revert(r)}function DA(t,e){var r;return t<256||e.isEven()?r=new In(e):r=new Bn(e),this.exp(t,r)}N.prototype.copyTo=eA;N.prototype.fromInt=tA;N.prototype.fromString=rA;N.prototype.clamp=iA;N.prototype.dlShiftTo=cA;N.prototype.drShiftTo=fA;N.prototype.lShiftTo=hA;N.prototype.rShiftTo=lA;N.prototype.subTo=pA;N.prototype.multiplyTo=dA;N.prototype.squareTo=yA;N.prototype.divRemTo=gA;N.prototype.invDigit=SA;N.prototype.isEven=TA;N.prototype.exp=RA;N.prototype.toString=nA;N.prototype.negate=sA;N.prototype.abs=aA;N.prototype.compareTo=oA;N.prototype.bitLength=uA;N.prototype.mod=vA;N.prototype.modPowInt=DA;N.ZERO=Fi(0);N.ONE=Fi(1);function PA(){var t=he();return this.copyTo(t),t}function kA(){if(this.s<0){if(this.t==1)return this.data[0]-this.DV;if(this.t==0)return-1}else{if(this.t==1)return this.data[0];if(this.t==0)return 0}return(this.data[1]&(1<<32-this.DB)-1)<<this.DB|this.data[0]}function NA(){return this.t==0?this.s:this.data[0]<<24>>24}function OA(){return this.t==0?this.s:this.data[0]<<16>>16}function LA(t){return Math.floor(Math.LN2*this.DB/Math.log(t))}function MA(){return this.s<0?-1:this.t<=0||this.t==1&&this.data[0]<=0?0:1}function KA(t){if(t==null&&(t=10),this.signum()==0||t<2||t>36)return"0";var e=this.chunkSize(t),r=Math.pow(t,e),i=Fi(r),n=he(),s=he(),a="";for(this.divRemTo(i,n,s);n.signum()>0;)a=(r+s.intValue()).toString(t).substr(1)+a,n.divRemTo(i,n,s);return s.intValue().toString(t)+a}function FA(t,e){this.fromInt(0),e==null&&(e=10);for(var r=this.chunkSize(e),i=Math.pow(e,r),n=!1,s=0,a=0,o=0;o<t.length;++o){var f=Av(t,o);if(f<0){t.charAt(o)=="-"&&this.signum()==0&&(n=!0);continue}a=e*a+f,++s>=r&&(this.dMultiply(i),this.dAddOffset(a,0),s=0,a=0)}s>0&&(this.dMultiply(Math.pow(e,s)),this.dAddOffset(a,0)),n&&N.ZERO.subTo(this,this)}function UA(t,e,r){if(typeof e=="number")if(t<2)this.fromInt(1);else for(this.fromNumber(t,r),this.testBit(t-1)||this.bitwiseTo(N.ONE.shiftLeft(t-1),hf,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(e);)this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(N.ONE.shiftLeft(t-1),this);else{var i=new Array,n=t&7;i.length=(t>>3)+1,e.nextBytes(i),n>0?i[0]&=(1<<n)-1:i[0]=0,this.fromString(i,256)}}function qA(){var t=this.t,e=new Array;e[0]=this.s;var r=this.DB-t*this.DB%8,i,n=0;if(t-- >0)for(r<this.DB&&(i=this.data[t]>>r)!=(this.s&this.DM)>>r&&(e[n++]=i|this.s<<this.DB-r);t>=0;)r<8?(i=(this.data[t]&(1<<r)-1)<<8-r,i|=this.data[--t]>>(r+=this.DB-8)):(i=this.data[t]>>(r-=8)&255,r<=0&&(r+=this.DB,--t)),(i&128)!=0&&(i|=-256),n==0&&(this.s&128)!=(i&128)&&++n,(n>0||i!=this.s)&&(e[n++]=i);return e}function VA(t){return this.compareTo(t)==0}function GA(t){return this.compareTo(t)<0?this:t}function HA(t){return this.compareTo(t)>0?this:t}function zA(t,e,r){var i,n,s=Math.min(t.t,this.t);for(i=0;i<s;++i)r.data[i]=e(this.data[i],t.data[i]);if(t.t<this.t){for(n=t.s&this.DM,i=s;i<this.t;++i)r.data[i]=e(this.data[i],n);r.t=this.t}else{for(n=this.s&this.DM,i=s;i<t.t;++i)r.data[i]=e(n,t.data[i]);r.t=t.t}r.s=e(this.s,t.s),r.clamp()}function jA(t,e){return t&e}function WA(t){var e=he();return this.bitwiseTo(t,jA,e),e}function hf(t,e){return t|e}function YA(t){var e=he();return this.bitwiseTo(t,hf,e),e}function Cv(t,e){return t^e}function $A(t){var e=he();return this.bitwiseTo(t,Cv,e),e}function Tv(t,e){return t&~e}function QA(t){var e=he();return this.bitwiseTo(t,Tv,e),e}function ZA(){for(var t=he(),e=0;e<this.t;++e)t.data[e]=this.DM&~this.data[e];return t.t=this.t,t.s=~this.s,t}function XA(t){var e=he();return t<0?this.rShiftTo(-t,e):this.lShiftTo(t,e),e}function JA(t){var e=he();return t<0?this.lShiftTo(-t,e):this.rShiftTo(t,e),e}function eC(t){if(t==0)return-1;var e=0;return(t&65535)==0&&(t>>=16,e+=16),(t&255)==0&&(t>>=8,e+=8),(t&15)==0&&(t>>=4,e+=4),(t&3)==0&&(t>>=2,e+=2),(t&1)==0&&++e,e}function tC(){for(var t=0;t<this.t;++t)if(this.data[t]!=0)return t*this.DB+eC(this.data[t]);return this.s<0?this.t*this.DB:-1}function rC(t){for(var e=0;t!=0;)t&=t-1,++e;return e}function iC(){for(var t=0,e=this.s&this.DM,r=0;r<this.t;++r)t+=rC(this.data[r]^e);return t}function nC(t){var e=Math.floor(t/this.DB);return e>=this.t?this.s!=0:(this.data[e]&1<<t%this.DB)!=0}function sC(t,e){var r=N.ONE.shiftLeft(t);return this.bitwiseTo(r,e,r),r}function aC(t){return this.changeBit(t,hf)}function oC(t){return this.changeBit(t,Tv)}function uC(t){return this.changeBit(t,Cv)}function cC(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;)i+=this.data[r]+t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;if(t.t<this.t){for(i+=t.s;r<this.t;)i+=this.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;r<t.t;)i+=t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=t.s}e.s=i<0?-1:0,i>0?e.data[r++]=i:i<-1&&(e.data[r++]=this.DV+i),e.t=r,e.clamp()}function fC(t){var e=he();return this.addTo(t,e),e}function hC(t){var e=he();return this.subTo(t,e),e}function lC(t){var e=he();return this.multiplyTo(t,e),e}function pC(t){var e=he();return this.divRemTo(t,e,null),e}function dC(t){var e=he();return this.divRemTo(t,null,e),e}function yC(t){var e=he(),r=he();return this.divRemTo(t,e,r),new Array(e,r)}function gC(t){this.data[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp()}function vC(t,e){if(t!=0){for(;this.t<=e;)this.data[this.t++]=0;for(this.data[e]+=t;this.data[e]>=this.DV;)this.data[e]-=this.DV,++e>=this.t&&(this.data[this.t++]=0),++this.data[e]}}function xa(){}function Rv(t){return t}function xC(t,e,r){t.multiplyTo(e,r)}function bC(t,e){t.squareTo(e)}xa.prototype.convert=Rv;xa.prototype.revert=Rv;xa.prototype.mulTo=xC;xa.prototype.sqrTo=bC;function mC(t){return this.exp(t,new xa)}function EC(t,e,r){var i=Math.min(this.t+t.t,e);for(r.s=0,r.t=i;i>0;)r.data[--i]=0;var n;for(n=r.t-this.t;i<n;++i)r.data[i+this.t]=this.am(0,t.data[i],r,i,0,this.t);for(n=Math.min(t.t,e);i<n;++i)this.am(0,t.data[i],r,i,0,e-i);r.clamp()}function wC(t,e,r){--e;var i=r.t=this.t+t.t-e;for(r.s=0;--i>=0;)r.data[i]=0;for(i=Math.max(e-this.t,0);i<t.t;++i)r.data[this.t+i-e]=this.am(e-i,t.data[i],r,0,0,this.t+i-e);r.clamp(),r.drShiftTo(1,r)}function bs(t){this.r2=he(),this.q3=he(),N.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t}function SC(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m);if(t.compareTo(this.m)<0)return t;var e=he();return t.copyTo(e),this.reduce(e),e}function _C(t){return t}function IC(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;)t.dAddOffset(1,this.m.t+1);for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;)t.subTo(this.m,t)}function BC(t,e){t.squareTo(e),this.reduce(e)}function AC(t,e,r){t.multiplyTo(e,r),this.reduce(r)}bs.prototype.convert=SC;bs.prototype.revert=_C;bs.prototype.reduce=IC;bs.prototype.mulTo=AC;bs.prototype.sqrTo=BC;function CC(t,e){var r=t.bitLength(),i,n=Fi(1),s;if(r<=0)return n;r<18?i=1:r<48?i=3:r<144?i=4:r<768?i=5:i=6,r<8?s=new In(e):e.isEven()?s=new bs(e):s=new Bn(e);var a=new Array,o=3,f=i-1,u=(1<<i)-1;if(a[1]=s.convert(this),i>1){var c=he();for(s.sqrTo(a[1],c);o<=u;)a[o]=he(),s.mulTo(c,a[o-2],a[o]),o+=2}var h=t.t-1,l,d=!0,p=he(),y;for(r=c0(t.data[h])-1;h>=0;){for(r>=f?l=t.data[h]>>r-f&u:(l=(t.data[h]&(1<<r+1)-1)<<f-r,h>0&&(l|=t.data[h-1]>>this.DB+r-f)),o=i;(l&1)==0;)l>>=1,--o;if((r-=o)<0&&(r+=this.DB,--h),d)a[l].copyTo(n),d=!1;else{for(;o>1;)s.sqrTo(n,p),s.sqrTo(p,n),o-=2;o>0?s.sqrTo(n,p):(y=n,n=p,p=y),s.mulTo(p,a[l],n)}for(;h>=0&&(t.data[h]&1<<r)==0;)s.sqrTo(n,p),y=n,n=p,p=y,--r<0&&(r=this.DB-1,--h)}return s.revert(n)}function TC(t){var e=this.s<0?this.negate():this.clone(),r=t.s<0?t.negate():t.clone();if(e.compareTo(r)<0){var i=e;e=r,r=i}var n=e.getLowestSetBit(),s=r.getLowestSetBit();if(s<0)return e;for(n<s&&(s=n),s>0&&(e.rShiftTo(s,e),r.rShiftTo(s,r));e.signum()>0;)(n=e.getLowestSetBit())>0&&e.rShiftTo(n,e),(n=r.getLowestSetBit())>0&&r.rShiftTo(n,r),e.compareTo(r)>=0?(e.subTo(r,e),e.rShiftTo(1,e)):(r.subTo(e,r),r.rShiftTo(1,r));return s>0&&r.lShiftTo(s,r),r}function RC(t){if(t<=0)return 0;var e=this.DV%t,r=this.s<0?t-1:0;if(this.t>0)if(e==0)r=this.data[0]%t;else for(var i=this.t-1;i>=0;--i)r=(e*r+this.data[i])%t;return r}function DC(t){var e=t.isEven();if(this.isEven()&&e||t.signum()==0)return N.ZERO;for(var r=t.clone(),i=this.clone(),n=Fi(1),s=Fi(0),a=Fi(0),o=Fi(1);r.signum()!=0;){for(;r.isEven();)r.rShiftTo(1,r),e?((!n.isEven()||!s.isEven())&&(n.addTo(this,n),s.subTo(t,s)),n.rShiftTo(1,n)):s.isEven()||s.subTo(t,s),s.rShiftTo(1,s);for(;i.isEven();)i.rShiftTo(1,i),e?((!a.isEven()||!o.isEven())&&(a.addTo(this,a),o.subTo(t,o)),a.rShiftTo(1,a)):o.isEven()||o.subTo(t,o),o.rShiftTo(1,o);r.compareTo(i)>=0?(r.subTo(i,r),e&&n.subTo(a,n),s.subTo(o,s)):(i.subTo(r,i),e&&a.subTo(n,a),o.subTo(s,o))}if(i.compareTo(N.ONE)!=0)return N.ZERO;if(o.compareTo(t)>=0)return o.subtract(t);if(o.signum()<0)o.addTo(t,o);else return o;return o.signum()<0?o.add(t):o}var pr=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],PC=(1<<26)/pr[pr.length-1];function kC(t){var e,r=this.abs();if(r.t==1&&r.data[0]<=pr[pr.length-1]){for(e=0;e<pr.length;++e)if(r.data[0]==pr[e])return!0;return!1}if(r.isEven())return!1;for(e=1;e<pr.length;){for(var i=pr[e],n=e+1;n<pr.length&&i<PC;)i*=pr[n++];for(i=r.modInt(i);e<n;)if(i%pr[e++]==0)return!1}return r.millerRabin(t)}function NC(t){var e=this.subtract(N.ONE),r=e.getLowestSetBit();if(r<=0)return!1;for(var i=e.shiftRight(r),n=OC(),s,a=0;a<t;++a){do s=new N(this.bitLength(),n);while(s.compareTo(N.ONE)<=0||s.compareTo(e)>=0);var o=s.modPow(i,this);if(o.compareTo(N.ONE)!=0&&o.compareTo(e)!=0){for(var f=1;f++<r&&o.compareTo(e)!=0;)if(o=o.modPowInt(2,this),o.compareTo(N.ONE)==0)return!1;if(o.compareTo(e)!=0)return!1}}return!0}function OC(){return{nextBytes:function(t){for(var e=0;e<t.length;++e)t[e]=Math.floor(Math.random()*256)}}}N.prototype.chunkSize=LA;N.prototype.toRadix=KA;N.prototype.fromRadix=FA;N.prototype.fromNumber=UA;N.prototype.bitwiseTo=zA;N.prototype.changeBit=sC;N.prototype.addTo=cC;N.prototype.dMultiply=gC;N.prototype.dAddOffset=vC;N.prototype.multiplyLowerTo=EC;N.prototype.multiplyUpperTo=wC;N.prototype.modInt=RC;N.prototype.millerRabin=NC;N.prototype.clone=PA;N.prototype.intValue=kA;N.prototype.byteValue=NA;N.prototype.shortValue=OA;N.prototype.signum=MA;N.prototype.toByteArray=qA;N.prototype.equals=VA;N.prototype.min=GA;N.prototype.max=HA;N.prototype.and=WA;N.prototype.or=YA;N.prototype.xor=$A;N.prototype.andNot=QA;N.prototype.not=ZA;N.prototype.shiftLeft=XA;N.prototype.shiftRight=JA;N.prototype.getLowestSetBit=tC;N.prototype.bitCount=iC;N.prototype.testBit=nC;N.prototype.setBit=aC;N.prototype.clearBit=oC;N.prototype.flipBit=uC;N.prototype.add=fC;N.prototype.subtract=hC;N.prototype.multiply=lC;N.prototype.divide=pC;N.prototype.remainder=dC;N.prototype.divideAndRemainder=yC;N.prototype.modPow=CC;N.prototype.modInverse=DC;N.prototype.pow=mC;N.prototype.gcd=TC;N.prototype.isProbablePrime=kC});var Lv=E((J5,Ov)=>{var Kr=_e();_n();Qe();var Pv=Ov.exports=Kr.sha1=Kr.sha1||{};Kr.md.sha1=Kr.md.algorithms.sha1=Pv;Pv.create=function(){kv||LC();var t=null,e=Kr.util.createBuffer(),r=new Array(80),i={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,fullMessageLength:null,messageLengthSize:8};return i.start=function(){i.messageLength=0,i.fullMessageLength=i.messageLength64=[];for(var n=i.messageLengthSize/4,s=0;s<n;++s)i.fullMessageLength.push(0);return e=Kr.util.createBuffer(),t={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520},i},i.start(),i.update=function(n,s){s==="utf8"&&(n=Kr.util.encodeUtf8(n));var a=n.length;i.messageLength+=a,a=[a/4294967296>>>0,a>>>0];for(var o=i.fullMessageLength.length-1;o>=0;--o)i.fullMessageLength[o]+=a[1],a[1]=a[0]+(i.fullMessageLength[o]/4294967296>>>0),i.fullMessageLength[o]=i.fullMessageLength[o]>>>0,a[0]=a[1]/4294967296>>>0;return e.putBytes(n),Nv(t,r,e),(e.read>2048||e.length()===0)&&e.compact(),i},i.digest=function(){var n=Kr.util.createBuffer();n.putBytes(e.bytes());var s=i.fullMessageLength[i.fullMessageLength.length-1]+i.messageLengthSize,a=s&i.blockLength-1;n.putBytes(lf.substr(0,i.blockLength-a));for(var o,f,u=i.fullMessageLength[0]*8,c=0;c<i.fullMessageLength.length-1;++c)o=i.fullMessageLength[c+1]*8,f=o/4294967296>>>0,u+=f,n.putInt32(u>>>0),u=o>>>0;n.putInt32(u);var h={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4};Nv(h,r,n);var l=Kr.util.createBuffer();return l.putInt32(h.h0),l.putInt32(h.h1),l.putInt32(h.h2),l.putInt32(h.h3),l.putInt32(h.h4),l},i};var lf=null,kv=!1;function LC(){lf=String.fromCharCode(128),lf+=Kr.util.fillString(String.fromCharCode(0),64),kv=!0}function Nv(t,e,r){for(var i,n,s,a,o,f,u,c,h=r.length();h>=64;){for(n=t.h0,s=t.h1,a=t.h2,o=t.h3,f=t.h4,c=0;c<16;++c)i=r.getInt32(),e[c]=i,u=o^s&(a^o),i=(n<<5|n>>>27)+u+f+1518500249+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<20;++c)i=e[c-3]^e[c-8]^e[c-14]^e[c-16],i=i<<1|i>>>31,e[c]=i,u=o^s&(a^o),i=(n<<5|n>>>27)+u+f+1518500249+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<32;++c)i=e[c-3]^e[c-8]^e[c-14]^e[c-16],i=i<<1|i>>>31,e[c]=i,u=s^a^o,i=(n<<5|n>>>27)+u+f+1859775393+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<40;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s^a^o,i=(n<<5|n>>>27)+u+f+1859775393+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<60;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s&a|o&(s^a),i=(n<<5|n>>>27)+u+f+2400959708+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<80;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s^a^o,i=(n<<5|n>>>27)+u+f+3395469782+i,f=o,o=a,a=(s<<30|s>>>2)>>>0,s=n,n=i;t.h0=t.h0+n|0,t.h1=t.h1+s|0,t.h2=t.h2+a|0,t.h3=t.h3+o|0,t.h4=t.h4+f|0,h-=64}}});var Fv=E((eD,Kv)=>{var Fr=_e();Qe();va();Lv();var Mv=Kv.exports=Fr.pkcs1=Fr.pkcs1||{};Mv.encode_rsa_oaep=function(t,e,r){var i,n,s,a;typeof r=="string"?(i=r,n=arguments[3]||void 0,s=arguments[4]||void 0):r&&(i=r.label||void 0,n=r.seed||void 0,s=r.md||void 0,r.mgf1&&r.mgf1.md&&(a=r.mgf1.md)),s?s.start():s=Fr.md.sha1.create(),a||(a=s);var o=Math.ceil(t.n.bitLength()/8),f=o-2*s.digestLength-2;if(e.length>f){var u=new Error("RSAES-OAEP input message length is too long.");throw u.length=e.length,u.maxLength=f,u}i||(i=""),s.update(i,"raw");for(var c=s.digest(),h="",l=f-e.length,d=0;d<l;d++)h+="\0";var p=c.getBytes()+h+""+e;if(!n)n=Fr.random.getBytes(s.digestLength);else if(n.length!==s.digestLength){var u=new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");throw u.seedLength=n.length,u.digestLength=s.digestLength,u}var y=h0(n,o-s.digestLength-1,a),g=Fr.util.xorBytes(p,y,p.length),v=h0(g,s.digestLength,a),x=Fr.util.xorBytes(n,v,n.length);return"\0"+x+g};Mv.decode_rsa_oaep=function(t,e,r){var i,n,s;typeof r=="string"?(i=r,n=arguments[3]||void 0):r&&(i=r.label||void 0,n=r.md||void 0,r.mgf1&&r.mgf1.md&&(s=r.mgf1.md));var a=Math.ceil(t.n.bitLength()/8);if(e.length!==a){var g=new Error("RSAES-OAEP encoded message length is invalid.");throw g.length=e.length,g.expectedLength=a,g}if(n===void 0?n=Fr.md.sha1.create():n.start(),s||(s=n),a<2*n.digestLength+2)throw new Error("RSAES-OAEP key is too short for the hash function.");i||(i=""),n.update(i,"raw");for(var o=n.digest().getBytes(),f=e.charAt(0),u=e.substring(1,n.digestLength+1),c=e.substring(1+n.digestLength),h=h0(c,n.digestLength,s),l=Fr.util.xorBytes(u,h,u.length),d=h0(l,a-n.digestLength-1,s),p=Fr.util.xorBytes(c,d,c.length),y=p.substring(0,n.digestLength),g=f!=="\0",v=0;v<n.digestLength;++v)g|=o.charAt(v)!==y.charAt(v);for(var x=1,w=n.digestLength,P=n.digestLength;P<p.length;P++){var B=p.charCodeAt(P),S=B&1^1,G=x?65534:0;g|=B&G,x=x&S,w+=x}if(g||p.charCodeAt(w)!==1)throw new Error("Invalid RSAES-OAEP padding.");return p.substring(w+1)};function h0(t,e,r){r||(r=Fr.md.sha1.create());for(var i="",n=Math.ceil(e/r.digestLength),s=0;s<n;++s){var a=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,s&255);r.start(),r.update(t+a),i+=r.digest().getBytes()}return i.substring(0,e)}});var Uv=E((tD,pf)=>{var Ui=_e();Qe();f0();va();(function(){if(Ui.prime){pf.exports=Ui.prime;return}var t=pf.exports=Ui.prime=Ui.prime||{},e=Ui.jsbn.BigInteger,r=[6,4,2,4,2,4,6,2],i=new e(null);i.fromInt(30);var n=function(h,l){return h|l};t.generateProbablePrime=function(h,l,d){typeof l=="function"&&(d=l,l={}),l=l||{};var p=l.algorithm||"PRIMEINC";typeof p=="string"&&(p={name:p}),p.options=p.options||{};var y=l.prng||Ui.random,g={nextBytes:function(v){for(var x=y.getBytesSync(v.length),w=0;w<v.length;++w)v[w]=x.charCodeAt(w)}};if(p.name==="PRIMEINC")return s(h,g,p.options,d);throw new Error("Invalid prime generation algorithm: "+p.name)};function s(h,l,d,p){return"workers"in d?f(h,l,d,p):a(h,l,d,p)}function a(h,l,d,p){var y=u(h,l),g=0,v=c(y.bitLength());"millerRabinTests"in d&&(v=d.millerRabinTests);var x=10;"maxBlockTime"in d&&(x=d.maxBlockTime),o(y,h,l,g,v,x,p)}function o(h,l,d,p,y,g,v){var x=+new Date;do{if(h.bitLength()>l&&(h=u(l,d)),h.isProbablePrime(y))return v(null,h);h.dAddOffset(r[p++%8],0)}while(g<0||+new Date-x<g);Ui.util.setImmediate(function(){o(h,l,d,p,y,g,v)})}function f(h,l,d,p){if(typeof Worker=="undefined")return a(h,l,d,p);var y=u(h,l),g=d.workers,v=d.workLoad||100,x=v*30/8,w=d.workerScript||"forge/prime.worker.js";if(g===-1)return Ui.util.estimateCores(function(B,S){B&&(S=2),g=S-1,P()});P();function P(){g=Math.max(1,g);for(var B=[],S=0;S<g;++S)B[S]=new Worker(w);for(var G=g,S=0;S<g;++S)B[S].addEventListener("message",se);var z=!1;function se(Te){if(!z){--G;var ye=Te.data;if(ye.found){for(var pe=0;pe<B.length;++pe)B[pe].terminate();return z=!0,p(null,new e(ye.prime,16))}y.bitLength()>h&&(y=u(h,l));var Ot=y.toString(16);Te.target.postMessage({hex:Ot,workLoad:v}),y.dAddOffset(x,0)}}}}function u(h,l){var d=new e(h,l),p=h-1;return d.testBit(p)||d.bitwiseTo(e.ONE.shiftLeft(p),n,d),d.dAddOffset(31-d.mod(i).byteValue(),0),d}function c(h){return h<=100?27:h<=150?18:h<=200?15:h<=250?12:h<=300?9:h<=350?8:h<=400?7:h<=500?6:h<=600?5:h<=800?4:h<=1250?3:2}})()});var p0=E((rD,Wv)=>{var $=_e();ga();f0();Xo();Fv();Uv();va();Qe();typeof ue=="undefined"&&(ue=$.jsbn.BigInteger);var ue,df=$.util.isNodejs?$r():null,I=$.asn1,Qt=$.util;$.pki=$.pki||{};Wv.exports=$.pki.rsa=$.rsa=$.rsa||{};var Q=$.pki,MC=[6,4,2,4,2,4,6,2],KC={name:"PrivateKeyInfo",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:I.Class.UNIVERSAL,type:I.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:I.Class.UNIVERSAL,type:I.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},FC={name:"RSAPrivateKey",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},UC={name:"RSAPublicKey",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:I.Class.UNIVERSAL,type:I.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},qC=$.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:I.Class.UNIVERSAL,type:I.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:I.Class.UNIVERSAL,type:I.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:I.Class.UNIVERSAL,type:I.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},VC=function(t){var e;if(t.algorithm in Q.oids)e=Q.oids[t.algorithm];else{var r=new Error("Unknown message digest algorithm.");throw r.algorithm=t.algorithm,r}var i=I.oidToDer(e).getBytes(),n=I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[]),s=I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[]);s.value.push(I.create(I.Class.UNIVERSAL,I.Type.OID,!1,i)),s.value.push(I.create(I.Class.UNIVERSAL,I.Type.NULL,!1,""));var a=I.create(I.Class.UNIVERSAL,I.Type.OCTETSTRING,!1,t.digest().getBytes());return n.value.push(s),n.value.push(a),I.toDer(n).getBytes()},qv=function(t,e,r){if(r)return t.modPow(e.e,e.n);if(!e.p||!e.q)return t.modPow(e.d,e.n);e.dP||(e.dP=e.d.mod(e.p.subtract(ue.ONE))),e.dQ||(e.dQ=e.d.mod(e.q.subtract(ue.ONE))),e.qInv||(e.qInv=e.q.modInverse(e.p));var i;do i=new ue($.util.bytesToHex($.random.getBytes(e.n.bitLength()/8)),16);while(i.compareTo(e.n)>=0||!i.gcd(e.n).equals(ue.ONE));t=t.multiply(i.modPow(e.e,e.n)).mod(e.n);for(var n=t.mod(e.p).modPow(e.dP,e.p),s=t.mod(e.q).modPow(e.dQ,e.q);n.compareTo(s)<0;)n=n.add(e.p);var a=n.subtract(s).multiply(e.qInv).mod(e.p).multiply(e.q).add(s);return a=a.multiply(i.modInverse(e.n)).mod(e.n),a};Q.rsa.encrypt=function(t,e,r){var i=r,n,s=Math.ceil(e.n.bitLength()/8);r!==!1&&r!==!0?(i=r===2,n=Vv(t,e,r)):(n=$.util.createBuffer(),n.putBytes(t));for(var a=new ue(n.toHex(),16),o=qv(a,e,i),f=o.toString(16),u=$.util.createBuffer(),c=s-Math.ceil(f.length/2);c>0;)u.putByte(0),--c;return u.putBytes($.util.hexToBytes(f)),u.getBytes()};Q.rsa.decrypt=function(t,e,r,i){var n=Math.ceil(e.n.bitLength()/8);if(t.length!==n){var s=new Error("Encrypted message length is invalid.");throw s.length=t.length,s.expected=n,s}var a=new ue($.util.createBuffer(t).toHex(),16);if(a.compareTo(e.n)>=0)throw new Error("Encrypted message is invalid.");for(var o=qv(a,e,r),f=o.toString(16),u=$.util.createBuffer(),c=n-Math.ceil(f.length/2);c>0;)u.putByte(0),--c;return u.putBytes($.util.hexToBytes(f)),i!==!1?l0(u.getBytes(),e,r):u.getBytes()};Q.rsa.createKeyPairGenerationState=function(t,e,r){typeof t=="string"&&(t=parseInt(t,10)),t=t||2048,r=r||{};var i=r.prng||$.random,n={nextBytes:function(o){for(var f=i.getBytesSync(o.length),u=0;u<o.length;++u)o[u]=f.charCodeAt(u)}},s=r.algorithm||"PRIMEINC",a;if(s==="PRIMEINC")a={algorithm:s,state:0,bits:t,rng:n,eInt:e||65537,e:new ue(null),p:null,q:null,qBits:t>>1,pBits:t-(t>>1),pqState:0,num:null,keys:null},a.e.fromInt(a.eInt);else throw new Error("Invalid key generation algorithm: "+s);return a};Q.rsa.stepKeyPairGenerationState=function(t,e){"algorithm"in t||(t.algorithm="PRIMEINC");var r=new ue(null);r.fromInt(30);for(var i=0,n=function(h,l){return h|l},s=+new Date,a,o=0;t.keys===null&&(e<=0||o<e);){if(t.state===0){var f=t.p===null?t.pBits:t.qBits,u=f-1;t.pqState===0?(t.num=new ue(f,t.rng),t.num.testBit(u)||t.num.bitwiseTo(ue.ONE.shiftLeft(u),n,t.num),t.num.dAddOffset(31-t.num.mod(r).byteValue(),0),i=0,++t.pqState):t.pqState===1?t.num.bitLength()>f?t.pqState=0:t.num.isProbablePrime(HC(t.num.bitLength()))?++t.pqState:t.num.dAddOffset(MC[i++%8],0):t.pqState===2?t.pqState=t.num.subtract(ue.ONE).gcd(t.e).compareTo(ue.ONE)===0?3:0:t.pqState===3&&(t.pqState=0,t.p===null?t.p=t.num:t.q=t.num,t.p!==null&&t.q!==null&&++t.state,t.num=null)}else if(t.state===1)t.p.compareTo(t.q)<0&&(t.num=t.p,t.p=t.q,t.q=t.num),++t.state;else if(t.state===2)t.p1=t.p.subtract(ue.ONE),t.q1=t.q.subtract(ue.ONE),t.phi=t.p1.multiply(t.q1),++t.state;else if(t.state===3)t.phi.gcd(t.e).compareTo(ue.ONE)===0?++t.state:(t.p=null,t.q=null,t.state=0);else if(t.state===4)t.n=t.p.multiply(t.q),t.n.bitLength()===t.bits?++t.state:(t.q=null,t.state=0);else if(t.state===5){var c=t.e.modInverse(t.phi);t.keys={privateKey:Q.rsa.setPrivateKey(t.n,t.e,c,t.p,t.q,c.mod(t.p1),c.mod(t.q1),t.q.modInverse(t.p)),publicKey:Q.rsa.setPublicKey(t.n,t.e)}}a=+new Date,o+=a-s,s=a}return t.keys!==null};Q.rsa.generateKeyPair=function(t,e,r,i){if(arguments.length===1?typeof t=="object"?(r=t,t=void 0):typeof t=="function"&&(i=t,t=void 0):arguments.length===2?typeof t=="number"?typeof e=="function"?(i=e,e=void 0):typeof e!="number"&&(r=e,e=void 0):(r=t,i=e,t=void 0,e=void 0):arguments.length===3&&(typeof e=="number"?typeof r=="function"&&(i=r,r=void 0):(i=r,r=e,e=void 0)),r=r||{},t===void 0&&(t=r.bits||2048),e===void 0&&(e=r.e||65537),!$.options.usePureJavaScript&&!r.prng&&t>=256&&t<=16384&&(e===65537||e===3)){if(i){if(Gv("generateKeyPair"))return df.generateKeyPair("rsa",{modulusLength:t,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}},function(o,f,u){if(o)return i(o);i(null,{privateKey:Q.privateKeyFromPem(u),publicKey:Q.publicKeyFromPem(f)})});if(Hv("generateKey")&&Hv("exportKey"))return Qt.globalScope.crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:jv(e),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(function(o){return Qt.globalScope.crypto.subtle.exportKey("pkcs8",o.privateKey)}).then(void 0,function(o){i(o)}).then(function(o){if(o){var f=Q.privateKeyFromAsn1(I.fromDer($.util.createBuffer(o)));i(null,{privateKey:f,publicKey:Q.setRsaPublicKey(f.n,f.e)})}});if(zv("generateKey")&&zv("exportKey")){var n=Qt.globalScope.msCrypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:jv(e),hash:{name:"SHA-256"}},!0,["sign","verify"]);n.oncomplete=function(o){var f=o.target.result,u=Qt.globalScope.msCrypto.subtle.exportKey("pkcs8",f.privateKey);u.oncomplete=function(c){var h=c.target.result,l=Q.privateKeyFromAsn1(I.fromDer($.util.createBuffer(h)));i(null,{privateKey:l,publicKey:Q.setRsaPublicKey(l.n,l.e)})},u.onerror=function(c){i(c)}},n.onerror=function(o){i(o)};return}}else if(Gv("generateKeyPairSync")){var s=df.generateKeyPairSync("rsa",{modulusLength:t,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}});return{privateKey:Q.privateKeyFromPem(s.privateKey),publicKey:Q.publicKeyFromPem(s.publicKey)}}}var a=Q.rsa.createKeyPairGenerationState(t,e,r);if(!i)return Q.rsa.stepKeyPairGenerationState(a,0),a.keys;GC(a,r,i)};Q.setRsaPublicKey=Q.rsa.setPublicKey=function(t,e){var r={n:t,e};return r.encrypt=function(i,n,s){if(typeof n=="string"?n=n.toUpperCase():n===void 0&&(n="RSAES-PKCS1-V1_5"),n==="RSAES-PKCS1-V1_5")n={encode:function(o,f,u){return Vv(o,f,2).getBytes()}};else if(n==="RSA-OAEP"||n==="RSAES-OAEP")n={encode:function(o,f){return $.pkcs1.encode_rsa_oaep(f,o,s)}};else if(["RAW","NONE","NULL",null].indexOf(n)!==-1)n={encode:function(o){return o}};else if(typeof n=="string")throw new Error('Unsupported encryption scheme: "'+n+'".');var a=n.encode(i,r,!0);return Q.rsa.encrypt(a,r,!0)},r.verify=function(i,n,s){typeof s=="string"?s=s.toUpperCase():s===void 0&&(s="RSASSA-PKCS1-V1_5"),s==="RSASSA-PKCS1-V1_5"?s={verify:function(o,f){f=l0(f,r,!0);var u=I.fromDer(f);return o===u.value[1].value}}:(s==="NONE"||s==="NULL"||s===null)&&(s={verify:function(o,f){return f=l0(f,r,!0),o===f}});var a=Q.rsa.decrypt(n,r,!0,!1);return s.verify(i,a,r.n.bitLength())},r};Q.setRsaPrivateKey=Q.rsa.setPrivateKey=function(t,e,r,i,n,s,a,o){var f={n:t,e,d:r,p:i,q:n,dP:s,dQ:a,qInv:o};return f.decrypt=function(u,c,h){typeof c=="string"?c=c.toUpperCase():c===void 0&&(c="RSAES-PKCS1-V1_5");var l=Q.rsa.decrypt(u,f,!1,!1);if(c==="RSAES-PKCS1-V1_5")c={decode:l0};else if(c==="RSA-OAEP"||c==="RSAES-OAEP")c={decode:function(d,p){return $.pkcs1.decode_rsa_oaep(p,d,h)}};else if(["RAW","NONE","NULL",null].indexOf(c)!==-1)c={decode:function(d){return d}};else throw new Error('Unsupported encryption scheme: "'+c+'".');return c.decode(l,f,!1)},f.sign=function(u,c){var h=!1;typeof c=="string"&&(c=c.toUpperCase()),c===void 0||c==="RSASSA-PKCS1-V1_5"?(c={encode:VC},h=1):(c==="NONE"||c==="NULL"||c===null)&&(c={encode:function(){return u}},h=1);var l=c.encode(u,f.n.bitLength());return Q.rsa.encrypt(l,f,h)},f};Q.wrapRsaPrivateKey=function(t){return I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,I.integerToDer(0).getBytes()),I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[I.create(I.Class.UNIVERSAL,I.Type.OID,!1,I.oidToDer(Q.oids.rsaEncryption).getBytes()),I.create(I.Class.UNIVERSAL,I.Type.NULL,!1,"")]),I.create(I.Class.UNIVERSAL,I.Type.OCTETSTRING,!1,I.toDer(t).getBytes())])};Q.privateKeyFromAsn1=function(t){var e={},r=[];if(I.validate(t,KC,e,r)&&(t=I.fromDer($.util.createBuffer(e.privateKey))),e={},r=[],!I.validate(t,FC,e,r)){var i=new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");throw i.errors=r,i}var n,s,a,o,f,u,c,h;return n=$.util.createBuffer(e.privateKeyModulus).toHex(),s=$.util.createBuffer(e.privateKeyPublicExponent).toHex(),a=$.util.createBuffer(e.privateKeyPrivateExponent).toHex(),o=$.util.createBuffer(e.privateKeyPrime1).toHex(),f=$.util.createBuffer(e.privateKeyPrime2).toHex(),u=$.util.createBuffer(e.privateKeyExponent1).toHex(),c=$.util.createBuffer(e.privateKeyExponent2).toHex(),h=$.util.createBuffer(e.privateKeyCoefficient).toHex(),Q.setRsaPrivateKey(new ue(n,16),new ue(s,16),new ue(a,16),new ue(o,16),new ue(f,16),new ue(u,16),new ue(c,16),new ue(h,16))};Q.privateKeyToAsn1=Q.privateKeyToRSAPrivateKey=function(t){return I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,I.integerToDer(0).getBytes()),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.n)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.e)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.d)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.p)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.q)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.dP)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.dQ)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.qInv))])};Q.publicKeyFromAsn1=function(t){var e={},r=[];if(I.validate(t,qC,e,r)){var i=I.derToOid(e.publicKeyOid);if(i!==Q.oids.rsaEncryption){var n=new Error("Cannot read public key. Unknown OID.");throw n.oid=i,n}t=e.rsaPublicKey}if(r=[],!I.validate(t,UC,e,r)){var n=new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");throw n.errors=r,n}var s=$.util.createBuffer(e.publicKeyModulus).toHex(),a=$.util.createBuffer(e.publicKeyExponent).toHex();return Q.setRsaPublicKey(new ue(s,16),new ue(a,16))};Q.publicKeyToAsn1=Q.publicKeyToSubjectPublicKeyInfo=function(t){return I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[I.create(I.Class.UNIVERSAL,I.Type.OID,!1,I.oidToDer(Q.oids.rsaEncryption).getBytes()),I.create(I.Class.UNIVERSAL,I.Type.NULL,!1,"")]),I.create(I.Class.UNIVERSAL,I.Type.BITSTRING,!1,[Q.publicKeyToRSAPublicKey(t)])])};Q.publicKeyToRSAPublicKey=function(t){return I.create(I.Class.UNIVERSAL,I.Type.SEQUENCE,!0,[I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.n)),I.create(I.Class.UNIVERSAL,I.Type.INTEGER,!1,Ur(t.e))])};function Vv(t,e,r){var i=$.util.createBuffer(),n=Math.ceil(e.n.bitLength()/8);if(t.length>n-11){var s=new Error("Message is too long for PKCS#1 v1.5 padding.");throw s.length=t.length,s.max=n-11,s}i.putByte(0),i.putByte(r);var a=n-3-t.length,o;if(r===0||r===1){o=r===0?0:255;for(var f=0;f<a;++f)i.putByte(o)}else for(;a>0;){for(var u=0,c=$.random.getBytes(a),f=0;f<a;++f)o=c.charCodeAt(f),o===0?++u:i.putByte(o);a=u}return i.putByte(0),i.putBytes(t),i}function l0(t,e,r,i){var n=Math.ceil(e.n.bitLength()/8),s=$.util.createBuffer(t),a=s.getByte(),o=s.getByte();if(a!==0||r&&o!==0&&o!==1||!r&&o!=2||r&&o===0&&typeof i=="undefined")throw new Error("Encryption block is invalid.");var f=0;if(o===0){f=n-3-i;for(var u=0;u<f;++u)if(s.getByte()!==0)throw new Error("Encryption block is invalid.")}else if(o===1)for(f=0;s.length()>1;){if(s.getByte()!==255){--s.read;break}++f}else if(o===2)for(f=0;s.length()>1;){if(s.getByte()===0){--s.read;break}++f}var c=s.getByte();if(c!==0||f!==n-3-s.length())throw new Error("Encryption block is invalid.");return s.getBytes()}function GC(t,e,r){typeof e=="function"&&(r=e,e={}),e=e||{};var i={algorithm:{name:e.algorithm||"PRIMEINC",options:{workers:e.workers||2,workLoad:e.workLoad||100,workerScript:e.workerScript}}};"prng"in e&&(i.prng=e.prng),n();function n(){s(t.pBits,function(o,f){if(o)return r(o);if(t.p=f,t.q!==null)return a(o,t.q);s(t.qBits,a)})}function s(o,f){$.prime.generateProbablePrime(o,i,f)}function a(o,f){if(o)return r(o);if(t.q=f,t.p.compareTo(t.q)<0){var u=t.p;t.p=t.q,t.q=u}if(t.p.subtract(ue.ONE).gcd(t.e).compareTo(ue.ONE)!==0){t.p=null,n();return}if(t.q.subtract(ue.ONE).gcd(t.e).compareTo(ue.ONE)!==0){t.q=null,s(t.qBits,a);return}if(t.p1=t.p.subtract(ue.ONE),t.q1=t.q.subtract(ue.ONE),t.phi=t.p1.multiply(t.q1),t.phi.gcd(t.e).compareTo(ue.ONE)!==0){t.p=t.q=null,n();return}if(t.n=t.p.multiply(t.q),t.n.bitLength()!==t.bits){t.q=null,s(t.qBits,a);return}var c=t.e.modInverse(t.phi);t.keys={privateKey:Q.rsa.setPrivateKey(t.n,t.e,c,t.p,t.q,c.mod(t.p1),c.mod(t.q1),t.q.modInverse(t.p)),publicKey:Q.rsa.setPublicKey(t.n,t.e)},r(null,t.keys)}}function Ur(t){var e=t.toString(16);e[0]>="8"&&(e="00"+e);var r=$.util.hexToBytes(e);return r.length>1&&(r.charCodeAt(0)===0&&(r.charCodeAt(1)&128)==0||r.charCodeAt(0)===255&&(r.charCodeAt(1)&128)==128)?r.substr(1):r}function HC(t){return t<=100?27:t<=150?18:t<=200?15:t<=250?12:t<=300?9:t<=350?8:t<=400?7:t<=500?6:t<=600?5:t<=800?4:t<=1250?3:2}function Gv(t){return $.util.isNodejs&&typeof df[t]=="function"}function Hv(t){return typeof Qt.globalScope!="undefined"&&typeof Qt.globalScope.crypto=="object"&&typeof Qt.globalScope.crypto.subtle=="object"&&typeof Qt.globalScope.crypto.subtle[t]=="function"}function zv(t){return typeof Qt.globalScope!="undefined"&&typeof Qt.globalScope.msCrypto=="object"&&typeof Qt.globalScope.msCrypto.subtle=="object"&&typeof Qt.globalScope.msCrypto.subtle[t]=="function"}function jv(t){for(var e=$.util.hexToBytes(t.toString(16)),r=new Uint8Array(e.length),i=0;i<e.length;++i)r[i]=e.charCodeAt(i);return r}});var Jv=E((iD,Xv)=>{var V=_e();sf();ga();iv();_n();Xo();uv();hv();va();Sv();p0();Qe();typeof Yv=="undefined"&&(Yv=V.jsbn.BigInteger);var Yv,R=V.asn1,J=V.pki=V.pki||{};Xv.exports=J.pbe=V.pbe=V.pbe||{};var An=J.oids,zC={name:"EncryptedPrivateKeyInfo",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:R.Class.UNIVERSAL,type:R.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:R.Class.UNIVERSAL,type:R.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},jC={name:"PBES2Algorithms",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:R.Class.UNIVERSAL,type:R.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:R.Class.UNIVERSAL,type:R.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:R.Class.UNIVERSAL,type:R.Type.INTEGER,constructed:!1,capture:"kdfIterationCount"},{name:"PBES2Algorithms.params.keyLength",tagClass:R.Class.UNIVERSAL,type:R.Type.INTEGER,constructed:!1,optional:!0,capture:"keyLength"},{name:"PBES2Algorithms.params.prf",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,optional:!0,value:[{name:"PBES2Algorithms.params.prf.algorithm",tagClass:R.Class.UNIVERSAL,type:R.Type.OID,constructed:!1,capture:"prfOid"}]}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:R.Class.UNIVERSAL,type:R.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:R.Class.UNIVERSAL,type:R.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},WC={name:"pkcs-12PbeParams",tagClass:R.Class.UNIVERSAL,type:R.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:R.Class.UNIVERSAL,type:R.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:R.Class.UNIVERSAL,type:R.Type.INTEGER,constructed:!1,capture:"iterations"}]};J.encryptPrivateKeyInfo=function(t,e,r){r=r||{},r.saltSize=r.saltSize||8,r.count=r.count||2048,r.algorithm=r.algorithm||"aes128",r.prfAlgorithm=r.prfAlgorithm||"sha1";var i=V.random.getBytesSync(r.saltSize),n=r.count,s=R.integerToDer(n),a,o,f;if(r.algorithm.indexOf("aes")===0||r.algorithm==="des"){var u,c,h;switch(r.algorithm){case"aes128":a=16,u=16,c=An["aes128-CBC"],h=V.aes.createEncryptionCipher;break;case"aes192":a=24,u=16,c=An["aes192-CBC"],h=V.aes.createEncryptionCipher;break;case"aes256":a=32,u=16,c=An["aes256-CBC"],h=V.aes.createEncryptionCipher;break;case"des":a=8,u=8,c=An.desCBC,h=V.des.createEncryptionCipher;break;default:var l=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw l.algorithm=r.algorithm,l}var d="hmacWith"+r.prfAlgorithm.toUpperCase(),p=Zv(d),y=V.pkcs5.pbkdf2(e,i,n,a,p),g=V.random.getBytesSync(u),v=h(y);v.start(g),v.update(R.toDer(t)),v.finish(),f=v.output.getBytes();var x=YC(i,s,a,d);o=R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OID,!1,R.oidToDer(An.pkcs5PBES2).getBytes()),R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OID,!1,R.oidToDer(An.pkcs5PBKDF2).getBytes()),x]),R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OID,!1,R.oidToDer(c).getBytes()),R.create(R.Class.UNIVERSAL,R.Type.OCTETSTRING,!1,g)])])])}else if(r.algorithm==="3des"){a=24;var w=new V.util.ByteBuffer(i),y=J.pbe.generatePkcs12Key(e,w,1,n,a),g=J.pbe.generatePkcs12Key(e,w,2,n,a),v=V.des.createEncryptionCipher(y);v.start(g),v.update(R.toDer(t)),v.finish(),f=v.output.getBytes(),o=R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OID,!1,R.oidToDer(An["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OCTETSTRING,!1,i),R.create(R.Class.UNIVERSAL,R.Type.INTEGER,!1,s.getBytes())])])}else{var l=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw l.algorithm=r.algorithm,l}var P=R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[o,R.create(R.Class.UNIVERSAL,R.Type.OCTETSTRING,!1,f)]);return P};J.decryptPrivateKeyInfo=function(t,e){var r=null,i={},n=[];if(!R.validate(t,zC,i,n)){var s=new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}var a=R.derToOid(i.encryptionOid),o=J.pbe.getCipher(a,i.encryptionParams,e),f=V.util.createBuffer(i.encryptedData);return o.update(f),o.finish()&&(r=R.fromDer(o.output)),r};J.encryptedPrivateKeyToPem=function(t,e){var r={type:"ENCRYPTED PRIVATE KEY",body:R.toDer(t).getBytes()};return V.pem.encode(r,{maxline:e})};J.encryptedPrivateKeyFromPem=function(t){var e=V.pem.decode(t)[0];if(e.type!=="ENCRYPTED PRIVATE KEY"){var r=new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');throw r.headerType=e.type,r}if(e.procType&&e.procType.type==="ENCRYPTED")throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");return R.fromDer(e.body)};J.encryptRsaPrivateKey=function(t,e,r){if(r=r||{},!r.legacy){var i=J.wrapRsaPrivateKey(J.privateKeyToAsn1(t));return i=J.encryptPrivateKeyInfo(i,e,r),J.encryptedPrivateKeyToPem(i)}var n,s,a,o;switch(r.algorithm){case"aes128":n="AES-128-CBC",a=16,s=V.random.getBytesSync(16),o=V.aes.createEncryptionCipher;break;case"aes192":n="AES-192-CBC",a=24,s=V.random.getBytesSync(16),o=V.aes.createEncryptionCipher;break;case"aes256":n="AES-256-CBC",a=32,s=V.random.getBytesSync(16),o=V.aes.createEncryptionCipher;break;case"3des":n="DES-EDE3-CBC",a=24,s=V.random.getBytesSync(8),o=V.des.createEncryptionCipher;break;case"des":n="DES-CBC",a=8,s=V.random.getBytesSync(8),o=V.des.createEncryptionCipher;break;default:var f=new Error('Could not encrypt RSA private key; unsupported encryption algorithm "'+r.algorithm+'".');throw f.algorithm=r.algorithm,f}var u=V.pbe.opensslDeriveBytes(e,s.substr(0,8),a),c=o(u);c.start(s),c.update(R.toDer(J.privateKeyToAsn1(t))),c.finish();var h={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:n,parameters:V.util.bytesToHex(s).toUpperCase()},body:c.output.getBytes()};return V.pem.encode(h)};J.decryptRsaPrivateKey=function(t,e){var r=null,i=V.pem.decode(t)[0];if(i.type!=="ENCRYPTED PRIVATE KEY"&&i.type!=="PRIVATE KEY"&&i.type!=="RSA PRIVATE KEY"){var n=new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');throw n.headerType=n,n}if(i.procType&&i.procType.type==="ENCRYPTED"){var s,a;switch(i.dekInfo.algorithm){case"DES-CBC":s=8,a=V.des.createDecryptionCipher;break;case"DES-EDE3-CBC":s=24,a=V.des.createDecryptionCipher;break;case"AES-128-CBC":s=16,a=V.aes.createDecryptionCipher;break;case"AES-192-CBC":s=24,a=V.aes.createDecryptionCipher;break;case"AES-256-CBC":s=32,a=V.aes.createDecryptionCipher;break;case"RC2-40-CBC":s=5,a=function(h){return V.rc2.createDecryptionCipher(h,40)};break;case"RC2-64-CBC":s=8,a=function(h){return V.rc2.createDecryptionCipher(h,64)};break;case"RC2-128-CBC":s=16,a=function(h){return V.rc2.createDecryptionCipher(h,128)};break;default:var n=new Error('Could not decrypt private key; unsupported encryption algorithm "'+i.dekInfo.algorithm+'".');throw n.algorithm=i.dekInfo.algorithm,n}var o=V.util.hexToBytes(i.dekInfo.parameters),f=V.pbe.opensslDeriveBytes(e,o.substr(0,8),s),u=a(f);if(u.start(o),u.update(V.util.createBuffer(i.body)),u.finish())r=u.output.getBytes();else return r}else r=i.body;return i.type==="ENCRYPTED PRIVATE KEY"?r=J.decryptPrivateKeyInfo(R.fromDer(r),e):r=R.fromDer(r),r!==null&&(r=J.privateKeyFromAsn1(r)),r};J.pbe.generatePkcs12Key=function(t,e,r,i,n,s){var a,o;if(typeof s=="undefined"||s===null){if(!("sha1"in V.md))throw new Error('"sha1" hash algorithm unavailable.');s=V.md.sha1.create()}var f=s.digestLength,u=s.blockLength,c=new V.util.ByteBuffer,h=new V.util.ByteBuffer;if(t!=null){for(o=0;o<t.length;o++)h.putInt16(t.charCodeAt(o));h.putInt16(0)}var l=h.length(),d=e.length(),p=new V.util.ByteBuffer;p.fillWithByte(r,u);var y=u*Math.ceil(d/u),g=new V.util.ByteBuffer;for(o=0;o<y;o++)g.putByte(e.at(o%d));var v=u*Math.ceil(l/u),x=new V.util.ByteBuffer;for(o=0;o<v;o++)x.putByte(h.at(o%l));var w=g;w.putBuffer(x);for(var P=Math.ceil(n/f),B=1;B<=P;B++){var S=new V.util.ByteBuffer;S.putBytes(p.bytes()),S.putBytes(w.bytes());for(var G=0;G<i;G++)s.start(),s.update(S.getBytes()),S=s.digest();var z=new V.util.ByteBuffer;for(o=0;o<u;o++)z.putByte(S.at(o%f));var se=Math.ceil(d/u)+Math.ceil(l/u),Te=new V.util.ByteBuffer;for(a=0;a<se;a++){var ye=new V.util.ByteBuffer(w.getBytes(u)),pe=511;for(o=z.length()-1;o>=0;o--)pe=pe>>8,pe+=z.at(o)+ye.at(o),ye.setAt(o,pe&255);Te.putBuffer(ye)}w=Te,c.putBuffer(S)}return c.truncate(c.length()-n),c};J.pbe.getCipher=function(t,e,r){switch(t){case J.oids.pkcs5PBES2:return J.pbe.getCipherForPBES2(t,e,r);case J.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case J.oids["pbewithSHAAnd40BitRC2-CBC"]:return J.pbe.getCipherForPKCS12PBE(t,e,r);default:var i=new Error("Cannot read encrypted PBE data block. Unsupported OID.");throw i.oid=t,i.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"],i}};J.pbe.getCipherForPBES2=function(t,e,r){var i={},n=[];if(!R.validate(e,jC,i,n)){var s=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}if(t=R.derToOid(i.kdfOid),t!==J.oids.pkcs5PBKDF2){var s=new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");throw s.oid=t,s.supportedOids=["pkcs5PBKDF2"],s}if(t=R.derToOid(i.encOid),t!==J.oids["aes128-CBC"]&&t!==J.oids["aes192-CBC"]&&t!==J.oids["aes256-CBC"]&&t!==J.oids["des-EDE3-CBC"]&&t!==J.oids.desCBC){var s=new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");throw s.oid=t,s.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC","des-EDE3-CBC","desCBC"],s}var a=i.kdfSalt,o=V.util.createBuffer(i.kdfIterationCount);o=o.getInt(o.length()<<3);var f,u;switch(J.oids[t]){case"aes128-CBC":f=16,u=V.aes.createDecryptionCipher;break;case"aes192-CBC":f=24,u=V.aes.createDecryptionCipher;break;case"aes256-CBC":f=32,u=V.aes.createDecryptionCipher;break;case"des-EDE3-CBC":f=24,u=V.des.createDecryptionCipher;break;case"desCBC":f=8,u=V.des.createDecryptionCipher;break}var c=Qv(i.prfOid),h=V.pkcs5.pbkdf2(r,a,o,f,c),l=i.encIv,d=u(h);return d.start(l),d};J.pbe.getCipherForPKCS12PBE=function(t,e,r){var i={},n=[];if(!R.validate(e,WC,i,n)){var s=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}var a=V.util.createBuffer(i.salt),o=V.util.createBuffer(i.iterations);o=o.getInt(o.length()<<3);var f,u,c;switch(t){case J.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:f=24,u=8,c=V.des.startDecrypting;break;case J.oids["pbewithSHAAnd40BitRC2-CBC"]:f=5,u=8,c=function(y,g){var v=V.rc2.createDecryptionCipher(y,40);return v.start(g,null),v};break;default:var s=new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");throw s.oid=t,s}var h=Qv(i.prfOid),l=J.pbe.generatePkcs12Key(r,a,1,o,f,h);h.start();var d=J.pbe.generatePkcs12Key(r,a,2,o,u,h);return c(l,d)};J.pbe.opensslDeriveBytes=function(t,e,r,i){if(typeof i=="undefined"||i===null){if(!("md5"in V.md))throw new Error('"md5" hash algorithm unavailable.');i=V.md.md5.create()}e===null&&(e="");for(var n=[$v(i,t+e)],s=16,a=1;s<r;++a,s+=16)n.push($v(i,n[a-1]+t+e));return n.join("").substr(0,r)};function $v(t,e){return t.start().update(e).digest().getBytes()}function Qv(t){var e;if(!t)e="hmacWithSHA1";else if(e=J.oids[R.derToOid(t)],!e){var r=new Error("Unsupported PRF OID.");throw r.oid=t,r.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],r}return Zv(e)}function Zv(t){var e=V.md;switch(t){case"hmacWithSHA224":e=V.md.sha512;case"hmacWithSHA1":case"hmacWithSHA256":case"hmacWithSHA384":case"hmacWithSHA512":t=t.substr(8).toLowerCase();break;default:var r=new Error("Unsupported PRF algorithm.");throw r.algorithm=t,r.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],r}if(!e||!(t in e))throw new Error("Unknown hash algorithm: "+t);return e[t].create()}function YC(t,e,r,i){var n=R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OCTETSTRING,!1,t),R.create(R.Class.UNIVERSAL,R.Type.INTEGER,!1,e.getBytes())]);return i!=="hmacWithSHA1"&&n.value.push(R.create(R.Class.UNIVERSAL,R.Type.INTEGER,!1,V.util.hexToBytes(r.toString(16))),R.create(R.Class.UNIVERSAL,R.Type.SEQUENCE,!0,[R.create(R.Class.UNIVERSAL,R.Type.OID,!1,R.oidToDer(J.oids[i]).getBytes()),R.create(R.Class.UNIVERSAL,R.Type.NULL,!1,"")])),n}});var ba=E(ex=>{"use strict";ex.get=(t=globalThis)=>{let e=t.crypto;if(!e||!e.subtle)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}});var yf=E((sD,rx)=>{"use strict";var{concat:$C}=(ar(),sr),{fromString:tx}=(st(),nt),QC=ba();function ZC({algorithm:t="AES-GCM",nonceLength:e=12,keyLength:r=16,digest:i="SHA-256",saltLength:n=16,iterations:s=32767}={}){let a=QC.get();r*=8;async function o(u,c){let h=a.getRandomValues(new Uint8Array(n)),l=a.getRandomValues(new Uint8Array(e)),d={name:t,iv:l},p={name:"PBKDF2",salt:h,iterations:s,hash:{name:i}},y=await a.subtle.importKey("raw",tx(c),{name:"PBKDF2"},!1,["deriveKey","deriveBits"]),g=await a.subtle.deriveKey(p,y,{name:t,length:r},!0,["encrypt"]),v=await a.subtle.encrypt(d,g,u);return $C([h,d.iv,new Uint8Array(v)])}async function f(u,c){let h=u.slice(0,n),l=u.slice(n,n+e),d=u.slice(n+e),p={name:t,iv:l},y={name:"PBKDF2",salt:h,iterations:s,hash:{name:i}},g=await a.subtle.importKey("raw",tx(c),{name:"PBKDF2"},!1,["deriveKey","deriveBits"]),v=await a.subtle.deriveKey(y,g,{name:t,length:r},!0,["decrypt"]),x=await a.subtle.decrypt(p,v,d);return new Uint8Array(x)}return{encrypt:o,decrypt:f}}rx.exports={create:ZC}});var nx=E((aD,ix)=>{"use strict";var{base64:XC}=(on(),Ei),JC=yf();ix.exports={import:async function(t,e){let r=XC.decode(t);return await JC.create().decrypt(r,e)}}});var cx=E((oD,ux)=>{var Ne=_e();_n();Qe();var ma=ux.exports=Ne.sha512=Ne.sha512||{};Ne.md.sha512=Ne.md.algorithms.sha512=ma;var sx=Ne.sha384=Ne.sha512.sha384=Ne.sha512.sha384||{};sx.create=function(){return ma.create("SHA-384")};Ne.md.sha384=Ne.md.algorithms.sha384=sx;Ne.sha512.sha256=Ne.sha512.sha256||{create:function(){return ma.create("SHA-512/256")}};Ne.md["sha512/256"]=Ne.md.algorithms["sha512/256"]=Ne.sha512.sha256;Ne.sha512.sha224=Ne.sha512.sha224||{create:function(){return ma.create("SHA-512/224")}};Ne.md["sha512/224"]=Ne.md.algorithms["sha512/224"]=Ne.sha512.sha224;ma.create=function(t){if(ax||e3(),typeof t=="undefined"&&(t="SHA-512"),!(t in Cn))throw new Error("Invalid SHA-512 algorithm: "+t);for(var e=Cn[t],r=null,i=Ne.util.createBuffer(),n=new Array(80),s=0;s<80;++s)n[s]=new Array(2);var a=64;switch(t){case"SHA-384":a=48;break;case"SHA-512/256":a=32;break;case"SHA-512/224":a=28;break}var o={algorithm:t.replace("-","").toLowerCase(),blockLength:128,digestLength:a,messageLength:0,fullMessageLength:null,messageLengthSize:16};return o.start=function(){o.messageLength=0,o.fullMessageLength=o.messageLength128=[];for(var f=o.messageLengthSize/4,u=0;u<f;++u)o.fullMessageLength.push(0);i=Ne.util.createBuffer(),r=new Array(e.length);for(var u=0;u<e.length;++u)r[u]=e[u].slice(0);return o},o.start(),o.update=function(f,u){u==="utf8"&&(f=Ne.util.encodeUtf8(f));var c=f.length;o.messageLength+=c,c=[c/4294967296>>>0,c>>>0];for(var h=o.fullMessageLength.length-1;h>=0;--h)o.fullMessageLength[h]+=c[1],c[1]=c[0]+(o.fullMessageLength[h]/4294967296>>>0),o.fullMessageLength[h]=o.fullMessageLength[h]>>>0,c[0]=c[1]/4294967296>>>0;return i.putBytes(f),ox(r,n,i),(i.read>2048||i.length()===0)&&i.compact(),o},o.digest=function(){var f=Ne.util.createBuffer();f.putBytes(i.bytes());var u=o.fullMessageLength[o.fullMessageLength.length-1]+o.messageLengthSize,c=u&o.blockLength-1;f.putBytes(gf.substr(0,o.blockLength-c));for(var h,l,d=o.fullMessageLength[0]*8,p=0;p<o.fullMessageLength.length-1;++p)h=o.fullMessageLength[p+1]*8,l=h/4294967296>>>0,d+=l,f.putInt32(d>>>0),d=h>>>0;f.putInt32(d);for(var y=new Array(r.length),p=0;p<r.length;++p)y[p]=r[p].slice(0);ox(y,n,f);var g=Ne.util.createBuffer(),v;t==="SHA-512"?v=y.length:t==="SHA-384"?v=y.length-2:v=y.length-4;for(var p=0;p<v;++p)g.putInt32(y[p][0]),(p!==v-1||t!=="SHA-512/224")&&g.putInt32(y[p][1]);return g},o};var gf=null,ax=!1,vf=null,Cn=null;function e3(){gf=String.fromCharCode(128),gf+=Ne.util.fillString(String.fromCharCode(0),128),vf=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]],Cn={},Cn["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]],Cn["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]],Cn["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,1401305490],[721525244,746961066],[246885852,2177182882]],Cn["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]],ax=!0}function ox(t,e,r){for(var i,n,s,a,o,f,u,c,h,l,d,p,y,g,v,x,w,P,B,S,G,z,se,Te,ye,pe,Ot,Hr,Z,be,O,zi,ji,Wi,Yi,_s=r.length();_s>=128;){for(Z=0;Z<16;++Z)e[Z][0]=r.getInt32()>>>0,e[Z][1]=r.getInt32()>>>0;for(;Z<80;++Z)zi=e[Z-2],be=zi[0],O=zi[1],i=((be>>>19|O<<13)^(O>>>29|be<<3)^be>>>6)>>>0,n=((be<<13|O>>>19)^(O<<3|be>>>29)^(be<<26|O>>>6))>>>0,Wi=e[Z-15],be=Wi[0],O=Wi[1],s=((be>>>1|O<<31)^(be>>>8|O<<24)^be>>>7)>>>0,a=((be<<31|O>>>1)^(be<<24|O>>>8)^(be<<25|O>>>7))>>>0,ji=e[Z-7],Yi=e[Z-16],O=n+ji[1]+a+Yi[1],e[Z][0]=i+ji[0]+s+Yi[0]+(O/4294967296>>>0)>>>0,e[Z][1]=O>>>0;for(y=t[0][0],g=t[0][1],v=t[1][0],x=t[1][1],w=t[2][0],P=t[2][1],B=t[3][0],S=t[3][1],G=t[4][0],z=t[4][1],se=t[5][0],Te=t[5][1],ye=t[6][0],pe=t[6][1],Ot=t[7][0],Hr=t[7][1],Z=0;Z<80;++Z)u=((G>>>14|z<<18)^(G>>>18|z<<14)^(z>>>9|G<<23))>>>0,c=((G<<18|z>>>14)^(G<<14|z>>>18)^(z<<23|G>>>9))>>>0,h=(ye^G&(se^ye))>>>0,l=(pe^z&(Te^pe))>>>0,o=((y>>>28|g<<4)^(g>>>2|y<<30)^(g>>>7|y<<25))>>>0,f=((y<<4|g>>>28)^(g<<30|y>>>2)^(g<<25|y>>>7))>>>0,d=(y&v|w&(y^v))>>>0,p=(g&x|P&(g^x))>>>0,O=Hr+c+l+vf[Z][1]+e[Z][1],i=Ot+u+h+vf[Z][0]+e[Z][0]+(O/4294967296>>>0)>>>0,n=O>>>0,O=f+p,s=o+d+(O/4294967296>>>0)>>>0,a=O>>>0,Ot=ye,Hr=pe,ye=se,pe=Te,se=G,Te=z,O=S+n,G=B+i+(O/4294967296>>>0)>>>0,z=O>>>0,B=w,S=P,w=v,P=x,v=y,x=g,O=n+a,y=i+s+(O/4294967296>>>0)>>>0,g=O>>>0;O=t[0][1]+g,t[0][0]=t[0][0]+y+(O/4294967296>>>0)>>>0,t[0][1]=O>>>0,O=t[1][1]+x,t[1][0]=t[1][0]+v+(O/4294967296>>>0)>>>0,t[1][1]=O>>>0,O=t[2][1]+P,t[2][0]=t[2][0]+w+(O/4294967296>>>0)>>>0,t[2][1]=O>>>0,O=t[3][1]+S,t[3][0]=t[3][0]+B+(O/4294967296>>>0)>>>0,t[3][1]=O>>>0,O=t[4][1]+z,t[4][0]=t[4][0]+G+(O/4294967296>>>0)>>>0,t[4][1]=O>>>0,O=t[5][1]+Te,t[5][0]=t[5][0]+se+(O/4294967296>>>0)>>>0,t[5][1]=O>>>0,O=t[6][1]+pe,t[6][0]=t[6][0]+ye+(O/4294967296>>>0)>>>0,t[6][1]=O>>>0,O=t[7][1]+Hr,t[7][0]=t[7][0]+Ot+(O/4294967296>>>0)>>>0,t[7][1]=O>>>0,_s-=128}}});var xf=E((uD,fx)=>{"use strict";var t3=Za(),r3=Oe();fx.exports=function(t){if(isNaN(t)||t<=0)throw r3(new Error("random bytes length must be a Number bigger than 0"),"ERR_INVALID_LENGTH");return t3(t)}});var d0=E(Ea=>{"use strict";Qe();f0();var i3=_e(),{fromString:n3}=(st(),nt),{toString:hx}=(yt(),dt),{concat:lx}=(ar(),sr);Ea.bigIntegerToUintBase64url=(t,e)=>{let r=Uint8Array.from(t.abs().toByteArray());if(r=r[0]===0?r.slice(1):r,e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=lx([new Uint8Array(e-r.length),r])}return hx(r,"base64url")};Ea.base64urlToBigInteger=t=>{let e=Ea.base64urlToBuffer(t);return new i3.jsbn.BigInteger(hx(e,"base16"),16)};Ea.base64urlToBuffer=(t,e)=>{let r=n3(t,"base64urlpad");if(e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=lx([new Uint8Array(e-r.length),r])}return r}});var yx=E(wa=>{"use strict";ga();p0();var qi=_e(),{bigIntegerToUintBase64url:qr,base64urlToBigInteger:Vr}=d0(),{fromString:px}=(st(),nt),{toString:dx}=(yt(),dt);wa.pkcs1ToJwk=function(t){let e=qi.asn1.fromDer(dx(t,"ascii")),r=qi.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:qr(r.n),e:qr(r.e),d:qr(r.d),p:qr(r.p),q:qr(r.q),dp:qr(r.dP),dq:qr(r.dQ),qi:qr(r.qInv),alg:"RS256",kid:"2011-04-29"}};wa.jwkToPkcs1=function(t){let e=qi.pki.privateKeyToAsn1({n:Vr(t.n),e:Vr(t.e),d:Vr(t.d),p:Vr(t.p),q:Vr(t.q),dP:Vr(t.dp),dQ:Vr(t.dq),qInv:Vr(t.qi)});return px(qi.asn1.toDer(e).getBytes(),"ascii")};wa.pkixToJwk=function(t){let e=qi.asn1.fromDer(dx(t,"ascii")),r=qi.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:qr(r.n),e:qr(r.e),alg:"RS256",kid:"2011-04-29"}};wa.jwkToPkix=function(t){let e=qi.pki.publicKeyToAsn1({n:Vr(t.n),e:Vr(t.e)});return px(qi.asn1.toDer(e).getBytes(),"ascii")}});var bx=E((hD,xx)=>{"use strict";p0();var gx=_e(),{base64urlToBigInteger:s3}=d0();function vx(t,e){return e.map(r=>s3(t[r]))}function a3(t){return gx.pki.setRsaPrivateKey(...vx(t,["n","e","d","p","q","dp","dq","qi"]))}function o3(t){return gx.pki.setRsaPublicKey(...vx(t,["n","e"]))}xx.exports={jwk2pub:o3,jwk2priv:a3}});var wx=E(fi=>{"use strict";var ci=ba(),u3=xf(),{toString:c3}=(yt(),dt),{fromString:f3}=(st(),nt);fi.utils=yx();fi.generateKey=async function(t){let e=await ci.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),r=await mx(e);return{privateKey:r[0],publicKey:r[1]}};fi.unmarshalPrivateKey=async function(t){let r=[await ci.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await h3(t)],i=await mx({privateKey:r[0],publicKey:r[1]});return{privateKey:i[0],publicKey:i[1]}};fi.getRandomValues=u3;fi.hashAndSign=async function(t,e){let r=await ci.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),i=await ci.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},r,Uint8Array.from(e));return new Uint8Array(i,i.byteOffset,i.byteLength)};fi.hashAndVerify=async function(t,e,r){let i=await ci.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return ci.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},i,e,r)};function mx(t){return Promise.all([ci.get().subtle.exportKey("jwk",t.privateKey),ci.get().subtle.exportKey("jwk",t.publicKey)])}function h3(t){return ci.get().subtle.importKey("jwk",{kty:t.kty,n:t.n,e:t.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}var{jwk2pub:l3,jwk2priv:p3}=bx();function Ex(t,e,r,i){let n=e?l3(t):p3(t),s=c3(Uint8Array.from(r),"ascii"),a=i(s,n);return f3(a,"ascii")}fi.encrypt=function(t,e){return Ex(t,!0,e,(r,i)=>i.encrypt(r))};fi.decrypt=function(t,e){return Ex(t,!1,e,(r,i)=>i.decrypt(r))}});var y0=E((pD,Sx)=>{"use strict";var{base64:d3}=(on(),Ei),y3=yf();Sx.exports={export:async function(t,e){let i=await y3.create().encrypt(t,e);return d3.encode(i)}}});var Cx=E((dD,Ax)=>{"use strict";var{sha256:_x}=(rr(),qt),Ix=Oe(),{equals:Bx}=(ur(),or),{toString:g3}=(yt(),dt);cx();var g0=_e(),Zt=wx(),v0=Qo(),v3=y0(),x0=class{constructor(e){this._key=e}async verify(e,r){return Zt.hashAndVerify(this._key,r,e)}marshal(){return Zt.utils.jwkToPkix(this._key)}get bytes(){return v0.PublicKey.encode({Type:v0.KeyType.RSA,Data:this.marshal()}).finish()}encrypt(e){return Zt.encrypt(this._key,e)}equals(e){return Bx(this.bytes,e.bytes)}async hash(){let{bytes:e}=await _x.digest(this.bytes);return e}},Sa=class{constructor(e,r){this._key=e,this._publicKey=r}genSecret(){return Zt.getRandomValues(16)}async sign(e){return Zt.hashAndSign(this._key,e)}get public(){if(!this._publicKey)throw Ix(new Error("public key not provided"),"ERR_PUBKEY_NOT_PROVIDED");return new x0(this._publicKey)}decrypt(e){return Zt.decrypt(this._key,e)}marshal(){return Zt.utils.jwkToPkcs1(this._key)}get bytes(){return v0.PrivateKey.encode({Type:v0.KeyType.RSA,Data:this.marshal()}).finish()}equals(e){return Bx(this.bytes,e.bytes)}async hash(){let{bytes:e}=await _x.digest(this.bytes);return e}async id(){let e=await this.public.hash();return g3(e,"base58btc")}async export(e,r="pkcs-8"){if(r==="pkcs-8"){let i=new g0.util.ByteBuffer(this.marshal()),n=g0.asn1.fromDer(i),s=g0.pki.privateKeyFromAsn1(n),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return g0.pki.encryptRsaPrivateKey(s,e,a)}else{if(r==="libp2p-key")return v3.export(this.bytes,e);throw Ix(new Error(`export format '${r}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}}};async function x3(t){let e=Zt.utils.pkcs1ToJwk(t),r=await Zt.unmarshalPrivateKey(e);return new Sa(r.privateKey,r.publicKey)}function b3(t){let e=Zt.utils.pkixToJwk(t);return new x0(e)}async function m3(t){let e=await Zt.unmarshalPrivateKey(t);return new Sa(e.privateKey,e.publicKey)}async function E3(t){let e=await Zt.generateKey(t);return new Sa(e.privateKey,e.publicKey)}Ax.exports={RsaPublicKey:x0,RsaPrivateKey:Sa,unmarshalRsaPublicKey:b3,unmarshalRsaPrivateKey:x3,generateKeyPair:E3,fromJwk:m3}});var Rx=E(Vi=>{"use strict";var _a=bc(),w3=32,S3=64,b0=32;Vi.publicKeyLength=w3;Vi.privateKeyLength=S3;Vi.generateKey=async function(){let t=_a.utils.randomPrivateKey(),e=await _a.getPublicKey(t);return{privateKey:Tx(t,e),publicKey:e}};Vi.generateKeyFromSeed=async function(t){if(t.length!==b0)throw new TypeError('"seed" must be 32 bytes in length.');if(!(t instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');let e=t,r=await _a.getPublicKey(e);return{privateKey:Tx(e,r),publicKey:r}};Vi.hashAndSign=function(t,e){let r=t.slice(0,b0);return _a.sign(e,r)};Vi.hashAndVerify=function(t,e,r){return _a.verify(e,r,t)};function Tx(t,e){let r=new Uint8Array(Vi.privateKeyLength);for(let i=0;i<b0;i++)r[i]=t[i],r[b0+i]=e[i];return r}});var Ox=E((gD,Nx)=>{"use strict";var Dx=Oe(),{equals:Px}=(ur(),or),{sha256:kx}=(rr(),qt),{base58btc:_3}=(an(),sn),{identity:I3}=(Ls(),Qn),wt=Rx(),m0=Qo(),B3=y0(),E0=class{constructor(e){this._key=Es(e,wt.publicKeyLength)}async verify(e,r){return wt.hashAndVerify(this._key,r,e)}marshal(){return this._key}get bytes(){return m0.PublicKey.encode({Type:m0.KeyType.Ed25519,Data:this.marshal()}).finish()}equals(e){return Px(this.bytes,e.bytes)}async hash(){let{bytes:e}=await kx.digest(this.bytes);return e}},ms=class{constructor(e,r){this._key=Es(e,wt.privateKeyLength),this._publicKey=Es(r,wt.publicKeyLength)}async sign(e){return wt.hashAndSign(this._key,e)}get public(){return new E0(this._publicKey)}marshal(){return this._key}get bytes(){return m0.PrivateKey.encode({Type:m0.KeyType.Ed25519,Data:this.marshal()}).finish()}equals(e){return Px(this.bytes,e.bytes)}async hash(){let{bytes:e}=await kx.digest(this.bytes);return e}async id(){let e=await I3.digest(this.public.bytes);return _3.encode(e.bytes).substring(1)}async export(e,r="libp2p-key"){if(r==="libp2p-key")return B3.export(this.bytes,e);throw Dx(new Error(`export format '${r}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}};function A3(t){if(t.length>wt.privateKeyLength){t=Es(t,wt.privateKeyLength+wt.publicKeyLength);let i=t.slice(0,wt.privateKeyLength),n=t.slice(wt.privateKeyLength,t.length);return new ms(i,n)}t=Es(t,wt.privateKeyLength);let e=t.slice(0,wt.privateKeyLength),r=t.slice(wt.publicKeyLength);return new ms(e,r)}function C3(t){return t=Es(t,wt.publicKeyLength),new E0(t)}async function T3(){let{privateKey:t,publicKey:e}=await wt.generateKey();return new ms(t,e)}async function R3(t){let{privateKey:e,publicKey:r}=await wt.generateKeyFromSeed(t);return new ms(e,r)}function Es(t,e){if(t=Uint8Array.from(t||[]),t.length!==e)throw Dx(new Error(`Key must be a Uint8Array of length ${e}, got ${t.length}`),"ERR_INVALID_KEY_TYPE");return t}Nx.exports={Ed25519PublicKey:E0,Ed25519PrivateKey:ms,unmarshalEd25519PrivateKey:A3,unmarshalEd25519PublicKey:C3,generateKeyPair:T3,generateKeyPairFromSeed:R3}});var Kx=E((vD,Mx)=>{"use strict";var Ia=Oe(),Gi=Tc(),{sha256:Lx}=(rr(),qt);Mx.exports=()=>{let t=32;function e(){return Gi.utils.randomPrivateKey()}async function r(u,c){let{digest:h}=await Lx.digest(c);try{return await Gi.sign(h,u)}catch(l){throw Ia(l,"ERR_INVALID_INPUT")}}async function i(u,c,h){try{let{digest:l}=await Lx.digest(h);return Gi.verify(c,l,u)}catch(l){throw Ia(l,"ERR_INVALID_INPUT")}}function n(u){return Gi.Point.fromHex(u).toRawBytes(!0)}function s(u){return Gi.Point.fromHex(u).toRawBytes(!1)}function a(u){try{Gi.getPublicKey(u,!0)}catch(c){throw Ia(c,"ERR_INVALID_PRIVATE_KEY")}}function o(u){try{Gi.Point.fromHex(u)}catch(c){throw Ia(c,"ERR_INVALID_PUBLIC_KEY")}}function f(u){try{return Gi.getPublicKey(u,!0)}catch(c){throw Ia(c,"ERR_INVALID_PRIVATE_KEY")}}return{generateKey:e,privateKeyLength:t,hashAndSign:r,hashAndVerify:i,compressPublicKey:n,decompressPublicKey:s,validatePrivateKey:a,validatePublicKey:o,computePublicKey:f}}});var Vx=E((xD,qx)=>{"use strict";var{sha256:Fx}=(rr(),qt),D3=Oe(),{equals:Ux}=(ur(),or),{toString:P3}=(yt(),dt),k3=y0();qx.exports=(t,e,r)=>{r=r||Kx()();class i{constructor(u){r.validatePublicKey(u),this._key=u}verify(u,c){return r.hashAndVerify(this._key,c,u)}marshal(){return r.compressPublicKey(this._key)}get bytes(){return t.PublicKey.encode({Type:t.KeyType.Secp256k1,Data:this.marshal()}).finish()}equals(u){return Ux(this.bytes,u.bytes)}async hash(){let{bytes:u}=await Fx.digest(this.bytes);return u}}class n{constructor(u,c){this._key=u,this._publicKey=c||r.computePublicKey(u),r.validatePrivateKey(this._key),r.validatePublicKey(this._publicKey)}sign(u){return r.hashAndSign(this._key,u)}get public(){return new i(this._publicKey)}marshal(){return this._key}get bytes(){return t.PrivateKey.encode({Type:t.KeyType.Secp256k1,Data:this.marshal()}).finish()}equals(u){return Ux(this.bytes,u.bytes)}async hash(){let{bytes:u}=await Fx.digest(this.bytes);return u}async id(){let u=await this.public.hash();return P3(u,"base58btc")}async export(u,c="libp2p-key"){if(c==="libp2p-key")return k3.export(this.bytes,u);throw D3(new Error(`export format '${c}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}}function s(f){return new n(f)}function a(f){return new i(f)}async function o(){let f=await r.generateKey();return new n(f)}return{Secp256k1PublicKey:i,Secp256k1PrivateKey:n,unmarshalSecp256k1PrivateKey:s,unmarshalSecp256k1PublicKey:a,generateKeyPair:o}}});var Hx=E((bD,Gx)=>{"use strict";Gx.exports={SHA1:20,SHA256:32,SHA512:64}});var Wx=E(jx=>{"use strict";var zx=ba(),N3=Hx(),O3={SHA1:"SHA-1",SHA256:"SHA-256",SHA512:"SHA-512"},L3=async(t,e)=>{let r=await zx.get().subtle.sign({name:"HMAC"},t,e);return new Uint8Array(r,r.byteOffset,r.byteLength)};jx.create=async function(t,e){let r=O3[t],i=await zx.get().subtle.importKey("raw",e,{name:"HMAC",hash:{name:r}},!1,["sign"]);return{async digest(n){return L3(i,n)},length:N3[t]}}});var Xx=E((ED,Zx)=>{"use strict";var Yx=Oe(),{concat:$x}=(ar(),sr),{fromString:M3}=(st(),nt),K3=Wx(),Qx={"AES-128":{ivSize:16,keySize:16},"AES-256":{ivSize:16,keySize:32},Blowfish:{ivSize:8,cipherKeySize:32}};Zx.exports=async(t,e,r)=>{let i=Qx[t];if(!i){let x=Object.keys(Qx).join(" / ");throw Yx(new Error(`unknown cipher type '${t}'. Must be ${x}`),"ERR_INVALID_CIPHER_TYPE")}if(!e)throw Yx(new Error("missing hash type"),"ERR_MISSING_HASH_TYPE");let n=i.keySize,s=i.ivSize,a=20,o=M3("key expansion"),f=2*(s+n+a),u=await K3.create(e,r),c=await u.digest(o),h=[],l=0;for(;l<f;){let x=await u.digest($x([c,o])),w=x.length;l+w>f&&(w=f-l),h.push(x),l+=w,c=await u.digest(c)}let d=f/2,p=$x(h),y=p.slice(0,d),g=p.slice(d,f),v=x=>({iv:x.slice(0,s),cipherKey:x.slice(s,s+n),macKey:x.slice(s+n)});return{k1:v(y),k2:v(g)}}});var eb=E((wD,Jx)=>{"use strict";var F3=Oe();Jx.exports=function(t,e){if(!t.includes(e)){let r=t.join(" / ");throw F3(new Error(`Unknown curve: ${e}. Must be ${r}`),"ERR_INVALID_CURVE")}}});var ab=E(sb=>{"use strict";var U3=Oe(),Ba=ba(),{base64urlToBuffer:tb}=d0(),q3=eb(),{toString:bf}=(yt(),dt),{concat:V3}=(ar(),sr),{equals:G3}=(ur(),or),rb={"P-256":256,"P-384":384,"P-521":521};sb.generateEphmeralKeyPair=async function(t){q3(Object.keys(rb),t);let e=await Ba.get().subtle.generateKey({name:"ECDH",namedCurve:t},!0,["deriveBits"]),r=async(n,s)=>{let a;s?a=await Ba.get().subtle.importKey("jwk",z3(t,s),{name:"ECDH",namedCurve:t},!1,["deriveBits"]):a=e.privateKey;let o=[await Ba.get().subtle.importKey("jwk",nb(t,n),{name:"ECDH",namedCurve:t},!1,[]),a],f=await Ba.get().subtle.deriveBits({name:"ECDH",namedCurve:t,public:o[0]},o[1],rb[t]);return new Uint8Array(f,f.byteOffset,f.byteLength)},i=await Ba.get().subtle.exportKey("jwk",e.publicKey);return{key:H3(i),genSharedKey:r}};var ib={"P-256":32,"P-384":48,"P-521":66};function H3(t){let e=ib[t.crv];return V3([Uint8Array.from([4]),tb(t.x,e),tb(t.y,e)],1+e*2)}function nb(t,e){let r=ib[t];if(G3(!e.slice(0,1),Uint8Array.from([4])))throw U3(new Error("Cannot unmarshal public key - invalid key format"),"ERR_INVALID_KEY_FORMAT");return{kty:"EC",crv:t,x:bf(e.slice(1,r+1),"base64url"),y:bf(e.slice(1+r),"base64url"),ext:!0}}var z3=(t,e)=>({...nb(t,e.public),d:bf(e.private,"base64url")})});var ub=E((_D,ob)=>{"use strict";var j3=ab();ob.exports=async t=>j3.generateEphmeralKeyPair(t)});var hb=E((ID,fb)=>{"use strict";var Gr=Qo();ga();Jv();var mf=_e(),Aa=Oe(),{fromString:W3}=(st(),nt),Y3=nx(),Xt={rsa:Cx(),ed25519:Ox(),secp256k1:Vx()(Gr,xf())},w0={message:"secp256k1 support requires libp2p-crypto-secp256k1 package",code:"ERR_MISSING_PACKAGE"};function ws(t){let e=Xt[t.toLowerCase()];if(!e){let r=Object.keys(Xt).join(" / ");throw Aa(new Error(`invalid or unsupported key type ${t}. Must be ${r}`),"ERR_UNSUPPORTED_KEY_TYPE")}return e}var $3=async(t,e)=>ws(t).generateKeyPair(e),Q3=async(t,e,r)=>{let i=ws(t);if(t.toLowerCase()!=="ed25519")throw Aa(new Error("Seed key derivation is unimplemented for RSA or secp256k1"),"ERR_UNSUPPORTED_KEY_DERIVATION_TYPE");return i.generateKeyPairFromSeed(e,r)},Z3=t=>{let e=Gr.PublicKey.decode(t),r=e.Data;switch(e.Type){case Gr.KeyType.RSA:return Xt.rsa.unmarshalRsaPublicKey(r);case Gr.KeyType.Ed25519:return Xt.ed25519.unmarshalEd25519PublicKey(r);case Gr.KeyType.Secp256k1:if(Xt.secp256k1)return Xt.secp256k1.unmarshalSecp256k1PublicKey(r);throw Aa(new Error(w0.message),w0.code);default:ws(e.Type)}},X3=(t,e)=>(e=(e||"rsa").toLowerCase(),ws(e),t.bytes),cb=async t=>{let e=Gr.PrivateKey.decode(t),r=e.Data;switch(e.Type){case Gr.KeyType.RSA:return Xt.rsa.unmarshalRsaPrivateKey(r);case Gr.KeyType.Ed25519:return Xt.ed25519.unmarshalEd25519PrivateKey(r);case Gr.KeyType.Secp256k1:if(Xt.secp256k1)return Xt.secp256k1.unmarshalSecp256k1PrivateKey(r);throw Aa(new Error(w0.message),w0.code);default:ws(e.Type)}},J3=(t,e)=>(e=(e||"rsa").toLowerCase(),ws(e),t.bytes),eT=async(t,e)=>{try{let n=await Y3.import(t,e);return cb(n)}catch(n){}let r=mf.pki.decryptRsaPrivateKey(t,e);if(r===null)throw Aa(new Error("Cannot read the key, most likely the password is wrong or not a RSA key"),"ERR_CANNOT_DECRYPT_PEM");let i=mf.asn1.toDer(mf.pki.privateKeyToAsn1(r));return i=W3(i.getBytes(),"ascii"),Xt.rsa.unmarshalRsaPrivateKey(i)};fb.exports={supportedKeys:Xt,keysPBM:Gr,keyStretcher:Xx(),generateEphemeralKeyPair:ub(),generateKeyPair:$3,generateKeyPairFromSeed:Q3,unmarshalPublicKey:Z3,marshalPublicKey:X3,unmarshalPrivateKey:cb,marshalPrivateKey:J3,import:eT}});var lb=E(Ef=>{"use strict";Ef.messages={NOT_STARTED_YET:"The libp2p node is not started yet",DHT_DISABLED:"DHT is not available",CONN_ENCRYPTION_REQUIRED:"At least one connection encryption module is required",NOT_FOUND:"Not found"};Ef.codes={DHT_DISABLED:"ERR_DHT_DISABLED",PUBSUB_NOT_STARTED:"ERR_PUBSUB_NOT_STARTED",DHT_NOT_STARTED:"ERR_DHT_NOT_STARTED",CONN_ENCRYPTION_REQUIRED:"ERR_CONN_ENCRYPTION_REQUIRED",ERR_INVALID_PROTOCOLS_FOR_STREAM:"ERR_INVALID_PROTOCOLS_FOR_STREAM",ERR_CONNECTION_ENDED:"ERR_CONNECTION_ENDED",ERR_CONNECTION_FAILED:"ERR_CONNECTION_FAILED",ERR_NODE_NOT_STARTED:"ERR_NODE_NOT_STARTED",ERR_ALREADY_ABORTED:"ERR_ALREADY_ABORTED",ERR_TOO_MANY_ADDRESSES:"ERR_TOO_MANY_ADDRESSES",ERR_NO_VALID_ADDRESSES:"ERR_NO_VALID_ADDRESSES",ERR_RELAYED_DIAL:"ERR_RELAYED_DIAL",ERR_DIALED_SELF:"ERR_DIALED_SELF",ERR_DISCOVERED_SELF:"ERR_DISCOVERED_SELF",ERR_DUPLICATE_TRANSPORT:"ERR_DUPLICATE_TRANSPORT",ERR_ENCRYPTION_FAILED:"ERR_ENCRYPTION_FAILED",ERR_HOP_REQUEST_FAILED:"ERR_HOP_REQUEST_FAILED",ERR_INVALID_KEY:"ERR_INVALID_KEY",ERR_INVALID_MESSAGE:"ERR_INVALID_MESSAGE",ERR_INVALID_PARAMETERS:"ERR_INVALID_PARAMETERS",ERR_INVALID_PEER:"ERR_INVALID_PEER",ERR_MUXER_UNAVAILABLE:"ERR_MUXER_UNAVAILABLE",ERR_NOT_FOUND:"ERR_NOT_FOUND",ERR_TIMEOUT:"ERR_TIMEOUT",ERR_TRANSPORT_UNAVAILABLE:"ERR_TRANSPORT_UNAVAILABLE",ERR_TRANSPORT_DIAL_FAILED:"ERR_TRANSPORT_DIAL_FAILED",ERR_UNSUPPORTED_PROTOCOL:"ERR_UNSUPPORTED_PROTOCOL",ERR_INVALID_MULTIADDR:"ERR_INVALID_MULTIADDR",ERR_SIGNATURE_NOT_VALID:"ERR_SIGNATURE_NOT_VALID",ERR_FIND_SELF:"ERR_FIND_SELF",ERR_NO_ROUTERS_AVAILABLE:"ERR_NO_ROUTERS_AVAILABLE",ERR_CONNECTION_NOT_MULTIPLEXED:"ERR_CONNECTION_NOT_MULTIPLEXED",ERR_NO_DIAL_TOKENS:"ERR_NO_DIAL_TOKENS",ERR_KEYCHAIN_REQUIRED:"ERR_KEYCHAIN_REQUIRED",ERR_INVALID_CMS:"ERR_INVALID_CMS",ERR_MISSING_KEYS:"ERR_MISSING_KEYS",ERR_NO_KEY:"ERR_NO_KEY",ERR_INVALID_KEY_NAME:"ERR_INVALID_KEY_NAME",ERR_INVALID_KEY_TYPE:"ERR_INVALID_KEY_TYPE",ERR_KEY_ALREADY_EXISTS:"ERR_KEY_ALREADY_EXISTS",ERR_INVALID_KEY_SIZE:"ERR_INVALID_KEY_SIZE",ERR_KEY_NOT_FOUND:"ERR_KEY_NOT_FOUND",ERR_OLD_KEY_NAME_INVALID:"ERR_OLD_KEY_NAME_INVALID",ERR_NEW_KEY_NAME_INVALID:"ERR_NEW_KEY_NAME_INVALID",ERR_PASSWORD_REQUIRED:"ERR_PASSWORD_REQUIRED",ERR_PEM_REQUIRED:"ERR_PEM_REQUIRED",ERR_CANNOT_READ_KEY:"ERR_CANNOT_READ_KEY",ERR_MISSING_PRIVATE_KEY:"ERR_MISSING_PRIVATE_KEY",ERR_INVALID_OLD_PASS_TYPE:"ERR_INVALID_OLD_PASS_TYPE",ERR_INVALID_NEW_PASS_TYPE:"ERR_INVALID_NEW_PASS_TYPE",ERR_INVALID_PASS_LENGTH:"ERR_INVALID_PASS_LENGTH",ERR_NOT_IMPLEMENTED:"ERR_NOT_IMPLEMENTED",ERR_WRONG_PING_ACK:"ERR_WRONG_PING_ACK"}});var yb=E((AD,db)=>{"use strict";var Ss=Xi(),pb=Ss.Reader,tT=Ss.Writer,qe=Ss.util,Ca=Ss.roots["libp2p-envelope"]||(Ss.roots["libp2p-envelope"]={});Ca.Envelope=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.publicKey=qe.newBuffer([]),t.prototype.payloadType=qe.newBuffer([]),t.prototype.payload=qe.newBuffer([]),t.prototype.signature=qe.newBuffer([]),t.encode=function(r,i){return i||(i=tT.create()),r.publicKey!=null&&Object.hasOwnProperty.call(r,"publicKey")&&i.uint32(10).bytes(r.publicKey),r.payloadType!=null&&Object.hasOwnProperty.call(r,"payloadType")&&i.uint32(18).bytes(r.payloadType),r.payload!=null&&Object.hasOwnProperty.call(r,"payload")&&i.uint32(26).bytes(r.payload),r.signature!=null&&Object.hasOwnProperty.call(r,"signature")&&i.uint32(42).bytes(r.signature),i},t.decode=function(r,i){r instanceof pb||(r=pb.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Ca.Envelope;r.pos<n;){var a=r.uint32();switch(a>>>3){case 1:s.publicKey=r.bytes();break;case 2:s.payloadType=r.bytes();break;case 3:s.payload=r.bytes();break;case 5:s.signature=r.bytes();break;default:r.skipType(a&7);break}}return s},t.fromObject=function(r){if(r instanceof Ca.Envelope)return r;var i=new Ca.Envelope;return r.publicKey!=null&&(typeof r.publicKey=="string"?qe.base64.decode(r.publicKey,i.publicKey=qe.newBuffer(qe.base64.length(r.publicKey)),0):r.publicKey.length&&(i.publicKey=r.publicKey)),r.payloadType!=null&&(typeof r.payloadType=="string"?qe.base64.decode(r.payloadType,i.payloadType=qe.newBuffer(qe.base64.length(r.payloadType)),0):r.payloadType.length&&(i.payloadType=r.payloadType)),r.payload!=null&&(typeof r.payload=="string"?qe.base64.decode(r.payload,i.payload=qe.newBuffer(qe.base64.length(r.payload)),0):r.payload.length&&(i.payload=r.payload)),r.signature!=null&&(typeof r.signature=="string"?qe.base64.decode(r.signature,i.signature=qe.newBuffer(qe.base64.length(r.signature)),0):r.signature.length&&(i.signature=r.signature)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(i.bytes===String?n.publicKey="":(n.publicKey=[],i.bytes!==Array&&(n.publicKey=qe.newBuffer(n.publicKey))),i.bytes===String?n.payloadType="":(n.payloadType=[],i.bytes!==Array&&(n.payloadType=qe.newBuffer(n.payloadType))),i.bytes===String?n.payload="":(n.payload=[],i.bytes!==Array&&(n.payload=qe.newBuffer(n.payload))),i.bytes===String?n.signature="":(n.signature=[],i.bytes!==Array&&(n.signature=qe.newBuffer(n.signature)))),r.publicKey!=null&&r.hasOwnProperty("publicKey")&&(n.publicKey=i.bytes===String?qe.base64.encode(r.publicKey,0,r.publicKey.length):i.bytes===Array?Array.prototype.slice.call(r.publicKey):r.publicKey),r.payloadType!=null&&r.hasOwnProperty("payloadType")&&(n.payloadType=i.bytes===String?qe.base64.encode(r.payloadType,0,r.payloadType.length):i.bytes===Array?Array.prototype.slice.call(r.payloadType):r.payloadType),r.payload!=null&&r.hasOwnProperty("payload")&&(n.payload=i.bytes===String?qe.base64.encode(r.payload,0,r.payload.length):i.bytes===Array?Array.prototype.slice.call(r.payload):r.payload),r.signature!=null&&r.hasOwnProperty("signature")&&(n.signature=i.bytes===String?qe.base64.encode(r.signature,0,r.signature.length):i.bytes===Array?Array.prototype.slice.call(r.signature):r.signature),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ss.util.toJSONOptions)},t}();db.exports=Ca});var bb=E((CD,xb)=>{"use strict";var rT=Oe(),{concat:iT}=(ar(),sr),{fromString:nT}=(st(),nt),sT=hb(),aT=us(),wf=Wa(),{equals:S0}=(ur(),or),{codes:oT}=lb(),{Envelope:gb}=yb(),Hi=class{constructor({peerId:e,payloadType:r,payload:i,signature:n}){this.peerId=e,this.payloadType=r,this.payload=i,this.signature=n,this._marshal=void 0}marshal(){if(this._marshal)return this._marshal;let e=sT.marshalPublicKey(this.peerId.pubKey);return this._marshal=gb.encode({publicKey:e,payloadType:this.payloadType,payload:this.payload,signature:this.signature}).finish(),this._marshal}equals(e){return S0(this.peerId.pubKey.bytes,e.peerId.pubKey.bytes)&&S0(this.payloadType,e.payloadType)&&S0(this.payload,e.payload)&&S0(this.signature,e.signature)}validate(e){let r=vb(e,this.payloadType,this.payload);return this.peerId.pubKey.verify(r,this.signature)}},vb=(t,e,r)=>{let i=nT(t),n=wf.encode(i.byteLength),s=wf.encode(e.length),a=wf.encode(r.length);return iT([new Uint8Array(n),i,new Uint8Array(s),e,new Uint8Array(a),r])};Hi.createFromProtobuf=async t=>{let e=gb.decode(t),r=await aT.createFromPubKey(e.publicKey);return new Hi({peerId:r,payloadType:e.payloadType,payload:e.payload,signature:e.signature})};Hi.seal=async(t,e)=>{let r=t.domain,i=t.codec,n=t.marshal(),s=vb(r,i,n),a=await e.privKey.sign(s);return new Hi({peerId:e,payloadType:i,payload:n,signature:a})};Hi.openAndCertify=async(t,e)=>{let r=await Hi.createFromProtobuf(t);if(!await r.validate(e))throw rT(new Error("envelope signature is not valid for the given domain"),oT.ERR_SIGNATURE_NOT_VALID);return r};xb.exports=Hi});var dT=E((hi,wb)=>{"use strict";var uT=hi&&hi.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),cT=hi&&hi.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),mb=hi&&hi.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)r!=="default"&&Object.prototype.hasOwnProperty.call(t,r)&&uT(e,t,r);return cT(e,t),e},Ct=hi&&hi.__awaiter||function(t,e,r,i){function n(s){return s instanceof r?s:new r(function(a){a(s)})}return new(r||(r=Promise))(function(s,a){function o(c){try{u(i.next(c))}catch(h){a(h)}}function f(c){try{u(i.throw(c))}catch(h){a(h)}}function u(c){c.done?s(c.value):n(c.value).then(o,f)}u((i=i.apply(t,e||[])).next())})},Sf=mb(s2()),fT=l2(),_f=d2(),ne=mb(Ni()),hT=v2(),_0=Uc(),Ze=fs(),If=R2(),lT=k2(),Eb=O2(),Bf=us(),pT=bb(),Af=Ni(),Cf=class extends Sf.default{constructor(e,r={}){var i;let n=[ne.GossipsubIDv11,ne.GossipsubIDv10],s=Object.assign(Object.assign({gossipIncoming:!0,fallbackToFloodsub:!0,floodPublish:!0,doPX:!1,directPeers:[],D:ne.GossipsubD,Dlo:ne.GossipsubDlo,Dhi:ne.GossipsubDhi,Dscore:ne.GossipsubDscore,Dout:ne.GossipsubDout,Dlazy:ne.GossipsubDlazy,heartbeatInterval:ne.GossipsubHeartbeatInterval,fanoutTTL:ne.GossipsubFanoutTTL,mcacheLength:ne.GossipsubHistoryLength,mcacheGossip:ne.GossipsubHistoryGossip,seenTTL:ne.GossipsubSeenTTL},r),{scoreParams:If.createPeerScoreParams(r.scoreParams),scoreThresholds:If.createPeerScoreThresholds(r.scoreThresholds)});s.fallbackToFloodsub&&n.push(ne.FloodsubID);super(Object.assign({debugName:"libp2p:gossipsub",multicodecs:n,libp2p:e},s));this._options=s,this.direct=new Set(s.directPeers.map(a=>a.id.toB58String())),this.acceptFromWhitelist=new Map,s.directPeers.forEach(a=>{e.peerStore.addressBook.add(a.id,a.addrs)}),this.seenCache=new Eb.SimpleTimeCache({validityMs:s.seenTTL}),this.mesh=new Map,this.fanout=new Map,this.lastpub=new Map,this.gossip=new Map,this.control=new Map,this.peerhave=new Map,this.iasked=new Map,this.backoff=new Map,this.outbound=new Map,this.messageCache=r.messageCache||new fT.MessageCache(s.mcacheGossip,s.mcacheLength),this.getFastMsgIdStr=(i=r.fastMsgIdFn)!==null&&i!==void 0?i:void 0,this.fastMsgIdCache=r.fastMsgIdFn?new Eb.SimpleTimeCache({validityMs:s.seenTTL}):void 0,this.heartbeat=new hT.Heartbeat(this),this.heartbeatTicks=0,this.gossipTracer=new lT.IWantTracer,this._libp2p=e,this.score=new If.PeerScore(this._options.scoreParams,e.connectionManager)}_decodeRpc(e){return _f.RPC.decode(e)}_encodeRpc(e){return _f.RPC.encode(e).finish()}_addPeer(e,r){let i=super._addPeer(e,r);this.score.addPeer(e.toB58String());let n=!1;for(let s of this._libp2p.connectionManager.getAll(e))if(s.stat.direction==="outbound"&&Array.from(s.registry.values()).some(a=>r===a.protocol)){n=!0;break}return this.outbound.set(i.id.toB58String(),n),i}_removePeer(e){let r=super._removePeer(e),i=e.toB58String();for(let n of this.mesh.values())n.delete(i);for(let n of this.fanout.values())n.delete(i);return this.gossip.delete(i),this.control.delete(i),this.outbound.delete(i),this.score.removePeer(i),this.acceptFromWhitelist.delete(i),r}_processRpc(e,r,i){let n=Object.create(null,{_processRpc:{get:()=>super._processRpc}});return Ct(this,void 0,void 0,function*(){return(yield n._processRpc.call(this,e,r,i))?(i.control&&(yield this._processRpcControlMessage(e,i.control)),!0):!1})}_processRpcControlMessage(e,r){return Ct(this,void 0,void 0,function*(){if(!r)return;let i=r.ihave?this._handleIHave(e,r.ihave):[],n=r.iwant?this._handleIWant(e,r.iwant):[],s=r.graft?yield this._handleGraft(e,r.graft):[];if(r.prune&&this._handlePrune(e,r.prune),!i.length&&!n.length&&!s.length)return;let a=Ze.createGossipRpc(n,{iwant:i,prune:s});this._sendRpc(e,a)})}_processRpcMessage(e){let r=Object.create(null,{_processRpcMessage:{get:()=>super._processRpcMessage}});return Ct(this,void 0,void 0,function*(){let i;if(this.getFastMsgIdStr&&this.fastMsgIdCache){let n=yield this.getFastMsgIdStr(e);if(i=this.fastMsgIdCache.get(n),i!==void 0){this.score.duplicateMessage(e,i);return}i=Ze.messageIdToString(yield this.getMsgId(e)),this.fastMsgIdCache.put(n,i)}else if(i=Ze.messageIdToString(yield this.getMsgId(e)),this.seenCache.has(i)){this.score.duplicateMessage(e,i);return}this.seenCache.put(i),yield this.score.validateMessage(i),yield r._processRpcMessage.call(this,e)})}_acceptFrom(e){if(this.direct.has(e))return!0;let r=Date.now(),i=this.acceptFromWhitelist.get(e);if(i&&i.messagesAccepted<Af.ACCEPT_FROM_WHITELIST_MAX_MESSAGES&&i.acceptUntil>=r)return i.messagesAccepted+=1,!0;let n=this.score.score(e);return n>=Af.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE?this.acceptFromWhitelist.set(e,{messagesAccepted:0,acceptUntil:r+Af.ACCEPT_FROM_WHITELIST_DURATION_MS}):this.acceptFromWhitelist.delete(e),n>=this._options.scoreThresholds.graylistThreshold}validate(e){let r=Object.create(null,{validate:{get:()=>super.validate}});return Ct(this,void 0,void 0,function*(){try{yield r.validate.call(this,e)}catch(i){let n=yield this.getCanonicalMsgIdStr(e);throw this.score.rejectMessage(e,n,i.code),this.gossipTracer.rejectMessage(n,i.code),i}})}_handleIHave(e,r){if(!r.length)return[];let i=this.score.score(e);if(i<this._options.scoreThresholds.gossipThreshold)return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]",e,i),[];let n=(this.peerhave.get(e)||0)+1;if(this.peerhave.set(e,n),n>ne.GossipsubMaxIHaveMessages)return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring",e,n),[];let s=this.iasked.get(e)||0;if(s>=ne.GossipsubMaxIHaveLength)return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring",e,s),[];let a=new Map;if(r.forEach(({topicID:u,messageIDs:c})=>{!u||!c||!this.mesh.has(u)||c.forEach(h=>{let l=Ze.messageIdToString(h);this.seenCache.has(l)||a.set(l,h)})}),!a.size)return[];let o=a.size;o+s>ne.GossipsubMaxIHaveLength&&(o=ne.GossipsubMaxIHaveLength-s),this.log("IHAVE: Asking for %d out of %d messages from %s",o,a.size,e);let f=Array.from(a.values());return Ze.shuffle(f),f=f.slice(0,o),this.iasked.set(e,s+o),this.gossipTracer.addPromise(e,f),[{messageIDs:f}]}_handleIWant(e,r){if(!r.length)return[];let i=this.score.score(e);if(i<this._options.scoreThresholds.gossipThreshold)return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]",e,i),[];let n=new Map;return r.forEach(({messageIDs:s})=>{s&&s.forEach(a=>{let o=Ze.messageIdToString(a),[f,u]=this.messageCache.getForPeer(o,e);if(!!f){if(u>ne.GossipsubGossipRetransmission){this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request",e,a);return}n.set(o,f)}})}),n.size?(this.log("IWANT: Sending %d messages to %s",n.size,e),Array.from(n.values()).map(Sf.utils.normalizeOutRpcMessage)):[]}_handleGraft(e,r){return Ct(this,void 0,void 0,function*(){let i=[],n=this.score.score(e),s=this._now(),a=this._options.doPX;return r.forEach(({topicID:o})=>{var f;if(!o)return;let u=this.mesh.get(o);if(!u){a=!1;return}if(u.has(e))return;if(this.direct.has(e)){this.log("GRAFT: ignoring request from direct peer %s",e),i.push(o),a=!1;return}let c=(f=this.backoff.get(o))===null||f===void 0?void 0:f.get(e);if(typeof c=="number"&&s<c){this.log("GRAFT: ignoring backed off peer %s",e),this.score.addPenalty(e,1),a=!1;let h=c+ne.GossipsubGraftFloodThreshold-ne.GossipsubPruneBackoff;s<h&&this.score.addPenalty(e,1),this._addBackoff(e,o),i.push(o);return}if(n<0){this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s",e,n,o),i.push(o),a=!1,this._addBackoff(e,o);return}if(u.size>=this._options.Dhi&&!this.outbound.get(e)){i.push(o),this._addBackoff(e,o);return}this.log("GRAFT: Add mesh link from %s in %s",e,o),this.score.graft(e,o),u.add(e)}),i.length?Promise.all(i.map(o=>this._makePrune(e,o,a))):[]})}_handlePrune(e,r){let i=this.score.score(e);r.forEach(({topicID:n,backoff:s,peers:a})=>{if(!n)return;let o=this.mesh.get(n);if(!!o&&(this.log("PRUNE: Remove mesh link to %s in %s",e,n),this.score.prune(e,n),o.delete(e),typeof s=="number"&&s>0?this._doAddBackoff(e,n,s*1e3):this._addBackoff(e,n),a&&a.length)){if(i<this._options.scoreThresholds.acceptPXThreshold){this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]",e,i,n);return}this._pxConnect(a)}})}_addBackoff(e,r){this._doAddBackoff(e,r,ne.GossipsubPruneBackoff)}_doAddBackoff(e,r,i){let n=this.backoff.get(r);n||(n=new Map,this.backoff.set(r,n));let s=this._now()+i;(n.get(e)||0)<s&&n.set(e,s)}_applyIwantPenalties(){this.gossipTracer.getBrokenPromises().forEach((e,r)=>{this.log("peer %s didn't follow up in %d IWANT requests; adding penalty",r,e),this.score.addPenalty(r,e)})}_clearBackoff(){if(this.heartbeatTicks%ne.GossipsubPruneBackoffTicks!=0)return;let e=this._now();this.backoff.forEach((r,i)=>{r.forEach((n,s)=>{n<e&&r.delete(s)}),r.size===0&&this.backoff.delete(i)})}_directConnect(){if(this.heartbeatTicks%ne.GossipsubDirectConnectTicks!=0)return;let e=[];this.direct.forEach(r=>{let i=this.peers.get(r);(!i||!i.isWritable)&&e.push(r)}),e.length&&e.forEach(r=>{this._connect(r)})}_pxConnect(e){return Ct(this,void 0,void 0,function*(){e.length>ne.GossipsubPrunePeers&&(Ze.shuffle(e),e=e.slice(0,ne.GossipsubPrunePeers));let r=[];yield Promise.all(e.map(i=>Ct(this,void 0,void 0,function*(){if(!i.peerID)return;let s=Bf.createFromBytes(i.peerID).toB58String();if(!this.peers.has(s)){if(!i.signedPeerRecord){r.push(s);return}try{let a=yield pT.openAndCertify(i.signedPeerRecord,"libp2p-peer-record"),o=a.peerId.toB58String();if(s!==o){this.log("bogus peer record obtained through px: peer ID %s doesn't match expected peer %s",o,s);return}if(!this._libp2p.peerStore.addressBook.consumePeerRecord(a)){this.log("bogus peer record obtained through px: could not add peer record to address book");return}r.push(s)}catch(a){this.log("bogus peer record obtained through px: invalid signature or not a peer record")}}}))),!!r.length&&r.forEach(i=>this._connect(i))})}start(){let e=Object.create(null,{start:{get:()=>super.start}});return Ct(this,void 0,void 0,function*(){yield e.start.call(this),this.heartbeat.start(),this.score.start(),this._directPeerInitial=setTimeout(()=>{this.direct.forEach(r=>{this._connect(r)})},ne.GossipsubDirectConnectInitialDelay)})}stop(){let e=Object.create(null,{stop:{get:()=>super.stop}});return Ct(this,void 0,void 0,function*(){yield e.stop.call(this),this.heartbeat.stop(),this.score.stop(),this.mesh=new Map,this.fanout=new Map,this.lastpub=new Map,this.gossip=new Map,this.control=new Map,this.peerhave=new Map,this.iasked=new Map,this.backoff=new Map,this.outbound=new Map,this.gossipTracer.clear(),this.seenCache.clear(),this.fastMsgIdCache&&this.fastMsgIdCache.clear(),clearTimeout(this._directPeerInitial)})}_connect(e){this.log("Initiating connection with %s",e),this._libp2p.dialProtocol(Bf.createFromB58String(e),this.multicodecs)}subscribe(e){super.subscribe(e),this.join(e)}unsubscribe(e){super.unsubscribe(e),this.leave(e)}join(e){if(!this.started)throw new Error("Gossipsub has not started");this.log("JOIN %s",e);let r=this.fanout.get(e);if(r)r.forEach(i=>{this.score.score(i)<0&&r.delete(i)}),r.size<this._options.D&&_0.getGossipPeers(this,e,this._options.D-r.size,i=>!r.has(i)&&!this.direct.has(i)&&this.score.score(i)>=0).forEach(i=>r.add(i)),this.mesh.set(e,r),this.fanout.delete(e),this.lastpub.delete(e);else{let i=_0.getGossipPeers(this,e,this._options.D,n=>!this.direct.has(n)&&this.score.score(n)>=0);this.mesh.set(e,i)}this.mesh.get(e).forEach(i=>{this.log("JOIN: Add mesh link to %s in %s",i,e),this._sendGraft(i,e)})}leave(e){if(!this.started)throw new Error("Gossipsub has not started");this.log("LEAVE %s",e);let r=this.mesh.get(e);r&&(r.forEach(i=>{this.log("LEAVE: Remove mesh link to %s in %s",i,e),this._sendPrune(i,e)}),this.mesh.delete(e))}getCanonicalMsgIdStr(e){var r,i;return Ct(this,void 0,void 0,function*(){return this.fastMsgIdCache&&this.getFastMsgIdStr?(i=(r=this.getCachedMsgIdStr(e))!==null&&r!==void 0?r:this.fastMsgIdCache.get(this.getFastMsgIdStr(e)))!==null&&i!==void 0?i:Ze.messageIdToString(yield this.getMsgId(e)):Ze.messageIdToString(yield this.getMsgId(e))})}getCachedMsgIdStr(e){}_publish(e){return Ct(this,void 0,void 0,function*(){let r=yield this.getCanonicalMsgIdStr(e);e.receivedFrom!==this.peerId.toB58String()&&(this.score.deliverMessage(e,r),this.gossipTracer.deliverMessage(r)),this.seenCache.put(r),this.messageCache.put(e,r);let i=new Set;e.topicIDs.forEach(s=>{let a=this.topics.get(s);if(!!a)if(this._options.floodPublish&&e.from===this.peerId.toB58String())a.forEach(o=>{(this.direct.has(o)||this.score.score(o)>=this._options.scoreThresholds.publishThreshold)&&i.add(o)});else{this.direct.forEach(f=>{i.add(f)}),a.forEach(f=>{let u=this.score.score(f),c=this.peers.get(f);!c||c.protocol===ne.FloodsubID&&u>=this._options.scoreThresholds.publishThreshold&&i.add(f)});let o=this.mesh.get(s);if(!o||!o.size){if(o=this.fanout.get(s),!o){let f=_0.getGossipPeers(this,s,this._options.D,u=>this.score.score(u)>=this._options.scoreThresholds.publishThreshold);f.size>0?(o=f,this.fanout.set(s,f)):o=new Set}this.lastpub.set(s,this._now())}o.forEach(f=>{i.add(f)})}});let n=Ze.createGossipRpc([Sf.utils.normalizeOutRpcMessage(e)]);i.forEach(s=>{s!==e.from&&this._sendRpc(s,n)})})}_sendGraft(e,r){let i=[{topicID:r}],n=Ze.createGossipRpc([],{graft:i});this._sendRpc(e,n)}_sendPrune(e,r){return Ct(this,void 0,void 0,function*(){let i=[yield this._makePrune(e,r,this._options.doPX)],n=Ze.createGossipRpc([],{prune:i});this._sendRpc(e,n)})}_sendRpc(e,r){let i=this.peers.get(e);if(!i||!i.isWritable)return;let n=this.control.get(e);n&&(this._piggybackControl(e,r,n),this.control.delete(e));let s=this.gossip.get(e);s&&(this._piggybackGossip(e,r,s),this.gossip.delete(e)),i.write(_f.RPC.encode(r).finish())}_piggybackControl(e,r,i){let n=(i.graft||[]).filter(({topicID:a})=>(a&&this.mesh.get(a)||new Set).has(e)),s=(i.prune||[]).filter(({topicID:a})=>!(a&&this.mesh.get(a)||new Set).has(e));!n.length&&!s.length||(r.control?(r.control.graft=r.control.graft&&r.control.graft.concat(n),r.control.prune=r.control.prune&&r.control.prune.concat(s)):r.control={ihave:[],iwant:[],graft:n,prune:s})}_piggybackGossip(e,r,i){r.control||(r.control={ihave:[],iwant:[],graft:[],prune:[]}),r.control.ihave=i}_sendGraftPrune(e,r,i){return Ct(this,void 0,void 0,function*(){let n=this._options.doPX;for(let[s,a]of e){let o=a.map(h=>({topicID:h})),f=[],u=r.get(s);u&&(f=yield Promise.all(u.map(h=>this._makePrune(s,h,n&&!i.get(s)))),r.delete(s));let c=Ze.createGossipRpc([],{graft:o,prune:f});this._sendRpc(s,c)}for(let[s,a]of r){let o=yield Promise.all(a.map(u=>this._makePrune(s,u,n&&!i.get(s)))),f=Ze.createGossipRpc([],{prune:o});this._sendRpc(s,f)}})}_emitGossip(e,r){let i=this.messageCache.getGossipIDs(e);if(!i.length)return;Ze.shuffle(i),i.length>ne.GossipsubMaxIHaveLength&&this.log("too many messages for gossip; will truncate IHAVE list (%d messages)",i.length);let n=[],s=this.topics.get(e);if(!s)return;s.forEach(f=>{let u=this.peers.get(f);!u||!r.has(f)&&!this.direct.has(f)&&Ze.hasGossipProtocol(u.protocol)&&this.score.score(f)>=this._options.scoreThresholds.gossipThreshold&&n.push(f)});let a=this._options.Dlazy,o=ne.GossipsubGossipFactor*n.length;o>a&&(a=o),a>n.length?a=n.length:Ze.shuffle(n),n.slice(0,a).forEach(f=>{let u=i;i.length>ne.GossipsubMaxIHaveLength&&(u=Ze.shuffle(u.slice()).slice(0,ne.GossipsubMaxIHaveLength)),this._pushGossip(f,{topicID:e,messageIDs:u})})}_flush(){for(let[e,r]of this.gossip.entries()){this.gossip.delete(e);let i=Ze.createGossipRpc([],{ihave:r});this._sendRpc(e,i)}for(let[e,r]of this.control.entries()){this.control.delete(e);let i=Ze.createGossipRpc([],{graft:r.graft,prune:r.prune});this._sendRpc(e,i)}}_pushGossip(e,r){this.log("Add gossip to %s",e);let i=this.gossip.get(e)||[];this.gossip.set(e,i.concat(r))}_now(){return Date.now()}_makePrune(e,r,i){return Ct(this,void 0,void 0,function*(){if(this.peers.get(e).protocol===ne.GossipsubIDv10)return{topicID:r,peers:[]};let n=ne.GossipsubPruneBackoff/1e3;if(!i)return{topicID:r,peers:[],backoff:n};let s=_0.getGossipPeers(this,r,ne.GossipsubPrunePeers,o=>o!==e&&this.score.score(o)>=0),a=yield Promise.all(Array.from(s).map(o=>Ct(this,void 0,void 0,function*(){let f=Bf.createFromB58String(o);return{peerID:f.toBytes(),signedPeerRecord:yield this._libp2p.peerStore.addressBook.getRawEnvelope(f)}})));return{topicID:r,peers:a,backoff:n}})}};Cf.multicodec=ne.GossipsubIDv11;wb.exports=Cf});return dT();})();
+`,r};Uh.decode=function(t){for(var e=[],r=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,i=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,n=/\r?\n/,s;s=r.exec(t),!!s;){var o=s[1];o==="NEW CERTIFICATE REQUEST"&&(o="CERTIFICATE REQUEST");var a={type:o,procType:null,contentDomain:null,dekInfo:null,headers:[],body:gs.util.decode64(s[3])};if(e.push(a),!!s[2]){for(var f=s[2].split(n),u=0;s&&u<f.length;){for(var c=f[u].replace(/\s+$/,""),h=u+1;h<f.length;++h){var l=f[h];if(!/\s/.test(l[0]))break;c+=l,u=h}if(s=c.match(i),s){for(var d={name:s[1],values:[]},p=s[2].split(","),y=0;y<p.length;++y)d.values.push(Ub(p[y]));if(a.procType)if(!a.contentDomain&&d.name==="Content-Domain")a.contentDomain=p[0]||"";else if(!a.dekInfo&&d.name==="DEK-Info"){if(d.values.length===0)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');a.dekInfo={algorithm:p[0],parameters:p[1]||null}}else a.headers.push(d);else{if(d.name!=="Proc-Type")throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');if(d.values.length!==2)throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');a.procType={version:p[0],type:p[1]}}}++u}if(a.procType==="ENCRYPTED"&&!a.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')}}if(e.length===0)throw new Error("Invalid PEM formatted message.");return e};function bs(t){for(var e=t.name+": ",r=[],i=function(f,u){return" "+u},n=0;n<t.values.length;++n)r.push(t.values[n].replace(/^(\S+\r\n)/,i));e+=r.join(",")+`\r
+`;for(var s=0,o=-1,n=0;n<e.length;++n,++s)if(s>65&&o!==-1){var a=e[o];a===","?(++o,e=e.substr(0,o)+`\r
+ `+e.substr(o)):e=e.substr(0,o)+`\r
+`+a+e.substr(o+1),s=n-o-1,o=-1,++n}else(e[n]===" "||e[n]==="	"||e[n]===",")&&(o=n);return e}function Ub(t){return t.replace(/^\s+/,"")}});var Wh=x((lS,jh)=>{var Dt=ne();Fr();Ie();var Gh=jh.exports=Dt.sha256=Dt.sha256||{};Dt.md.sha256=Dt.md.algorithms.sha256=Gh;Gh.create=function(){Vh||Kb();var t=null,e=Dt.util.createBuffer(),r=new Array(64),i={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,fullMessageLength:null,messageLengthSize:8};return i.start=function(){i.messageLength=0,i.fullMessageLength=i.messageLength64=[];for(var n=i.messageLengthSize/4,s=0;s<n;++s)i.fullMessageLength.push(0);return e=Dt.util.createBuffer(),t={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225},i},i.start(),i.update=function(n,s){s==="utf8"&&(n=Dt.util.encodeUtf8(n));var o=n.length;i.messageLength+=o,o=[o/4294967296>>>0,o>>>0];for(var a=i.fullMessageLength.length-1;a>=0;--a)i.fullMessageLength[a]+=o[1],o[1]=o[0]+(i.fullMessageLength[a]/4294967296>>>0),i.fullMessageLength[a]=i.fullMessageLength[a]>>>0,o[0]=o[1]/4294967296>>>0;return e.putBytes(n),zh(t,r,e),(e.read>2048||e.length()===0)&&e.compact(),i},i.digest=function(){var n=Dt.util.createBuffer();n.putBytes(e.bytes());var s=i.fullMessageLength[i.fullMessageLength.length-1]+i.messageLengthSize,o=s&i.blockLength-1;n.putBytes(wa.substr(0,i.blockLength-o));for(var a,f,u=i.fullMessageLength[0]*8,c=0;c<i.fullMessageLength.length-1;++c)a=i.fullMessageLength[c+1]*8,f=a/4294967296>>>0,u+=f,n.putInt32(u>>>0),u=a>>>0;n.putInt32(u);var h={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4,h5:t.h5,h6:t.h6,h7:t.h7};zh(h,r,n);var l=Dt.util.createBuffer();return l.putInt32(h.h0),l.putInt32(h.h1),l.putInt32(h.h2),l.putInt32(h.h3),l.putInt32(h.h4),l.putInt32(h.h5),l.putInt32(h.h6),l.putInt32(h.h7),l},i};var wa=null,Vh=!1,Hh=null;function Kb(){wa=String.fromCharCode(128),wa+=Dt.util.fillString(String.fromCharCode(0),64),Hh=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],Vh=!0}function zh(t,e,r){for(var i,n,s,o,a,f,u,c,h,l,d,p,y,v,b,E=r.length();E>=64;){for(u=0;u<16;++u)e[u]=r.getInt32();for(;u<64;++u)i=e[u-2],i=(i>>>17|i<<15)^(i>>>19|i<<13)^i>>>10,n=e[u-15],n=(n>>>7|n<<25)^(n>>>18|n<<14)^n>>>3,e[u]=i+e[u-7]+n+e[u-16]|0;for(c=t.h0,h=t.h1,l=t.h2,d=t.h3,p=t.h4,y=t.h5,v=t.h6,b=t.h7,u=0;u<64;++u)o=(p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7),a=v^p&(y^v),s=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),f=c&h|l&(c^h),i=b+o+a+Hh[u]+e[u],n=s+f,b=v,v=y,y=p,p=d+i>>>0,d=l,l=h,h=c,c=i+n>>>0;t.h0=t.h0+c|0,t.h1=t.h1+h|0,t.h2=t.h2+l|0,t.h3=t.h3+d|0,t.h4=t.h4+p|0,t.h5=t.h5+y|0,t.h6=t.h6+v|0,t.h7=t.h7+b|0,E-=64}}});var $h=x((pS,Yh)=>{var Pt=ne();Ie();var vs=null;Pt.util.isNodejs&&!Pt.options.usePureJavaScript&&!process.versions["node-webkit"]&&(vs=xi());var qb=Yh.exports=Pt.prng=Pt.prng||{};qb.create=function(t){for(var e={plugin:t,key:null,seed:null,time:null,reseeds:0,generated:0,keyBytes:""},r=t.md,i=new Array(32),n=0;n<32;++n)i[n]=r.create();e.pools=i,e.pool=0,e.generate=function(u,c){if(!c)return e.generateSync(u);var h=e.plugin.cipher,l=e.plugin.increment,d=e.plugin.formatKey,p=e.plugin.formatSeed,y=Pt.util.createBuffer();e.key=null,v();function v(b){if(b)return c(b);if(y.length()>=u)return c(null,y.getBytes(u));if(e.generated>1048575&&(e.key=null),e.key===null)return Pt.util.nextTick(function(){s(v)});var E=h(e.key,e.seed);e.generated+=E.length,y.putBytes(E),e.key=d(h(e.key,l(e.seed))),e.seed=p(h(e.key,e.seed)),Pt.util.setImmediate(v)}},e.generateSync=function(u){var c=e.plugin.cipher,h=e.plugin.increment,l=e.plugin.formatKey,d=e.plugin.formatSeed;e.key=null;for(var p=Pt.util.createBuffer();p.length()<u;){e.generated>1048575&&(e.key=null),e.key===null&&o();var y=c(e.key,e.seed);e.generated+=y.length,p.putBytes(y),e.key=l(c(e.key,h(e.seed))),e.seed=d(c(e.key,e.seed))}return p.getBytes(u)};function s(u){if(e.pools[0].messageLength>=32)return a(),u();var c=32-e.pools[0].messageLength<<5;e.seedFile(c,function(h,l){if(h)return u(h);e.collect(l),a(),u()})}function o(){if(e.pools[0].messageLength>=32)return a();var u=32-e.pools[0].messageLength<<5;e.collect(e.seedFileSync(u)),a()}function a(){e.reseeds=e.reseeds===4294967295?0:e.reseeds+1;var u=e.plugin.md.create();u.update(e.keyBytes);for(var c=1,h=0;h<32;++h)e.reseeds%c==0&&(u.update(e.pools[h].digest().getBytes()),e.pools[h].start()),c=c<<1;e.keyBytes=u.digest().getBytes(),u.start(),u.update(e.keyBytes);var l=u.digest().getBytes();e.key=e.plugin.formatKey(e.keyBytes),e.seed=e.plugin.formatSeed(l),e.generated=0}function f(u){var c=null,h=Pt.util.globalScope,l=h.crypto||h.msCrypto;l&&l.getRandomValues&&(c=function(T){return l.getRandomValues(T)});var d=Pt.util.createBuffer();if(c)for(;d.length()<u;){var p=Math.max(1,Math.min(u-d.length(),65536)/4),y=new Uint32Array(Math.floor(p));try{c(y);for(var v=0;v<y.length;++v)d.putInt32(y[v])}catch(T){if(!(typeof QuotaExceededError!="undefined"&&T instanceof QuotaExceededError))throw T}}if(d.length()<u)for(var b,E,I,D=Math.floor(Math.random()*65536);d.length()<u;){E=16807*(D&65535),b=16807*(D>>16),E+=(b&32767)<<16,E+=b>>15,E=(E&2147483647)+(E>>31),D=E&4294967295;for(var v=0;v<3;++v)I=D>>>(v<<3),I^=Math.floor(Math.random()*256),d.putByte(I&255)}return d.getBytes(u)}return vs?(e.seedFile=function(u,c){vs.randomBytes(u,function(h,l){if(h)return c(h);c(null,l.toString())})},e.seedFileSync=function(u){return vs.randomBytes(u).toString()}):(e.seedFile=function(u,c){try{c(null,f(u))}catch(h){c(h)}},e.seedFileSync=f),e.collect=function(u){for(var c=u.length,h=0;h<c;++h)e.pools[e.pool].update(u.substr(h,1)),e.pool=e.pool===31?0:e.pool+1},e.collectInt=function(u,c){for(var h="",l=0;l<c;l+=8)h+=String.fromCharCode(u>>l&255);e.collect(h)},e.registerWorker=function(u){if(u===self)e.seedFile=function(h,l){function d(p){var y=p.data;y.forge&&y.forge.prng&&(self.removeEventListener("message",d),l(y.forge.prng.err,y.forge.prng.bytes))}self.addEventListener("message",d),self.postMessage({forge:{prng:{needed:h}}})};else{var c=function(h){var l=h.data;l.forge&&l.forge.prng&&e.seedFile(l.forge.prng.needed,function(d,p){u.postMessage({forge:{prng:{err:d,bytes:p}}})})};u.addEventListener("message",c)}},e}});var rn=x((dS,_a)=>{var Oe=ne();Ea();Wh();$h();Ie();(function(){if(Oe.random&&Oe.random.getBytes){_a.exports=Oe.random;return}(function(t){var e={},r=new Array(4),i=Oe.util.createBuffer();e.formatKey=function(h){var l=Oe.util.createBuffer(h);return h=new Array(4),h[0]=l.getInt32(),h[1]=l.getInt32(),h[2]=l.getInt32(),h[3]=l.getInt32(),Oe.aes._expandKey(h,!1)},e.formatSeed=function(h){var l=Oe.util.createBuffer(h);return h=new Array(4),h[0]=l.getInt32(),h[1]=l.getInt32(),h[2]=l.getInt32(),h[3]=l.getInt32(),h},e.cipher=function(h,l){return Oe.aes._updateBlock(h,l,r,!1),i.putInt32(r[0]),i.putInt32(r[1]),i.putInt32(r[2]),i.putInt32(r[3]),i.getBytes()},e.increment=function(h){return++h[3],h},e.md=Oe.md.sha256;function n(){var h=Oe.prng.create(e);return h.getBytes=function(l,d){return h.generate(l,d)},h.getBytesSync=function(l){return h.generate(l)},h}var s=n(),o=null,a=Oe.util.globalScope,f=a.crypto||a.msCrypto;if(f&&f.getRandomValues&&(o=function(h){return f.getRandomValues(h)}),Oe.options.usePureJavaScript||!Oe.util.isNodejs&&!o){if(typeof window=="undefined"||window.document===void 0,s.collectInt(+new Date,32),typeof navigator!="undefined"){var u="";for(var c in navigator)try{typeof navigator[c]=="string"&&(u+=navigator[c])}catch(h){}s.collect(u),u=null}t&&(t().mousemove(function(h){s.collectInt(h.clientX,16),s.collectInt(h.clientY,16)}),t().keypress(function(h){s.collectInt(h.charCode,8)}))}if(!Oe.random)Oe.random=s;else for(var c in s)Oe.random[c]=s[c];Oe.random.createInstance=n,_a.exports=Oe.random})(typeof jQuery!="undefined"?jQuery:null)})()});var Jh=x((yS,Xh)=>{var Ze=ne();Ie();var Sa=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],Zh=[1,2,3,5],Gb=function(t,e){return t<<e&65535|(t&65535)>>16-e},Vb=function(t,e){return(t&65535)>>e|t<<16-e&65535};Xh.exports=Ze.rc2=Ze.rc2||{};Ze.rc2.expandKey=function(t,e){typeof t=="string"&&(t=Ze.util.createBuffer(t)),e=e||128;var r=t,i=t.length(),n=e,s=Math.ceil(n/8),o=255>>(n&7),a;for(a=i;a<128;a++)r.putByte(Sa[r.at(a-1)+r.at(a-i)&255]);for(r.setAt(128-s,Sa[r.at(128-s)&o]),a=127-s;a>=0;a--)r.setAt(a,Sa[r.at(a+1)^r.at(a+s)]);return r};var Qh=function(t,e,r){var i=!1,n=null,s=null,o=null,a,f,u,c,h=[];for(t=Ze.rc2.expandKey(t,e),u=0;u<64;u++)h.push(t.getInt16Le());r?(a=function(p){for(u=0;u<4;u++)p[u]+=h[c]+(p[(u+3)%4]&p[(u+2)%4])+(~p[(u+3)%4]&p[(u+1)%4]),p[u]=Gb(p[u],Zh[u]),c++},f=function(p){for(u=0;u<4;u++)p[u]+=h[p[(u+3)%4]&63]}):(a=function(p){for(u=3;u>=0;u--)p[u]=Vb(p[u],Zh[u]),p[u]-=h[c]+(p[(u+3)%4]&p[(u+2)%4])+(~p[(u+3)%4]&p[(u+1)%4]),c--},f=function(p){for(u=3;u>=0;u--)p[u]-=h[p[(u+3)%4]&63]});var l=function(p){var y=[];for(u=0;u<4;u++){var v=n.getInt16Le();o!==null&&(r?v^=o.getInt16Le():o.putInt16Le(v)),y.push(v&65535)}c=r?0:63;for(var b=0;b<p.length;b++)for(var E=0;E<p[b][0];E++)p[b][1](y);for(u=0;u<4;u++)o!==null&&(r?o.putInt16Le(y[u]):y[u]^=o.getInt16Le()),s.putInt16Le(y[u])},d=null;return d={start:function(p,y){p&&typeof p=="string"&&(p=Ze.util.createBuffer(p)),i=!1,n=Ze.util.createBuffer(),s=y||new Ze.util.createBuffer,o=p,d.output=s},update:function(p){for(i||n.putBuffer(p);n.length()>=8;)l([[5,a],[1,f],[6,a],[1,f],[5,a]])},finish:function(p){var y=!0;if(r)if(p)y=p(8,n,!r);else{var v=n.length()===8?8:8-n.length();n.fillWithByte(v,v)}if(y&&(i=!0,d.update()),!r&&(y=n.length()===0,y))if(p)y=p(8,s,!r);else{var b=s.length(),E=s.at(b-1);E>b?y=!1:s.truncate(E)}return y}},d};Ze.rc2.startEncrypting=function(t,e,r){var i=Ze.rc2.createEncryptionCipher(t,128);return i.start(e,r),i};Ze.rc2.createEncryptionCipher=function(t,e){return Qh(t,e,!0)};Ze.rc2.startDecrypting=function(t,e,r){var i=Ze.rc2.createDecryptionCipher(t,128);return i.start(e,r),i};Ze.rc2.createDecryptionCipher=function(t,e){return Qh(t,e,!1)}});var Es=x((gS,al)=>{var Ia=ne();al.exports=Ia.jsbn=Ia.jsbn||{};var $t,Hb=244837814094590,el=(Hb&16777215)==15715070;function A(t,e,r){this.data=[],t!=null&&(typeof t=="number"?this.fromNumber(t,e,r):e==null&&typeof t!="string"?this.fromString(t,256):this.fromString(t,e))}Ia.jsbn.BigInteger=A;function Q(){return new A(null)}function zb(t,e,r,i,n,s){for(;--s>=0;){var o=e*this.data[t++]+r.data[i]+n;n=Math.floor(o/67108864),r.data[i++]=o&67108863}return n}function jb(t,e,r,i,n,s){for(var o=e&32767,a=e>>15;--s>=0;){var f=this.data[t]&32767,u=this.data[t++]>>15,c=a*f+u*o;f=o*f+((c&32767)<<15)+r.data[i]+(n&1073741823),n=(f>>>30)+(c>>>15)+a*u+(n>>>30),r.data[i++]=f&1073741823}return n}function tl(t,e,r,i,n,s){for(var o=e&16383,a=e>>14;--s>=0;){var f=this.data[t]&16383,u=this.data[t++]>>14,c=a*f+u*o;f=o*f+((c&16383)<<14)+r.data[i]+n,n=(f>>28)+(c>>14)+a*u,r.data[i++]=f&268435455}return n}typeof navigator=="undefined"?(A.prototype.am=tl,$t=28):el&&navigator.appName=="Microsoft Internet Explorer"?(A.prototype.am=jb,$t=30):el&&navigator.appName!="Netscape"?(A.prototype.am=zb,$t=26):(A.prototype.am=tl,$t=28);A.prototype.DB=$t;A.prototype.DM=(1<<$t)-1;A.prototype.DV=1<<$t;var Aa=52;A.prototype.FV=Math.pow(2,Aa);A.prototype.F1=Aa-$t;A.prototype.F2=2*$t-Aa;var Wb="0123456789abcdefghijklmnopqrstuvwxyz",ms=new Array,Ei,at;Ei="0".charCodeAt(0);for(at=0;at<=9;++at)ms[Ei++]=at;Ei="a".charCodeAt(0);for(at=10;at<36;++at)ms[Ei++]=at;Ei="A".charCodeAt(0);for(at=10;at<36;++at)ms[Ei++]=at;function rl(t){return Wb.charAt(t)}function il(t,e){var r=ms[t.charCodeAt(e)];return r??-1}function Yb(t){for(var e=this.t-1;e>=0;--e)t.data[e]=this.data[e];t.t=this.t,t.s=this.s}function $b(t){this.t=1,this.s=t<0?-1:0,t>0?this.data[0]=t:t<-1?this.data[0]=t+this.DV:this.t=0}function yr(t){var e=Q();return e.fromInt(t),e}function Zb(t,e){var r;if(e==16)r=4;else if(e==8)r=3;else if(e==256)r=8;else if(e==2)r=1;else if(e==32)r=5;else if(e==4)r=2;else{this.fromRadix(t,e);return}this.t=0,this.s=0;for(var i=t.length,n=!1,s=0;--i>=0;){var o=r==8?t[i]&255:il(t,i);if(o<0){t.charAt(i)=="-"&&(n=!0);continue}n=!1,s==0?this.data[this.t++]=o:s+r>this.DB?(this.data[this.t-1]|=(o&(1<<this.DB-s)-1)<<s,this.data[this.t++]=o>>this.DB-s):this.data[this.t-1]|=o<<s,s+=r,s>=this.DB&&(s-=this.DB)}r==8&&(t[0]&128)!=0&&(this.s=-1,s>0&&(this.data[this.t-1]|=(1<<this.DB-s)-1<<s)),this.clamp(),n&&A.ZERO.subTo(this,this)}function Qb(){for(var t=this.s&this.DM;this.t>0&&this.data[this.t-1]==t;)--this.t}function Xb(t){if(this.s<0)return"-"+this.negate().toString(t);var e;if(t==16)e=4;else if(t==8)e=3;else if(t==2)e=1;else if(t==32)e=5;else if(t==4)e=2;else return this.toRadix(t);var r=(1<<e)-1,i,n=!1,s="",o=this.t,a=this.DB-o*this.DB%e;if(o-- >0)for(a<this.DB&&(i=this.data[o]>>a)>0&&(n=!0,s=rl(i));o>=0;)a<e?(i=(this.data[o]&(1<<a)-1)<<e-a,i|=this.data[--o]>>(a+=this.DB-e)):(i=this.data[o]>>(a-=e)&r,a<=0&&(a+=this.DB,--o)),i>0&&(n=!0),n&&(s+=rl(i));return n?s:"0"}function Jb(){var t=Q();return A.ZERO.subTo(this,t),t}function ev(){return this.s<0?this.negate():this}function tv(t){var e=this.s-t.s;if(e!=0)return e;var r=this.t;if(e=r-t.t,e!=0)return this.s<0?-e:e;for(;--r>=0;)if((e=this.data[r]-t.data[r])!=0)return e;return 0}function xs(t){var e=1,r;return(r=t>>>16)!=0&&(t=r,e+=16),(r=t>>8)!=0&&(t=r,e+=8),(r=t>>4)!=0&&(t=r,e+=4),(r=t>>2)!=0&&(t=r,e+=2),(r=t>>1)!=0&&(t=r,e+=1),e}function rv(){return this.t<=0?0:this.DB*(this.t-1)+xs(this.data[this.t-1]^this.s&this.DM)}function iv(t,e){var r;for(r=this.t-1;r>=0;--r)e.data[r+t]=this.data[r];for(r=t-1;r>=0;--r)e.data[r]=0;e.t=this.t+t,e.s=this.s}function nv(t,e){for(var r=t;r<this.t;++r)e.data[r-t]=this.data[r];e.t=Math.max(this.t-t,0),e.s=this.s}function sv(t,e){var r=t%this.DB,i=this.DB-r,n=(1<<i)-1,s=Math.floor(t/this.DB),o=this.s<<r&this.DM,a;for(a=this.t-1;a>=0;--a)e.data[a+s+1]=this.data[a]>>i|o,o=(this.data[a]&n)<<r;for(a=s-1;a>=0;--a)e.data[a]=0;e.data[s]=o,e.t=this.t+s+1,e.s=this.s,e.clamp()}function ov(t,e){e.s=this.s;var r=Math.floor(t/this.DB);if(r>=this.t){e.t=0;return}var i=t%this.DB,n=this.DB-i,s=(1<<i)-1;e.data[0]=this.data[r]>>i;for(var o=r+1;o<this.t;++o)e.data[o-r-1]|=(this.data[o]&s)<<n,e.data[o-r]=this.data[o]>>i;i>0&&(e.data[this.t-r-1]|=(this.s&s)<<n),e.t=this.t-r,e.clamp()}function av(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;)i+=this.data[r]-t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;if(t.t<this.t){for(i-=t.s;r<this.t;)i+=this.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;r<t.t;)i-=t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i-=t.s}e.s=i<0?-1:0,i<-1?e.data[r++]=this.DV+i:i>0&&(e.data[r++]=i),e.t=r,e.clamp()}function cv(t,e){var r=this.abs(),i=t.abs(),n=r.t;for(e.t=n+i.t;--n>=0;)e.data[n]=0;for(n=0;n<i.t;++n)e.data[n+r.t]=r.am(0,i.data[n],e,n,0,r.t);e.s=0,e.clamp(),this.s!=t.s&&A.ZERO.subTo(e,e)}function uv(t){for(var e=this.abs(),r=t.t=2*e.t;--r>=0;)t.data[r]=0;for(r=0;r<e.t-1;++r){var i=e.am(r,e.data[r],t,2*r,0,1);(t.data[r+e.t]+=e.am(r+1,2*e.data[r],t,2*r+1,i,e.t-r-1))>=e.DV&&(t.data[r+e.t]-=e.DV,t.data[r+e.t+1]=1)}t.t>0&&(t.data[t.t-1]+=e.am(r,e.data[r],t,2*r,0,1)),t.s=0,t.clamp()}function fv(t,e,r){var i=t.abs();if(!(i.t<=0)){var n=this.abs();if(n.t<i.t){e!=null&&e.fromInt(0),r!=null&&this.copyTo(r);return}r==null&&(r=Q());var s=Q(),o=this.s,a=t.s,f=this.DB-xs(i.data[i.t-1]);f>0?(i.lShiftTo(f,s),n.lShiftTo(f,r)):(i.copyTo(s),n.copyTo(r));var u=s.t,c=s.data[u-1];if(c!=0){var h=c*(1<<this.F1)+(u>1?s.data[u-2]>>this.F2:0),l=this.FV/h,d=(1<<this.F1)/h,p=1<<this.F2,y=r.t,v=y-u,b=e??Q();for(s.dlShiftTo(v,b),r.compareTo(b)>=0&&(r.data[r.t++]=1,r.subTo(b,r)),A.ONE.dlShiftTo(u,b),b.subTo(s,s);s.t<u;)s.data[s.t++]=0;for(;--v>=0;){var E=r.data[--y]==c?this.DM:Math.floor(r.data[y]*l+(r.data[y-1]+p)*d);if((r.data[y]+=s.am(0,E,r,v,0,u))<E)for(s.dlShiftTo(v,b),r.subTo(b,r);r.data[y]<--E;)r.subTo(b,r)}e!=null&&(r.drShiftTo(u,e),o!=a&&A.ZERO.subTo(e,e)),r.t=u,r.clamp(),f>0&&r.rShiftTo(f,r),o<0&&A.ZERO.subTo(r,r)}}}function hv(t){var e=Q();return this.abs().divRemTo(t,null,e),this.s<0&&e.compareTo(A.ZERO)>0&&t.subTo(e,e),e}function Ur(t){this.m=t}function lv(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t}function pv(t){return t}function dv(t){t.divRemTo(this.m,null,t)}function yv(t,e,r){t.multiplyTo(e,r),this.reduce(r)}function gv(t,e){t.squareTo(e),this.reduce(e)}Ur.prototype.convert=lv;Ur.prototype.revert=pv;Ur.prototype.reduce=dv;Ur.prototype.mulTo=yv;Ur.prototype.sqrTo=gv;function bv(){if(this.t<1)return 0;var t=this.data[0];if((t&1)==0)return 0;var e=t&3;return e=e*(2-(t&15)*e)&15,e=e*(2-(t&255)*e)&255,e=e*(2-((t&65535)*e&65535))&65535,e=e*(2-t*e%this.DV)%this.DV,e>0?this.DV-e:-e}function Kr(t){this.m=t,this.mp=t.invDigit(),this.mpl=this.mp&32767,this.mph=this.mp>>15,this.um=(1<<t.DB-15)-1,this.mt2=2*t.t}function vv(t){var e=Q();return t.abs().dlShiftTo(this.m.t,e),e.divRemTo(this.m,null,e),t.s<0&&e.compareTo(A.ZERO)>0&&this.m.subTo(e,e),e}function mv(t){var e=Q();return t.copyTo(e),this.reduce(e),e}function xv(t){for(;t.t<=this.mt2;)t.data[t.t++]=0;for(var e=0;e<this.m.t;++e){var r=t.data[e]&32767,i=r*this.mpl+((r*this.mph+(t.data[e]>>15)*this.mpl&this.um)<<15)&t.DM;for(r=e+this.m.t,t.data[r]+=this.m.am(0,i,t,e,0,this.m.t);t.data[r]>=t.DV;)t.data[r]-=t.DV,t.data[++r]++}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t)}function Ev(t,e){t.squareTo(e),this.reduce(e)}function wv(t,e,r){t.multiplyTo(e,r),this.reduce(r)}Kr.prototype.convert=vv;Kr.prototype.revert=mv;Kr.prototype.reduce=xv;Kr.prototype.mulTo=wv;Kr.prototype.sqrTo=Ev;function _v(){return(this.t>0?this.data[0]&1:this.s)==0}function Sv(t,e){if(t>4294967295||t<1)return A.ONE;var r=Q(),i=Q(),n=e.convert(this),s=xs(t)-1;for(n.copyTo(r);--s>=0;)if(e.sqrTo(r,i),(t&1<<s)>0)e.mulTo(i,n,r);else{var o=r;r=i,i=o}return e.revert(r)}function Iv(t,e){var r;return t<256||e.isEven()?r=new Ur(e):r=new Kr(e),this.exp(t,r)}A.prototype.copyTo=Yb;A.prototype.fromInt=$b;A.prototype.fromString=Zb;A.prototype.clamp=Qb;A.prototype.dlShiftTo=iv;A.prototype.drShiftTo=nv;A.prototype.lShiftTo=sv;A.prototype.rShiftTo=ov;A.prototype.subTo=av;A.prototype.multiplyTo=cv;A.prototype.squareTo=uv;A.prototype.divRemTo=fv;A.prototype.invDigit=bv;A.prototype.isEven=_v;A.prototype.exp=Sv;A.prototype.toString=Xb;A.prototype.negate=Jb;A.prototype.abs=ev;A.prototype.compareTo=tv;A.prototype.bitLength=rv;A.prototype.mod=hv;A.prototype.modPowInt=Iv;A.ZERO=yr(0);A.ONE=yr(1);function Av(){var t=Q();return this.copyTo(t),t}function Cv(){if(this.s<0){if(this.t==1)return this.data[0]-this.DV;if(this.t==0)return-1}else{if(this.t==1)return this.data[0];if(this.t==0)return 0}return(this.data[1]&(1<<32-this.DB)-1)<<this.DB|this.data[0]}function Rv(){return this.t==0?this.s:this.data[0]<<24>>24}function Bv(){return this.t==0?this.s:this.data[0]<<16>>16}function Tv(t){return Math.floor(Math.LN2*this.DB/Math.log(t))}function Dv(){return this.s<0?-1:this.t<=0||this.t==1&&this.data[0]<=0?0:1}function Pv(t){if(t==null&&(t=10),this.signum()==0||t<2||t>36)return"0";var e=this.chunkSize(t),r=Math.pow(t,e),i=yr(r),n=Q(),s=Q(),o="";for(this.divRemTo(i,n,s);n.signum()>0;)o=(r+s.intValue()).toString(t).substr(1)+o,n.divRemTo(i,n,s);return s.intValue().toString(t)+o}function Ov(t,e){this.fromInt(0),e==null&&(e=10);for(var r=this.chunkSize(e),i=Math.pow(e,r),n=!1,s=0,o=0,a=0;a<t.length;++a){var f=il(t,a);if(f<0){t.charAt(a)=="-"&&this.signum()==0&&(n=!0);continue}o=e*o+f,++s>=r&&(this.dMultiply(i),this.dAddOffset(o,0),s=0,o=0)}s>0&&(this.dMultiply(Math.pow(e,s)),this.dAddOffset(o,0)),n&&A.ZERO.subTo(this,this)}function Nv(t,e,r){if(typeof e=="number")if(t<2)this.fromInt(1);else for(this.fromNumber(t,r),this.testBit(t-1)||this.bitwiseTo(A.ONE.shiftLeft(t-1),Ca,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(e);)this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(A.ONE.shiftLeft(t-1),this);else{var i=new Array,n=t&7;i.length=(t>>3)+1,e.nextBytes(i),n>0?i[0]&=(1<<n)-1:i[0]=0,this.fromString(i,256)}}function kv(){var t=this.t,e=new Array;e[0]=this.s;var r=this.DB-t*this.DB%8,i,n=0;if(t-- >0)for(r<this.DB&&(i=this.data[t]>>r)!=(this.s&this.DM)>>r&&(e[n++]=i|this.s<<this.DB-r);t>=0;)r<8?(i=(this.data[t]&(1<<r)-1)<<8-r,i|=this.data[--t]>>(r+=this.DB-8)):(i=this.data[t]>>(r-=8)&255,r<=0&&(r+=this.DB,--t)),(i&128)!=0&&(i|=-256),n==0&&(this.s&128)!=(i&128)&&++n,(n>0||i!=this.s)&&(e[n++]=i);return e}function Lv(t){return this.compareTo(t)==0}function Mv(t){return this.compareTo(t)<0?this:t}function Fv(t){return this.compareTo(t)>0?this:t}function Uv(t,e,r){var i,n,s=Math.min(t.t,this.t);for(i=0;i<s;++i)r.data[i]=e(this.data[i],t.data[i]);if(t.t<this.t){for(n=t.s&this.DM,i=s;i<this.t;++i)r.data[i]=e(this.data[i],n);r.t=this.t}else{for(n=this.s&this.DM,i=s;i<t.t;++i)r.data[i]=e(n,t.data[i]);r.t=t.t}r.s=e(this.s,t.s),r.clamp()}function Kv(t,e){return t&e}function qv(t){var e=Q();return this.bitwiseTo(t,Kv,e),e}function Ca(t,e){return t|e}function Gv(t){var e=Q();return this.bitwiseTo(t,Ca,e),e}function nl(t,e){return t^e}function Vv(t){var e=Q();return this.bitwiseTo(t,nl,e),e}function sl(t,e){return t&~e}function Hv(t){var e=Q();return this.bitwiseTo(t,sl,e),e}function zv(){for(var t=Q(),e=0;e<this.t;++e)t.data[e]=this.DM&~this.data[e];return t.t=this.t,t.s=~this.s,t}function jv(t){var e=Q();return t<0?this.rShiftTo(-t,e):this.lShiftTo(t,e),e}function Wv(t){var e=Q();return t<0?this.lShiftTo(-t,e):this.rShiftTo(t,e),e}function Yv(t){if(t==0)return-1;var e=0;return(t&65535)==0&&(t>>=16,e+=16),(t&255)==0&&(t>>=8,e+=8),(t&15)==0&&(t>>=4,e+=4),(t&3)==0&&(t>>=2,e+=2),(t&1)==0&&++e,e}function $v(){for(var t=0;t<this.t;++t)if(this.data[t]!=0)return t*this.DB+Yv(this.data[t]);return this.s<0?this.t*this.DB:-1}function Zv(t){for(var e=0;t!=0;)t&=t-1,++e;return e}function Qv(){for(var t=0,e=this.s&this.DM,r=0;r<this.t;++r)t+=Zv(this.data[r]^e);return t}function Xv(t){var e=Math.floor(t/this.DB);return e>=this.t?this.s!=0:(this.data[e]&1<<t%this.DB)!=0}function Jv(t,e){var r=A.ONE.shiftLeft(t);return this.bitwiseTo(r,e,r),r}function e2(t){return this.changeBit(t,Ca)}function t2(t){return this.changeBit(t,sl)}function r2(t){return this.changeBit(t,nl)}function i2(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;)i+=this.data[r]+t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;if(t.t<this.t){for(i+=t.s;r<this.t;)i+=this.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;r<t.t;)i+=t.data[r],e.data[r++]=i&this.DM,i>>=this.DB;i+=t.s}e.s=i<0?-1:0,i>0?e.data[r++]=i:i<-1&&(e.data[r++]=this.DV+i),e.t=r,e.clamp()}function n2(t){var e=Q();return this.addTo(t,e),e}function s2(t){var e=Q();return this.subTo(t,e),e}function o2(t){var e=Q();return this.multiplyTo(t,e),e}function a2(t){var e=Q();return this.divRemTo(t,e,null),e}function c2(t){var e=Q();return this.divRemTo(t,null,e),e}function u2(t){var e=Q(),r=Q();return this.divRemTo(t,e,r),new Array(e,r)}function f2(t){this.data[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp()}function h2(t,e){if(t!=0){for(;this.t<=e;)this.data[this.t++]=0;for(this.data[e]+=t;this.data[e]>=this.DV;)this.data[e]-=this.DV,++e>=this.t&&(this.data[this.t++]=0),++this.data[e]}}function nn(){}function ol(t){return t}function l2(t,e,r){t.multiplyTo(e,r)}function p2(t,e){t.squareTo(e)}nn.prototype.convert=ol;nn.prototype.revert=ol;nn.prototype.mulTo=l2;nn.prototype.sqrTo=p2;function d2(t){return this.exp(t,new nn)}function y2(t,e,r){var i=Math.min(this.t+t.t,e);for(r.s=0,r.t=i;i>0;)r.data[--i]=0;var n;for(n=r.t-this.t;i<n;++i)r.data[i+this.t]=this.am(0,t.data[i],r,i,0,this.t);for(n=Math.min(t.t,e);i<n;++i)this.am(0,t.data[i],r,i,0,e-i);r.clamp()}function g2(t,e,r){--e;var i=r.t=this.t+t.t-e;for(r.s=0;--i>=0;)r.data[i]=0;for(i=Math.max(e-this.t,0);i<t.t;++i)r.data[this.t+i-e]=this.am(e-i,t.data[i],r,0,0,this.t+i-e);r.clamp(),r.drShiftTo(1,r)}function wi(t){this.r2=Q(),this.q3=Q(),A.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t}function b2(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m);if(t.compareTo(this.m)<0)return t;var e=Q();return t.copyTo(e),this.reduce(e),e}function v2(t){return t}function m2(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;)t.dAddOffset(1,this.m.t+1);for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;)t.subTo(this.m,t)}function x2(t,e){t.squareTo(e),this.reduce(e)}function E2(t,e,r){t.multiplyTo(e,r),this.reduce(r)}wi.prototype.convert=b2;wi.prototype.revert=v2;wi.prototype.reduce=m2;wi.prototype.mulTo=E2;wi.prototype.sqrTo=x2;function w2(t,e){var r=t.bitLength(),i,n=yr(1),s;if(r<=0)return n;r<18?i=1:r<48?i=3:r<144?i=4:r<768?i=5:i=6,r<8?s=new Ur(e):e.isEven()?s=new wi(e):s=new Kr(e);var o=new Array,a=3,f=i-1,u=(1<<i)-1;if(o[1]=s.convert(this),i>1){var c=Q();for(s.sqrTo(o[1],c);a<=u;)o[a]=Q(),s.mulTo(c,o[a-2],o[a]),a+=2}var h=t.t-1,l,d=!0,p=Q(),y;for(r=xs(t.data[h])-1;h>=0;){for(r>=f?l=t.data[h]>>r-f&u:(l=(t.data[h]&(1<<r+1)-1)<<f-r,h>0&&(l|=t.data[h-1]>>this.DB+r-f)),a=i;(l&1)==0;)l>>=1,--a;if((r-=a)<0&&(r+=this.DB,--h),d)o[l].copyTo(n),d=!1;else{for(;a>1;)s.sqrTo(n,p),s.sqrTo(p,n),a-=2;a>0?s.sqrTo(n,p):(y=n,n=p,p=y),s.mulTo(p,o[l],n)}for(;h>=0&&(t.data[h]&1<<r)==0;)s.sqrTo(n,p),y=n,n=p,p=y,--r<0&&(r=this.DB-1,--h)}return s.revert(n)}function _2(t){var e=this.s<0?this.negate():this.clone(),r=t.s<0?t.negate():t.clone();if(e.compareTo(r)<0){var i=e;e=r,r=i}var n=e.getLowestSetBit(),s=r.getLowestSetBit();if(s<0)return e;for(n<s&&(s=n),s>0&&(e.rShiftTo(s,e),r.rShiftTo(s,r));e.signum()>0;)(n=e.getLowestSetBit())>0&&e.rShiftTo(n,e),(n=r.getLowestSetBit())>0&&r.rShiftTo(n,r),e.compareTo(r)>=0?(e.subTo(r,e),e.rShiftTo(1,e)):(r.subTo(e,r),r.rShiftTo(1,r));return s>0&&r.lShiftTo(s,r),r}function S2(t){if(t<=0)return 0;var e=this.DV%t,r=this.s<0?t-1:0;if(this.t>0)if(e==0)r=this.data[0]%t;else for(var i=this.t-1;i>=0;--i)r=(e*r+this.data[i])%t;return r}function I2(t){var e=t.isEven();if(this.isEven()&&e||t.signum()==0)return A.ZERO;for(var r=t.clone(),i=this.clone(),n=yr(1),s=yr(0),o=yr(0),a=yr(1);r.signum()!=0;){for(;r.isEven();)r.rShiftTo(1,r),e?((!n.isEven()||!s.isEven())&&(n.addTo(this,n),s.subTo(t,s)),n.rShiftTo(1,n)):s.isEven()||s.subTo(t,s),s.rShiftTo(1,s);for(;i.isEven();)i.rShiftTo(1,i),e?((!o.isEven()||!a.isEven())&&(o.addTo(this,o),a.subTo(t,a)),o.rShiftTo(1,o)):a.isEven()||a.subTo(t,a),a.rShiftTo(1,a);r.compareTo(i)>=0?(r.subTo(i,r),e&&n.subTo(o,n),s.subTo(a,s)):(i.subTo(r,i),e&&o.subTo(n,o),a.subTo(s,a))}if(i.compareTo(A.ONE)!=0)return A.ZERO;if(a.compareTo(t)>=0)return a.subtract(t);if(a.signum()<0)a.addTo(t,a);else return a;return a.signum()<0?a.add(t):a}var bt=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],A2=(1<<26)/bt[bt.length-1];function C2(t){var e,r=this.abs();if(r.t==1&&r.data[0]<=bt[bt.length-1]){for(e=0;e<bt.length;++e)if(r.data[0]==bt[e])return!0;return!1}if(r.isEven())return!1;for(e=1;e<bt.length;){for(var i=bt[e],n=e+1;n<bt.length&&i<A2;)i*=bt[n++];for(i=r.modInt(i);e<n;)if(i%bt[e++]==0)return!1}return r.millerRabin(t)}function R2(t){var e=this.subtract(A.ONE),r=e.getLowestSetBit();if(r<=0)return!1;for(var i=e.shiftRight(r),n=B2(),s,o=0;o<t;++o){do s=new A(this.bitLength(),n);while(s.compareTo(A.ONE)<=0||s.compareTo(e)>=0);var a=s.modPow(i,this);if(a.compareTo(A.ONE)!=0&&a.compareTo(e)!=0){for(var f=1;f++<r&&a.compareTo(e)!=0;)if(a=a.modPowInt(2,this),a.compareTo(A.ONE)==0)return!1;if(a.compareTo(e)!=0)return!1}}return!0}function B2(){return{nextBytes:function(t){for(var e=0;e<t.length;++e)t[e]=Math.floor(Math.random()*256)}}}A.prototype.chunkSize=Tv;A.prototype.toRadix=Pv;A.prototype.fromRadix=Ov;A.prototype.fromNumber=Nv;A.prototype.bitwiseTo=Uv;A.prototype.changeBit=Jv;A.prototype.addTo=i2;A.prototype.dMultiply=f2;A.prototype.dAddOffset=h2;A.prototype.multiplyLowerTo=y2;A.prototype.multiplyUpperTo=g2;A.prototype.modInt=S2;A.prototype.millerRabin=R2;A.prototype.clone=Av;A.prototype.intValue=Cv;A.prototype.byteValue=Rv;A.prototype.shortValue=Bv;A.prototype.signum=Dv;A.prototype.toByteArray=kv;A.prototype.equals=Lv;A.prototype.min=Mv;A.prototype.max=Fv;A.prototype.and=qv;A.prototype.or=Gv;A.prototype.xor=Vv;A.prototype.andNot=Hv;A.prototype.not=zv;A.prototype.shiftLeft=jv;A.prototype.shiftRight=Wv;A.prototype.getLowestSetBit=$v;A.prototype.bitCount=Qv;A.prototype.testBit=Xv;A.prototype.setBit=e2;A.prototype.clearBit=t2;A.prototype.flipBit=r2;A.prototype.add=n2;A.prototype.subtract=s2;A.prototype.multiply=o2;A.prototype.divide=a2;A.prototype.remainder=c2;A.prototype.divideAndRemainder=u2;A.prototype.modPow=w2;A.prototype.modInverse=I2;A.prototype.pow=d2;A.prototype.gcd=_2;A.prototype.isProbablePrime=C2});var ll=x((bS,hl)=>{var Ot=ne();Fr();Ie();var cl=hl.exports=Ot.sha1=Ot.sha1||{};Ot.md.sha1=Ot.md.algorithms.sha1=cl;cl.create=function(){ul||T2();var t=null,e=Ot.util.createBuffer(),r=new Array(80),i={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,fullMessageLength:null,messageLengthSize:8};return i.start=function(){i.messageLength=0,i.fullMessageLength=i.messageLength64=[];for(var n=i.messageLengthSize/4,s=0;s<n;++s)i.fullMessageLength.push(0);return e=Ot.util.createBuffer(),t={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520},i},i.start(),i.update=function(n,s){s==="utf8"&&(n=Ot.util.encodeUtf8(n));var o=n.length;i.messageLength+=o,o=[o/4294967296>>>0,o>>>0];for(var a=i.fullMessageLength.length-1;a>=0;--a)i.fullMessageLength[a]+=o[1],o[1]=o[0]+(i.fullMessageLength[a]/4294967296>>>0),i.fullMessageLength[a]=i.fullMessageLength[a]>>>0,o[0]=o[1]/4294967296>>>0;return e.putBytes(n),fl(t,r,e),(e.read>2048||e.length()===0)&&e.compact(),i},i.digest=function(){var n=Ot.util.createBuffer();n.putBytes(e.bytes());var s=i.fullMessageLength[i.fullMessageLength.length-1]+i.messageLengthSize,o=s&i.blockLength-1;n.putBytes(Ra.substr(0,i.blockLength-o));for(var a,f,u=i.fullMessageLength[0]*8,c=0;c<i.fullMessageLength.length-1;++c)a=i.fullMessageLength[c+1]*8,f=a/4294967296>>>0,u+=f,n.putInt32(u>>>0),u=a>>>0;n.putInt32(u);var h={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4};fl(h,r,n);var l=Ot.util.createBuffer();return l.putInt32(h.h0),l.putInt32(h.h1),l.putInt32(h.h2),l.putInt32(h.h3),l.putInt32(h.h4),l},i};var Ra=null,ul=!1;function T2(){Ra=String.fromCharCode(128),Ra+=Ot.util.fillString(String.fromCharCode(0),64),ul=!0}function fl(t,e,r){for(var i,n,s,o,a,f,u,c,h=r.length();h>=64;){for(n=t.h0,s=t.h1,o=t.h2,a=t.h3,f=t.h4,c=0;c<16;++c)i=r.getInt32(),e[c]=i,u=a^s&(o^a),i=(n<<5|n>>>27)+u+f+1518500249+i,f=a,a=o,o=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<20;++c)i=e[c-3]^e[c-8]^e[c-14]^e[c-16],i=i<<1|i>>>31,e[c]=i,u=a^s&(o^a),i=(n<<5|n>>>27)+u+f+1518500249+i,f=a,a=o,o=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<32;++c)i=e[c-3]^e[c-8]^e[c-14]^e[c-16],i=i<<1|i>>>31,e[c]=i,u=s^o^a,i=(n<<5|n>>>27)+u+f+1859775393+i,f=a,a=o,o=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<40;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s^o^a,i=(n<<5|n>>>27)+u+f+1859775393+i,f=a,a=o,o=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<60;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s&o|a&(s^o),i=(n<<5|n>>>27)+u+f+2400959708+i,f=a,a=o,o=(s<<30|s>>>2)>>>0,s=n,n=i;for(;c<80;++c)i=e[c-6]^e[c-16]^e[c-28]^e[c-32],i=i<<2|i>>>30,e[c]=i,u=s^o^a,i=(n<<5|n>>>27)+u+f+3395469782+i,f=a,a=o,o=(s<<30|s>>>2)>>>0,s=n,n=i;t.h0=t.h0+n|0,t.h1=t.h1+s|0,t.h2=t.h2+o|0,t.h3=t.h3+a|0,t.h4=t.h4+f|0,h-=64}}});var yl=x((vS,dl)=>{var Nt=ne();Ie();rn();ll();var pl=dl.exports=Nt.pkcs1=Nt.pkcs1||{};pl.encode_rsa_oaep=function(t,e,r){var i,n,s,o;typeof r=="string"?(i=r,n=arguments[3]||void 0,s=arguments[4]||void 0):r&&(i=r.label||void 0,n=r.seed||void 0,s=r.md||void 0,r.mgf1&&r.mgf1.md&&(o=r.mgf1.md)),s?s.start():s=Nt.md.sha1.create(),o||(o=s);var a=Math.ceil(t.n.bitLength()/8),f=a-2*s.digestLength-2;if(e.length>f){var u=new Error("RSAES-OAEP input message length is too long.");throw u.length=e.length,u.maxLength=f,u}i||(i=""),s.update(i,"raw");for(var c=s.digest(),h="",l=f-e.length,d=0;d<l;d++)h+="\0";var p=c.getBytes()+h+""+e;if(!n)n=Nt.random.getBytes(s.digestLength);else if(n.length!==s.digestLength){var u=new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");throw u.seedLength=n.length,u.digestLength=s.digestLength,u}var y=ws(n,a-s.digestLength-1,o),v=Nt.util.xorBytes(p,y,p.length),b=ws(v,s.digestLength,o),E=Nt.util.xorBytes(n,b,n.length);return"\0"+E+v};pl.decode_rsa_oaep=function(t,e,r){var i,n,s;typeof r=="string"?(i=r,n=arguments[3]||void 0):r&&(i=r.label||void 0,n=r.md||void 0,r.mgf1&&r.mgf1.md&&(s=r.mgf1.md));var o=Math.ceil(t.n.bitLength()/8);if(e.length!==o){var v=new Error("RSAES-OAEP encoded message length is invalid.");throw v.length=e.length,v.expectedLength=o,v}if(n===void 0?n=Nt.md.sha1.create():n.start(),s||(s=n),o<2*n.digestLength+2)throw new Error("RSAES-OAEP key is too short for the hash function.");i||(i=""),n.update(i,"raw");for(var a=n.digest().getBytes(),f=e.charAt(0),u=e.substring(1,n.digestLength+1),c=e.substring(1+n.digestLength),h=ws(c,n.digestLength,s),l=Nt.util.xorBytes(u,h,u.length),d=ws(l,o-n.digestLength-1,s),p=Nt.util.xorBytes(c,d,c.length),y=p.substring(0,n.digestLength),v=f!=="\0",b=0;b<n.digestLength;++b)v|=a.charAt(b)!==y.charAt(b);for(var E=1,I=n.digestLength,D=n.digestLength;D<p.length;D++){var T=p.charCodeAt(D),R=T&1^1,F=E?65534:0;v|=T&F,E=E&R,I+=E}if(v||p.charCodeAt(I)!==1)throw new Error("Invalid RSAES-OAEP padding.");return p.substring(I+1)};function ws(t,e,r){r||(r=Nt.md.sha1.create());for(var i="",n=Math.ceil(e/r.digestLength),s=0;s<n;++s){var o=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,s&255);r.start(),r.update(t+o),i+=r.digest().getBytes()}return i.substring(0,e)}});var gl=x((mS,Ba)=>{var gr=ne();Ie();Es();rn();(function(){if(gr.prime){Ba.exports=gr.prime;return}var t=Ba.exports=gr.prime=gr.prime||{},e=gr.jsbn.BigInteger,r=[6,4,2,4,2,4,6,2],i=new e(null);i.fromInt(30);var n=function(h,l){return h|l};t.generateProbablePrime=function(h,l,d){typeof l=="function"&&(d=l,l={}),l=l||{};var p=l.algorithm||"PRIMEINC";typeof p=="string"&&(p={name:p}),p.options=p.options||{};var y=l.prng||gr.random,v={nextBytes:function(b){for(var E=y.getBytesSync(b.length),I=0;I<b.length;++I)b[I]=E.charCodeAt(I)}};if(p.name==="PRIMEINC")return s(h,v,p.options,d);throw new Error("Invalid prime generation algorithm: "+p.name)};function s(h,l,d,p){return"workers"in d?f(h,l,d,p):o(h,l,d,p)}function o(h,l,d,p){var y=u(h,l),v=0,b=c(y.bitLength());"millerRabinTests"in d&&(b=d.millerRabinTests);var E=10;"maxBlockTime"in d&&(E=d.maxBlockTime),a(y,h,l,v,b,E,p)}function a(h,l,d,p,y,v,b){var E=+new Date;do{if(h.bitLength()>l&&(h=u(l,d)),h.isProbablePrime(y))return b(null,h);h.dAddOffset(r[p++%8],0)}while(v<0||+new Date-E<v);gr.util.setImmediate(function(){a(h,l,d,p,y,v,b)})}function f(h,l,d,p){if(typeof Worker=="undefined")return o(h,l,d,p);var y=u(h,l),v=d.workers,b=d.workLoad||100,E=b*30/8,I=d.workerScript||"forge/prime.worker.js";if(v===-1)return gr.util.estimateCores(function(T,R){T&&(R=2),v=R-1,D()});D();function D(){v=Math.max(1,v);for(var T=[],R=0;R<v;++R)T[R]=new Worker(I);for(var F=v,R=0;R<v;++R)T[R].addEventListener("message",me);var z=!1;function me(ze){if(!z){--F;var Je=ze.data;if(Je.found){for(var qe=0;qe<T.length;++qe)T[qe].terminate();return z=!0,p(null,new e(Je.prime,16))}y.bitLength()>h&&(y=u(h,l));var Qr=y.toString(16);ze.target.postMessage({hex:Qr,workLoad:b}),y.dAddOffset(E,0)}}}}function u(h,l){var d=new e(h,l),p=h-1;return d.testBit(p)||d.bitwiseTo(e.ONE.shiftLeft(p),n,d),d.dAddOffset(31-d.mod(i).byteValue(),0),d}function c(h){return h<=100?27:h<=150?18:h<=200?15:h<=250?12:h<=300?9:h<=350?8:h<=400?7:h<=500?6:h<=600?5:h<=800?4:h<=1250?3:2}})()});var Ss=x((xS,_l)=>{var L=ne();tn();Es();us();yl();gl();rn();Ie();typeof Y=="undefined"&&(Y=L.jsbn.BigInteger);var Y,Ta=L.util.isNodejs?xi():null,m=L.asn1,ct=L.util;L.pki=L.pki||{};_l.exports=L.pki.rsa=L.rsa=L.rsa||{};var U=L.pki,D2=[6,4,2,4,2,4,6,2],P2={name:"PrivateKeyInfo",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:m.Class.UNIVERSAL,type:m.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:m.Class.UNIVERSAL,type:m.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},O2={name:"RSAPrivateKey",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},N2={name:"RSAPublicKey",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:m.Class.UNIVERSAL,type:m.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},k2=L.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:m.Class.UNIVERSAL,type:m.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:m.Class.UNIVERSAL,type:m.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},L2={name:"DigestInfo",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"DigestInfo.DigestAlgorithm",tagClass:m.Class.UNIVERSAL,type:m.Type.SEQUENCE,constructed:!0,value:[{name:"DigestInfo.DigestAlgorithm.algorithmIdentifier",tagClass:m.Class.UNIVERSAL,type:m.Type.OID,constructed:!1,capture:"algorithmIdentifier"},{name:"DigestInfo.DigestAlgorithm.parameters",tagClass:m.Class.UNIVERSAL,type:m.Type.NULL,constructed:!1}]},{name:"DigestInfo.digest",tagClass:m.Class.UNIVERSAL,type:m.Type.OCTETSTRING,constructed:!1,capture:"digest"}]},M2=function(t){var e;if(t.algorithm in U.oids)e=U.oids[t.algorithm];else{var r=new Error("Unknown message digest algorithm.");throw r.algorithm=t.algorithm,r}var i=m.oidToDer(e).getBytes(),n=m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[]),s=m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[]);s.value.push(m.create(m.Class.UNIVERSAL,m.Type.OID,!1,i)),s.value.push(m.create(m.Class.UNIVERSAL,m.Type.NULL,!1,""));var o=m.create(m.Class.UNIVERSAL,m.Type.OCTETSTRING,!1,t.digest().getBytes());return n.value.push(s),n.value.push(o),m.toDer(n).getBytes()},bl=function(t,e,r){if(r)return t.modPow(e.e,e.n);if(!e.p||!e.q)return t.modPow(e.d,e.n);e.dP||(e.dP=e.d.mod(e.p.subtract(Y.ONE))),e.dQ||(e.dQ=e.d.mod(e.q.subtract(Y.ONE))),e.qInv||(e.qInv=e.q.modInverse(e.p));var i;do i=new Y(L.util.bytesToHex(L.random.getBytes(e.n.bitLength()/8)),16);while(i.compareTo(e.n)>=0||!i.gcd(e.n).equals(Y.ONE));t=t.multiply(i.modPow(e.e,e.n)).mod(e.n);for(var n=t.mod(e.p).modPow(e.dP,e.p),s=t.mod(e.q).modPow(e.dQ,e.q);n.compareTo(s)<0;)n=n.add(e.p);var o=n.subtract(s).multiply(e.qInv).mod(e.p).multiply(e.q).add(s);return o=o.multiply(i.modInverse(e.n)).mod(e.n),o};U.rsa.encrypt=function(t,e,r){var i=r,n,s=Math.ceil(e.n.bitLength()/8);r!==!1&&r!==!0?(i=r===2,n=vl(t,e,r)):(n=L.util.createBuffer(),n.putBytes(t));for(var o=new Y(n.toHex(),16),a=bl(o,e,i),f=a.toString(16),u=L.util.createBuffer(),c=s-Math.ceil(f.length/2);c>0;)u.putByte(0),--c;return u.putBytes(L.util.hexToBytes(f)),u.getBytes()};U.rsa.decrypt=function(t,e,r,i){var n=Math.ceil(e.n.bitLength()/8);if(t.length!==n){var s=new Error("Encrypted message length is invalid.");throw s.length=t.length,s.expected=n,s}var o=new Y(L.util.createBuffer(t).toHex(),16);if(o.compareTo(e.n)>=0)throw new Error("Encrypted message is invalid.");for(var a=bl(o,e,r),f=a.toString(16),u=L.util.createBuffer(),c=n-Math.ceil(f.length/2);c>0;)u.putByte(0),--c;return u.putBytes(L.util.hexToBytes(f)),i!==!1?_s(u.getBytes(),e,r):u.getBytes()};U.rsa.createKeyPairGenerationState=function(t,e,r){typeof t=="string"&&(t=parseInt(t,10)),t=t||2048,r=r||{};var i=r.prng||L.random,n={nextBytes:function(a){for(var f=i.getBytesSync(a.length),u=0;u<a.length;++u)a[u]=f.charCodeAt(u)}},s=r.algorithm||"PRIMEINC",o;if(s==="PRIMEINC")o={algorithm:s,state:0,bits:t,rng:n,eInt:e||65537,e:new Y(null),p:null,q:null,qBits:t>>1,pBits:t-(t>>1),pqState:0,num:null,keys:null},o.e.fromInt(o.eInt);else throw new Error("Invalid key generation algorithm: "+s);return o};U.rsa.stepKeyPairGenerationState=function(t,e){"algorithm"in t||(t.algorithm="PRIMEINC");var r=new Y(null);r.fromInt(30);for(var i=0,n=function(h,l){return h|l},s=+new Date,o,a=0;t.keys===null&&(e<=0||a<e);){if(t.state===0){var f=t.p===null?t.pBits:t.qBits,u=f-1;t.pqState===0?(t.num=new Y(f,t.rng),t.num.testBit(u)||t.num.bitwiseTo(Y.ONE.shiftLeft(u),n,t.num),t.num.dAddOffset(31-t.num.mod(r).byteValue(),0),i=0,++t.pqState):t.pqState===1?t.num.bitLength()>f?t.pqState=0:t.num.isProbablePrime(U2(t.num.bitLength()))?++t.pqState:t.num.dAddOffset(D2[i++%8],0):t.pqState===2?t.pqState=t.num.subtract(Y.ONE).gcd(t.e).compareTo(Y.ONE)===0?3:0:t.pqState===3&&(t.pqState=0,t.p===null?t.p=t.num:t.q=t.num,t.p!==null&&t.q!==null&&++t.state,t.num=null)}else if(t.state===1)t.p.compareTo(t.q)<0&&(t.num=t.p,t.p=t.q,t.q=t.num),++t.state;else if(t.state===2)t.p1=t.p.subtract(Y.ONE),t.q1=t.q.subtract(Y.ONE),t.phi=t.p1.multiply(t.q1),++t.state;else if(t.state===3)t.phi.gcd(t.e).compareTo(Y.ONE)===0?++t.state:(t.p=null,t.q=null,t.state=0);else if(t.state===4)t.n=t.p.multiply(t.q),t.n.bitLength()===t.bits?++t.state:(t.q=null,t.state=0);else if(t.state===5){var c=t.e.modInverse(t.phi);t.keys={privateKey:U.rsa.setPrivateKey(t.n,t.e,c,t.p,t.q,c.mod(t.p1),c.mod(t.q1),t.q.modInverse(t.p)),publicKey:U.rsa.setPublicKey(t.n,t.e)}}o=+new Date,a+=o-s,s=o}return t.keys!==null};U.rsa.generateKeyPair=function(t,e,r,i){if(arguments.length===1?typeof t=="object"?(r=t,t=void 0):typeof t=="function"&&(i=t,t=void 0):arguments.length===2?typeof t=="number"?typeof e=="function"?(i=e,e=void 0):typeof e!="number"&&(r=e,e=void 0):(r=t,i=e,t=void 0,e=void 0):arguments.length===3&&(typeof e=="number"?typeof r=="function"&&(i=r,r=void 0):(i=r,r=e,e=void 0)),r=r||{},t===void 0&&(t=r.bits||2048),e===void 0&&(e=r.e||65537),!L.options.usePureJavaScript&&!r.prng&&t>=256&&t<=16384&&(e===65537||e===3)){if(i){if(ml("generateKeyPair"))return Ta.generateKeyPair("rsa",{modulusLength:t,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}},function(a,f,u){if(a)return i(a);i(null,{privateKey:U.privateKeyFromPem(u),publicKey:U.publicKeyFromPem(f)})});if(xl("generateKey")&&xl("exportKey"))return ct.globalScope.crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:wl(e),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(function(a){return ct.globalScope.crypto.subtle.exportKey("pkcs8",a.privateKey)}).then(void 0,function(a){i(a)}).then(function(a){if(a){var f=U.privateKeyFromAsn1(m.fromDer(L.util.createBuffer(a)));i(null,{privateKey:f,publicKey:U.setRsaPublicKey(f.n,f.e)})}});if(El("generateKey")&&El("exportKey")){var n=ct.globalScope.msCrypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:wl(e),hash:{name:"SHA-256"}},!0,["sign","verify"]);n.oncomplete=function(a){var f=a.target.result,u=ct.globalScope.msCrypto.subtle.exportKey("pkcs8",f.privateKey);u.oncomplete=function(c){var h=c.target.result,l=U.privateKeyFromAsn1(m.fromDer(L.util.createBuffer(h)));i(null,{privateKey:l,publicKey:U.setRsaPublicKey(l.n,l.e)})},u.onerror=function(c){i(c)}},n.onerror=function(a){i(a)};return}}else if(ml("generateKeyPairSync")){var s=Ta.generateKeyPairSync("rsa",{modulusLength:t,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}});return{privateKey:U.privateKeyFromPem(s.privateKey),publicKey:U.publicKeyFromPem(s.publicKey)}}}var o=U.rsa.createKeyPairGenerationState(t,e,r);if(!i)return U.rsa.stepKeyPairGenerationState(o,0),o.keys;F2(o,r,i)};U.setRsaPublicKey=U.rsa.setPublicKey=function(t,e){var r={n:t,e};return r.encrypt=function(i,n,s){if(typeof n=="string"?n=n.toUpperCase():n===void 0&&(n="RSAES-PKCS1-V1_5"),n==="RSAES-PKCS1-V1_5")n={encode:function(a,f,u){return vl(a,f,2).getBytes()}};else if(n==="RSA-OAEP"||n==="RSAES-OAEP")n={encode:function(a,f){return L.pkcs1.encode_rsa_oaep(f,a,s)}};else if(["RAW","NONE","NULL",null].indexOf(n)!==-1)n={encode:function(a){return a}};else if(typeof n=="string")throw new Error('Unsupported encryption scheme: "'+n+'".');var o=n.encode(i,r,!0);return U.rsa.encrypt(o,r,!0)},r.verify=function(i,n,s,o){typeof s=="string"?s=s.toUpperCase():s===void 0&&(s="RSASSA-PKCS1-V1_5"),o===void 0&&(o={_parseAllDigestBytes:!0}),"_parseAllDigestBytes"in o||(o._parseAllDigestBytes=!0),s==="RSASSA-PKCS1-V1_5"?s={verify:function(f,u){u=_s(u,r,!0);var c=m.fromDer(u,{parseAllBytes:o._parseAllDigestBytes}),h={},l=[];if(!m.validate(c,L2,h,l)){var d=new Error("ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value.");throw d.errors=l,d}var p=m.derToOid(h.algorithmIdentifier);if(!(p===L.oids.md2||p===L.oids.md5||p===L.oids.sha1||p===L.oids.sha224||p===L.oids.sha256||p===L.oids.sha384||p===L.oids.sha512||p===L.oids["sha512-224"]||p===L.oids["sha512-256"])){var d=new Error("Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.");throw d.oid=p,d}return f===h.digest}}:(s==="NONE"||s==="NULL"||s===null)&&(s={verify:function(f,u){return u=_s(u,r,!0),f===u}});var a=U.rsa.decrypt(n,r,!0,!1);return s.verify(i,a,r.n.bitLength())},r};U.setRsaPrivateKey=U.rsa.setPrivateKey=function(t,e,r,i,n,s,o,a){var f={n:t,e,d:r,p:i,q:n,dP:s,dQ:o,qInv:a};return f.decrypt=function(u,c,h){typeof c=="string"?c=c.toUpperCase():c===void 0&&(c="RSAES-PKCS1-V1_5");var l=U.rsa.decrypt(u,f,!1,!1);if(c==="RSAES-PKCS1-V1_5")c={decode:_s};else if(c==="RSA-OAEP"||c==="RSAES-OAEP")c={decode:function(d,p){return L.pkcs1.decode_rsa_oaep(p,d,h)}};else if(["RAW","NONE","NULL",null].indexOf(c)!==-1)c={decode:function(d){return d}};else throw new Error('Unsupported encryption scheme: "'+c+'".');return c.decode(l,f,!1)},f.sign=function(u,c){var h=!1;typeof c=="string"&&(c=c.toUpperCase()),c===void 0||c==="RSASSA-PKCS1-V1_5"?(c={encode:M2},h=1):(c==="NONE"||c==="NULL"||c===null)&&(c={encode:function(){return u}},h=1);var l=c.encode(u,f.n.bitLength());return U.rsa.encrypt(l,f,h)},f};U.wrapRsaPrivateKey=function(t){return m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,m.integerToDer(0).getBytes()),m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[m.create(m.Class.UNIVERSAL,m.Type.OID,!1,m.oidToDer(U.oids.rsaEncryption).getBytes()),m.create(m.Class.UNIVERSAL,m.Type.NULL,!1,"")]),m.create(m.Class.UNIVERSAL,m.Type.OCTETSTRING,!1,m.toDer(t).getBytes())])};U.privateKeyFromAsn1=function(t){var e={},r=[];if(m.validate(t,P2,e,r)&&(t=m.fromDer(L.util.createBuffer(e.privateKey))),e={},r=[],!m.validate(t,O2,e,r)){var i=new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");throw i.errors=r,i}var n,s,o,a,f,u,c,h;return n=L.util.createBuffer(e.privateKeyModulus).toHex(),s=L.util.createBuffer(e.privateKeyPublicExponent).toHex(),o=L.util.createBuffer(e.privateKeyPrivateExponent).toHex(),a=L.util.createBuffer(e.privateKeyPrime1).toHex(),f=L.util.createBuffer(e.privateKeyPrime2).toHex(),u=L.util.createBuffer(e.privateKeyExponent1).toHex(),c=L.util.createBuffer(e.privateKeyExponent2).toHex(),h=L.util.createBuffer(e.privateKeyCoefficient).toHex(),U.setRsaPrivateKey(new Y(n,16),new Y(s,16),new Y(o,16),new Y(a,16),new Y(f,16),new Y(u,16),new Y(c,16),new Y(h,16))};U.privateKeyToAsn1=U.privateKeyToRSAPrivateKey=function(t){return m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,m.integerToDer(0).getBytes()),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.n)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.e)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.d)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.p)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.q)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.dP)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.dQ)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.qInv))])};U.publicKeyFromAsn1=function(t){var e={},r=[];if(m.validate(t,k2,e,r)){var i=m.derToOid(e.publicKeyOid);if(i!==U.oids.rsaEncryption){var n=new Error("Cannot read public key. Unknown OID.");throw n.oid=i,n}t=e.rsaPublicKey}if(r=[],!m.validate(t,N2,e,r)){var n=new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");throw n.errors=r,n}var s=L.util.createBuffer(e.publicKeyModulus).toHex(),o=L.util.createBuffer(e.publicKeyExponent).toHex();return U.setRsaPublicKey(new Y(s,16),new Y(o,16))};U.publicKeyToAsn1=U.publicKeyToSubjectPublicKeyInfo=function(t){return m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[m.create(m.Class.UNIVERSAL,m.Type.OID,!1,m.oidToDer(U.oids.rsaEncryption).getBytes()),m.create(m.Class.UNIVERSAL,m.Type.NULL,!1,"")]),m.create(m.Class.UNIVERSAL,m.Type.BITSTRING,!1,[U.publicKeyToRSAPublicKey(t)])])};U.publicKeyToRSAPublicKey=function(t){return m.create(m.Class.UNIVERSAL,m.Type.SEQUENCE,!0,[m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.n)),m.create(m.Class.UNIVERSAL,m.Type.INTEGER,!1,kt(t.e))])};function vl(t,e,r){var i=L.util.createBuffer(),n=Math.ceil(e.n.bitLength()/8);if(t.length>n-11){var s=new Error("Message is too long for PKCS#1 v1.5 padding.");throw s.length=t.length,s.max=n-11,s}i.putByte(0),i.putByte(r);var o=n-3-t.length,a;if(r===0||r===1){a=r===0?0:255;for(var f=0;f<o;++f)i.putByte(a)}else for(;o>0;){for(var u=0,c=L.random.getBytes(o),f=0;f<o;++f)a=c.charCodeAt(f),a===0?++u:i.putByte(a);o=u}return i.putByte(0),i.putBytes(t),i}function _s(t,e,r,i){var n=Math.ceil(e.n.bitLength()/8),s=L.util.createBuffer(t),o=s.getByte(),a=s.getByte();if(o!==0||r&&a!==0&&a!==1||!r&&a!=2||r&&a===0&&typeof i=="undefined")throw new Error("Encryption block is invalid.");var f=0;if(a===0){f=n-3-i;for(var u=0;u<f;++u)if(s.getByte()!==0)throw new Error("Encryption block is invalid.")}else if(a===1)for(f=0;s.length()>1;){if(s.getByte()!==255){--s.read;break}++f}else if(a===2)for(f=0;s.length()>1;){if(s.getByte()===0){--s.read;break}++f}var c=s.getByte();if(c!==0||f!==n-3-s.length())throw new Error("Encryption block is invalid.");return s.getBytes()}function F2(t,e,r){typeof e=="function"&&(r=e,e={}),e=e||{};var i={algorithm:{name:e.algorithm||"PRIMEINC",options:{workers:e.workers||2,workLoad:e.workLoad||100,workerScript:e.workerScript}}};"prng"in e&&(i.prng=e.prng),n();function n(){s(t.pBits,function(a,f){if(a)return r(a);if(t.p=f,t.q!==null)return o(a,t.q);s(t.qBits,o)})}function s(a,f){L.prime.generateProbablePrime(a,i,f)}function o(a,f){if(a)return r(a);if(t.q=f,t.p.compareTo(t.q)<0){var u=t.p;t.p=t.q,t.q=u}if(t.p.subtract(Y.ONE).gcd(t.e).compareTo(Y.ONE)!==0){t.p=null,n();return}if(t.q.subtract(Y.ONE).gcd(t.e).compareTo(Y.ONE)!==0){t.q=null,s(t.qBits,o);return}if(t.p1=t.p.subtract(Y.ONE),t.q1=t.q.subtract(Y.ONE),t.phi=t.p1.multiply(t.q1),t.phi.gcd(t.e).compareTo(Y.ONE)!==0){t.p=t.q=null,n();return}if(t.n=t.p.multiply(t.q),t.n.bitLength()!==t.bits){t.q=null,s(t.qBits,o);return}var c=t.e.modInverse(t.phi);t.keys={privateKey:U.rsa.setPrivateKey(t.n,t.e,c,t.p,t.q,c.mod(t.p1),c.mod(t.q1),t.q.modInverse(t.p)),publicKey:U.rsa.setPublicKey(t.n,t.e)},r(null,t.keys)}}function kt(t){var e=t.toString(16);e[0]>="8"&&(e="00"+e);var r=L.util.hexToBytes(e);return r.length>1&&(r.charCodeAt(0)===0&&(r.charCodeAt(1)&128)==0||r.charCodeAt(0)===255&&(r.charCodeAt(1)&128)==128)?r.substr(1):r}function U2(t){return t<=100?27:t<=150?18:t<=200?15:t<=250?12:t<=300?9:t<=350?8:t<=400?7:t<=500?6:t<=600?5:t<=800?4:t<=1250?3:2}function ml(t){return L.util.isNodejs&&typeof Ta[t]=="function"}function xl(t){return typeof ct.globalScope!="undefined"&&typeof ct.globalScope.crypto=="object"&&typeof ct.globalScope.crypto.subtle=="object"&&typeof ct.globalScope.crypto.subtle[t]=="function"}function El(t){return typeof ct.globalScope!="undefined"&&typeof ct.globalScope.msCrypto=="object"&&typeof ct.globalScope.msCrypto.subtle=="object"&&typeof ct.globalScope.msCrypto.subtle[t]=="function"}function wl(t){for(var e=L.util.hexToBytes(t.toString(16)),r=new Uint8Array(e.length),i=0;i<e.length;++i)r[i]=e.charCodeAt(i);return r}});var Bl=x((ES,Rl)=>{var N=ne();Ea();tn();Oh();Fr();us();Fh();qh();rn();Jh();Ss();Ie();typeof Sl=="undefined"&&(Sl=N.jsbn.BigInteger);var Sl,_=N.asn1,K=N.pki=N.pki||{};Rl.exports=K.pbe=N.pbe=N.pbe||{};var qr=K.oids,K2={name:"EncryptedPrivateKeyInfo",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:_.Class.UNIVERSAL,type:_.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:_.Class.UNIVERSAL,type:_.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},q2={name:"PBES2Algorithms",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:_.Class.UNIVERSAL,type:_.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:_.Class.UNIVERSAL,type:_.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"kdfIterationCount"},{name:"PBES2Algorithms.params.keyLength",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,optional:!0,capture:"keyLength"},{name:"PBES2Algorithms.params.prf",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,optional:!0,value:[{name:"PBES2Algorithms.params.prf.algorithm",tagClass:_.Class.UNIVERSAL,type:_.Type.OID,constructed:!1,capture:"prfOid"}]}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:_.Class.UNIVERSAL,type:_.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:_.Class.UNIVERSAL,type:_.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},G2={name:"pkcs-12PbeParams",tagClass:_.Class.UNIVERSAL,type:_.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:_.Class.UNIVERSAL,type:_.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:_.Class.UNIVERSAL,type:_.Type.INTEGER,constructed:!1,capture:"iterations"}]};K.encryptPrivateKeyInfo=function(t,e,r){r=r||{},r.saltSize=r.saltSize||8,r.count=r.count||2048,r.algorithm=r.algorithm||"aes128",r.prfAlgorithm=r.prfAlgorithm||"sha1";var i=N.random.getBytesSync(r.saltSize),n=r.count,s=_.integerToDer(n),o,a,f;if(r.algorithm.indexOf("aes")===0||r.algorithm==="des"){var u,c,h;switch(r.algorithm){case"aes128":o=16,u=16,c=qr["aes128-CBC"],h=N.aes.createEncryptionCipher;break;case"aes192":o=24,u=16,c=qr["aes192-CBC"],h=N.aes.createEncryptionCipher;break;case"aes256":o=32,u=16,c=qr["aes256-CBC"],h=N.aes.createEncryptionCipher;break;case"des":o=8,u=8,c=qr.desCBC,h=N.des.createEncryptionCipher;break;default:var l=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw l.algorithm=r.algorithm,l}var d="hmacWith"+r.prfAlgorithm.toUpperCase(),p=Cl(d),y=N.pkcs5.pbkdf2(e,i,n,o,p),v=N.random.getBytesSync(u),b=h(y);b.start(v),b.update(_.toDer(t)),b.finish(),f=b.output.getBytes();var E=V2(i,s,o,d);a=_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(qr.pkcs5PBES2).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(qr.pkcs5PBKDF2).getBytes()),E]),_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(c).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.OCTETSTRING,!1,v)])])])}else if(r.algorithm==="3des"){o=24;var I=new N.util.ByteBuffer(i),y=K.pbe.generatePkcs12Key(e,I,1,n,o),v=K.pbe.generatePkcs12Key(e,I,2,n,o),b=N.des.createEncryptionCipher(y);b.start(v),b.update(_.toDer(t)),b.finish(),f=b.output.getBytes(),a=_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(qr["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OCTETSTRING,!1,i),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,s.getBytes())])])}else{var l=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw l.algorithm=r.algorithm,l}var D=_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[a,_.create(_.Class.UNIVERSAL,_.Type.OCTETSTRING,!1,f)]);return D};K.decryptPrivateKeyInfo=function(t,e){var r=null,i={},n=[];if(!_.validate(t,K2,i,n)){var s=new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}var o=_.derToOid(i.encryptionOid),a=K.pbe.getCipher(o,i.encryptionParams,e),f=N.util.createBuffer(i.encryptedData);return a.update(f),a.finish()&&(r=_.fromDer(a.output)),r};K.encryptedPrivateKeyToPem=function(t,e){var r={type:"ENCRYPTED PRIVATE KEY",body:_.toDer(t).getBytes()};return N.pem.encode(r,{maxline:e})};K.encryptedPrivateKeyFromPem=function(t){var e=N.pem.decode(t)[0];if(e.type!=="ENCRYPTED PRIVATE KEY"){var r=new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');throw r.headerType=e.type,r}if(e.procType&&e.procType.type==="ENCRYPTED")throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");return _.fromDer(e.body)};K.encryptRsaPrivateKey=function(t,e,r){if(r=r||{},!r.legacy){var i=K.wrapRsaPrivateKey(K.privateKeyToAsn1(t));return i=K.encryptPrivateKeyInfo(i,e,r),K.encryptedPrivateKeyToPem(i)}var n,s,o,a;switch(r.algorithm){case"aes128":n="AES-128-CBC",o=16,s=N.random.getBytesSync(16),a=N.aes.createEncryptionCipher;break;case"aes192":n="AES-192-CBC",o=24,s=N.random.getBytesSync(16),a=N.aes.createEncryptionCipher;break;case"aes256":n="AES-256-CBC",o=32,s=N.random.getBytesSync(16),a=N.aes.createEncryptionCipher;break;case"3des":n="DES-EDE3-CBC",o=24,s=N.random.getBytesSync(8),a=N.des.createEncryptionCipher;break;case"des":n="DES-CBC",o=8,s=N.random.getBytesSync(8),a=N.des.createEncryptionCipher;break;default:var f=new Error('Could not encrypt RSA private key; unsupported encryption algorithm "'+r.algorithm+'".');throw f.algorithm=r.algorithm,f}var u=N.pbe.opensslDeriveBytes(e,s.substr(0,8),o),c=a(u);c.start(s),c.update(_.toDer(K.privateKeyToAsn1(t))),c.finish();var h={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:n,parameters:N.util.bytesToHex(s).toUpperCase()},body:c.output.getBytes()};return N.pem.encode(h)};K.decryptRsaPrivateKey=function(t,e){var r=null,i=N.pem.decode(t)[0];if(i.type!=="ENCRYPTED PRIVATE KEY"&&i.type!=="PRIVATE KEY"&&i.type!=="RSA PRIVATE KEY"){var n=new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');throw n.headerType=n,n}if(i.procType&&i.procType.type==="ENCRYPTED"){var s,o;switch(i.dekInfo.algorithm){case"DES-CBC":s=8,o=N.des.createDecryptionCipher;break;case"DES-EDE3-CBC":s=24,o=N.des.createDecryptionCipher;break;case"AES-128-CBC":s=16,o=N.aes.createDecryptionCipher;break;case"AES-192-CBC":s=24,o=N.aes.createDecryptionCipher;break;case"AES-256-CBC":s=32,o=N.aes.createDecryptionCipher;break;case"RC2-40-CBC":s=5,o=function(h){return N.rc2.createDecryptionCipher(h,40)};break;case"RC2-64-CBC":s=8,o=function(h){return N.rc2.createDecryptionCipher(h,64)};break;case"RC2-128-CBC":s=16,o=function(h){return N.rc2.createDecryptionCipher(h,128)};break;default:var n=new Error('Could not decrypt private key; unsupported encryption algorithm "'+i.dekInfo.algorithm+'".');throw n.algorithm=i.dekInfo.algorithm,n}var a=N.util.hexToBytes(i.dekInfo.parameters),f=N.pbe.opensslDeriveBytes(e,a.substr(0,8),s),u=o(f);if(u.start(a),u.update(N.util.createBuffer(i.body)),u.finish())r=u.output.getBytes();else return r}else r=i.body;return i.type==="ENCRYPTED PRIVATE KEY"?r=K.decryptPrivateKeyInfo(_.fromDer(r),e):r=_.fromDer(r),r!==null&&(r=K.privateKeyFromAsn1(r)),r};K.pbe.generatePkcs12Key=function(t,e,r,i,n,s){var o,a;if(typeof s=="undefined"||s===null){if(!("sha1"in N.md))throw new Error('"sha1" hash algorithm unavailable.');s=N.md.sha1.create()}var f=s.digestLength,u=s.blockLength,c=new N.util.ByteBuffer,h=new N.util.ByteBuffer;if(t!=null){for(a=0;a<t.length;a++)h.putInt16(t.charCodeAt(a));h.putInt16(0)}var l=h.length(),d=e.length(),p=new N.util.ByteBuffer;p.fillWithByte(r,u);var y=u*Math.ceil(d/u),v=new N.util.ByteBuffer;for(a=0;a<y;a++)v.putByte(e.at(a%d));var b=u*Math.ceil(l/u),E=new N.util.ByteBuffer;for(a=0;a<b;a++)E.putByte(h.at(a%l));var I=v;I.putBuffer(E);for(var D=Math.ceil(n/f),T=1;T<=D;T++){var R=new N.util.ByteBuffer;R.putBytes(p.bytes()),R.putBytes(I.bytes());for(var F=0;F<i;F++)s.start(),s.update(R.getBytes()),R=s.digest();var z=new N.util.ByteBuffer;for(a=0;a<u;a++)z.putByte(R.at(a%f));var me=Math.ceil(d/u)+Math.ceil(l/u),ze=new N.util.ByteBuffer;for(o=0;o<me;o++){var Je=new N.util.ByteBuffer(I.getBytes(u)),qe=511;for(a=z.length()-1;a>=0;a--)qe=qe>>8,qe+=z.at(a)+Je.at(a),Je.setAt(a,qe&255);ze.putBuffer(Je)}I=ze,c.putBuffer(R)}return c.truncate(c.length()-n),c};K.pbe.getCipher=function(t,e,r){switch(t){case K.oids.pkcs5PBES2:return K.pbe.getCipherForPBES2(t,e,r);case K.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case K.oids["pbewithSHAAnd40BitRC2-CBC"]:return K.pbe.getCipherForPKCS12PBE(t,e,r);default:var i=new Error("Cannot read encrypted PBE data block. Unsupported OID.");throw i.oid=t,i.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"],i}};K.pbe.getCipherForPBES2=function(t,e,r){var i={},n=[];if(!_.validate(e,q2,i,n)){var s=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}if(t=_.derToOid(i.kdfOid),t!==K.oids.pkcs5PBKDF2){var s=new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");throw s.oid=t,s.supportedOids=["pkcs5PBKDF2"],s}if(t=_.derToOid(i.encOid),t!==K.oids["aes128-CBC"]&&t!==K.oids["aes192-CBC"]&&t!==K.oids["aes256-CBC"]&&t!==K.oids["des-EDE3-CBC"]&&t!==K.oids.desCBC){var s=new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");throw s.oid=t,s.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC","des-EDE3-CBC","desCBC"],s}var o=i.kdfSalt,a=N.util.createBuffer(i.kdfIterationCount);a=a.getInt(a.length()<<3);var f,u;switch(K.oids[t]){case"aes128-CBC":f=16,u=N.aes.createDecryptionCipher;break;case"aes192-CBC":f=24,u=N.aes.createDecryptionCipher;break;case"aes256-CBC":f=32,u=N.aes.createDecryptionCipher;break;case"des-EDE3-CBC":f=24,u=N.des.createDecryptionCipher;break;case"desCBC":f=8,u=N.des.createDecryptionCipher;break}var c=Al(i.prfOid),h=N.pkcs5.pbkdf2(r,o,a,f,c),l=i.encIv,d=u(h);return d.start(l),d};K.pbe.getCipherForPKCS12PBE=function(t,e,r){var i={},n=[];if(!_.validate(e,G2,i,n)){var s=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw s.errors=n,s}var o=N.util.createBuffer(i.salt),a=N.util.createBuffer(i.iterations);a=a.getInt(a.length()<<3);var f,u,c;switch(t){case K.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:f=24,u=8,c=N.des.startDecrypting;break;case K.oids["pbewithSHAAnd40BitRC2-CBC"]:f=5,u=8,c=function(y,v){var b=N.rc2.createDecryptionCipher(y,40);return b.start(v,null),b};break;default:var s=new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");throw s.oid=t,s}var h=Al(i.prfOid),l=K.pbe.generatePkcs12Key(r,o,1,a,f,h);h.start();var d=K.pbe.generatePkcs12Key(r,o,2,a,u,h);return c(l,d)};K.pbe.opensslDeriveBytes=function(t,e,r,i){if(typeof i=="undefined"||i===null){if(!("md5"in N.md))throw new Error('"md5" hash algorithm unavailable.');i=N.md.md5.create()}e===null&&(e="");for(var n=[Il(i,t+e)],s=16,o=1;s<r;++o,s+=16)n.push(Il(i,n[o-1]+t+e));return n.join("").substr(0,r)};function Il(t,e){return t.start().update(e).digest().getBytes()}function Al(t){var e;if(!t)e="hmacWithSHA1";else if(e=K.oids[_.derToOid(t)],!e){var r=new Error("Unsupported PRF OID.");throw r.oid=t,r.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],r}return Cl(e)}function Cl(t){var e=N.md;switch(t){case"hmacWithSHA224":e=N.md.sha512;case"hmacWithSHA1":case"hmacWithSHA256":case"hmacWithSHA384":case"hmacWithSHA512":t=t.substr(8).toLowerCase();break;default:var r=new Error("Unsupported PRF algorithm.");throw r.algorithm=t,r.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],r}if(!e||!(t in e))throw new Error("Unknown hash algorithm: "+t);return e[t].create()}function V2(t,e,r,i){var n=_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OCTETSTRING,!1,t),_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,e.getBytes())]);return i!=="hmacWithSHA1"&&n.value.push(_.create(_.Class.UNIVERSAL,_.Type.INTEGER,!1,N.util.hexToBytes(r.toString(16))),_.create(_.Class.UNIVERSAL,_.Type.SEQUENCE,!0,[_.create(_.Class.UNIVERSAL,_.Type.OID,!1,_.oidToDer(K.oids[i]).getBytes()),_.create(_.Class.UNIVERSAL,_.Type.NULL,!1,"")])),n}});var Gr={};Ne(Gr,{concat:()=>H2});function H2(t,e){e||(e=t.reduce((n,s)=>n+s.length,0));let r=new Uint8Array(e),i=0;for(let n of t)r.set(n,i),i+=n.length;return r}var Vr=re(()=>{});var sn=x(Tl=>{"use strict";Tl.get=(t=globalThis)=>{let e=t.crypto;if(!e||!e.subtle)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}});var Da=x((_S,Pl)=>{"use strict";var{concat:z2}=(Vr(),Gr),{fromString:Dl}=(st(),nt),j2=sn();function W2({algorithm:t="AES-GCM",nonceLength:e=12,keyLength:r=16,digest:i="SHA-256",saltLength:n=16,iterations:s=32767}={}){let o=j2.get();r*=8;async function a(u,c){let h=o.getRandomValues(new Uint8Array(n)),l=o.getRandomValues(new Uint8Array(e)),d={name:t,iv:l},p={name:"PBKDF2",salt:h,iterations:s,hash:{name:i}},y=await o.subtle.importKey("raw",Dl(c),{name:"PBKDF2"},!1,["deriveKey","deriveBits"]),v=await o.subtle.deriveKey(p,y,{name:t,length:r},!0,["encrypt"]),b=await o.subtle.encrypt(d,v,u);return z2([h,d.iv,new Uint8Array(b)])}async function f(u,c){let h=u.slice(0,n),l=u.slice(n,n+e),d=u.slice(n+e),p={name:t,iv:l},y={name:"PBKDF2",salt:h,iterations:s,hash:{name:i}},v=await o.subtle.importKey("raw",Dl(c),{name:"PBKDF2"},!1,["deriveKey","deriveBits"]),b=await o.subtle.deriveKey(y,v,{name:t,length:r},!0,["decrypt"]),E=await o.subtle.decrypt(p,b,d);return new Uint8Array(E)}return{encrypt:a,decrypt:f}}Pl.exports={create:W2}});var Nl=x((SS,Ol)=>{"use strict";var{base64:Y2}=(Wi(),pi),$2=Da();Ol.exports={import:async function(t,e){let r=Y2.decode(t);return await $2.create().decrypt(r,e)}}});var Hr={};Ne(Hr,{equals:()=>Z2});function Z2(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}var zr=re(()=>{});var Ul=x((IS,Fl)=>{var le=ne();Fr();Ie();var on=Fl.exports=le.sha512=le.sha512||{};le.md.sha512=le.md.algorithms.sha512=on;var kl=le.sha384=le.sha512.sha384=le.sha512.sha384||{};kl.create=function(){return on.create("SHA-384")};le.md.sha384=le.md.algorithms.sha384=kl;le.sha512.sha256=le.sha512.sha256||{create:function(){return on.create("SHA-512/256")}};le.md["sha512/256"]=le.md.algorithms["sha512/256"]=le.sha512.sha256;le.sha512.sha224=le.sha512.sha224||{create:function(){return on.create("SHA-512/224")}};le.md["sha512/224"]=le.md.algorithms["sha512/224"]=le.sha512.sha224;on.create=function(t){if(Ll||Q2(),typeof t=="undefined"&&(t="SHA-512"),!(t in jr))throw new Error("Invalid SHA-512 algorithm: "+t);for(var e=jr[t],r=null,i=le.util.createBuffer(),n=new Array(80),s=0;s<80;++s)n[s]=new Array(2);var o=64;switch(t){case"SHA-384":o=48;break;case"SHA-512/256":o=32;break;case"SHA-512/224":o=28;break}var a={algorithm:t.replace("-","").toLowerCase(),blockLength:128,digestLength:o,messageLength:0,fullMessageLength:null,messageLengthSize:16};return a.start=function(){a.messageLength=0,a.fullMessageLength=a.messageLength128=[];for(var f=a.messageLengthSize/4,u=0;u<f;++u)a.fullMessageLength.push(0);i=le.util.createBuffer(),r=new Array(e.length);for(var u=0;u<e.length;++u)r[u]=e[u].slice(0);return a},a.start(),a.update=function(f,u){u==="utf8"&&(f=le.util.encodeUtf8(f));var c=f.length;a.messageLength+=c,c=[c/4294967296>>>0,c>>>0];for(var h=a.fullMessageLength.length-1;h>=0;--h)a.fullMessageLength[h]+=c[1],c[1]=c[0]+(a.fullMessageLength[h]/4294967296>>>0),a.fullMessageLength[h]=a.fullMessageLength[h]>>>0,c[0]=c[1]/4294967296>>>0;return i.putBytes(f),Ml(r,n,i),(i.read>2048||i.length()===0)&&i.compact(),a},a.digest=function(){var f=le.util.createBuffer();f.putBytes(i.bytes());var u=a.fullMessageLength[a.fullMessageLength.length-1]+a.messageLengthSize,c=u&a.blockLength-1;f.putBytes(Pa.substr(0,a.blockLength-c));for(var h,l,d=a.fullMessageLength[0]*8,p=0;p<a.fullMessageLength.length-1;++p)h=a.fullMessageLength[p+1]*8,l=h/4294967296>>>0,d+=l,f.putInt32(d>>>0),d=h>>>0;f.putInt32(d);for(var y=new Array(r.length),p=0;p<r.length;++p)y[p]=r[p].slice(0);Ml(y,n,f);var v=le.util.createBuffer(),b;t==="SHA-512"?b=y.length:t==="SHA-384"?b=y.length-2:b=y.length-4;for(var p=0;p<b;++p)v.putInt32(y[p][0]),(p!==b-1||t!=="SHA-512/224")&&v.putInt32(y[p][1]);return v},a};var Pa=null,Ll=!1,Oa=null,jr=null;function Q2(){Pa=String.fromCharCode(128),Pa+=le.util.fillString(String.fromCharCode(0),128),Oa=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]],jr={},jr["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]],jr["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]],jr["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,1401305490],[721525244,746961066],[246885852,2177182882]],jr["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]],Ll=!0}function Ml(t,e,r){for(var i,n,s,o,a,f,u,c,h,l,d,p,y,v,b,E,I,D,T,R,F,z,me,ze,Je,qe,Qr,Bn,Se,je,M,Xs,Js,eo,to,bc=r.length();bc>=128;){for(Se=0;Se<16;++Se)e[Se][0]=r.getInt32()>>>0,e[Se][1]=r.getInt32()>>>0;for(;Se<80;++Se)Xs=e[Se-2],je=Xs[0],M=Xs[1],i=((je>>>19|M<<13)^(M>>>29|je<<3)^je>>>6)>>>0,n=((je<<13|M>>>19)^(M<<3|je>>>29)^(je<<26|M>>>6))>>>0,eo=e[Se-15],je=eo[0],M=eo[1],s=((je>>>1|M<<31)^(je>>>8|M<<24)^je>>>7)>>>0,o=((je<<31|M>>>1)^(je<<24|M>>>8)^(je<<25|M>>>7))>>>0,Js=e[Se-7],to=e[Se-16],M=n+Js[1]+o+to[1],e[Se][0]=i+Js[0]+s+to[0]+(M/4294967296>>>0)>>>0,e[Se][1]=M>>>0;for(y=t[0][0],v=t[0][1],b=t[1][0],E=t[1][1],I=t[2][0],D=t[2][1],T=t[3][0],R=t[3][1],F=t[4][0],z=t[4][1],me=t[5][0],ze=t[5][1],Je=t[6][0],qe=t[6][1],Qr=t[7][0],Bn=t[7][1],Se=0;Se<80;++Se)u=((F>>>14|z<<18)^(F>>>18|z<<14)^(z>>>9|F<<23))>>>0,c=((F<<18|z>>>14)^(F<<14|z>>>18)^(z<<23|F>>>9))>>>0,h=(Je^F&(me^Je))>>>0,l=(qe^z&(ze^qe))>>>0,a=((y>>>28|v<<4)^(v>>>2|y<<30)^(v>>>7|y<<25))>>>0,f=((y<<4|v>>>28)^(v<<30|y>>>2)^(v<<25|y>>>7))>>>0,d=(y&b|I&(y^b))>>>0,p=(v&E|D&(v^E))>>>0,M=Bn+c+l+Oa[Se][1]+e[Se][1],i=Qr+u+h+Oa[Se][0]+e[Se][0]+(M/4294967296>>>0)>>>0,n=M>>>0,M=f+p,s=a+d+(M/4294967296>>>0)>>>0,o=M>>>0,Qr=Je,Bn=qe,Je=me,qe=ze,me=F,ze=z,M=R+n,F=T+i+(M/4294967296>>>0)>>>0,z=M>>>0,T=I,R=D,I=b,D=E,b=y,E=v,M=n+o,y=i+s+(M/4294967296>>>0)>>>0,v=M>>>0;M=t[0][1]+v,t[0][0]=t[0][0]+y+(M/4294967296>>>0)>>>0,t[0][1]=M>>>0,M=t[1][1]+E,t[1][0]=t[1][0]+b+(M/4294967296>>>0)>>>0,t[1][1]=M>>>0,M=t[2][1]+D,t[2][0]=t[2][0]+I+(M/4294967296>>>0)>>>0,t[2][1]=M>>>0,M=t[3][1]+R,t[3][0]=t[3][0]+T+(M/4294967296>>>0)>>>0,t[3][1]=M>>>0,M=t[4][1]+z,t[4][0]=t[4][0]+F+(M/4294967296>>>0)>>>0,t[4][1]=M>>>0,M=t[5][1]+ze,t[5][0]=t[5][0]+me+(M/4294967296>>>0)>>>0,t[5][1]=M>>>0,M=t[6][1]+qe,t[6][0]=t[6][0]+Je+(M/4294967296>>>0)>>>0,t[6][1]=M>>>0,M=t[7][1]+Bn,t[7][0]=t[7][0]+Qr+(M/4294967296>>>0)>>>0,t[7][1]=M>>>0,bc-=128}}});var Is=x(an=>{"use strict";Ie();Es();var X2=ne(),{fromString:J2}=(st(),nt),{toString:Kl}=(Bt(),Rt),{concat:ql}=(Vr(),Gr);an.bigIntegerToUintBase64url=(t,e)=>{let r=Uint8Array.from(t.abs().toByteArray());if(r=r[0]===0?r.slice(1):r,e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=ql([new Uint8Array(e-r.length),r])}return Kl(r,"base64url")};an.base64urlToBigInteger=t=>{let e=an.base64urlToBuffer(t);return new X2.jsbn.BigInteger(Kl(e,"base16"),16)};an.base64urlToBuffer=(t,e)=>{let r=J2(t,"base64urlpad");if(e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=ql([new Uint8Array(e-r.length),r])}return r}});var Hl=x(cn=>{"use strict";tn();Ss();var br=ne(),{bigIntegerToUintBase64url:Lt,base64urlToBigInteger:Mt}=Is(),{fromString:Gl}=(st(),nt),{toString:Vl}=(Bt(),Rt);cn.pkcs1ToJwk=function(t){let e=br.asn1.fromDer(Vl(t,"ascii")),r=br.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:Lt(r.n),e:Lt(r.e),d:Lt(r.d),p:Lt(r.p),q:Lt(r.q),dp:Lt(r.dP),dq:Lt(r.dQ),qi:Lt(r.qInv),alg:"RS256",kid:"2011-04-29"}};cn.jwkToPkcs1=function(t){let e=br.pki.privateKeyToAsn1({n:Mt(t.n),e:Mt(t.e),d:Mt(t.d),p:Mt(t.p),q:Mt(t.q),dP:Mt(t.dp),dQ:Mt(t.dq),qInv:Mt(t.qi)});return Gl(br.asn1.toDer(e).getBytes(),"ascii")};cn.pkixToJwk=function(t){let e=br.asn1.fromDer(Vl(t,"ascii")),r=br.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:Lt(r.n),e:Lt(r.e),alg:"RS256",kid:"2011-04-29"}};cn.jwkToPkix=function(t){let e=br.pki.publicKeyToAsn1({n:Mt(t.n),e:Mt(t.e)});return Gl(br.asn1.toDer(e).getBytes(),"ascii")}});var Yl=x((RS,Wl)=>{"use strict";Ss();var zl=ne(),{base64urlToBigInteger:em}=Is();function jl(t,e){return e.map(r=>em(t[r]))}function tm(t){return zl.pki.setRsaPrivateKey(...jl(t,["n","e","d","p","q","dp","dq","qi"]))}function rm(t){return zl.pki.setRsaPublicKey(...jl(t,["n","e"]))}Wl.exports={jwk2pub:rm,jwk2priv:tm}});var Ql=x(Qt=>{"use strict";var Zt=sn(),im=Zn(),{toString:nm}=(Bt(),Rt),{fromString:sm}=(st(),nt);Qt.utils=Hl();Qt.generateKey=async function(t){let e=await Zt.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),r=await $l(e);return{privateKey:r[0],publicKey:r[1]}};Qt.unmarshalPrivateKey=async function(t){let r=[await Zt.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await om(t)],i=await $l({privateKey:r[0],publicKey:r[1]});return{privateKey:i[0],publicKey:i[1]}};Qt.getRandomValues=im;Qt.hashAndSign=async function(t,e){let r=await Zt.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),i=await Zt.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},r,Uint8Array.from(e));return new Uint8Array(i,i.byteOffset,i.byteLength)};Qt.hashAndVerify=async function(t,e,r){let i=await Zt.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return Zt.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},i,e,r)};function $l(t){return Promise.all([Zt.get().subtle.exportKey("jwk",t.privateKey),Zt.get().subtle.exportKey("jwk",t.publicKey)])}function om(t){return Zt.get().subtle.importKey("jwk",{kty:t.kty,n:t.n,e:t.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}var{jwk2pub:am,jwk2priv:cm}=Yl();function Zl(t,e,r,i){let n=e?am(t):cm(t),s=nm(Uint8Array.from(r),"ascii"),o=i(s,n);return sm(o,"ascii")}Qt.encrypt=function(t,e){return Zl(t,!0,e,(r,i)=>i.encrypt(r))};Qt.decrypt=function(t,e){return Zl(t,!1,e,(r,i)=>i.decrypt(r))}});var As=x((TS,Xl)=>{"use strict";var{base64:um}=(Wi(),pi),fm=Da();Xl.exports={export:async function(t,e){let i=await fm.create().encrypt(t,e);return um.encode(i)}}});var ip=x((DS,rp)=>{"use strict";var{sha256:Jl}=(kr(),lr),ep=We(),{equals:tp}=(zr(),Hr),{toString:hm}=(Bt(),Rt);Ul();var Cs=ne(),ut=Ql(),Rs=as(),lm=As(),Bs=class{constructor(e){this._key=e}async verify(e,r){return ut.hashAndVerify(this._key,r,e)}marshal(){return ut.utils.jwkToPkix(this._key)}get bytes(){return Rs.PublicKey.encode({Type:Rs.KeyType.RSA,Data:this.marshal()}).finish()}encrypt(e){return ut.encrypt(this._key,e)}equals(e){return tp(this.bytes,e.bytes)}async hash(){let{bytes:e}=await Jl.digest(this.bytes);return e}},un=class{constructor(e,r){this._key=e,this._publicKey=r}genSecret(){return ut.getRandomValues(16)}async sign(e){return ut.hashAndSign(this._key,e)}get public(){if(!this._publicKey)throw ep(new Error("public key not provided"),"ERR_PUBKEY_NOT_PROVIDED");return new Bs(this._publicKey)}decrypt(e){return ut.decrypt(this._key,e)}marshal(){return ut.utils.jwkToPkcs1(this._key)}get bytes(){return Rs.PrivateKey.encode({Type:Rs.KeyType.RSA,Data:this.marshal()}).finish()}equals(e){return tp(this.bytes,e.bytes)}async hash(){let{bytes:e}=await Jl.digest(this.bytes);return e}async id(){let e=await this.public.hash();return hm(e,"base58btc")}async export(e,r="pkcs-8"){if(r==="pkcs-8"){let i=new Cs.util.ByteBuffer(this.marshal()),n=Cs.asn1.fromDer(i),s=Cs.pki.privateKeyFromAsn1(n),o={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return Cs.pki.encryptRsaPrivateKey(s,e,o)}else{if(r==="libp2p-key")return lm.export(this.bytes,e);throw ep(new Error(`export format '${r}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}}};async function pm(t){let e=ut.utils.pkcs1ToJwk(t),r=await ut.unmarshalPrivateKey(e);return new un(r.privateKey,r.publicKey)}function dm(t){let e=ut.utils.pkixToJwk(t);return new Bs(e)}async function ym(t){let e=await ut.unmarshalPrivateKey(t);return new un(e.privateKey,e.publicKey)}async function gm(t){let e=await ut.generateKey(t);return new un(e.privateKey,e.publicKey)}rp.exports={RsaPublicKey:Bs,RsaPrivateKey:un,unmarshalRsaPublicKey:dm,unmarshalRsaPrivateKey:pm,generateKeyPair:gm,fromJwk:ym}});var pp=x(X=>{"use strict";var bm=X&&X.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(X,"__esModule",{value:!0});X.utils=X.curve25519=X.getSharedSecret=X.verify=X.sign=X.getPublicKey=X.Signature=X.Point=X.RistrettoPoint=X.ExtendedPoint=X.CURVE=void 0;var vm=bm(xi()),be=BigInt(0),H=BigInt(1),ke=BigInt(2),np=BigInt(255),sp=ke**BigInt(252)+BigInt("27742317777372353535851937790883648493"),se={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:ke**np-BigInt(19),l:sp,n:sp,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")};X.CURVE=se;var op=ke**BigInt(256),fn=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),PS=BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742"),mm=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),xm=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),Em=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),wm=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),$=class{constructor(e,r,i,n){this.x=e,this.y=r,this.z=i,this.t=n}static fromAffine(e){if(!(e instanceof ye))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return e.equals(ye.ZERO)?$.ZERO:new $(e.x,e.y,H,S(e.x*e.y))}static toAffineBatch(e){let r=Im(e.map(i=>i.z));return e.map((i,n)=>i.toAffine(r[n]))}static normalizeZ(e){return this.toAffineBatch(e).map(this.fromAffine)}equals(e){ap(e);let{x:r,y:i,z:n}=this,{x:s,y:o,z:a}=e,f=S(r*a),u=S(s*n),c=S(i*a),h=S(o*n);return f===u&&c===h}negate(){return new $(S(-this.x),this.y,this.z,S(-this.t))}double(){let{x:e,y:r,z:i}=this,{a:n}=se,s=S(e**ke),o=S(r**ke),a=S(ke*S(i**ke)),f=S(n*s),u=S(S((e+r)**ke)-s-o),c=f+o,h=c-a,l=f-o,d=S(u*h),p=S(c*l),y=S(u*l),v=S(h*c);return new $(d,p,v,y)}add(e){ap(e);let{x:r,y:i,z:n,t:s}=this,{x:o,y:a,z:f,t:u}=e,c=S((i-r)*(a+o)),h=S((i+r)*(a-o)),l=S(h-c);if(l===be)return this.double();let d=S(n*ke*u),p=S(s*ke*f),y=p+d,v=h+c,b=p-d,E=S(y*l),I=S(v*b),D=S(y*b),T=S(l*v);return new $(E,I,T,D)}subtract(e){return this.add(e.negate())}precomputeWindow(e){let r=1+256/e,i=[],n=this,s=n;for(let o=0;o<r;o++){s=n,i.push(s);for(let a=1;a<2**(e-1);a++)s=s.add(n),i.push(s);n=s.double()}return i}wNAF(e,r){!r&&this.equals($.BASE)&&(r=ye.BASE);let i=r&&r._WINDOW_SIZE||1;if(256%i)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let n=r&&La.get(r);n||(n=this.precomputeWindow(i),r&&i!==1&&(n=$.normalizeZ(n),La.set(r,n)));let s=$.ZERO,o=$.ZERO,a=1+256/i,f=2**(i-1),u=BigInt(2**i-1),c=2**i,h=BigInt(i);for(let l=0;l<a;l++){let d=l*f,p=Number(e&u);if(e>>=h,p>f&&(p-=c,e+=H),p===0){let y=n[d];l%2&&(y=y.negate()),o=o.add(y)}else{let y=n[d+Math.abs(p)-1];p<0&&(y=y.negate()),s=s.add(y)}}return $.normalizeZ([s,o])[0]}multiply(e,r){return this.wNAF(Si(e,se.l),r)}multiplyUnsafe(e){let r=Si(e,se.l,!1),i=$.BASE,n=$.ZERO;if(r===be)return n;if(this.equals(n)||r===H)return this;if(this.equals(i))return this.wNAF(r);let s=n,o=this;for(;r>be;)r&H&&(s=s.add(o)),o=o.double(),r>>=H;return s}isSmallOrder(){return this.multiplyUnsafe(se.h).equals($.ZERO)}isTorsionFree(){return this.multiplyUnsafe(se.l).equals($.ZERO)}toAffine(e=Ts(this.z)){let{x:r,y:i,z:n}=this,s=S(r*e),o=S(i*e);if(S(n*e)!==H)throw new Error("invZ was invalid");return new ye(s,o)}fromRistrettoBytes(){ka()}toRistrettoBytes(){ka()}fromRistrettoHash(){ka()}};X.ExtendedPoint=$;$.BASE=new $(se.Gx,se.Gy,H,S(se.Gx*se.Gy));$.ZERO=new $(be,H,H,be);function ap(t){if(!(t instanceof $))throw new TypeError("ExtendedPoint expected")}function Na(t){if(!(t instanceof Qe))throw new TypeError("RistrettoPoint expected")}function ka(){throw new Error("Legacy method: switch to RistrettoPoint")}var Qe=class{constructor(e){this.ep=e}static calcElligatorRistrettoMap(e){let{d:r}=se,i=S(fn*e*e),n=S((i+H)*Em),s=BigInt(-1),o=S((s-r*i)*S(i+r)),{isValid:a,value:f}=Fa(n,o),u=S(f*e);vr(u)||(u=S(-u)),a||(f=u),a||(s=i);let c=S(s*(i-H)*wm-o),h=f*f,l=S((f+f)*o),d=S(c*mm),p=S(H-h),y=S(H+h);return new $(S(l*y),S(p*d),S(d*y),S(l*p))}static hashToCurve(e){e=Ft(e,64);let r=Ma(e.slice(0,32)),i=this.calcElligatorRistrettoMap(r),n=Ma(e.slice(32,64)),s=this.calcElligatorRistrettoMap(n);return new Qe(i.add(s))}static fromHex(e){e=Ft(e,32);let{a:r,d:i}=se,n="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",s=Ma(e);if(!Am(_i(s),e)||vr(s))throw new Error(n);let o=S(s*s),a=S(H+r*o),f=S(H-r*o),u=S(a*a),c=S(f*f),h=S(r*i*u-c),{isValid:l,value:d}=hp(S(h*c)),p=S(d*f),y=S(d*p*h),v=S((s+s)*p);vr(v)&&(v=S(-v));let b=S(a*y),E=S(v*b);if(!l||vr(E)||b===be)throw new Error(n);return new Qe(new $(v,b,H,E))}toRawBytes(){let{x:e,y:r,z:i,t:n}=this.ep,s=S(S(i+r)*S(i-r)),o=S(e*r),{value:a}=hp(S(s*o**ke)),f=S(a*s),u=S(a*o),c=S(f*u*n),h;if(vr(n*c)){let d=S(r*fn),p=S(e*fn);e=d,r=p,h=S(f*xm)}else h=u;vr(e*c)&&(r=S(-r));let l=S((i-r)*h);return vr(l)&&(l=S(-l)),_i(l)}toHex(){return hn(this.toRawBytes())}toString(){return this.toHex()}equals(e){Na(e);let r=this.ep,i=e.ep,n=S(r.x*i.y)===S(r.y*i.x),s=S(r.y*i.y)===S(r.x*i.x);return n||s}add(e){return Na(e),new Qe(this.ep.add(e.ep))}subtract(e){return Na(e),new Qe(this.ep.subtract(e.ep))}multiply(e){return new Qe(this.ep.multiply(e))}multiplyUnsafe(e){return new Qe(this.ep.multiplyUnsafe(e))}};X.RistrettoPoint=Qe;Qe.BASE=new Qe($.BASE);Qe.ZERO=new Qe($.ZERO);var La=new WeakMap,ye=class{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,La.delete(this)}static fromHex(e,r=!0){let{d:i,P:n}=se;e=Ft(e,32);let s=e.slice();s[31]=e[31]&~128;let o=mr(s);if(r&&o>=n)throw new Error("Expected 0 < hex < P");if(!r&&o>=op)throw new Error("Expected 0 < hex < 2**256");let a=S(o*o),f=S(a-H),u=S(i*a+H),{isValid:c,value:h}=Fa(f,u);if(!c)throw new Error("Point.fromHex: invalid y coordinate");let l=(h&H)===H;return(e[31]&128)!=0!==l&&(h=S(-h)),new ye(h,o)}static async fromPrivateKey(e){return(await ln(e)).point}toRawBytes(){let e=_i(this.y);return e[31]|=this.x&H?128:0,e}toHex(){return hn(this.toRawBytes())}toX25519(){let{y:e}=this,r=S((H+e)*Ts(H-e));return _i(r)}isTorsionFree(){return $.fromAffine(this).isTorsionFree()}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new ye(S(-this.x),this.y)}add(e){return $.fromAffine(this).add($.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return $.fromAffine(this).multiply(e,this).toAffine()}};X.Point=ye;ye.BASE=new ye(se.Gx,se.Gy);ye.ZERO=new ye(be,H);var Wr=class{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromHex(e){let r=Ft(e,64),i=ye.fromHex(r.slice(0,32),!1),n=mr(r.slice(32,64));return new Wr(i,n)}assertValidity(){let{r:e,s:r}=this;if(!(e instanceof ye))throw new Error("Expected Point instance");return Si(r,se.l,!1),this}toRawBytes(){let e=new Uint8Array(64);return e.set(this.r.toRawBytes()),e.set(_i(this.s),32),e}toHex(){return hn(this.toRawBytes())}};X.Signature=Wr;function _m(...t){if(!t.every(i=>i instanceof Uint8Array))throw new Error("Expected Uint8Array list");if(t.length===1)return t[0];let e=t.reduce((i,n)=>i+n.length,0),r=new Uint8Array(e);for(let i=0,n=0;i<t.length;i++){let s=t[i];r.set(s,n),n+=s.length}return r}var Sm=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function hn(t){if(!(t instanceof Uint8Array))throw new Error("Uint8Array expected");let e="";for(let r=0;r<t.length;r++)e+=Sm[t[r]];return e}function cp(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex");let e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){let i=r*2,n=t.slice(i,i+2),s=Number.parseInt(n,16);if(Number.isNaN(s)||s<0)throw new Error("Invalid byte sequence");e[r]=s}return e}function up(t){let e=32,r=t.toString(16).padStart(e*2,"0");return cp(r)}function _i(t){return up(t).reverse()}function vr(t){return(S(t)&H)===H}function mr(t){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+hn(Uint8Array.from(t).reverse()))}function Ma(t){return S(mr(t)&ke**np-H)}function S(t,e=se.P){let r=t%e;return r>=be?r:e+r}function Ts(t,e=se.P){if(t===be||e<=be)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=S(t,e),i=e,n=be,s=H,o=H,a=be;for(;r!==be;){let u=i/r,c=i%r,h=n-o*u,l=s-a*u;i=r,r=c,n=o,s=a,o=h,a=l}if(i!==H)throw new Error("invert: does not exist");return S(n,e)}function Im(t,e=se.P){let r=new Array(t.length),i=t.reduce((s,o,a)=>o===be?s:(r[a]=s,S(s*o,e)),H),n=Ts(i,e);return t.reduceRight((s,o,a)=>o===be?s:(r[a]=S(s*r[a],e),S(s*o,e)),n),r}function vt(t,e){let{P:r}=se,i=t;for(;e-- >be;)i*=i,i%=r;return i}function fp(t){let{P:e}=se,r=BigInt(5),i=BigInt(10),n=BigInt(20),s=BigInt(40),o=BigInt(80),f=t*t%e*t%e,u=vt(f,ke)*f%e,c=vt(u,H)*t%e,h=vt(c,r)*c%e,l=vt(h,i)*h%e,d=vt(l,n)*l%e,p=vt(d,s)*d%e,y=vt(p,o)*p%e,v=vt(y,o)*p%e,b=vt(v,i)*h%e;return{pow_p_5_8:vt(b,ke)*t%e,b2:f}}function Fa(t,e){let r=S(e*e*e),i=S(r*r*e),n=fp(t*i).pow_p_5_8,s=S(t*r*n),o=S(e*s*s),a=s,f=S(s*fn),u=o===t,c=o===S(-t),h=o===S(-t*fn);return u&&(s=a),(c||h)&&(s=f),vr(s)&&(s=S(-s)),{isValid:u||c,value:s}}function hp(t){return Fa(H,t)}async function Ua(...t){let e=await X.utils.sha512(_m(...t)),r=mr(e);return S(r,se.l)}function Am(t,e){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function Ft(t,e){let r=t instanceof Uint8Array?Uint8Array.from(t):cp(t);if(typeof e=="number"&&r.length!==e)throw new Error(`Expected ${e} bytes`);return r}function Si(t,e,r=!0){if(!e)throw new TypeError("Specify max value");if(typeof t=="number"&&Number.isSafeInteger(t)&&(t=BigInt(t)),typeof t=="bigint"&&t<e){if(r){if(be<t)return t}else if(be<=t)return t}throw new TypeError("Expected valid scalar: 0 < scalar < max")}function lp(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}function Cm(t){return mr(lp(Ft(t,32)))}async function ln(t){if(t=typeof t=="bigint"||typeof t=="number"?up(Si(t,op)):Ft(t),t.length!==32)throw new Error("Expected 32 bytes");let e=await X.utils.sha512(t),r=lp(e.slice(0,32)),i=e.slice(32,64),n=S(mr(r),se.l),s=ye.BASE.multiply(n),o=s.toRawBytes();return{head:r,prefix:i,scalar:n,point:s,pointBytes:o}}async function Rm(t){return(await ln(t)).pointBytes}X.getPublicKey=Rm;async function Bm(t,e){t=Ft(t);let{prefix:r,scalar:i,pointBytes:n}=await ln(e),s=await Ua(r,t),o=ye.BASE.multiply(s),a=await Ua(o.toRawBytes(),n,t),f=S(s+a*i,se.l);return new Wr(o,f).toRawBytes()}X.sign=Bm;async function Tm(t,e,r){e=Ft(e),r instanceof ye||(r=ye.fromHex(r,!1));let{r:i,s:n}=t instanceof Wr?t.assertValidity():Wr.fromHex(t),s=$.BASE.multiplyUnsafe(n),o=await Ua(i.toRawBytes(),r.toRawBytes(),e),a=$.fromAffine(r).multiplyUnsafe(o);return $.fromAffine(i).add(a).subtract(s).multiplyUnsafe(se.h).equals($.ZERO)}X.verify=Tm;async function Dm(t,e){let{head:r}=await ln(t),i=ye.fromHex(e).toX25519();return X.curve25519.scalarMult(r,i)}X.getSharedSecret=Dm;ye.BASE._setWindowSize(8);function Ds(t,e,r){let i=S(t*(e-r));return e=S(e-i),r=S(r+i),[e,r]}function Pm(t,e){let{P:r}=se,i=Si(t,r),n=Si(e,r),s=BigInt(121665),o=i,a=H,f=be,u=i,c=H,h=be,l;for(let v=BigInt(255-1);v>=be;v--){let b=n>>v&H;h^=b,l=Ds(h,a,u),a=l[0],u=l[1],l=Ds(h,f,c),f=l[0],c=l[1],h=b;let E=a+f,I=S(E*E),D=a-f,T=S(D*D),R=I-T,F=u+c,z=u-c,me=S(z*E),ze=S(F*D);u=S((me+ze)**ke),c=S(o*(me-ze)**ke),a=S(I*T),f=S(R*(I+S(s*R)))}l=Ds(h,a,u),a=l[0],u=l[1],l=Ds(h,f,c),f=l[0],c=l[1];let{pow_p_5_8:d,b2:p}=fp(f),y=S(vt(d,BigInt(3))*p);return S(a*y)}function Om(t){return _i(S(t,se.P))}function Nm(t){let e=Ft(t,32);return e[31]&=127,mr(e)}X.curve25519={BASE_POINT_U:"0900000000000000000000000000000000000000000000000000000000000000",scalarMult(t,e){let r=Nm(e),i=Cm(t),n=Pm(r,i);if(n===be)throw new Error("Invalid private or public key received");return Om(n)},scalarMultBase(t){return X.curve25519.scalarMult(t,X.curve25519.BASE_POINT_U)}};var xr={node:vm.default,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0};X.utils={TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],bytesToHex:hn,getExtendedPublicKey:ln,mod:S,invert:Ts,hashToPrivateScalar:t=>{if(t=Ft(t),t.length<40||t.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");let e=S(mr(t),se.l);if(e===be||e===H)throw new Error("Invalid private key");return e},randomBytes:(t=32)=>{if(xr.web)return xr.web.getRandomValues(new Uint8Array(t));if(xr.node){let{randomBytes:e}=xr.node;return new Uint8Array(e(t).buffer)}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>X.utils.randomBytes(32),sha512:async t=>{if(xr.web){let e=await xr.web.subtle.digest("SHA-512",t.buffer);return new Uint8Array(e)}else{if(xr.node)return Uint8Array.from(xr.node.createHash("sha512").update(t).digest());throw new Error("The environment doesn't have sha512 function")}},precompute(t=8,e=ye.BASE){let r=e.equals(ye.BASE)?e:new ye(e.x,e.y);return r._setWindowSize(t),r.multiply(ke),r}}});var yp=x(Er=>{"use strict";var pn=pp(),km=32,Lm=64,Ps=32;Er.publicKeyLength=km;Er.privateKeyLength=Lm;Er.generateKey=async function(){let t=pn.utils.randomPrivateKey(),e=await pn.getPublicKey(t);return{privateKey:dp(t,e),publicKey:e}};Er.generateKeyFromSeed=async function(t){if(t.length!==Ps)throw new TypeError('"seed" must be 32 bytes in length.');if(!(t instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');let e=t,r=await pn.getPublicKey(e);return{privateKey:dp(e,r),publicKey:r}};Er.hashAndSign=function(t,e){let r=t.slice(0,Ps);return pn.sign(e,r)};Er.hashAndVerify=function(t,e,r){return pn.verify(e,r,t)};function dp(t,e){let r=new Uint8Array(Er.privateKeyLength);for(let i=0;i<Ps;i++)r[i]=t[i],r[Ps+i]=e[i];return r}});var xp=x((kS,mp)=>{"use strict";var gp=We(),{equals:bp}=(zr(),Hr),{sha256:vp}=(kr(),lr),{base58btc:Mm}=(li(),hi),{identity:Fm}=(rs(),Zi),Fe=yp(),Os=as(),Um=As(),Ns=class{constructor(e){this._key=Ai(e,Fe.publicKeyLength)}async verify(e,r){return Fe.hashAndVerify(this._key,r,e)}marshal(){return this._key}get bytes(){return Os.PublicKey.encode({Type:Os.KeyType.Ed25519,Data:this.marshal()}).finish()}equals(e){return bp(this.bytes,e.bytes)}async hash(){let{bytes:e}=await vp.digest(this.bytes);return e}},Ii=class{constructor(e,r){this._key=Ai(e,Fe.privateKeyLength),this._publicKey=Ai(r,Fe.publicKeyLength)}async sign(e){return Fe.hashAndSign(this._key,e)}get public(){return new Ns(this._publicKey)}marshal(){return this._key}get bytes(){return Os.PrivateKey.encode({Type:Os.KeyType.Ed25519,Data:this.marshal()}).finish()}equals(e){return bp(this.bytes,e.bytes)}async hash(){let{bytes:e}=await vp.digest(this.bytes);return e}async id(){let e=await Fm.digest(this.public.bytes);return Mm.encode(e.bytes).substring(1)}async export(e,r="libp2p-key"){if(r==="libp2p-key")return Um.export(this.bytes,e);throw gp(new Error(`export format '${r}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}};function Km(t){if(t.length>Fe.privateKeyLength){t=Ai(t,Fe.privateKeyLength+Fe.publicKeyLength);let i=t.slice(0,Fe.privateKeyLength),n=t.slice(Fe.privateKeyLength,t.length);return new Ii(i,n)}t=Ai(t,Fe.privateKeyLength);let e=t.slice(0,Fe.privateKeyLength),r=t.slice(Fe.publicKeyLength);return new Ii(e,r)}function qm(t){return t=Ai(t,Fe.publicKeyLength),new Ns(t)}async function Gm(){let{privateKey:t,publicKey:e}=await Fe.generateKey();return new Ii(t,e)}async function Vm(t){let{privateKey:e,publicKey:r}=await Fe.generateKeyFromSeed(t);return new Ii(e,r)}function Ai(t,e){if(t=Uint8Array.from(t||[]),t.length!==e)throw gp(new Error(`Key must be a Uint8Array of length ${e}, got ${t.length}`),"ERR_INVALID_KEY_TYPE");return t}mp.exports={Ed25519PublicKey:Ns,Ed25519PrivateKey:Ii,unmarshalEd25519PrivateKey:Km,unmarshalEd25519PublicKey:qm,generateKeyPair:Gm,generateKeyPairFromSeed:Vm}});var Mp=x(W=>{"use strict";var Hm=W&&W.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(W,"__esModule",{value:!0});W.utils=W.schnorr=W.verify=W.signSync=W.sign=W.getSharedSecret=W.recoverPublicKey=W.getPublicKey=W.Signature=W.Point=W.CURVE=void 0;var zm=Hm(xi()),j=BigInt(0),pe=BigInt(1),_e=BigInt(2),dn=BigInt(3),jm=BigInt(8),Ka=_e**BigInt(256),oe={a:j,b:BigInt(7),P:Ka-_e**BigInt(32)-BigInt(977),n:Ka-BigInt("432420386565659656852420866394968145599"),h:pe,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};W.CURVE=oe;function Ep(t){let{a:e,b:r}=oe,i=O(t*t),n=O(i*t);return O(n+e*t+r)}var ks=oe.a===j,J=class{constructor(e,r,i){this.x=e,this.y=r,this.z=i}static fromAffine(e){if(!(e instanceof ee))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new J(e.x,e.y,pe)}static toAffineBatch(e){let r=Zm(e.map(i=>i.z));return e.map((i,n)=>i.toAffine(r[n]))}static normalizeZ(e){return J.toAffineBatch(e).map(J.fromAffine)}equals(e){if(!(e instanceof J))throw new TypeError("JacobianPoint expected");let{x:r,y:i,z:n}=this,{x:s,y:o,z:a}=e,f=O(n**_e),u=O(a**_e),c=O(r*u),h=O(s*f),l=O(O(i*a)*u),d=O(O(o*n)*f);return c===h&&l===d}negate(){return new J(this.x,O(-this.y),this.z)}double(){let{x:e,y:r,z:i}=this,n=O(e**_e),s=O(r**_e),o=O(s**_e),a=O(_e*(O((e+s)**_e)-n-o)),f=O(dn*n),u=O(f**_e),c=O(u-_e*a),h=O(f*(a-c)-jm*o),l=O(_e*r*i);return new J(c,h,l)}add(e){if(!(e instanceof J))throw new TypeError("JacobianPoint expected");let{x:r,y:i,z:n}=this,{x:s,y:o,z:a}=e;if(s===j||o===j)return this;if(r===j||i===j)return e;let f=O(n**_e),u=O(a**_e),c=O(r*u),h=O(s*f),l=O(O(i*a)*u),d=O(O(o*n)*f),p=O(h-c),y=O(d-l);if(p===j)return y===j?this.double():J.ZERO;let v=O(p**_e),b=O(p*v),E=O(c*v),I=O(y**_e-b-_e*E),D=O(y*(E-I)-l*b),T=O(n*a*p);return new J(I,D,T)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let r=Sp(e),i=J.BASE,n=J.ZERO;if(r===j)return n;if(r===pe)return this;if(!ks){let l=n,d=this;for(;r>j;)r&pe&&(l=l.add(d)),d=d.double(),r>>=pe;return l}let{k1neg:s,k1:o,k2neg:a,k2:f}=Ap(r),u=n,c=n,h=this;for(;o>j||f>j;)o&pe&&(u=u.add(h)),f&pe&&(c=c.add(h)),h=h.double(),o>>=pe,f>>=pe;return s&&(u=u.negate()),a&&(c=c.negate()),c=new J(O(c.x*oe.beta),c.y,c.z),u.add(c)}precomputeWindow(e){let r=ks?128/e+1:256/e+1,i=[],n=this,s=n;for(let o=0;o<r;o++){s=n,i.push(s);for(let a=1;a<2**(e-1);a++)s=s.add(n),i.push(s);n=s.double()}return i}wNAF(e,r){!r&&this.equals(J.BASE)&&(r=ee.BASE);let i=r&&r._WINDOW_SIZE||1;if(256%i)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let n=r&&qa.get(r);n||(n=this.precomputeWindow(i),r&&i!==1&&(n=J.normalizeZ(n),qa.set(r,n)));let s=J.ZERO,o=J.ZERO,a=1+(ks?128/i:256/i),f=2**(i-1),u=BigInt(2**i-1),c=2**i,h=BigInt(i);for(let l=0;l<a;l++){let d=l*f,p=Number(e&u);if(e>>=h,p>f&&(p-=c,e+=pe),p===0){let y=n[d];l%2&&(y=y.negate()),o=o.add(y)}else{let y=n[d+Math.abs(p)-1];p<0&&(y=y.negate()),s=s.add(y)}}return{p:s,f:o}}multiply(e,r){let i=Sp(e),n,s;if(ks){let{k1neg:o,k1:a,k2neg:f,k2:u}=Ap(i),{p:c,f:h}=this.wNAF(a,r),{p:l,f:d}=this.wNAF(u,r);o&&(c=c.negate()),f&&(l=l.negate()),l=new J(O(l.x*oe.beta),l.y,l.z),n=c.add(l),s=h.add(d)}else{let{p:o,f:a}=this.wNAF(i,r);n=o,s=a}return J.normalizeZ([n,s])[0]}toAffine(e=bn(this.z)){let{x:r,y:i,z:n}=this,s=e,o=O(s*s),a=O(o*s),f=O(r*o),u=O(i*a);if(O(n*s)!==pe)throw new Error("invZ was invalid");return new ee(f,u)}};J.BASE=new J(oe.Gx,oe.Gy,pe);J.ZERO=new J(j,pe,j);var qa=new WeakMap,ee=class{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,qa.delete(this)}static fromCompressedHex(e){let r=e.length===32,i=ft(r?e:e.subarray(1));if(!Fs(i))throw new Error("Point is not on curve");let n=Ep(i),s=$m(n),o=(s&pe)===pe;r?o&&(s=O(-s)):(e[0]&1)==1!==o&&(s=O(-s));let a=new ee(i,s);return a.assertValidity(),a}static fromUncompressedHex(e){let r=ft(e.subarray(1,33)),i=ft(e.subarray(33,65)),n=new ee(r,i);return n.assertValidity(),n}static fromHex(e){let r=Kt(e),i=r.length,n=r[0];if(i===32||i===33&&(n===2||n===3))return this.fromCompressedHex(r);if(i===65&&n===4)return this.fromUncompressedHex(r);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${i}`)}static fromPrivateKey(e){return ee.BASE.multiply(Bi(e))}static fromSignature(e,r,i){e=Kt(e);let n=Cp(e),{r:s,s:o}=Bp(r);if(i!==0&&i!==1)throw new Error("Cannot recover signature: invalid recovery bit");if(n===j)throw new Error("Cannot recover signature: msgHash cannot be 0");let a=i&1?"03":"02",f=ee.fromHex(a+Xt(s)),{n:u}=oe,c=bn(s,u),h=O(-n*c,u),l=O(o*c,u),d=ee.BASE.multiplyAndAddUnsafe(f,h,l);if(!d)throw new Error("Cannot recover signature: point at infinify");return d.assertValidity(),d}toRawBytes(e=!1){return wr(this.toHex(e))}toHex(e=!1){let r=Xt(this.x);return e?`${this.y&pe?"03":"02"}${r}`:`04${r}${Xt(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){let e="Point is not on elliptic curve",{x:r,y:i}=this;if(!Fs(r)||!Fs(i))throw new Error(e);let n=O(i*i),s=Ep(r);if(O(n-s)!==j)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new ee(this.x,O(-this.y))}double(){return J.fromAffine(this).double().toAffine()}add(e){return J.fromAffine(this).add(J.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return J.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,r,i){let s=J.fromAffine(this).multiply(r),o=J.fromAffine(e).multiplyUnsafe(i),a=s.add(o);return a.equals(J.ZERO)?void 0:a.toAffine()}};W.Point=ee;ee.BASE=new ee(oe.Gx,oe.Gy);ee.ZERO=new ee(j,j);function wp(t){return Number.parseInt(t[0],16)>=8?"00"+t:t}function _p(t){if(t.length<2||t[0]!==2)throw new Error(`Invalid signature integer tag: ${Ci(t)}`);let e=t[1],r=t.subarray(2,e+2);if(!e||r.length!==e)throw new Error("Invalid signature integer: wrong length");if(r[0]===0&&r[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:ft(r),left:t.subarray(e+2)}}function Wm(t){if(t.length<2||t[0]!=48)throw new Error(`Invalid signature tag: ${Ci(t)}`);if(t[1]!==t.length-2)throw new Error("Invalid signature: incorrect length");let{data:e,left:r}=_p(t.subarray(2)),{data:i,left:n}=_p(r);if(n.length)throw new Error(`Invalid signature: left bytes after parsing: ${Ci(n)}`);return{r:e,s:i}}var Ut=class{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromCompact(e){let r=yn(e),i="Signature.fromCompact";if(typeof e!="string"&&!r)throw new TypeError(`${i}: Expected string or Uint8Array`);let n=r?Ci(e):e;if(n.length!==128)throw new Error(`${i}: Expected 64-byte hex`);return new Ut(Ls(n.slice(0,64)),Ls(n.slice(64,128)))}static fromDER(e){let r=yn(e);if(typeof e!="string"&&!r)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");let{r:i,s:n}=Wm(r?e:wr(e));return new Ut(i,n)}static fromHex(e){return this.fromDER(e)}assertValidity(){let{r:e,s:r}=this;if(!Ri(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!Ri(r))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){let e=oe.n>>pe;return this.s>e}normalizeS(){return this.hasHighS()?new Ut(this.r,oe.n-this.s):this}toDERRawBytes(e=!1){return wr(this.toDERHex(e))}toDERHex(e=!1){let r=wp(gn(this.s));if(e)return r;let i=wp(gn(this.r)),n=gn(i.length/2),s=gn(r.length/2);return`30${gn(i.length/2+r.length/2+4)}02${n}${i}02${s}${r}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return wr(this.toCompactHex())}toCompactHex(){return Xt(this.r)+Xt(this.s)}};W.Signature=Ut;function Ga(...t){if(!t.every(yn))throw new Error("Uint8Array list expected");if(t.length===1)return t[0];let e=t.reduce((i,n)=>i+n.length,0),r=new Uint8Array(e);for(let i=0,n=0;i<t.length;i++){let s=t[i];r.set(s,n),n+=s.length}return r}function yn(t){return t instanceof Uint8Array}var Ym=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function Ci(t){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");let e="";for(let r=0;r<t.length;r++)e+=Ym[t[r]];return e}function Xt(t){if(t>Ka)throw new Error("Expected number < 2^256");return t.toString(16).padStart(64,"0")}function Va(t){return wr(Xt(t))}function gn(t){let e=t.toString(16);return e.length&1?`0${e}`:e}function Ls(t){if(typeof t!="string")throw new TypeError("hexToNumber: expected string, got "+typeof t);return BigInt(`0x${t}`)}function wr(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+t.length);let e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){let i=r*2,n=t.slice(i,i+2),s=Number.parseInt(n,16);if(Number.isNaN(s)||s<0)throw new Error("Invalid byte sequence");e[r]=s}return e}function ft(t){return Ls(Ci(t))}function Kt(t){return t instanceof Uint8Array?Uint8Array.from(t):wr(t)}function Sp(t){if(typeof t=="number"&&Number.isSafeInteger(t)&&t>0)return BigInt(t);if(typeof t=="bigint"&&Ri(t))return t;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function O(t,e=oe.P){let r=t%e;return r>=j?r:e+r}function ht(t,e){let{P:r}=oe,i=t;for(;e-- >j;)i*=i,i%=r;return i}function $m(t){let{P:e}=oe,r=BigInt(6),i=BigInt(11),n=BigInt(22),s=BigInt(23),o=BigInt(44),a=BigInt(88),f=t*t*t%e,u=f*f*t%e,c=ht(u,dn)*u%e,h=ht(c,dn)*u%e,l=ht(h,_e)*f%e,d=ht(l,i)*l%e,p=ht(d,n)*d%e,y=ht(p,o)*p%e,v=ht(y,a)*y%e,b=ht(v,o)*p%e,E=ht(b,dn)*u%e,I=ht(E,s)*d%e,D=ht(I,r)*f%e;return ht(D,_e)}function bn(t,e=oe.P){if(t===j||e<=j)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=O(t,e),i=e,n=j,s=pe,o=pe,a=j;for(;r!==j;){let u=i/r,c=i%r,h=n-o*u,l=s-a*u;i=r,r=c,n=o,s=a,o=h,a=l}if(i!==pe)throw new Error("invert: does not exist");return O(n,e)}function Zm(t,e=oe.P){let r=new Array(t.length),i=t.reduce((s,o,a)=>o===j?s:(r[a]=s,O(s*o,e)),pe),n=bn(i,e);return t.reduceRight((s,o,a)=>o===j?s:(r[a]=O(s*r[a],e),O(s*o,e)),n),r}var Ip=(t,e)=>(t+e/_e)/e,Ms=_e**BigInt(128);function Ap(t){let{n:e}=oe,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),i=-pe*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),n=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),s=r,o=Ip(s*t,e),a=Ip(-i*t,e),f=O(t-o*r-a*n,e),u=O(-o*i-a*s,e),c=f>Ms,h=u>Ms;if(c&&(f=e-f),h&&(u=e-u),f>Ms||u>Ms)throw new Error("splitScalarEndo: Endomorphism failed, k="+t);return{k1neg:c,k1:f,k2neg:h,k2:u}}function Cp(t){let{n:e}=oe,i=t.length*8-256,n=ft(t);return i>0&&(n=n>>BigInt(i)),n>=e&&(n-=e),n}var Ha=class{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(...e){return W.utils.hmacSha256(this.k,...e)}hmacSync(...e){if(typeof W.utils.hmacSha256Sync!="function")throw new Error("utils.hmacSha256Sync is undefined, you need to set it");let r=W.utils.hmacSha256Sync(this.k,...e);if(r instanceof Promise)throw new Error("To use sync sign(), ensure utils.hmacSha256 is sync");return r}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),e.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),e.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}};function Ri(t){return j<t&&t<oe.n}function Fs(t){return j<t&&t<oe.P}function Rp(t,e,r){let i=ft(t);if(!Ri(i))return;let{n}=oe,s=ee.BASE.multiply(i),o=O(s.x,n);if(o===j)return;let a=O(bn(i,n)*O(e+r*o,n),n);if(a===j)return;let f=new Ut(o,a),u=(s.x===f.r?0:2)|Number(s.y&pe);return{sig:f,recovery:u}}function Bi(t){let e;if(typeof t=="bigint")e=t;else if(typeof t=="number"&&Number.isSafeInteger(t)&&t>0)e=BigInt(t);else if(typeof t=="string"){if(t.length!==64)throw new Error("Expected 32 bytes of private key");e=Ls(t)}else if(yn(t)){if(t.length!==32)throw new Error("Expected 32 bytes of private key");e=ft(t)}else throw new TypeError("Expected valid private key");if(!Ri(e))throw new Error("Expected private key: 0 < key < n");return e}function za(t){return t instanceof ee?(t.assertValidity(),t):ee.fromHex(t)}function Bp(t){if(t instanceof Ut)return t.assertValidity(),t;try{return Ut.fromDER(t)}catch(e){return Ut.fromCompact(t)}}function Qm(t,e=!1){return ee.fromPrivateKey(t).toRawBytes(e)}W.getPublicKey=Qm;function Xm(t,e,r,i=!1){return ee.fromSignature(t,e,r).toRawBytes(i)}W.recoverPublicKey=Xm;function Tp(t){let e=yn(t),r=typeof t=="string",i=(e||r)&&t.length;return e?i===33||i===65:r?i===66||i===130:t instanceof ee}function Jm(t,e,r=!1){if(Tp(t))throw new TypeError("getSharedSecret: first arg must be private key");if(!Tp(e))throw new TypeError("getSharedSecret: second arg must be public key");let i=za(e);return i.assertValidity(),i.multiply(Bi(t)).toRawBytes(r)}W.getSharedSecret=Jm;function Dp(t){let e=t.length>32?t.slice(0,32):t;return ft(e)}function ex(t){let e=Dp(t),r=O(e,oe.n);return Pp(r<j?e:r)}function Pp(t){if(typeof t!="bigint")throw new Error("Expected bigint");let e=Xt(t);return wr(e)}function Op(t,e,r){if(t==null)throw new Error(`sign: expected valid message hash, not "${t}"`);let i=Kt(t),n=Bi(e),s=[Pp(n),ex(i)];if(r!=null){r===!0&&(r=W.utils.randomBytes(32));let f=Kt(r);if(f.length!==32)throw new Error("sign: Expected 32 bytes of extra data");s.push(f)}let o=Ga(...s),a=Dp(i);return{seed:o,m:a,d:n}}function Np(t,e){let{sig:r,recovery:i}=t,{canonical:n,der:s,recovered:o}=Object.assign({canonical:!0,der:!0},e);n&&r.hasHighS()&&(r=r.normalizeS(),i^=1);let a=s?r.toDERRawBytes():r.toCompactRawBytes();return o?[a,i]:a}async function tx(t,e,r={}){let{seed:i,m:n,d:s}=Op(t,e,r.extraEntropy),o,a=new Ha;for(await a.reseed(i);!(o=Rp(await a.generate(),n,s));)await a.reseed();return Np(o,r)}W.sign=tx;function rx(t,e,r={}){let{seed:i,m:n,d:s}=Op(t,e,r.extraEntropy),o,a=new Ha;for(a.reseedSync(i);!(o=Rp(a.generateSync(),n,s));)a.reseedSync();return Np(o,r)}W.signSync=rx;var ix={strict:!0};function nx(t,e,r,i=ix){let n;try{n=Bp(t),e=Kt(e)}catch(y){return!1}let{r:s,s:o}=n;if(i.strict&&n.hasHighS())return!1;let a=Cp(e);if(a===j)return!1;let f;try{f=za(r)}catch(y){return!1}let{n:u}=oe,c=bn(o,u),h=O(a*c,u),l=O(s*c,u),d=ee.BASE.multiplyAndAddUnsafe(f,h,l);return d?O(d.x,u)===s:!1}W.verify=nx;async function ja(t,...e){let r=new Uint8Array(t.split("").map(s=>s.charCodeAt(0))),i=await W.utils.sha256(r),n=await W.utils.sha256(Ga(i,i,...e));return ft(n)}async function kp(t,e,r){let i=Va(t),n=await ja("BIP0340/challenge",i,e.toRawX(),r);return O(n,oe.n)}function Wa(t){return(t.y&pe)===j}var Yr=class{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromHex(e){let r=Kt(e);if(r.length!==64)throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${r.length}`);let i=ft(r.subarray(0,32)),n=ft(r.subarray(32,64));return new Yr(i,n)}assertValidity(){let{r:e,s:r}=this;if(!Fs(e)||!Ri(r))throw new Error("Invalid signature")}toHex(){return Xt(this.r)+Xt(this.s)}toRawBytes(){return wr(this.toHex())}};function sx(t){return ee.fromPrivateKey(t).toRawX()}async function ox(t,e,r=W.utils.randomBytes()){if(t==null)throw new TypeError(`sign: Expected valid message, not "${t}"`);let{n:i}=oe,n=Kt(t),s=Bi(e),o=Kt(r);if(o.length!==32)throw new TypeError("sign: Expected 32 bytes of aux randomness");let a=ee.fromPrivateKey(s),f=Wa(a)?s:i-s,u=await ja("BIP0340/aux",o),c=f^u,h=await ja("BIP0340/nonce",Va(c),a.toRawX(),n),l=O(h,i);if(l===j)throw new Error("sign: Creation of signature failed. k is zero");let d=ee.fromPrivateKey(l),p=Wa(d)?l:i-l,y=await kp(d.x,a,n),v=new Yr(d.x,O(p+y*f,i)).toRawBytes();if(!await Lp(v,n,a.toRawX()))throw new Error("sign: Invalid signature produced");return v}async function Lp(t,e,r){let i=t instanceof Yr,n;try{n=i?t:Yr.fromHex(t),i&&n.assertValidity()}catch(h){return!1}let{r:s,s:o}=n,a=Kt(e),f;try{f=za(r)}catch(h){return!1}let u=await kp(s,f,a),c=ee.BASE.multiplyAndAddUnsafe(f,Bi(o),O(-u,oe.n));return!(!c||!Wa(c)||c.x!==s)}W.schnorr={Signature:Yr,getPublicKey:sx,sign:ox,verify:Lp};ee.BASE._setWindowSize(8);var tt={node:zm.default,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0};W.utils={isValidPrivateKey(t){try{return Bi(t),!0}catch(e){return!1}},hashToPrivateKey:t=>{if(t=Kt(t),t.length<40||t.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");let e=O(ft(t),oe.n);if(e===j||e===pe)throw new Error("Invalid private key");return Va(e)},randomBytes:(t=32)=>{if(tt.web)return tt.web.getRandomValues(new Uint8Array(t));if(tt.node){let{randomBytes:e}=tt.node;return Uint8Array.from(e(t))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>W.utils.hashToPrivateKey(W.utils.randomBytes(40)),bytesToHex:Ci,mod:O,sha256:async t=>{if(tt.web){let e=await tt.web.subtle.digest("SHA-256",t.buffer);return new Uint8Array(e)}else if(tt.node){let{createHash:e}=tt.node;return Uint8Array.from(e("sha256").update(t).digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(t,...e)=>{if(tt.web){let r=await tt.web.subtle.importKey("raw",t,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),i=Ga(...e),n=await tt.web.subtle.sign("HMAC",r,i);return new Uint8Array(n)}else if(tt.node){let{createHmac:r}=tt.node,i=r("sha256",t);return e.forEach(n=>i.update(n)),Uint8Array.from(i.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,precompute(t=8,e=ee.BASE){let r=e===ee.BASE?e:new ee(e.x,e.y);return r._setWindowSize(t),r.multiply(dn),r}}});var Kp=x((MS,Up)=>{"use strict";var vn=We(),_r=Mp(),{sha256:Fp}=(kr(),lr);Up.exports=()=>{let t=32;function e(){return _r.utils.randomPrivateKey()}async function r(u,c){let{digest:h}=await Fp.digest(c);try{return await _r.sign(h,u)}catch(l){throw vn(l,"ERR_INVALID_INPUT")}}async function i(u,c,h){try{let{digest:l}=await Fp.digest(h);return _r.verify(c,l,u)}catch(l){throw vn(l,"ERR_INVALID_INPUT")}}function n(u){return _r.Point.fromHex(u).toRawBytes(!0)}function s(u){return _r.Point.fromHex(u).toRawBytes(!1)}function o(u){try{_r.getPublicKey(u,!0)}catch(c){throw vn(c,"ERR_INVALID_PRIVATE_KEY")}}function a(u){try{_r.Point.fromHex(u)}catch(c){throw vn(c,"ERR_INVALID_PUBLIC_KEY")}}function f(u){try{return _r.getPublicKey(u,!0)}catch(c){throw vn(c,"ERR_INVALID_PRIVATE_KEY")}}return{generateKey:e,privateKeyLength:t,hashAndSign:r,hashAndVerify:i,compressPublicKey:n,decompressPublicKey:s,validatePrivateKey:o,validatePublicKey:a,computePublicKey:f}}});var Hp=x((FS,Vp)=>{"use strict";var{sha256:qp}=(kr(),lr),ax=We(),{equals:Gp}=(zr(),Hr),{toString:cx}=(Bt(),Rt),ux=As();Vp.exports=(t,e,r)=>{r=r||Kp()();class i{constructor(u){r.validatePublicKey(u),this._key=u}verify(u,c){return r.hashAndVerify(this._key,c,u)}marshal(){return r.compressPublicKey(this._key)}get bytes(){return t.PublicKey.encode({Type:t.KeyType.Secp256k1,Data:this.marshal()}).finish()}equals(u){return Gp(this.bytes,u.bytes)}async hash(){let{bytes:u}=await qp.digest(this.bytes);return u}}class n{constructor(u,c){this._key=u,this._publicKey=c||r.computePublicKey(u),r.validatePrivateKey(this._key),r.validatePublicKey(this._publicKey)}sign(u){return r.hashAndSign(this._key,u)}get public(){return new i(this._publicKey)}marshal(){return this._key}get bytes(){return t.PrivateKey.encode({Type:t.KeyType.Secp256k1,Data:this.marshal()}).finish()}equals(u){return Gp(this.bytes,u.bytes)}async hash(){let{bytes:u}=await qp.digest(this.bytes);return u}async id(){let u=await this.public.hash();return cx(u,"base58btc")}async export(u,c="libp2p-key"){if(c==="libp2p-key")return ux.export(this.bytes,u);throw ax(new Error(`export format '${c}' is not supported`),"ERR_INVALID_EXPORT_FORMAT")}}function s(f){return new n(f)}function o(f){return new i(f)}async function a(){let f=await r.generateKey();return new n(f)}return{Secp256k1PublicKey:i,Secp256k1PrivateKey:n,unmarshalSecp256k1PrivateKey:s,unmarshalSecp256k1PublicKey:o,generateKeyPair:a}}});var jp=x((US,zp)=>{"use strict";zp.exports={SHA1:20,SHA256:32,SHA512:64}});var $p=x(Yp=>{"use strict";var Wp=sn(),fx=jp(),hx={SHA1:"SHA-1",SHA256:"SHA-256",SHA512:"SHA-512"},lx=async(t,e)=>{let r=await Wp.get().subtle.sign({name:"HMAC"},t,e);return new Uint8Array(r,r.byteOffset,r.byteLength)};Yp.create=async function(t,e){let r=hx[t],i=await Wp.get().subtle.importKey("raw",e,{name:"HMAC",hash:{name:r}},!1,["sign"]);return{async digest(n){return lx(i,n)},length:fx[t]}}});var ed=x((qS,Jp)=>{"use strict";var Zp=We(),{concat:Qp}=(Vr(),Gr),{fromString:px}=(st(),nt),dx=$p(),Xp={"AES-128":{ivSize:16,keySize:16},"AES-256":{ivSize:16,keySize:32},Blowfish:{ivSize:8,cipherKeySize:32}};Jp.exports=async(t,e,r)=>{let i=Xp[t];if(!i){let E=Object.keys(Xp).join(" / ");throw Zp(new Error(`unknown cipher type '${t}'. Must be ${E}`),"ERR_INVALID_CIPHER_TYPE")}if(!e)throw Zp(new Error("missing hash type"),"ERR_MISSING_HASH_TYPE");let n=i.keySize,s=i.ivSize,o=20,a=px("key expansion"),f=2*(s+n+o),u=await dx.create(e,r),c=await u.digest(a),h=[],l=0;for(;l<f;){let E=await u.digest(Qp([c,a])),I=E.length;l+I>f&&(I=f-l),h.push(E),l+=I,c=await u.digest(c)}let d=f/2,p=Qp(h),y=p.slice(0,d),v=p.slice(d,f),b=E=>({iv:E.slice(0,s),cipherKey:E.slice(s,s+n),macKey:E.slice(s+n)});return{k1:b(y),k2:b(v)}}});var rd=x((GS,td)=>{"use strict";var yx=We();td.exports=function(t,e){if(!t.includes(e)){let r=t.join(" / ");throw yx(new Error(`Unknown curve: ${e}. Must be ${r}`),"ERR_INVALID_CURVE")}}});var cd=x(ad=>{"use strict";var gx=We(),mn=sn(),{base64urlToBuffer:id}=Is(),bx=rd(),{toString:Ya}=(Bt(),Rt),{concat:vx}=(Vr(),Gr),{equals:mx}=(zr(),Hr),nd={"P-256":256,"P-384":384,"P-521":521};ad.generateEphmeralKeyPair=async function(t){bx(Object.keys(nd),t);let e=await mn.get().subtle.generateKey({name:"ECDH",namedCurve:t},!0,["deriveBits"]),r=async(n,s)=>{let o;s?o=await mn.get().subtle.importKey("jwk",Ex(t,s),{name:"ECDH",namedCurve:t},!1,["deriveBits"]):o=e.privateKey;let a=[await mn.get().subtle.importKey("jwk",od(t,n),{name:"ECDH",namedCurve:t},!1,[]),o],f=await mn.get().subtle.deriveBits({name:"ECDH",namedCurve:t,public:a[0]},a[1],nd[t]);return new Uint8Array(f,f.byteOffset,f.byteLength)},i=await mn.get().subtle.exportKey("jwk",e.publicKey);return{key:xx(i),genSharedKey:r}};var sd={"P-256":32,"P-384":48,"P-521":66};function xx(t){let e=sd[t.crv];return vx([Uint8Array.from([4]),id(t.x,e),id(t.y,e)],1+e*2)}function od(t,e){let r=sd[t];if(mx(!e.slice(0,1),Uint8Array.from([4])))throw gx(new Error("Cannot unmarshal public key - invalid key format"),"ERR_INVALID_KEY_FORMAT");return{kty:"EC",crv:t,x:Ya(e.slice(1,r+1),"base64url"),y:Ya(e.slice(1+r),"base64url"),ext:!0}}var Ex=(t,e)=>({...od(t,e.public),d:Ya(e.private,"base64url")})});var fd=x((HS,ud)=>{"use strict";var wx=cd();ud.exports=async t=>wx.generateEphmeralKeyPair(t)});var Za=x((zS,ld)=>{"use strict";var qt=as();tn();Bl();var $a=ne(),xn=We(),{fromString:_x}=(st(),nt),Sx=Nl(),lt={rsa:ip(),ed25519:xp(),secp256k1:Hp()(qt,Zn())},Us={message:"secp256k1 support requires libp2p-crypto-secp256k1 package",code:"ERR_MISSING_PACKAGE"};function Ti(t){let e=lt[t.toLowerCase()];if(!e){let r=Object.keys(lt).join(" / ");throw xn(new Error(`invalid or unsupported key type ${t}. Must be ${r}`),"ERR_UNSUPPORTED_KEY_TYPE")}return e}var Ix=async(t,e)=>Ti(t).generateKeyPair(e),Ax=async(t,e,r)=>{let i=Ti(t);if(t.toLowerCase()!=="ed25519")throw xn(new Error("Seed key derivation is unimplemented for RSA or secp256k1"),"ERR_UNSUPPORTED_KEY_DERIVATION_TYPE");return i.generateKeyPairFromSeed(e,r)},Cx=t=>{let e=qt.PublicKey.decode(t),r=e.Data;switch(e.Type){case qt.KeyType.RSA:return lt.rsa.unmarshalRsaPublicKey(r);case qt.KeyType.Ed25519:return lt.ed25519.unmarshalEd25519PublicKey(r);case qt.KeyType.Secp256k1:if(lt.secp256k1)return lt.secp256k1.unmarshalSecp256k1PublicKey(r);throw xn(new Error(Us.message),Us.code);default:Ti(e.Type)}},Rx=(t,e)=>(e=(e||"rsa").toLowerCase(),Ti(e),t.bytes),hd=async t=>{let e=qt.PrivateKey.decode(t),r=e.Data;switch(e.Type){case qt.KeyType.RSA:return lt.rsa.unmarshalRsaPrivateKey(r);case qt.KeyType.Ed25519:return lt.ed25519.unmarshalEd25519PrivateKey(r);case qt.KeyType.Secp256k1:if(lt.secp256k1)return lt.secp256k1.unmarshalSecp256k1PrivateKey(r);throw xn(new Error(Us.message),Us.code);default:Ti(e.Type)}},Bx=(t,e)=>(e=(e||"rsa").toLowerCase(),Ti(e),t.bytes),Tx=async(t,e)=>{try{let n=await Sx.import(t,e);return hd(n)}catch(n){}let r=$a.pki.decryptRsaPrivateKey(t,e);if(r===null)throw xn(new Error("Cannot read the key, most likely the password is wrong or not a RSA key"),"ERR_CANNOT_DECRYPT_PEM");let i=$a.asn1.toDer($a.pki.privateKeyToAsn1(r));return i=_x(i.getBytes(),"ascii"),lt.rsa.unmarshalRsaPrivateKey(i)};ld.exports={supportedKeys:lt,keysPBM:qt,keyStretcher:ed(),generateEphemeralKeyPair:fd(),generateKeyPair:Ix,generateKeyPairFromSeed:Ax,unmarshalPublicKey:Cx,marshalPublicKey:Rx,unmarshalPrivateKey:hd,marshalPrivateKey:Bx,import:Tx}});var pd=x((jS,Qa)=>{"use strict";function Dx(t,{className:e,symbolName:r}){let i=Symbol.for(r),n={[e]:class extends t{constructor(...s){super(...s);Object.defineProperty(this,i,{value:!0})}get[Symbol.toStringTag](){return e}}}[e];return n[`is${e}`]=s=>!!(s&&s[i]),n}function Px(t,{className:e,symbolName:r,withoutNew:i}){let n=Symbol.for(r),s={[e]:function(...o){if(i&&!(this instanceof s))return new s(...o);let a=t.call(this,...o)||this;return a&&!a[n]&&Object.defineProperty(a,n,{value:!0}),a}}[e];return s.prototype=Object.create(t.prototype),s.prototype.constructor=s,Object.defineProperty(s.prototype,Symbol.toStringTag,{get(){return e}}),s[`is${e}`]=o=>!!(o&&o[n]),s}Qa.exports=Dx;Qa.exports.proto=Px});var gd=x((WS,yd)=>{"use strict";var Di=ni(),dd=Di.Reader,Ox=Di.Writer,Re=Di.util,En=Di.roots["libp2p-peer-id"]||(Di.roots["libp2p-peer-id"]={});En.PeerIdProto=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.id=Re.newBuffer([]),t.prototype.pubKey=Re.newBuffer([]),t.prototype.privKey=Re.newBuffer([]),t.encode=function(r,i){return i||(i=Ox.create()),i.uint32(10).bytes(r.id),r.pubKey!=null&&Object.hasOwnProperty.call(r,"pubKey")&&i.uint32(18).bytes(r.pubKey),r.privKey!=null&&Object.hasOwnProperty.call(r,"privKey")&&i.uint32(26).bytes(r.privKey),i},t.decode=function(r,i){r instanceof dd||(r=dd.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new En.PeerIdProto;r.pos<n;){var o=r.uint32();switch(o>>>3){case 1:s.id=r.bytes();break;case 2:s.pubKey=r.bytes();break;case 3:s.privKey=r.bytes();break;default:r.skipType(o&7);break}}if(!s.hasOwnProperty("id"))throw Re.ProtocolError("missing required 'id'",{instance:s});return s},t.fromObject=function(r){if(r instanceof En.PeerIdProto)return r;var i=new En.PeerIdProto;return r.id!=null&&(typeof r.id=="string"?Re.base64.decode(r.id,i.id=Re.newBuffer(Re.base64.length(r.id)),0):r.id.length&&(i.id=r.id)),r.pubKey!=null&&(typeof r.pubKey=="string"?Re.base64.decode(r.pubKey,i.pubKey=Re.newBuffer(Re.base64.length(r.pubKey)),0):r.pubKey.length&&(i.pubKey=r.pubKey)),r.privKey!=null&&(typeof r.privKey=="string"?Re.base64.decode(r.privKey,i.privKey=Re.newBuffer(Re.base64.length(r.privKey)),0):r.privKey.length&&(i.privKey=r.privKey)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(i.bytes===String?n.id="":(n.id=[],i.bytes!==Array&&(n.id=Re.newBuffer(n.id))),i.bytes===String?n.pubKey="":(n.pubKey=[],i.bytes!==Array&&(n.pubKey=Re.newBuffer(n.pubKey))),i.bytes===String?n.privKey="":(n.privKey=[],i.bytes!==Array&&(n.privKey=Re.newBuffer(n.privKey)))),r.id!=null&&r.hasOwnProperty("id")&&(n.id=i.bytes===String?Re.base64.encode(r.id,0,r.id.length):i.bytes===Array?Array.prototype.slice.call(r.id):r.id),r.pubKey!=null&&r.hasOwnProperty("pubKey")&&(n.pubKey=i.bytes===String?Re.base64.encode(r.pubKey,0,r.pubKey.length):i.bytes===Array?Array.prototype.slice.call(r.pubKey):r.pubKey),r.privKey!=null&&r.hasOwnProperty("privKey")&&(n.privKey=i.bytes===String?Re.base64.encode(r.privKey,0,r.privKey.length):i.bytes===Array?Array.prototype.slice.call(r.privKey):r.privKey),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,Di.util.toJSONOptions)},t}();yd.exports=En});var Pi=x((Ue,Sd)=>{"use strict";var{CID:Xa}=(sa(),ah),Nx=(ji(),zi),kx=(Jo(),Jn),Lx=(li(),hi),Mx=(Wi(),pi),{base58btc:Ja}=(li(),hi),{base32:Fx}=(ji(),zi),{base16:bd}=(Xo(),Xn),wn=(bi(),ts),Gt=Za(),Ux=pd(),{PeerIdProto:vd}=gd(),{equals:$r}=(zr(),Hr),{fromString:_n}=(st(),nt),{toString:Kx}=(Bt(),Rt),{identity:Ks}=(rs(),Zi),md={...Nx,...kx,...Lx,...Mx},qx=Object.keys(md).reduce((t,e)=>t.or(md[e]),Fx.decoder),Gx=112,xd=114,Ed=class{constructor(e,r,i){if(!(e instanceof Uint8Array))throw new Error("invalid id provided");if(r&&i&&!$r(r.public.bytes,i.bytes))throw new Error("inconsistent arguments");this._id=e,this._idB58String=Ja.encode(this.id).substring(1),this._privKey=r,this._pubKey=i}get id(){return this._id}set id(e){throw new Error("Id is immutable")}get privKey(){return this._privKey}set privKey(e){this._privKey=e}get pubKey(){if(this._pubKey)return this._pubKey;if(this._privKey)return this._privKey.public;try{let e=wn.decode(this.id);e.code===Ks.code&&(this._pubKey=Gt.unmarshalPublicKey(e.digest))}catch(e){}return this._pubKey}set pubKey(e){this._pubKey=e}marshalPubKey(){if(this.pubKey)return Gt.marshalPublicKey(this.pubKey)}marshalPrivKey(){if(this.privKey)return Gt.marshalPrivateKey(this.privKey)}marshal(e){return vd.encode({id:this.toBytes(),pubKey:this.marshalPubKey(),privKey:e?null:this.marshalPrivKey()}).finish()}toPrint(){let e=this.toB58String();e.startsWith("Qm")&&(e=e.slice(2));let r=6;return e.length<r&&(r=e.length),"<peer.ID "+e.substr(0,r)+">"}toJSON(){return{id:this.toB58String(),privKey:_d(this.marshalPrivKey()),pubKey:_d(this.marshalPubKey())}}toHexString(){return bd.encode(this.id).substring(1)}toBytes(){return this.id}toB58String(){return this._idB58String}toString(){if(!this._idCIDString){let e=Xa.createV1(xd,wn.decode(this.id));Object.defineProperty(this,"_idCIDString",{value:e.toString(),enumerable:!1})}return this._idCIDString}equals(e){if(e instanceof Uint8Array)return $r(this.id,e);if(e.id)return $r(this.id,e.id);throw new Error("not valid Id")}isEqual(e){return this.equals(e)}isValid(){return Boolean(this.privKey&&this.privKey.public&&this.privKey.public.bytes&&this.pubKey.bytes instanceof Uint8Array&&$r(this.privKey.public.bytes,this.pubKey.bytes))}hasInlinePublicKey(){try{if(wn.decode(this.id).code===Ks.code)return!0}catch(e){}return!1}},Vt=Ux(Ed,{className:"PeerId",symbolName:"@libp2p/js-peer-id/PeerId"});Ue=Sd.exports=Vt;var Sn=t=>t.bytes.length<=42?wn.create(Ks.code,t.bytes).bytes:t.hash(),ec=async(t,e)=>{let r=await Sn(e);return new Vt(r,t,e)};Ue.create=async t=>{t=t||{},t.bits=t.bits||2048,t.keyType=t.keyType||"RSA";let e=await Gt.generateKeyPair(t.keyType,t.bits);return ec(e,e.public)};Ue.createFromHexString=t=>new Vt(bd.decode("f"+t));Ue.createFromBytes=t=>{try{let e=Xa.decode(t);if(!wd(e))throw new Error("Supplied PeerID CID is invalid");return Ue.createFromCID(e)}catch{if(wn.decode(t).code!==Ks.code)throw new Error("Supplied PeerID CID is invalid");return new Vt(t)}};Ue.createFromB58String=t=>Ue.createFromBytes(Ja.decode("z"+t));var wd=t=>t.code===xd||t.code===Gx;Ue.createFromCID=t=>{if(t=Xa.asCID(t),!t||!wd(t))throw new Error("Supplied PeerID CID is invalid");return new Vt(t.multihash.bytes)};Ue.createFromPubKey=async t=>{let e=t;if(typeof e=="string"&&(e=_n(t,"base64pad")),!(e instanceof Uint8Array))throw new Error("Supplied key is neither a base64 string nor a Uint8Array");let r=await Gt.unmarshalPublicKey(e);return ec(void 0,r)};Ue.createFromPrivKey=async t=>{if(typeof t=="string"&&(t=_n(t,"base64pad")),!(t instanceof Uint8Array))throw new Error("Supplied key is neither a base64 string nor a Uint8Array");let e=await Gt.unmarshalPrivateKey(t);return ec(e,e.public)};Ue.createFromJSON=async t=>{let e=Ja.decode("z"+t.id),r=t.privKey&&_n(t.privKey,"base64pad"),i=t.pubKey&&_n(t.pubKey,"base64pad"),n=i&&await Gt.unmarshalPublicKey(i);if(!r)return new Vt(e,void 0,n);let s=await Gt.unmarshalPrivateKey(r),o=await Sn(s.public),a;if(n&&(a=await Sn(n)),n&&!$r(o,a))throw new Error("Public and private key do not match");if(e&&!$r(o,e))throw new Error("Id and private key do not match");return new Vt(e,s,n)};Ue.createFromProtobuf=async t=>{typeof t=="string"&&(t=_n(t,"base16"));let{id:e,privKey:r,pubKey:i}=vd.decode(t);r=r?await Gt.unmarshalPrivateKey(r):!1,i=i?await Gt.unmarshalPublicKey(i):!1;let n,s;if(r&&(s=await Sn(r.public)),i&&(n=await Sn(i)),r){if(i&&!$r(s,n))throw new Error("Public and private key do not match");return new Vt(s,r,r.public)}if(i)return new Vt(n,void 0,i);if(e)return new Vt(e);throw new Error("Protobuf did not contain any usable key material")};Ue.parse=t=>((t.charAt(0)==="1"||t.charAt(0)==="Q")&&(t=`z${t}`),Ue.createFromBytes(qx.decode(t)));Ue.isPeerId=t=>Boolean(typeof t=="object"&&t._id&&t._idB58String);function _d(t){if(t)return Kx(t,"base64pad")}});var tc=x((YS,Cd)=>{"use strict";var Vx=Zn(),{toString:Hx}=(Bt(),Rt),{fromString:Id}=(st(),nt),Ad=Pi(),{sha256:zx}=(kr(),lr),jx=()=>Vx(8),Wx=(t,e)=>{let r;t instanceof Uint8Array?r=Ad.createFromBytes(t).id:r=Ad.parse(t).id;let i=new Uint8Array(r.length+e.length);return i.set(r,0),i.set(e,r.length),i},Yx=t=>zx.encode(t),$x=(t,e)=>{let r;Array.isArray(e)?r=i=>e.indexOf(i)>-1:r=i=>e.has(i);for(let i of t)if(r(i))return!0;return!1},Zx=t=>Array.isArray(t)?t:[t],Qx=(t,e)=>{let r=Object.assign({},t);return t.from instanceof Uint8Array&&(r.from=Hx(t.from,"base58btc")),e&&(r.receivedFrom=e),r},Xx=t=>{let e=Object.assign({},t);return typeof t.from=="string"&&(e.from=Id(t.from,"base58btc")),typeof t.data=="string"&&(e.data=Id(t.data)),e};Cd.exports={randomSeqno:jx,msgId:Wx,noSignMsgId:Yx,anyMatch:$x,ensureArray:Zx,normalizeInRpcMessage:Qx,normalizeOutRpcMessage:Xx}});var Pd=x(($S,Dd)=>{"use strict";var rc=Pi(),{RPC:Rd}=Ao(),{concat:Bd}=(Vr(),Gr),{fromString:Jx}=(st(),nt),ic=Jx("libp2p-pubsub:"),{normalizeOutRpcMessage:eE}=tc();async function tE(t,e){let r=Bd([ic,Rd.Message.encode(eE(e)).finish()]),i=await t.privKey.sign(r);return{...e,signature:i,key:t.pubKey.bytes}}async function rE(t){if(!t.signature)throw new Error("Message must contain a signature to be verified");if(!t.from)throw new Error("Message must contain a from property to be verified");let e=Bd([ic,Rd.Message.encode({...t,from:rc.createFromB58String(t.from).toBytes(),signature:void 0,key:void 0}).finish()]);return(await Td(t)).verify(e,t.signature)}async function Td(t){if(!t.from)throw new Error("Could not get the public key from the originator id");let e=rc.createFromB58String(t.from);if(t.key){let r=await rc.createFromPubKey(t.key);if(r.equals(e))return r.pubKey;throw new Error("Public Key does not match the originator")}else{if(e.pubKey)return e.pubKey;throw new Error("Could not get the public key from the originator id")}}Dd.exports={messagePublicKey:Td,signMessage:tE,SignPrefix:ic,verifySignature:rE}});var Ld=x((ZS,kd)=>{"use strict";var Od=Ui(),{EventEmitter:iE}=io(),Xe=We(),{pipe:nE}=so(),{default:sE}=$c(),oE=ou(),{codes:mt}=Fn(),{RPC:Nd}=Ao(),aE=A0(),{SignaturePolicy:Jt}=R0(),Sr=tc(),{signMessage:cE,verifySignature:uE}=Pd(),qs=class extends iE{constructor({debugName:e,multicodecs:r,libp2p:i,globalSignaturePolicy:n=Jt.StrictSign,canRelayMessage:s=!1,emitSelf:o=!1,messageProcessingConcurrency:a=10}){if(typeof e!="string")throw new Error("a debugname `string` is required");if(!r)throw new Error("multicodecs are required");if(!i)throw new Error("libp2p is required");super();if(this.log=Object.assign(Od(e),{err:Od(`${e}:error`)}),this.multicodecs=Sr.ensureArray(r),this._libp2p=i,this.registrar=i.registrar,this.peerId=i.peerId,this.started=!1,this.topics=new Map,this.subscriptions=new Set,this.peers=new Map,!Jt[n])throw Xe(new Error("Invalid global signature policy"),mt.ERR_INVALID_SIGNATURE_POLICY);this.globalSignaturePolicy=n,this.canRelayMessage=s,this.emitSelf=o,this.topicValidators=new Map,this.queue=new sE({concurrency:a}),this._registrarId=void 0,this._onIncomingStream=this._onIncomingStream.bind(this),this._onPeerConnected=this._onPeerConnected.bind(this),this._onPeerDisconnected=this._onPeerDisconnected.bind(this)}async start(){if(this.started)return;this.log("starting"),this.registrar.handle(this.multicodecs,this._onIncomingStream);let e=new oE({multicodecs:this.multicodecs,handlers:{onConnect:this._onPeerConnected,onDisconnect:this._onPeerDisconnected}});this._registrarId=await this.registrar.register(e),this.log("started"),this.started=!0}async stop(){!this.started||(this.registrar.unregister(this._registrarId),this.log("stopping"),this.peers.forEach(e=>e.close()),this.peers=new Map,this.subscriptions=new Set,this.started=!1,this.log("stopped"))}_onIncomingStream({protocol:e,stream:r,connection:i}){let n=i.remotePeer,s=n.toB58String(),o=this._addPeer(n,e),a=o.attachInboundStream(r);this._processMessages(s,a,o)}async _onPeerConnected(e,r){let i=e.toB58String();this.log("connected",i);try{let{stream:n,protocol:s}=await r.newStream(this.multicodecs);await this._addPeer(e,s).attachOutboundStream(n)}catch(n){this.log.err(n)}this._sendSubscriptions(i,Array.from(this.subscriptions),!0)}_onPeerDisconnected(e,r){let i=e.toB58String();this.log("connection ended",i,r?r.message:""),this._removePeer(e)}_addPeer(e,r){let i=e.toB58String(),n=this.peers.get(i);if(n)return n;this.log("new peer",i);let s=new aE({id:e,protocol:r});return this.peers.set(i,s),s.once("close",()=>this._removePeer(e)),s}_removePeer(e){if(!e)return;let r=e.toB58String(),i=this.peers.get(r);if(!!i){i.removeAllListeners(),i.close(),this.log("delete peer",r),this.peers.delete(r);for(let n of this.topics.values())n.delete(r);return i}}async _processMessages(e,r,i){try{await nE(r,async n=>{for await(let s of n){let o=s instanceof Uint8Array?s:s.slice(),a=this._decodeRpc(o);(async()=>{try{await this._processRpc(e,i,a)}catch(f){this.log.err(f)}})()}})}catch(n){this._onPeerDisconnected(i.id,n)}}async _processRpc(e,r,i){this.log("rpc from",e);let n=i.subscriptions,s=i.msgs;return n.length&&(n.forEach(o=>{this._processRpcSubOpt(e,o)}),this.emit("pubsub:subscription-change",r.id,n)),this._acceptFrom(e)?(s.length&&this.queue.addAll(s.map(o=>async()=>{if(!(this.canRelayMessage||o.topicIDs&&o.topicIDs.some(a=>this.subscriptions.has(a)))){this.log("received message we didn't subscribe to. Dropping.");return}try{let a=Sr.normalizeInRpcMessage(o,e);await this._processRpcMessage(a)}catch(a){this.log.err(a)}})),!0):(this.log("received message from unacceptable peer %s",e),!1)}_processRpcSubOpt(e,r){let i=r.topicID;if(!i)return;let n=this.topics.get(i);n||(n=new Set,this.topics.set(i,n)),r.subscribe?n.add(e):n.delete(e)}async _processRpcMessage(e){if(!(this.peerId.toB58String()===e.from&&!this.emitSelf)){try{await this.validate(e)}catch(r){this.log("Message is invalid, dropping it. %O",r);return}return this._emitMessage(e),this._publish(Sr.normalizeOutRpcMessage(e))}}_emitMessage(e){e.topicIDs.forEach(r=>{this.subscriptions.has(r)&&this.emit(r,e)})}getMsgId(e){let r=this.globalSignaturePolicy;switch(r){case Jt.StrictSign:return Sr.msgId(e.from,e.seqno);case Jt.StrictNoSign:return Sr.noSignMsgId(e.data);default:throw Xe(new Error("Cannot get message id: unhandled signature policy: "+r),mt.ERR_UNHANDLED_SIGNATURE_POLICY)}}_acceptFrom(e){return!0}_decodeRpc(e){return Nd.decode(e)}_encodeRpc(e){return Nd.encode(e).finish()}_sendRpc(e,r){let i=this.peers.get(e);if(!i||!i.isWritable){let n=`Cannot send RPC to ${e} as there is no open stream to it available`;this.log.err(n);return}i.write(this._encodeRpc(r))}_sendSubscriptions(e,r,i){return this._sendRpc(e,{subscriptions:r.map(n=>({topicID:n,subscribe:i}))})}async validate(e){let r=this.globalSignaturePolicy;switch(r){case Jt.StrictNoSign:if(e.from)throw Xe(new Error("StrictNoSigning: from should not be present"),mt.ERR_UNEXPECTED_FROM);if(e.signature)throw Xe(new Error("StrictNoSigning: signature should not be present"),mt.ERR_UNEXPECTED_SIGNATURE);if(e.key)throw Xe(new Error("StrictNoSigning: key should not be present"),mt.ERR_UNEXPECTED_KEY);if(e.seqno)throw Xe(new Error("StrictNoSigning: seqno should not be present"),mt.ERR_UNEXPECTED_SEQNO);break;case Jt.StrictSign:if(!e.signature)throw Xe(new Error("StrictSigning: Signing required and no signature was present"),mt.ERR_MISSING_SIGNATURE);if(!e.seqno)throw Xe(new Error("StrictSigning: Signing required and no seqno was present"),mt.ERR_MISSING_SEQNO);if(!await uE(e))throw Xe(new Error("StrictSigning: Invalid message signature"),mt.ERR_INVALID_SIGNATURE);break;default:throw Xe(new Error("Cannot validate message: unhandled signature policy: "+r),mt.ERR_UNHANDLED_SIGNATURE_POLICY)}for(let i of e.topicIDs){let n=this.topicValidators.get(i);n&&await n(i,e)}}_buildMessage(e){let r=this.globalSignaturePolicy;switch(r){case Jt.StrictSign:return e.from=this.peerId.toB58String(),e.seqno=Sr.randomSeqno(),cE(this.peerId,e);case Jt.StrictNoSign:return Promise.resolve(e);default:throw Xe(new Error("Cannot build message: unhandled signature policy: "+r),mt.ERR_UNHANDLED_SIGNATURE_POLICY)}}getSubscribers(e){if(!this.started)throw Xe(new Error("not started yet"),"ERR_NOT_STARTED_YET");if(!e||typeof e!="string")throw Xe(new Error("a string topic must be provided"),"ERR_NOT_VALID_TOPIC");let r=this.topics.get(e);return r?Array.from(r):[]}async publish(e,r){if(!this.started)throw new Error("Pubsub has not started");this.log("publish",e,r);let n={receivedFrom:this.peerId.toB58String(),data:r,topicIDs:[e]},s=await this._buildMessage(n),o=Sr.normalizeInRpcMessage(s);this.emitSelf&&this._emitMessage(o),await this._publish(o)}_publish(e){throw Xe(new Error("publish must be implemented by the subclass"),"ERR_NOT_IMPLEMENTED")}subscribe(e){if(!this.started)throw new Error("Pubsub has not started");this.subscriptions.has(e)||(this.subscriptions.add(e),this.peers.forEach((r,i)=>this._sendSubscriptions(i,[e],!0)))}unsubscribe(e){if(!this.started)throw new Error("Pubsub is not started");this.subscriptions.has(e)&&this.listenerCount(e)===0&&(this.subscriptions.delete(e),this.peers.forEach((r,i)=>this._sendSubscriptions(i,[e],!1)))}getTopics(){if(!this.started)throw new Error("Pubsub is not started");return Array.from(this.subscriptions)}};qs.utils=Sr;qs.SignaturePolicy=Jt;kd.exports=qs});var Md=x(Gs=>{"use strict";Object.defineProperty(Gs,"__esModule",{value:!0});Gs.createGossipRpc=void 0;function fE(t=[],e={}){return{subscriptions:[],msgs:t,control:{ihave:[],iwant:[],graft:[],prune:[],...e}}}Gs.createGossipRpc=fE});var Fd=x(Vs=>{"use strict";Object.defineProperty(Vs,"__esModule",{value:!0});Vs.shuffle=void 0;function hE(t){if(t.length<=1)return t;let e=()=>Math.floor(Math.random()*Math.floor(t.length));for(let r=0;r<t.length;r++){let i=e(),n=t[r];t[r]=t[i],t[i]=n}return t}Vs.shuffle=hE});var Zr=x(B=>{"use strict";Object.defineProperty(B,"__esModule",{value:!0});B.ACCEPT_FROM_WHITELIST_DURATION_MS=B.ACCEPT_FROM_WHITELIST_MAX_MESSAGES=B.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE=B.ERR_TOPIC_VALIDATOR_IGNORE=B.ERR_TOPIC_VALIDATOR_REJECT=B.TimeCacheDuration=B.GossipsubSeenTTL=B.GossipsubIWantFollowupTime=B.GossipsubMaxIHaveMessages=B.GossipsubMaxIHaveLength=B.GossipsubGraftFloodThreshold=B.GossipsubOpportunisticGraftPeers=B.GossipsubOpportunisticGraftTicks=B.GossipsubDirectConnectInitialDelay=B.GossipsubDirectConnectTicks=B.GossipsubConnectionTimeout=B.GossipsubMaxPendingConnections=B.GossipsubConnectors=B.GossipsubPruneBackoffTicks=B.GossipsubPruneBackoff=B.GossipsubPrunePeers=B.GossipsubFanoutTTL=B.GossipsubHeartbeatInterval=B.GossipsubHeartbeatInitialDelay=B.GossipsubGossipRetransmission=B.GossipsubGossipFactor=B.GossipsubDlazy=B.GossipsubHistoryGossip=B.GossipsubHistoryLength=B.GossipsubDout=B.GossipsubDscore=B.GossipsubDhi=B.GossipsubDlo=B.GossipsubD=B.GossipsubIDv11=B.GossipsubIDv10=B.FloodsubID=B.minute=B.second=void 0;B.second=1e3;B.minute=60*B.second;B.FloodsubID="/floodsub/1.0.0";B.GossipsubIDv10="/meshsub/1.0.0";B.GossipsubIDv11="/meshsub/1.1.0";B.GossipsubD=6;B.GossipsubDlo=4;B.GossipsubDhi=12;B.GossipsubDscore=4;B.GossipsubDout=2;B.GossipsubHistoryLength=5;B.GossipsubHistoryGossip=3;B.GossipsubDlazy=6;B.GossipsubGossipFactor=.25;B.GossipsubGossipRetransmission=3;B.GossipsubHeartbeatInitialDelay=100;B.GossipsubHeartbeatInterval=B.second;B.GossipsubFanoutTTL=B.minute;B.GossipsubPrunePeers=16;B.GossipsubPruneBackoff=B.minute;B.GossipsubPruneBackoffTicks=15;B.GossipsubConnectors=8;B.GossipsubMaxPendingConnections=128;B.GossipsubConnectionTimeout=30*B.second;B.GossipsubDirectConnectTicks=300;B.GossipsubDirectConnectInitialDelay=B.second;B.GossipsubOpportunisticGraftTicks=60;B.GossipsubOpportunisticGraftPeers=2;B.GossipsubGraftFloodThreshold=10*B.second;B.GossipsubMaxIHaveLength=5e3;B.GossipsubMaxIHaveMessages=10;B.GossipsubIWantFollowupTime=3*B.second;B.GossipsubSeenTTL=2*B.minute;B.TimeCacheDuration=120*1e3;B.ERR_TOPIC_VALIDATOR_REJECT="ERR_TOPIC_VALIDATOR_REJECT";B.ERR_TOPIC_VALIDATOR_IGNORE="ERR_TOPIC_VALIDATOR_IGNORE";B.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE=0;B.ACCEPT_FROM_WHITELIST_MAX_MESSAGES=128;B.ACCEPT_FROM_WHITELIST_DURATION_MS=1e3});var Kd=x(Hs=>{"use strict";Object.defineProperty(Hs,"__esModule",{value:!0});Hs.hasGossipProtocol=void 0;var Ud=Zr();function lE(t){return t===Ud.GossipsubIDv10||t===Ud.GossipsubIDv11}Hs.hasGossipProtocol=lE});var qd=x(Oi=>{"use strict";Object.defineProperty(Oi,"__esModule",{value:!0});Oi.messageIdFromString=Oi.messageIdToString=void 0;var pE=(st(),nt),dE=(Bt(),Rt);function yE(t){return(0,dE.toString)(t,"base64")}Oi.messageIdToString=yE;function gE(t){return(0,pE.fromString)(t,"base64")}Oi.messageIdFromString=gE});var js=x(Ht=>{"use strict";var bE=Ht&&Ht.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r);var n=Object.getOwnPropertyDescriptor(e,r);(!n||("get"in n?!e.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,i,n)}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),zs=Ht&&Ht.__exportStar||function(t,e){for(var r in t)r!=="default"&&!Object.prototype.hasOwnProperty.call(e,r)&&bE(e,t,r)};Object.defineProperty(Ht,"__esModule",{value:!0});zs(Md(),Ht);zs(Fd(),Ht);zs(Kd(),Ht);zs(qd(),Ht)});var Vd=x(Ws=>{"use strict";Object.defineProperty(Ws,"__esModule",{value:!0});Ws.MessageCache=void 0;var nc=js(),Gd=class{constructor(e,r){this.msgs=new Map,this.peertx=new Map,this.history=[];for(let i=0;i<r;i++)this.history[i]=[];this.gossip=e}async put(e,r){this.msgs.set(r,e);let i=(0,nc.messageIdFromString)(r);this.history[0].push({msgId:i,topics:e.topicIDs})}get(e){return this.msgs.get((0,nc.messageIdToString)(e))}getForPeer(e,r){let i=this.msgs.get(e);if(!i)return[void 0,0];let n=this.peertx.get(e);n||(n=new Map,this.peertx.set(e,n));let s=(n.get(r)??0)+1;return n.set(r,s),[i,s]}getGossipIDs(e){let r=[];for(let i=0;i<this.gossip;i++)this.history[i].forEach(n=>{for(let s of n.topics)if(s===e){r.push(n.msgId);break}});return r}shift(){this.history[this.history.length-1].forEach(r=>{let i=(0,nc.messageIdToString)(r.msgId);this.msgs.delete(i),this.peertx.delete(i)}),this.history.pop(),this.history.unshift([])}};Ws.MessageCache=Gd});var zd=x((Hd,In)=>{(function(t,e){typeof define=="function"&&define.amd?define(["protobufjs/minimal"],e):typeof mc=="function"&&typeof In=="object"&&In&&In.exports&&(In.exports=e(ni()))})(Hd,function(t){"use strict";var e=t.Reader,r=t.Writer,i=t.util,n=t.roots.default||(t.roots.default={});return n.RPC=function(){function s(a){if(this.subscriptions=[],this.msgs=[],a)for(var f=Object.keys(a),u=0;u<f.length;++u)a[f[u]]!=null&&(this[f[u]]=a[f[u]])}s.prototype.subscriptions=i.emptyArray,s.prototype.msgs=i.emptyArray,s.prototype.control=null;var o;return Object.defineProperty(s.prototype,"_control",{get:i.oneOfGetter(o=["control"]),set:i.oneOfSetter(o)}),s.encode=function(f,u){if(u||(u=r.create()),f.subscriptions!=null&&f.subscriptions.length)for(var c=0;c<f.subscriptions.length;++c)n.RPC.SubOpts.encode(f.subscriptions[c],u.uint32(10).fork()).ldelim();if(f.msgs!=null&&f.msgs.length)for(var c=0;c<f.msgs.length;++c)n.RPC.Message.encode(f.msgs[c],u.uint32(18).fork()).ldelim();return f.control!=null&&Object.hasOwnProperty.call(f,"control")&&n.RPC.ControlMessage.encode(f.control,u.uint32(26).fork()).ldelim(),u},s.decode=function(f,u){f instanceof e||(f=e.create(f));for(var c=u===void 0?f.len:f.pos+u,h=new n.RPC;f.pos<c;){var l=f.uint32();switch(l>>>3){case 1:h.subscriptions&&h.subscriptions.length||(h.subscriptions=[]),h.subscriptions.push(n.RPC.SubOpts.decode(f,f.uint32()));break;case 2:h.msgs&&h.msgs.length||(h.msgs=[]),h.msgs.push(n.RPC.Message.decode(f,f.uint32()));break;case 3:h.control=n.RPC.ControlMessage.decode(f,f.uint32());break;default:f.skipType(l&7);break}}return h},s.fromObject=function(f){if(f instanceof n.RPC)return f;var u=new n.RPC;if(f.subscriptions){if(!Array.isArray(f.subscriptions))throw TypeError(".RPC.subscriptions: array expected");u.subscriptions=[];for(var c=0;c<f.subscriptions.length;++c){if(typeof f.subscriptions[c]!="object")throw TypeError(".RPC.subscriptions: object expected");u.subscriptions[c]=n.RPC.SubOpts.fromObject(f.subscriptions[c])}}if(f.msgs){if(!Array.isArray(f.msgs))throw TypeError(".RPC.msgs: array expected");u.msgs=[];for(var c=0;c<f.msgs.length;++c){if(typeof f.msgs[c]!="object")throw TypeError(".RPC.msgs: object expected");u.msgs[c]=n.RPC.Message.fromObject(f.msgs[c])}}if(f.control!=null){if(typeof f.control!="object")throw TypeError(".RPC.control: object expected");u.control=n.RPC.ControlMessage.fromObject(f.control)}return u},s.toObject=function(f,u){u||(u={});var c={};if((u.arrays||u.defaults)&&(c.subscriptions=[],c.msgs=[]),f.subscriptions&&f.subscriptions.length){c.subscriptions=[];for(var h=0;h<f.subscriptions.length;++h)c.subscriptions[h]=n.RPC.SubOpts.toObject(f.subscriptions[h],u)}if(f.msgs&&f.msgs.length){c.msgs=[];for(var h=0;h<f.msgs.length;++h)c.msgs[h]=n.RPC.Message.toObject(f.msgs[h],u)}return f.control!=null&&f.hasOwnProperty("control")&&(c.control=n.RPC.ControlMessage.toObject(f.control,u),u.oneofs&&(c._control="control")),c},s.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},s.SubOpts=function(){function a(u){if(u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}a.prototype.subscribe=null,a.prototype.topicID=null;var f;return Object.defineProperty(a.prototype,"_subscribe",{get:i.oneOfGetter(f=["subscribe"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),a.encode=function(c,h){return h||(h=r.create()),c.subscribe!=null&&Object.hasOwnProperty.call(c,"subscribe")&&h.uint32(8).bool(c.subscribe),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(18).string(c.topicID),h},a.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.SubOpts;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.subscribe=c.bool();break;case 2:d.topicID=c.string();break;default:c.skipType(p&7);break}}return d},a.fromObject=function(c){if(c instanceof n.RPC.SubOpts)return c;var h=new n.RPC.SubOpts;return c.subscribe!=null&&(h.subscribe=Boolean(c.subscribe)),c.topicID!=null&&(h.topicID=String(c.topicID)),h},a.toObject=function(c,h){h||(h={});var l={};return c.subscribe!=null&&c.hasOwnProperty("subscribe")&&(l.subscribe=c.subscribe,h.oneofs&&(l._subscribe="subscribe")),c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),l},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.Message=function(){function a(u){if(this.topicIDs=[],u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}a.prototype.from=null,a.prototype.data=null,a.prototype.seqno=null,a.prototype.topicIDs=i.emptyArray,a.prototype.signature=null,a.prototype.key=null;var f;return Object.defineProperty(a.prototype,"_from",{get:i.oneOfGetter(f=["from"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_data",{get:i.oneOfGetter(f=["data"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_seqno",{get:i.oneOfGetter(f=["seqno"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_signature",{get:i.oneOfGetter(f=["signature"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_key",{get:i.oneOfGetter(f=["key"]),set:i.oneOfSetter(f)}),a.encode=function(c,h){if(h||(h=r.create()),c.from!=null&&Object.hasOwnProperty.call(c,"from")&&h.uint32(10).bytes(c.from),c.data!=null&&Object.hasOwnProperty.call(c,"data")&&h.uint32(18).bytes(c.data),c.seqno!=null&&Object.hasOwnProperty.call(c,"seqno")&&h.uint32(26).bytes(c.seqno),c.topicIDs!=null&&c.topicIDs.length)for(var l=0;l<c.topicIDs.length;++l)h.uint32(34).string(c.topicIDs[l]);return c.signature!=null&&Object.hasOwnProperty.call(c,"signature")&&h.uint32(42).bytes(c.signature),c.key!=null&&Object.hasOwnProperty.call(c,"key")&&h.uint32(50).bytes(c.key),h},a.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.Message;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.from=c.bytes();break;case 2:d.data=c.bytes();break;case 3:d.seqno=c.bytes();break;case 4:d.topicIDs&&d.topicIDs.length||(d.topicIDs=[]),d.topicIDs.push(c.string());break;case 5:d.signature=c.bytes();break;case 6:d.key=c.bytes();break;default:c.skipType(p&7);break}}return d},a.fromObject=function(c){if(c instanceof n.RPC.Message)return c;var h=new n.RPC.Message;if(c.from!=null&&(typeof c.from=="string"?i.base64.decode(c.from,h.from=i.newBuffer(i.base64.length(c.from)),0):c.from.length&&(h.from=c.from)),c.data!=null&&(typeof c.data=="string"?i.base64.decode(c.data,h.data=i.newBuffer(i.base64.length(c.data)),0):c.data.length&&(h.data=c.data)),c.seqno!=null&&(typeof c.seqno=="string"?i.base64.decode(c.seqno,h.seqno=i.newBuffer(i.base64.length(c.seqno)),0):c.seqno.length&&(h.seqno=c.seqno)),c.topicIDs){if(!Array.isArray(c.topicIDs))throw TypeError(".RPC.Message.topicIDs: array expected");h.topicIDs=[];for(var l=0;l<c.topicIDs.length;++l)h.topicIDs[l]=String(c.topicIDs[l])}return c.signature!=null&&(typeof c.signature=="string"?i.base64.decode(c.signature,h.signature=i.newBuffer(i.base64.length(c.signature)),0):c.signature.length&&(h.signature=c.signature)),c.key!=null&&(typeof c.key=="string"?i.base64.decode(c.key,h.key=i.newBuffer(i.base64.length(c.key)),0):c.key.length&&(h.key=c.key)),h},a.toObject=function(c,h){h||(h={});var l={};if((h.arrays||h.defaults)&&(l.topicIDs=[]),c.from!=null&&c.hasOwnProperty("from")&&(l.from=h.bytes===String?i.base64.encode(c.from,0,c.from.length):h.bytes===Array?Array.prototype.slice.call(c.from):c.from,h.oneofs&&(l._from="from")),c.data!=null&&c.hasOwnProperty("data")&&(l.data=h.bytes===String?i.base64.encode(c.data,0,c.data.length):h.bytes===Array?Array.prototype.slice.call(c.data):c.data,h.oneofs&&(l._data="data")),c.seqno!=null&&c.hasOwnProperty("seqno")&&(l.seqno=h.bytes===String?i.base64.encode(c.seqno,0,c.seqno.length):h.bytes===Array?Array.prototype.slice.call(c.seqno):c.seqno,h.oneofs&&(l._seqno="seqno")),c.topicIDs&&c.topicIDs.length){l.topicIDs=[];for(var d=0;d<c.topicIDs.length;++d)l.topicIDs[d]=c.topicIDs[d]}return c.signature!=null&&c.hasOwnProperty("signature")&&(l.signature=h.bytes===String?i.base64.encode(c.signature,0,c.signature.length):h.bytes===Array?Array.prototype.slice.call(c.signature):c.signature,h.oneofs&&(l._signature="signature")),c.key!=null&&c.hasOwnProperty("key")&&(l.key=h.bytes===String?i.base64.encode(c.key,0,c.key.length):h.bytes===Array?Array.prototype.slice.call(c.key):c.key,h.oneofs&&(l._key="key")),l},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.ControlMessage=function(){function a(f){if(this.ihave=[],this.iwant=[],this.graft=[],this.prune=[],f)for(var u=Object.keys(f),c=0;c<u.length;++c)f[u[c]]!=null&&(this[u[c]]=f[u[c]])}return a.prototype.ihave=i.emptyArray,a.prototype.iwant=i.emptyArray,a.prototype.graft=i.emptyArray,a.prototype.prune=i.emptyArray,a.encode=function(u,c){if(c||(c=r.create()),u.ihave!=null&&u.ihave.length)for(var h=0;h<u.ihave.length;++h)n.RPC.ControlIHave.encode(u.ihave[h],c.uint32(10).fork()).ldelim();if(u.iwant!=null&&u.iwant.length)for(var h=0;h<u.iwant.length;++h)n.RPC.ControlIWant.encode(u.iwant[h],c.uint32(18).fork()).ldelim();if(u.graft!=null&&u.graft.length)for(var h=0;h<u.graft.length;++h)n.RPC.ControlGraft.encode(u.graft[h],c.uint32(26).fork()).ldelim();if(u.prune!=null&&u.prune.length)for(var h=0;h<u.prune.length;++h)n.RPC.ControlPrune.encode(u.prune[h],c.uint32(34).fork()).ldelim();return c},a.decode=function(u,c){u instanceof e||(u=e.create(u));for(var h=c===void 0?u.len:u.pos+c,l=new n.RPC.ControlMessage;u.pos<h;){var d=u.uint32();switch(d>>>3){case 1:l.ihave&&l.ihave.length||(l.ihave=[]),l.ihave.push(n.RPC.ControlIHave.decode(u,u.uint32()));break;case 2:l.iwant&&l.iwant.length||(l.iwant=[]),l.iwant.push(n.RPC.ControlIWant.decode(u,u.uint32()));break;case 3:l.graft&&l.graft.length||(l.graft=[]),l.graft.push(n.RPC.ControlGraft.decode(u,u.uint32()));break;case 4:l.prune&&l.prune.length||(l.prune=[]),l.prune.push(n.RPC.ControlPrune.decode(u,u.uint32()));break;default:u.skipType(d&7);break}}return l},a.fromObject=function(u){if(u instanceof n.RPC.ControlMessage)return u;var c=new n.RPC.ControlMessage;if(u.ihave){if(!Array.isArray(u.ihave))throw TypeError(".RPC.ControlMessage.ihave: array expected");c.ihave=[];for(var h=0;h<u.ihave.length;++h){if(typeof u.ihave[h]!="object")throw TypeError(".RPC.ControlMessage.ihave: object expected");c.ihave[h]=n.RPC.ControlIHave.fromObject(u.ihave[h])}}if(u.iwant){if(!Array.isArray(u.iwant))throw TypeError(".RPC.ControlMessage.iwant: array expected");c.iwant=[];for(var h=0;h<u.iwant.length;++h){if(typeof u.iwant[h]!="object")throw TypeError(".RPC.ControlMessage.iwant: object expected");c.iwant[h]=n.RPC.ControlIWant.fromObject(u.iwant[h])}}if(u.graft){if(!Array.isArray(u.graft))throw TypeError(".RPC.ControlMessage.graft: array expected");c.graft=[];for(var h=0;h<u.graft.length;++h){if(typeof u.graft[h]!="object")throw TypeError(".RPC.ControlMessage.graft: object expected");c.graft[h]=n.RPC.ControlGraft.fromObject(u.graft[h])}}if(u.prune){if(!Array.isArray(u.prune))throw TypeError(".RPC.ControlMessage.prune: array expected");c.prune=[];for(var h=0;h<u.prune.length;++h){if(typeof u.prune[h]!="object")throw TypeError(".RPC.ControlMessage.prune: object expected");c.prune[h]=n.RPC.ControlPrune.fromObject(u.prune[h])}}return c},a.toObject=function(u,c){c||(c={});var h={};if((c.arrays||c.defaults)&&(h.ihave=[],h.iwant=[],h.graft=[],h.prune=[]),u.ihave&&u.ihave.length){h.ihave=[];for(var l=0;l<u.ihave.length;++l)h.ihave[l]=n.RPC.ControlIHave.toObject(u.ihave[l],c)}if(u.iwant&&u.iwant.length){h.iwant=[];for(var l=0;l<u.iwant.length;++l)h.iwant[l]=n.RPC.ControlIWant.toObject(u.iwant[l],c)}if(u.graft&&u.graft.length){h.graft=[];for(var l=0;l<u.graft.length;++l)h.graft[l]=n.RPC.ControlGraft.toObject(u.graft[l],c)}if(u.prune&&u.prune.length){h.prune=[];for(var l=0;l<u.prune.length;++l)h.prune[l]=n.RPC.ControlPrune.toObject(u.prune[l],c)}return h},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.ControlIHave=function(){function a(u){if(this.messageIDs=[],u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}a.prototype.topicID=null,a.prototype.messageIDs=i.emptyArray;var f;return Object.defineProperty(a.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),a.encode=function(c,h){if(h||(h=r.create()),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(10).string(c.topicID),c.messageIDs!=null&&c.messageIDs.length)for(var l=0;l<c.messageIDs.length;++l)h.uint32(18).bytes(c.messageIDs[l]);return h},a.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.ControlIHave;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.topicID=c.string();break;case 2:d.messageIDs&&d.messageIDs.length||(d.messageIDs=[]),d.messageIDs.push(c.bytes());break;default:c.skipType(p&7);break}}return d},a.fromObject=function(c){if(c instanceof n.RPC.ControlIHave)return c;var h=new n.RPC.ControlIHave;if(c.topicID!=null&&(h.topicID=String(c.topicID)),c.messageIDs){if(!Array.isArray(c.messageIDs))throw TypeError(".RPC.ControlIHave.messageIDs: array expected");h.messageIDs=[];for(var l=0;l<c.messageIDs.length;++l)typeof c.messageIDs[l]=="string"?i.base64.decode(c.messageIDs[l],h.messageIDs[l]=i.newBuffer(i.base64.length(c.messageIDs[l])),0):c.messageIDs[l].length&&(h.messageIDs[l]=c.messageIDs[l])}return h},a.toObject=function(c,h){h||(h={});var l={};if((h.arrays||h.defaults)&&(l.messageIDs=[]),c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),c.messageIDs&&c.messageIDs.length){l.messageIDs=[];for(var d=0;d<c.messageIDs.length;++d)l.messageIDs[d]=h.bytes===String?i.base64.encode(c.messageIDs[d],0,c.messageIDs[d].length):h.bytes===Array?Array.prototype.slice.call(c.messageIDs[d]):c.messageIDs[d]}return l},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.ControlIWant=function(){function a(f){if(this.messageIDs=[],f)for(var u=Object.keys(f),c=0;c<u.length;++c)f[u[c]]!=null&&(this[u[c]]=f[u[c]])}return a.prototype.messageIDs=i.emptyArray,a.encode=function(u,c){if(c||(c=r.create()),u.messageIDs!=null&&u.messageIDs.length)for(var h=0;h<u.messageIDs.length;++h)c.uint32(10).bytes(u.messageIDs[h]);return c},a.decode=function(u,c){u instanceof e||(u=e.create(u));for(var h=c===void 0?u.len:u.pos+c,l=new n.RPC.ControlIWant;u.pos<h;){var d=u.uint32();switch(d>>>3){case 1:l.messageIDs&&l.messageIDs.length||(l.messageIDs=[]),l.messageIDs.push(u.bytes());break;default:u.skipType(d&7);break}}return l},a.fromObject=function(u){if(u instanceof n.RPC.ControlIWant)return u;var c=new n.RPC.ControlIWant;if(u.messageIDs){if(!Array.isArray(u.messageIDs))throw TypeError(".RPC.ControlIWant.messageIDs: array expected");c.messageIDs=[];for(var h=0;h<u.messageIDs.length;++h)typeof u.messageIDs[h]=="string"?i.base64.decode(u.messageIDs[h],c.messageIDs[h]=i.newBuffer(i.base64.length(u.messageIDs[h])),0):u.messageIDs[h].length&&(c.messageIDs[h]=u.messageIDs[h])}return c},a.toObject=function(u,c){c||(c={});var h={};if((c.arrays||c.defaults)&&(h.messageIDs=[]),u.messageIDs&&u.messageIDs.length){h.messageIDs=[];for(var l=0;l<u.messageIDs.length;++l)h.messageIDs[l]=c.bytes===String?i.base64.encode(u.messageIDs[l],0,u.messageIDs[l].length):c.bytes===Array?Array.prototype.slice.call(u.messageIDs[l]):u.messageIDs[l]}return h},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.ControlGraft=function(){function a(u){if(u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}a.prototype.topicID=null;var f;return Object.defineProperty(a.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),a.encode=function(c,h){return h||(h=r.create()),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(10).string(c.topicID),h},a.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.ControlGraft;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.topicID=c.string();break;default:c.skipType(p&7);break}}return d},a.fromObject=function(c){if(c instanceof n.RPC.ControlGraft)return c;var h=new n.RPC.ControlGraft;return c.topicID!=null&&(h.topicID=String(c.topicID)),h},a.toObject=function(c,h){h||(h={});var l={};return c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),l},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.ControlPrune=function(){function a(u){if(this.peers=[],u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}a.prototype.topicID=null,a.prototype.peers=i.emptyArray,a.prototype.backoff=null;var f;return Object.defineProperty(a.prototype,"_topicID",{get:i.oneOfGetter(f=["topicID"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_backoff",{get:i.oneOfGetter(f=["backoff"]),set:i.oneOfSetter(f)}),a.encode=function(c,h){if(h||(h=r.create()),c.topicID!=null&&Object.hasOwnProperty.call(c,"topicID")&&h.uint32(10).string(c.topicID),c.peers!=null&&c.peers.length)for(var l=0;l<c.peers.length;++l)n.RPC.PeerInfo.encode(c.peers[l],h.uint32(18).fork()).ldelim();return c.backoff!=null&&Object.hasOwnProperty.call(c,"backoff")&&h.uint32(24).uint64(c.backoff),h},a.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.ControlPrune;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.topicID=c.string();break;case 2:d.peers&&d.peers.length||(d.peers=[]),d.peers.push(n.RPC.PeerInfo.decode(c,c.uint32()));break;case 3:d.backoff=c.uint64();break;default:c.skipType(p&7);break}}return d},a.fromObject=function(c){if(c instanceof n.RPC.ControlPrune)return c;var h=new n.RPC.ControlPrune;if(c.topicID!=null&&(h.topicID=String(c.topicID)),c.peers){if(!Array.isArray(c.peers))throw TypeError(".RPC.ControlPrune.peers: array expected");h.peers=[];for(var l=0;l<c.peers.length;++l){if(typeof c.peers[l]!="object")throw TypeError(".RPC.ControlPrune.peers: object expected");h.peers[l]=n.RPC.PeerInfo.fromObject(c.peers[l])}}return c.backoff!=null&&(i.Long?(h.backoff=i.Long.fromValue(c.backoff)).unsigned=!0:typeof c.backoff=="string"?h.backoff=parseInt(c.backoff,10):typeof c.backoff=="number"?h.backoff=c.backoff:typeof c.backoff=="object"&&(h.backoff=new i.LongBits(c.backoff.low>>>0,c.backoff.high>>>0).toNumber(!0))),h},a.toObject=function(c,h){h||(h={});var l={};if((h.arrays||h.defaults)&&(l.peers=[]),c.topicID!=null&&c.hasOwnProperty("topicID")&&(l.topicID=c.topicID,h.oneofs&&(l._topicID="topicID")),c.peers&&c.peers.length){l.peers=[];for(var d=0;d<c.peers.length;++d)l.peers[d]=n.RPC.PeerInfo.toObject(c.peers[d],h)}return c.backoff!=null&&c.hasOwnProperty("backoff")&&(typeof c.backoff=="number"?l.backoff=h.longs===String?String(c.backoff):c.backoff:l.backoff=h.longs===String?i.Long.prototype.toString.call(c.backoff):h.longs===Number?new i.LongBits(c.backoff.low>>>0,c.backoff.high>>>0).toNumber(!0):c.backoff,h.oneofs&&(l._backoff="backoff")),l},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s.PeerInfo=function(){function a(u){if(u)for(var c=Object.keys(u),h=0;h<c.length;++h)u[c[h]]!=null&&(this[c[h]]=u[c[h]])}a.prototype.peerID=null,a.prototype.signedPeerRecord=null;var f;return Object.defineProperty(a.prototype,"_peerID",{get:i.oneOfGetter(f=["peerID"]),set:i.oneOfSetter(f)}),Object.defineProperty(a.prototype,"_signedPeerRecord",{get:i.oneOfGetter(f=["signedPeerRecord"]),set:i.oneOfSetter(f)}),a.encode=function(c,h){return h||(h=r.create()),c.peerID!=null&&Object.hasOwnProperty.call(c,"peerID")&&h.uint32(10).bytes(c.peerID),c.signedPeerRecord!=null&&Object.hasOwnProperty.call(c,"signedPeerRecord")&&h.uint32(18).bytes(c.signedPeerRecord),h},a.decode=function(c,h){c instanceof e||(c=e.create(c));for(var l=h===void 0?c.len:c.pos+h,d=new n.RPC.PeerInfo;c.pos<l;){var p=c.uint32();switch(p>>>3){case 1:d.peerID=c.bytes();break;case 2:d.signedPeerRecord=c.bytes();break;default:c.skipType(p&7);break}}return d},a.fromObject=function(c){if(c instanceof n.RPC.PeerInfo)return c;var h=new n.RPC.PeerInfo;return c.peerID!=null&&(typeof c.peerID=="string"?i.base64.decode(c.peerID,h.peerID=i.newBuffer(i.base64.length(c.peerID)),0):c.peerID.length&&(h.peerID=c.peerID)),c.signedPeerRecord!=null&&(typeof c.signedPeerRecord=="string"?i.base64.decode(c.signedPeerRecord,h.signedPeerRecord=i.newBuffer(i.base64.length(c.signedPeerRecord)),0):c.signedPeerRecord.length&&(h.signedPeerRecord=c.signedPeerRecord)),h},a.toObject=function(c,h){h||(h={});var l={};return c.peerID!=null&&c.hasOwnProperty("peerID")&&(l.peerID=h.bytes===String?i.base64.encode(c.peerID,0,c.peerID.length):h.bytes===Array?Array.prototype.slice.call(c.peerID):c.peerID,h.oneofs&&(l._peerID="peerID")),c.signedPeerRecord!=null&&c.hasOwnProperty("signedPeerRecord")&&(l.signedPeerRecord=h.bytes===String?i.base64.encode(c.signedPeerRecord,0,c.signedPeerRecord.length):h.bytes===Array?Array.prototype.slice.call(c.signedPeerRecord):c.signedPeerRecord,h.oneofs&&(l._signedPeerRecord="signedPeerRecord")),l},a.prototype.toJSON=function(){return this.constructor.toObject(this,t.util.toJSONOptions)},a}(),s}(),n})});var sc=x(Ni=>{"use strict";Object.defineProperty(Ni,"__esModule",{value:!0});Ni.ERR_INVALID_PEER_SCORE_THRESHOLDS=Ni.ERR_INVALID_PEER_SCORE_PARAMS=void 0;Ni.ERR_INVALID_PEER_SCORE_PARAMS="ERR_INVALID_PEER_SCORE_PARAMS";Ni.ERR_INVALID_PEER_SCORE_THRESHOLDS="ERR_INVALID_PEER_SCORE_THRESHOLDS"});var oc=x(Ke=>{"use strict";Object.defineProperty(Ke,"__esModule",{value:!0});Ke.validateTopicScoreParams=Ke.validatePeerScoreParams=Ke.createTopicScoreParams=Ke.createPeerScoreParams=Ke.defaultTopicScoreParams=Ke.defaultPeerScoreParams=void 0;var ae=sc(),ce=We();Ke.defaultPeerScoreParams={topics:{},topicScoreCap:10,appSpecificScore:()=>0,appSpecificWeight:10,IPColocationFactorWeight:-5,IPColocationFactorThreshold:10,IPColocationFactorWhitelist:new Set,behaviourPenaltyWeight:-10,behaviourPenaltyDecay:.2,decayInterval:1e3,decayToZero:.1,retainScore:3600*1e3};Ke.defaultTopicScoreParams={topicWeight:.5,timeInMeshWeight:1,timeInMeshQuantum:1,timeInMeshCap:3600,firstMessageDeliveriesWeight:1,firstMessageDeliveriesDecay:.5,firstMessageDeliveriesCap:2e3,meshMessageDeliveriesWeight:-1,meshMessageDeliveriesDecay:.5,meshMessageDeliveriesCap:100,meshMessageDeliveriesThreshold:20,meshMessageDeliveriesWindow:10,meshMessageDeliveriesActivation:5e3,meshFailurePenaltyWeight:-1,meshFailurePenaltyDecay:.5,invalidMessageDeliveriesWeight:-1,invalidMessageDeliveriesDecay:.3};function vE(t={}){return{...Ke.defaultPeerScoreParams,...t,topics:t.topics?Object.entries(t.topics).reduce((e,[r,i])=>(e[r]=jd(i),e),{}):{}}}Ke.createPeerScoreParams=vE;function jd(t={}){return{...Ke.defaultTopicScoreParams,...t}}Ke.createTopicScoreParams=jd;function mE(t){for(let[e,r]of Object.entries(t.topics))try{Wd(r)}catch(i){throw ce(new Error(`invalid score parameters for topic ${e}: ${i.message}`),ae.ERR_INVALID_PEER_SCORE_PARAMS)}if(t.topicScoreCap<0)throw ce(new Error("invalid topic score cap; must be positive (or 0 for no cap)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.appSpecificScore===null||t.appSpecificScore===void 0)throw ce(new Error("missing application specific score function"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.IPColocationFactorWeight>0)throw ce(new Error("invalid IPColocationFactorWeight; must be negative (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.IPColocationFactorWeight!==0&&t.IPColocationFactorThreshold<1)throw ce(new Error("invalid IPColocationFactorThreshold; must be at least 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.behaviourPenaltyWeight>0)throw ce(new Error("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.behaviourPenaltyWeight!==0&&(t.behaviourPenaltyDecay<=0||t.behaviourPenaltyDecay>=1))throw ce(new Error("invalid BehaviourPenaltyDecay; must be between 0 and 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.decayInterval<1e3)throw ce(new Error("invalid DecayInterval; must be at least 1s"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.decayToZero<=0||t.decayToZero>=1)throw ce(new Error("invalid DecayToZero; must be between 0 and 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS)}Ke.validatePeerScoreParams=mE;function Wd(t){if(t.topicWeight<0)throw ce(new Error("invalid topic weight; must be >= 0"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshQuantum===0)throw ce(new Error("invalid TimeInMeshQuantum; must be non zero"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight<0)throw ce(new Error("invalid TimeInMeshWeight; must be positive (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight!==0&&t.timeInMeshQuantum<=0)throw ce(new Error("invalid TimeInMeshQuantum; must be positive"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight!==0&&t.timeInMeshCap<=0)throw ce(new Error("invalid TimeInMeshCap; must be positive"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight<0)throw ce(new Error("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight!==0&&(t.firstMessageDeliveriesDecay<=0||t.firstMessageDeliveriesDecay>=1))throw ce(new Error("invalid FirstMessageDeliveriesDecay; must be between 0 and 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight!==0&&t.firstMessageDeliveriesCap<=0)throw ce(new Error("invalid FirstMessageDeliveriesCap; must be positive"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight>0)throw ce(new Error("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&(t.meshMessageDeliveriesDecay<=0||t.meshMessageDeliveriesDecay>=1))throw ce(new Error("invalid MeshMessageDeliveriesDecay; must be between 0 and 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesCap<=0)throw ce(new Error("invalid MeshMessageDeliveriesCap; must be positive"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesThreshold<=0)throw ce(new Error("invalid MeshMessageDeliveriesThreshold; must be positive"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWindow<0)throw ce(new Error("invalid MeshMessageDeliveriesWindow; must be non-negative"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesActivation<1e3)throw ce(new Error("invalid MeshMessageDeliveriesActivation; must be at least 1s"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshFailurePenaltyWeight>0)throw ce(new Error("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshFailurePenaltyWeight!==0&&(t.meshFailurePenaltyDecay<=0||t.meshFailurePenaltyDecay>=1))throw ce(new Error("invalid MeshFailurePenaltyDecay; must be between 0 and 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.invalidMessageDeliveriesWeight>0)throw ce(new Error("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)"),ae.ERR_INVALID_PEER_SCORE_PARAMS);if(t.invalidMessageDeliveriesDecay<=0||t.invalidMessageDeliveriesDecay>=1)throw ce(new Error("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1"),ae.ERR_INVALID_PEER_SCORE_PARAMS)}Ke.validateTopicScoreParams=Wd});var Yd=x(er=>{"use strict";Object.defineProperty(er,"__esModule",{value:!0});er.validatePeerScoreThresholds=er.createPeerScoreThresholds=er.defaultPeerScoreThresholds=void 0;var An=sc(),Cn=We();er.defaultPeerScoreThresholds={gossipThreshold:-10,publishThreshold:-50,graylistThreshold:-80,acceptPXThreshold:10,opportunisticGraftThreshold:20};function xE(t={}){return{...er.defaultPeerScoreThresholds,...t}}er.createPeerScoreThresholds=xE;function EE(t){if(t.gossipThreshold>0)throw Cn(new Error("invalid gossip threshold; it must be <= 0"),An.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.publishThreshold>0||t.publishThreshold>t.gossipThreshold)throw Cn(new Error("invalid publish threshold; it must be <= 0 and <= gossip threshold"),An.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.graylistThreshold>0||t.graylistThreshold>t.publishThreshold)throw Cn(new Error("invalid graylist threshold; it must be <= 0 and <= publish threshold"),An.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.acceptPXThreshold<0)throw Cn(new Error("invalid accept PX threshold; it must be >= 0"),An.ERR_INVALID_PEER_SCORE_THRESHOLDS);if(t.opportunisticGraftThreshold<0)throw Cn(new Error("invalid opportunistic grafting threshold; it must be >= 0"),An.ERR_INVALID_PEER_SCORE_THRESHOLDS)}er.validatePeerScoreThresholds=EE});var $d=x(Ir=>{"use strict";Object.defineProperty(Ir,"__esModule",{value:!0});Ir.ensureTopicStats=Ir.createTopicStats=Ir.createPeerStats=void 0;function wE(t={}){return{connected:!1,expire:0,ips:[],behaviourPenalty:0,...t,topics:t.topics?Object.entries(t.topics).reduce((e,[r,i])=>(e[r]=ac(i),e),{}):{}}}Ir.createPeerStats=wE;function ac(t={}){return{inMesh:!1,graftTime:0,meshTime:0,firstMessageDeliveries:0,meshMessageDeliveries:0,meshMessageDeliveriesActive:!1,meshFailurePenalty:0,invalidMessageDeliveries:0,...t}}Ir.createTopicStats=ac;function _E(t,e,r){let i=e.topics[t];if(i!==void 0)return i;if(r.topics[t]!==void 0)return e.topics[t]=i=ac(),i}Ir.ensureTopicStats=_E});var Zd=x(Ys=>{"use strict";Object.defineProperty(Ys,"__esModule",{value:!0});Ys.computeScore=void 0;function SE(t,e,r,i){let n=0;return Object.entries(e.topics).forEach(([a,f])=>{let u=r.topics[a];if(u===void 0)return;let c=0;if(f.inMesh){let p=f.meshTime/u.timeInMeshQuantum;p>u.timeInMeshCap&&(p=u.timeInMeshCap),c+=p*u.timeInMeshWeight}if(c+=f.firstMessageDeliveries*u.firstMessageDeliveriesWeight,f.meshMessageDeliveriesActive&&f.meshMessageDeliveries<u.meshMessageDeliveriesThreshold){let p=u.meshMessageDeliveriesThreshold-f.meshMessageDeliveries;c+=p*p*u.meshMessageDeliveriesWeight}c+=f.meshFailurePenalty*u.meshFailurePenaltyWeight,c+=f.invalidMessageDeliveries*f.invalidMessageDeliveries*u.invalidMessageDeliveriesWeight,n+=c*u.topicWeight}),r.topicScoreCap>0&&n>r.topicScoreCap&&(n=r.topicScoreCap),n+=r.appSpecificScore(t)*r.appSpecificWeight,e.ips.forEach(a=>{if(r.IPColocationFactorWhitelist.has(a))return;let f=i.get(a),u=f?f.size:0;if(u>r.IPColocationFactorThreshold){let c=u-r.IPColocationFactorThreshold;n+=c*c*r.IPColocationFactorWeight}}),n+=e.behaviourPenalty*e.behaviourPenalty*r.behaviourPenaltyWeight,n}Ys.computeScore=SE});var Xd=x((uI,Qd)=>{"use strict";function Ee(t,e){var e=e||{};this._head=0,this._tail=0,this._capacity=e.capacity,this._capacityMask=3,this._list=new Array(4),Array.isArray(t)&&this._fromArray(t)}Ee.prototype.peekAt=function(e){var r=e;if(r===(r|0)){var i=this.size();if(!(r>=i||r<-i))return r<0&&(r+=i),r=this._head+r&this._capacityMask,this._list[r]}};Ee.prototype.get=function(e){return this.peekAt(e)};Ee.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]};Ee.prototype.peekFront=function(){return this.peek()};Ee.prototype.peekBack=function(){return this.peekAt(-1)};Object.defineProperty(Ee.prototype,"length",{get:function(){return this.size()}});Ee.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Ee.prototype.unshift=function(e){if(e===void 0)return this.size();var r=this._list.length;return this._head=this._head-1+r&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Ee.prototype.shift=function(){var e=this._head;if(e!==this._tail){var r=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),r}};Ee.prototype.push=function(e){if(e===void 0)return this.size();var r=this._tail;return this._list[r]=e,this._tail=r+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Ee.prototype.pop=function(){var e=this._tail;if(e!==this._head){var r=this._list.length;this._tail=e-1+r&this._capacityMask;var i=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=r>>>2&&this._shrinkArray(),i}};Ee.prototype.removeOne=function(e){var r=e;if(r===(r|0)&&this._head!==this._tail){var i=this.size(),n=this._list.length;if(!(r>=i||r<-i)){r<0&&(r+=i),r=this._head+r&this._capacityMask;var s=this._list[r],o;if(e<i/2){for(o=e;o>0;o--)this._list[r]=this._list[r=r-1+n&this._capacityMask];this._list[r]=void 0,this._head=this._head+1+n&this._capacityMask}else{for(o=i-1-e;o>0;o--)this._list[r]=this._list[r=r+1+n&this._capacityMask];this._list[r]=void 0,this._tail=this._tail-1+n&this._capacityMask}return s}}};Ee.prototype.remove=function(e,r){var i=e,n,s=r;if(i===(i|0)&&this._head!==this._tail){var o=this.size(),a=this._list.length;if(!(i>=o||i<-o||r<1)){if(i<0&&(i+=o),r===1||!r)return n=new Array(1),n[0]=this.removeOne(i),n;if(i===0&&i+r>=o)return n=this.toArray(),this.clear(),n;i+r>o&&(r=o-i);var f;for(n=new Array(r),f=0;f<r;f++)n[f]=this._list[this._head+i+f&this._capacityMask];if(i=this._head+i&this._capacityMask,e+r===o){for(this._tail=this._tail-r+a&this._capacityMask,f=r;f>0;f--)this._list[i=i+1+a&this._capacityMask]=void 0;return n}if(e===0){for(this._head=this._head+r+a&this._capacityMask,f=r-1;f>0;f--)this._list[i=i+1+a&this._capacityMask]=void 0;return n}if(i<o/2){for(this._head=this._head+e+r+a&this._capacityMask,f=e;f>0;f--)this.unshift(this._list[i=i-1+a&this._capacityMask]);for(i=this._head-1+a&this._capacityMask;s>0;)this._list[i=i-1+a&this._capacityMask]=void 0,s--;e<0&&(this._tail=i)}else{for(this._tail=i,i=i+r+a&this._capacityMask,f=o-(r+e);f>0;f--)this.push(this._list[i++]);for(i=this._tail;s>0;)this._list[i=i+1+a&this._capacityMask]=void 0,s--}return this._head<2&&this._tail>1e4&&this._tail<=a>>>2&&this._shrinkArray(),n}}};Ee.prototype.splice=function(e,r){var i=e;if(i===(i|0)){var n=this.size();if(i<0&&(i+=n),!(i>n))if(arguments.length>2){var s,o,a,f=arguments.length,u=this._list.length,c=2;if(!n||i<n/2){for(o=new Array(i),s=0;s<i;s++)o[s]=this._list[this._head+s&this._capacityMask];for(r===0?(a=[],i>0&&(this._head=this._head+i+u&this._capacityMask)):(a=this.remove(i,r),this._head=this._head+i+u&this._capacityMask);f>c;)this.unshift(arguments[--f]);for(s=i;s>0;s--)this.unshift(o[s-1])}else{o=new Array(n-(i+r));var h=o.length;for(s=0;s<h;s++)o[s]=this._list[this._head+i+r+s&this._capacityMask];for(r===0?(a=[],i!=n&&(this._tail=this._head+i+u&this._capacityMask)):(a=this.remove(i,r),this._tail=this._tail-h+u&this._capacityMask);c<f;)this.push(arguments[c++]);for(s=0;s<h;s++)this.push(o[s])}return a}else return this.remove(i,r)}};Ee.prototype.clear=function(){this._head=0,this._tail=0};Ee.prototype.isEmpty=function(){return this._head===this._tail};Ee.prototype.toArray=function(){return this._copyArray(!1)};Ee.prototype._fromArray=function(e){for(var r=0;r<e.length;r++)this.push(e[r])};Ee.prototype._copyArray=function(e){var r=[],i=this._list,n=i.length,s;if(e||this._head>this._tail){for(s=this._head;s<n;s++)r.push(i[s]);for(s=0;s<this._tail;s++)r.push(i[s])}else for(s=this._head;s<this._tail;s++)r.push(i[s]);return r};Ee.prototype._growArray=function(){this._head&&(this._list=this._copyArray(!0),this._head=0),this._tail=this._list.length,this._list.length<<=1,this._capacityMask=this._capacityMask<<1|1};Ee.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1};Qd.exports=Ee});var ty=x(tr=>{"use strict";var IE=tr&&tr.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(tr,"__esModule",{value:!0});tr.MessageDeliveries=tr.DeliveryRecordStatus=void 0;var AE=Zr(),CE=IE(Xd()),Jd;(function(t){t[t.unknown=0]="unknown",t[t.valid=1]="valid",t[t.invalid=2]="invalid",t[t.ignored=3]="ignored"})(Jd=tr.DeliveryRecordStatus||(tr.DeliveryRecordStatus={}));var ey=class{constructor(){this.records=new Map,this.queue=new CE.default}ensureRecord(e){let r=this.records.get(e);if(r)return r;r={status:Jd.unknown,firstSeen:Date.now(),validated:0,peers:new Set},this.records.set(e,r);let i={msgId:e,expire:Date.now()+AE.TimeCacheDuration};return this.queue.push(i),r}gc(){let e=Date.now(),r=this.queue.peekFront();for(;r&&r.expire<e;)this.records.delete(r.msgId),this.queue.shift(),r=this.queue.peekFront()}clear(){this.records.clear(),this.queue.clear()}};tr.MessageDeliveries=ey});var iy=x(Mi=>{"use strict";var RE=Mi&&Mi.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(Mi,"__esModule",{value:!0});Mi.PeerScore=void 0;var BE=oc(),ki=$d(),TE=Zd(),xt=ty(),DE=Zr(),PE=RE(Pi()),OE=Ui(),NE=Fn(),{ERR_INVALID_SIGNATURE:kE,ERR_MISSING_SIGNATURE:LE}=NE.codes,Li=OE("libp2p:gossipsub:score"),ry=class{constructor(e,r){(0,BE.validatePeerScoreParams)(e),this.params=e,this._connectionManager=r,this.peerStats=new Map,this.peerIPs=new Map,this.scoreCache=new Map,this.deliveryRecords=new xt.MessageDeliveries}start(){if(this._backgroundInterval){Li("Peer score already running");return}this._backgroundInterval=setInterval(()=>this.background(),this.params.decayInterval),Li("started")}stop(){if(!this._backgroundInterval){Li("Peer score already stopped");return}clearInterval(this._backgroundInterval),delete this._backgroundInterval,this.peerIPs.clear(),this.peerStats.clear(),this.deliveryRecords.clear(),Li("stopped")}background(){this._refreshScores(),this._updateIPs(),this.deliveryRecords.gc()}_refreshScores(){let e=Date.now(),r=this.params.decayToZero;this.peerStats.forEach((i,n)=>{if(!i.connected){e>i.expire&&(this._removeIPs(n,i.ips),this.peerStats.delete(n));return}Object.entries(i.topics).forEach(([s,o])=>{let a=this.params.topics[s];a!==void 0&&(o.firstMessageDeliveries*=a.firstMessageDeliveriesDecay,o.firstMessageDeliveries<r&&(o.firstMessageDeliveries=0),o.meshMessageDeliveries*=a.meshMessageDeliveriesDecay,o.meshMessageDeliveries<r&&(o.meshMessageDeliveries=0),o.meshFailurePenalty*=a.meshFailurePenaltyDecay,o.meshFailurePenalty<r&&(o.meshFailurePenalty=0),o.invalidMessageDeliveries*=a.invalidMessageDeliveriesDecay,o.invalidMessageDeliveries<r&&(o.invalidMessageDeliveries=0),o.inMesh&&(o.meshTime=e-o.graftTime,o.meshTime>a.meshMessageDeliveriesActivation&&(o.meshMessageDeliveriesActive=!0)))}),i.behaviourPenalty*=this.params.behaviourPenaltyDecay,i.behaviourPenalty<r&&(i.behaviourPenalty=0),this.scoreCache.set(n,{score:null,cacheUntil:0})})}score(e){let r=this.peerStats.get(e);if(!r)return 0;let i=Date.now(),n=this.scoreCache.get(e);n===void 0&&(n={score:null,cacheUntil:0},this.scoreCache.set(e,n));let{score:s,cacheUntil:o}=n;return o>i&&s!==null?s:(n.score=(0,TE.computeScore)(e,r,this.params,this.peerIPs),n.cacheUntil=i+this.params.decayInterval,n.score)}addPenalty(e,r){let i=this.peerStats.get(e);!i||(i.behaviourPenalty+=r,this.scoreCache.set(e,{score:null,cacheUntil:0}))}addPeer(e){let r=(0,ki.createPeerStats)({connected:!0});this.peerStats.set(e,r);let i=this._getIPs(e);this._setIPs(e,i,r.ips),r.ips=i}removePeer(e){let r=this.peerStats.get(e);if(!!r){if(this.score(e)>0){this._removeIPs(e,r.ips),this.peerStats.delete(e);return}this.scoreCache.delete(e),Object.entries(r.topics).forEach(([i,n])=>{n.firstMessageDeliveries=0;let s=this.params.topics[i].meshMessageDeliveriesThreshold;if(n.inMesh&&n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<s){let o=s-n.meshMessageDeliveries;n.meshFailurePenalty+=o*o}n.inMesh=!1,n.meshMessageDeliveriesActive=!1}),r.connected=!1,r.expire=Date.now()+this.params.retainScore}}graft(e,r){let i=this.peerStats.get(e);if(!i)return;let n=(0,ki.ensureTopicStats)(r,i,this.params);!n||(n.inMesh=!0,n.graftTime=Date.now(),n.meshTime=0,n.meshMessageDeliveriesActive=!1,this.scoreCache.set(e,{score:null,cacheUntil:0}))}prune(e,r){let i=this.peerStats.get(e);if(!i)return;let n=(0,ki.ensureTopicStats)(r,i,this.params);if(!n)return;let s=this.params.topics[r].meshMessageDeliveriesThreshold;if(n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<s){let o=s-n.meshMessageDeliveries;n.meshFailurePenalty+=o*o}n.inMesh=!1,n.meshMessageDeliveriesActive=!1,this.scoreCache.set(e,{score:null,cacheUntil:0})}async validateMessage(e){this.deliveryRecords.ensureRecord(e)}async deliverMessage(e,r){let i=e.receivedFrom;this._markFirstMessageDelivery(i,e);let n=this.deliveryRecords.ensureRecord(r),s=Date.now();if(n.status!==xt.DeliveryRecordStatus.unknown){Li("unexpected delivery: message from %s was first seen %s ago and has delivery status %d",i,s-n.firstSeen,xt.DeliveryRecordStatus[n.status]);return}n.status=xt.DeliveryRecordStatus.valid,n.validated=s,n.peers.forEach(o=>{o!==i&&this._markDuplicateMessageDelivery(o,e)})}async rejectMessage(e,r,i){let n=e.receivedFrom;switch(i){case LE:case kE:this._markInvalidMessageDelivery(n,e);return}let s=this.deliveryRecords.ensureRecord(r);if(s.status!==xt.DeliveryRecordStatus.unknown){Li("unexpected rejection: message from %s was first seen %s ago and has delivery status %d",n,Date.now()-s.firstSeen,xt.DeliveryRecordStatus[s.status]);return}switch(i){case DE.ERR_TOPIC_VALIDATOR_IGNORE:s.status=xt.DeliveryRecordStatus.ignored;return}s.status=xt.DeliveryRecordStatus.invalid,this._markInvalidMessageDelivery(n,e),s.peers.forEach(o=>{this._markInvalidMessageDelivery(o,e)})}async duplicateMessage(e,r){let i=e.receivedFrom,n=this.deliveryRecords.ensureRecord(r);if(!n.peers.has(i))switch(n.status){case xt.DeliveryRecordStatus.unknown:n.peers.add(i);break;case xt.DeliveryRecordStatus.valid:n.peers.add(i),this._markDuplicateMessageDelivery(i,e,n.validated);break;case xt.DeliveryRecordStatus.invalid:this._markInvalidMessageDelivery(i,e);break}}_markInvalidMessageDelivery(e,r){let i=this.peerStats.get(e);!i||(r.topicIDs.forEach(n=>{let s=(0,ki.ensureTopicStats)(n,i,this.params);!s||(s.invalidMessageDeliveries+=1)}),this.scoreCache.set(e,{score:null,cacheUntil:0}))}_markFirstMessageDelivery(e,r){let i=this.peerStats.get(e);!i||(r.topicIDs.forEach(n=>{let s=(0,ki.ensureTopicStats)(n,i,this.params);if(!s)return;let o=this.params.topics[n].firstMessageDeliveriesCap;s.firstMessageDeliveries+=1,s.firstMessageDeliveries>o&&(s.firstMessageDeliveries=o),!!s.inMesh&&(o=this.params.topics[n].meshMessageDeliveriesCap,s.meshMessageDeliveries+=1,s.meshMessageDeliveries>o&&(s.meshMessageDeliveries=o))}),this.scoreCache.set(e,{score:null,cacheUntil:0}))}_markDuplicateMessageDelivery(e,r,i=0){let n=this.peerStats.get(e);if(!n)return;let s=i?Date.now():0;r.topicIDs.forEach(o=>{let a=(0,ki.ensureTopicStats)(o,n,this.params);if(!a||!a.inMesh)return;let f=this.params.topics[o];if(i&&s>i+f.meshMessageDeliveriesWindow)return;let u=f.meshMessageDeliveriesCap;a.meshMessageDeliveries+=1,a.meshMessageDeliveries>u&&(a.meshMessageDeliveries=u)}),this.scoreCache.set(e,{score:null,cacheUntil:0})}_getIPs(e){return this._connectionManager.getAll(PE.default.createFromB58String(e)).map(r=>r.remoteAddr.toOptions().host)}_setIPs(e,r,i){e:for(let n of r){for(let o of i)if(n===o)continue e;let s=this.peerIPs.get(n);s||(s=new Set,this.peerIPs.set(n,s)),s.add(e)}e:for(let n of i){for(let o of r)if(n===o)continue e;let s=this.peerIPs.get(n);!s||(s.delete(e),s.size||this.peerIPs.delete(n))}this.scoreCache.set(e,{score:null,cacheUntil:0})}_removeIPs(e,r){r.forEach(i=>{let n=this.peerIPs.get(i);!n||(n.delete(e),n.size||this.peerIPs.delete(i))}),this.scoreCache.set(e,{score:null,cacheUntil:0})}_updateIPs(){this.peerStats.forEach((e,r)=>{let i=this._getIPs(r);this._setIPs(r,i,e.ips),e.ips=i,this.scoreCache.set(r,{score:null,cacheUntil:0})})}};Mi.PeerScore=ry});var ny=x(rr=>{"use strict";var ME=rr&&rr.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r);var n=Object.getOwnPropertyDescriptor(e,r);(!n||("get"in n?!e.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,i,n)}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),cc=rr&&rr.__exportStar||function(t,e){for(var r in t)r!=="default"&&!Object.prototype.hasOwnProperty.call(e,r)&&ME(e,t,r)};Object.defineProperty(rr,"__esModule",{value:!0});cc(oc(),rr);cc(Yd(),rr);cc(iy(),rr)});var oy=x($s=>{"use strict";Object.defineProperty($s,"__esModule",{value:!0});$s.IWantTracer=void 0;var FE=Zr(),UE=js(),KE=Fn(),{ERR_INVALID_SIGNATURE:qE,ERR_MISSING_SIGNATURE:GE}=KE.codes,sy=class{constructor(){this.promises=new Map}addPromise(e,r){let i=Math.floor(Math.random()*r.length),n=r[i],s=(0,UE.messageIdToString)(n),o=this.promises.get(s);o||(o=new Map,this.promises.set(s,o)),o.has(e)||o.set(e,Date.now()+FE.GossipsubIWantFollowupTime)}getBrokenPromises(){let e=Date.now(),r=new Map;return this.promises.forEach((i,n)=>{i.forEach((s,o)=>{s<e&&(r.set(o,(r.get(o)??0)+1),i.delete(o))}),i.size||this.promises.delete(n)}),r}async deliverMessage(e){this.promises.delete(e)}async rejectMessage(e,r){switch(r){case qE:case GE:return}this.promises.delete(e)}clear(){this.promises.clear()}};$s.IWantTracer=sy});var cy=x(Zs=>{"use strict";Object.defineProperty(Zs,"__esModule",{value:!0});Zs.SimpleTimeCache=void 0;var ay=class{constructor(e){this.entries=new Map,this.lastPruneTime=0,this.validityMs=e.validityMs}put(e,r){this.entries.set(e,{value:r,validUntilMs:Date.now()+this.validityMs}),this.prune()}prune(){let e=Date.now();if(!(e-this.lastPruneTime<200)){this.lastPruneTime=e;for(let[r,i]of this.entries.entries())if(i.validUntilMs<e)this.entries.delete(r);else break}}has(e){return this.entries.has(e)}get(e){let r=this.entries.get(e);return r&&r.validUntilMs>=Date.now()?r.value:void 0}clear(){this.entries=new Map,this.lastPruneTime=0}};Zs.SimpleTimeCache=ay});var uy=x(uc=>{"use strict";uc.messages={NOT_STARTED_YET:"The libp2p node is not started yet",DHT_DISABLED:"DHT is not available",CONN_ENCRYPTION_REQUIRED:"At least one connection encryption module is required",NOT_FOUND:"Not found"};uc.codes={DHT_DISABLED:"ERR_DHT_DISABLED",PUBSUB_NOT_STARTED:"ERR_PUBSUB_NOT_STARTED",DHT_NOT_STARTED:"ERR_DHT_NOT_STARTED",CONN_ENCRYPTION_REQUIRED:"ERR_CONN_ENCRYPTION_REQUIRED",ERR_PEER_DIAL_INTERCEPTED:"ERR_PEER_DIAL_INTERCEPTED",ERR_CONNECTION_INTERCEPTED:"ERR_CONNECTION_INTERCEPTED",ERR_INVALID_PROTOCOLS_FOR_STREAM:"ERR_INVALID_PROTOCOLS_FOR_STREAM",ERR_CONNECTION_ENDED:"ERR_CONNECTION_ENDED",ERR_CONNECTION_FAILED:"ERR_CONNECTION_FAILED",ERR_NODE_NOT_STARTED:"ERR_NODE_NOT_STARTED",ERR_ALREADY_ABORTED:"ERR_ALREADY_ABORTED",ERR_TOO_MANY_ADDRESSES:"ERR_TOO_MANY_ADDRESSES",ERR_NO_VALID_ADDRESSES:"ERR_NO_VALID_ADDRESSES",ERR_RELAYED_DIAL:"ERR_RELAYED_DIAL",ERR_DIALED_SELF:"ERR_DIALED_SELF",ERR_DISCOVERED_SELF:"ERR_DISCOVERED_SELF",ERR_DUPLICATE_TRANSPORT:"ERR_DUPLICATE_TRANSPORT",ERR_ENCRYPTION_FAILED:"ERR_ENCRYPTION_FAILED",ERR_HOP_REQUEST_FAILED:"ERR_HOP_REQUEST_FAILED",ERR_INVALID_KEY:"ERR_INVALID_KEY",ERR_INVALID_MESSAGE:"ERR_INVALID_MESSAGE",ERR_INVALID_PARAMETERS:"ERR_INVALID_PARAMETERS",ERR_INVALID_PEER:"ERR_INVALID_PEER",ERR_MUXER_UNAVAILABLE:"ERR_MUXER_UNAVAILABLE",ERR_NOT_FOUND:"ERR_NOT_FOUND",ERR_TIMEOUT:"ERR_TIMEOUT",ERR_TRANSPORT_UNAVAILABLE:"ERR_TRANSPORT_UNAVAILABLE",ERR_TRANSPORT_DIAL_FAILED:"ERR_TRANSPORT_DIAL_FAILED",ERR_UNSUPPORTED_PROTOCOL:"ERR_UNSUPPORTED_PROTOCOL",ERR_INVALID_MULTIADDR:"ERR_INVALID_MULTIADDR",ERR_SIGNATURE_NOT_VALID:"ERR_SIGNATURE_NOT_VALID",ERR_FIND_SELF:"ERR_FIND_SELF",ERR_NO_ROUTERS_AVAILABLE:"ERR_NO_ROUTERS_AVAILABLE",ERR_CONNECTION_NOT_MULTIPLEXED:"ERR_CONNECTION_NOT_MULTIPLEXED",ERR_NO_DIAL_TOKENS:"ERR_NO_DIAL_TOKENS",ERR_KEYCHAIN_REQUIRED:"ERR_KEYCHAIN_REQUIRED",ERR_INVALID_CMS:"ERR_INVALID_CMS",ERR_MISSING_KEYS:"ERR_MISSING_KEYS",ERR_NO_KEY:"ERR_NO_KEY",ERR_INVALID_KEY_NAME:"ERR_INVALID_KEY_NAME",ERR_INVALID_KEY_TYPE:"ERR_INVALID_KEY_TYPE",ERR_KEY_ALREADY_EXISTS:"ERR_KEY_ALREADY_EXISTS",ERR_INVALID_KEY_SIZE:"ERR_INVALID_KEY_SIZE",ERR_KEY_NOT_FOUND:"ERR_KEY_NOT_FOUND",ERR_OLD_KEY_NAME_INVALID:"ERR_OLD_KEY_NAME_INVALID",ERR_NEW_KEY_NAME_INVALID:"ERR_NEW_KEY_NAME_INVALID",ERR_PASSWORD_REQUIRED:"ERR_PASSWORD_REQUIRED",ERR_PEM_REQUIRED:"ERR_PEM_REQUIRED",ERR_CANNOT_READ_KEY:"ERR_CANNOT_READ_KEY",ERR_MISSING_PRIVATE_KEY:"ERR_MISSING_PRIVATE_KEY",ERR_INVALID_OLD_PASS_TYPE:"ERR_INVALID_OLD_PASS_TYPE",ERR_INVALID_NEW_PASS_TYPE:"ERR_INVALID_NEW_PASS_TYPE",ERR_INVALID_PASS_LENGTH:"ERR_INVALID_PASS_LENGTH",ERR_NOT_IMPLEMENTED:"ERR_NOT_IMPLEMENTED",ERR_WRONG_PING_ACK:"ERR_WRONG_PING_ACK"}});var ly=x((gI,hy)=>{"use strict";var Fi=ni(),fy=Fi.Reader,VE=Fi.Writer,ge=Fi.util,Rn=Fi.roots["libp2p-envelope"]||(Fi.roots["libp2p-envelope"]={});Rn.Envelope=function(){function t(e){if(e)for(var r=Object.keys(e),i=0;i<r.length;++i)e[r[i]]!=null&&(this[r[i]]=e[r[i]])}return t.prototype.publicKey=ge.newBuffer([]),t.prototype.payloadType=ge.newBuffer([]),t.prototype.payload=ge.newBuffer([]),t.prototype.signature=ge.newBuffer([]),t.encode=function(r,i){return i||(i=VE.create()),r.publicKey!=null&&Object.hasOwnProperty.call(r,"publicKey")&&i.uint32(10).bytes(r.publicKey),r.payloadType!=null&&Object.hasOwnProperty.call(r,"payloadType")&&i.uint32(18).bytes(r.payloadType),r.payload!=null&&Object.hasOwnProperty.call(r,"payload")&&i.uint32(26).bytes(r.payload),r.signature!=null&&Object.hasOwnProperty.call(r,"signature")&&i.uint32(42).bytes(r.signature),i},t.decode=function(r,i){r instanceof fy||(r=fy.create(r));for(var n=i===void 0?r.len:r.pos+i,s=new Rn.Envelope;r.pos<n;){var o=r.uint32();switch(o>>>3){case 1:s.publicKey=r.bytes();break;case 2:s.payloadType=r.bytes();break;case 3:s.payload=r.bytes();break;case 5:s.signature=r.bytes();break;default:r.skipType(o&7);break}}return s},t.fromObject=function(r){if(r instanceof Rn.Envelope)return r;var i=new Rn.Envelope;return r.publicKey!=null&&(typeof r.publicKey=="string"?ge.base64.decode(r.publicKey,i.publicKey=ge.newBuffer(ge.base64.length(r.publicKey)),0):r.publicKey.length&&(i.publicKey=r.publicKey)),r.payloadType!=null&&(typeof r.payloadType=="string"?ge.base64.decode(r.payloadType,i.payloadType=ge.newBuffer(ge.base64.length(r.payloadType)),0):r.payloadType.length&&(i.payloadType=r.payloadType)),r.payload!=null&&(typeof r.payload=="string"?ge.base64.decode(r.payload,i.payload=ge.newBuffer(ge.base64.length(r.payload)),0):r.payload.length&&(i.payload=r.payload)),r.signature!=null&&(typeof r.signature=="string"?ge.base64.decode(r.signature,i.signature=ge.newBuffer(ge.base64.length(r.signature)),0):r.signature.length&&(i.signature=r.signature)),i},t.toObject=function(r,i){i||(i={});var n={};return i.defaults&&(i.bytes===String?n.publicKey="":(n.publicKey=[],i.bytes!==Array&&(n.publicKey=ge.newBuffer(n.publicKey))),i.bytes===String?n.payloadType="":(n.payloadType=[],i.bytes!==Array&&(n.payloadType=ge.newBuffer(n.payloadType))),i.bytes===String?n.payload="":(n.payload=[],i.bytes!==Array&&(n.payload=ge.newBuffer(n.payload))),i.bytes===String?n.signature="":(n.signature=[],i.bytes!==Array&&(n.signature=ge.newBuffer(n.signature)))),r.publicKey!=null&&r.hasOwnProperty("publicKey")&&(n.publicKey=i.bytes===String?ge.base64.encode(r.publicKey,0,r.publicKey.length):i.bytes===Array?Array.prototype.slice.call(r.publicKey):r.publicKey),r.payloadType!=null&&r.hasOwnProperty("payloadType")&&(n.payloadType=i.bytes===String?ge.base64.encode(r.payloadType,0,r.payloadType.length):i.bytes===Array?Array.prototype.slice.call(r.payloadType):r.payloadType),r.payload!=null&&r.hasOwnProperty("payload")&&(n.payload=i.bytes===String?ge.base64.encode(r.payload,0,r.payload.length):i.bytes===Array?Array.prototype.slice.call(r.payload):r.payload),r.signature!=null&&r.hasOwnProperty("signature")&&(n.signature=i.bytes===String?ge.base64.encode(r.signature,0,r.signature.length):i.bytes===Array?Array.prototype.slice.call(r.signature):r.signature),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,Fi.util.toJSONOptions)},t}();hy.exports=Rn});var gy=x((bI,yy)=>{"use strict";var HE=We(),{concat:zE}=(Vr(),Gr),{fromString:jE}=(st(),nt),WE=Za(),YE=Pi(),fc=jn(),{equals:Qs}=(zr(),Hr),{codes:$E}=uy(),{Envelope:py}=ly(),Ar=class{constructor({peerId:e,payloadType:r,payload:i,signature:n}){this.peerId=e,this.payloadType=r,this.payload=i,this.signature=n,this._marshal=void 0}marshal(){if(this._marshal)return this._marshal;let e=WE.marshalPublicKey(this.peerId.pubKey);return this._marshal=py.encode({publicKey:e,payloadType:this.payloadType,payload:this.payload,signature:this.signature}).finish(),this._marshal}equals(e){return Qs(this.peerId.pubKey.bytes,e.peerId.pubKey.bytes)&&Qs(this.payloadType,e.payloadType)&&Qs(this.payload,e.payload)&&Qs(this.signature,e.signature)}validate(e){let r=dy(e,this.payloadType,this.payload);return this.peerId.pubKey.verify(r,this.signature)}},dy=(t,e,r)=>{let i=jE(t),n=fc.encode(i.byteLength),s=fc.encode(e.length),o=fc.encode(r.length);return zE([new Uint8Array(n),i,new Uint8Array(s),e,new Uint8Array(o),r])};Ar.createFromProtobuf=async t=>{let e=py.decode(t),r=await YE.createFromPubKey(e.publicKey);return new Ar({peerId:r,payloadType:e.payloadType,payload:e.payload,signature:e.signature})};Ar.seal=async(t,e)=>{let r=t.domain,i=t.codec,n=t.marshal(),s=dy(r,i,n),o=await e.privKey.sign(s);return new Ar({peerId:e,payloadType:i,payload:n,signature:o})};Ar.openAndCertify=async(t,e)=>{let r=await Ar.createFromProtobuf(t);if(!await r.validate(e))throw HE(new Error("envelope signature is not valid for the given domain"),$E.ERR_SIGNATURE_NOT_VALID);return r};yy.exports=Ar});var tw=x(Et=>{"use strict";var ZE=Et&&Et.__createBinding||(Object.create?function(t,e,r,i){i===void 0&&(i=r);var n=Object.getOwnPropertyDescriptor(e,r);(!n||("get"in n?!e.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,i,n)}:function(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}),QE=Et&&Et.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),by=Et&&Et.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)r!=="default"&&Object.prototype.hasOwnProperty.call(t,r)&&ZE(e,t,r);return QE(e,t),e};Object.defineProperty(Et,"__esModule",{value:!0});Et.multicodec=void 0;var hc=by(Ld()),XE=Vd(),lc=zd(),q=by(Zr()),ve=js(),pc=ny(),JE=oy(),vy=cy(),dc=Pi(),ew=gy(),yc=Zr();Et.multicodec=q.GossipsubIDv11;var gc=class extends hc.default{constructor(e,r={}){let i=[q.GossipsubIDv11,q.GossipsubIDv10],n={gossipIncoming:!0,fallbackToFloodsub:!0,floodPublish:!0,doPX:!1,directPeers:[],D:q.GossipsubD,Dlo:q.GossipsubDlo,Dhi:q.GossipsubDhi,Dscore:q.GossipsubDscore,Dout:q.GossipsubDout,Dlazy:q.GossipsubDlazy,heartbeatInterval:q.GossipsubHeartbeatInterval,fanoutTTL:q.GossipsubFanoutTTL,mcacheLength:q.GossipsubHistoryLength,mcacheGossip:q.GossipsubHistoryGossip,seenTTL:q.GossipsubSeenTTL,...r,scoreParams:(0,pc.createPeerScoreParams)(r.scoreParams),scoreThresholds:(0,pc.createPeerScoreThresholds)(r.scoreThresholds)};n.fallbackToFloodsub&&i.push(q.FloodsubID);super({debugName:"libp2p:gossipsub",multicodecs:i,libp2p:e,...n});this.acceptFromWhitelist=new Map,this.mesh=new Map,this.fanout=new Map,this.lastpub=new Map,this.gossip=new Map,this.control=new Map,this.peerhave=new Map,this.iasked=new Map,this.backoff=new Map,this.outbound=new Map,this.heartbeatTicks=0,this.gossipTracer=new JE.IWantTracer,this._options=n,this.direct=new Set(n.directPeers.map(s=>s.id.toB58String())),n.directPeers.forEach(s=>{e.peerStore.addressBook.add(s.id,s.addrs)}),this.seenCache=new vy.SimpleTimeCache({validityMs:n.seenTTL}),this.messageCache=r.messageCache||new XE.MessageCache(n.mcacheGossip,n.mcacheLength),this.getFastMsgIdStr=r.fastMsgIdFn??void 0,this.fastMsgIdCache=r.fastMsgIdFn?new vy.SimpleTimeCache({validityMs:n.seenTTL}):void 0,this._libp2p=e,this.score=new pc.PeerScore(this._options.scoreParams,e.connectionManager)}_decodeRpc(e){return lc.RPC.decode(e)}_encodeRpc(e){return lc.RPC.encode(e).finish()}_addPeer(e,r){let i=super._addPeer(e,r);this.score.addPeer(e.toB58String());let n=!1;for(let s of this._libp2p.connectionManager.getAll(e))if(s.stat.direction==="outbound"&&Array.from(s.registry.values()).some(o=>r===o.protocol)){n=!0;break}return this.outbound.set(i.id.toB58String(),n),i}_removePeer(e){let r=super._removePeer(e),i=e.toB58String();for(let n of this.mesh.values())n.delete(i);for(let n of this.fanout.values())n.delete(i);return this.gossip.delete(i),this.control.delete(i),this.outbound.delete(i),this.score.removePeer(i),this.acceptFromWhitelist.delete(i),r}async _processRpc(e,r,i){return await super._processRpc(e,r,i)?(i.control&&await this._processRpcControlMessage(e,i.control),!0):!1}async _processRpcControlMessage(e,r){if(r===void 0)return;let i=r.ihave?this._handleIHave(e,r.ihave):[],n=r.iwant?this._handleIWant(e,r.iwant):[],s=r.graft?await this._handleGraft(e,r.graft):[];if(r.prune&&this._handlePrune(e,r.prune),!i.length&&!n.length&&!s.length)return;let o=(0,ve.createGossipRpc)(n,{iwant:i,prune:s});this._sendRpc(e,o)}async _processRpcMessage(e){let r;if(this.getFastMsgIdStr&&this.fastMsgIdCache){let i=this.getFastMsgIdStr(e);if(r=this.fastMsgIdCache.get(i),r!==void 0){this.score.duplicateMessage(e,r);return}r=(0,ve.messageIdToString)(await this.getMsgId(e)),this.fastMsgIdCache.put(i,r)}else if(r=(0,ve.messageIdToString)(await this.getMsgId(e)),this.seenCache.has(r)){this.score.duplicateMessage(e,r);return}this.seenCache.put(r),await this.score.validateMessage(r),await super._processRpcMessage(e)}_acceptFrom(e){if(this.direct.has(e))return!0;let r=Date.now(),i=this.acceptFromWhitelist.get(e);if(i&&i.messagesAccepted<yc.ACCEPT_FROM_WHITELIST_MAX_MESSAGES&&i.acceptUntil>=r)return i.messagesAccepted+=1,!0;let n=this.score.score(e);return n>=yc.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE?this.acceptFromWhitelist.set(e,{messagesAccepted:0,acceptUntil:r+yc.ACCEPT_FROM_WHITELIST_DURATION_MS}):this.acceptFromWhitelist.delete(e),n>=this._options.scoreThresholds.graylistThreshold}async validate(e){try{await super.validate(e)}catch(r){let i=await this.getCanonicalMsgIdStr(e);throw this.score.rejectMessage(e,i,r.code),this.gossipTracer.rejectMessage(i,r.code),r}}_handleIHave(e,r){if(!r.length)return[];let i=this.score.score(e);if(i<this._options.scoreThresholds.gossipThreshold)return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]",e,i),[];let n=(this.peerhave.get(e)??0)+1;if(this.peerhave.set(e,n),n>q.GossipsubMaxIHaveMessages)return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring",e,n),[];let s=this.iasked.get(e)??0;if(s>=q.GossipsubMaxIHaveLength)return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring",e,s),[];let o=new Map;if(r.forEach(({topicID:u,messageIDs:c})=>{!u||!c||!this.mesh.has(u)||c.forEach(h=>{let l=(0,ve.messageIdToString)(h);this.seenCache.has(l)||o.set(l,h)})}),!o.size)return[];let a=o.size;a+s>q.GossipsubMaxIHaveLength&&(a=q.GossipsubMaxIHaveLength-s),this.log("IHAVE: Asking for %d out of %d messages from %s",a,o.size,e);let f=Array.from(o.values());return(0,ve.shuffle)(f),f=f.slice(0,a),this.iasked.set(e,s+a),this.gossipTracer.addPromise(e,f),[{messageIDs:f}]}_handleIWant(e,r){if(!r.length)return[];let i=this.score.score(e);if(i<this._options.scoreThresholds.gossipThreshold)return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]",e,i),[];let n=new Map;return r.forEach(({messageIDs:s})=>{s&&s.forEach(o=>{let a=(0,ve.messageIdToString)(o),[f,u]=this.messageCache.getForPeer(a,e);if(!!f){if(u>q.GossipsubGossipRetransmission){this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request",e,o);return}n.set(a,f)}})}),n.size?(this.log("IWANT: Sending %d messages to %s",n.size,e),Array.from(n.values()).map(hc.utils.normalizeOutRpcMessage)):[]}async _handleGraft(e,r){let i=[],n=this.score.score(e),s=this._now(),o=this._options.doPX;return r.forEach(({topicID:a})=>{if(!a)return;let f=this.mesh.get(a);if(!f){o=!1;return}if(f.has(e))return;if(this.direct.has(e)){this.log("GRAFT: ignoring request from direct peer %s",e),i.push(a),o=!1;return}let u=this.backoff.get(a)?.get(e);if(typeof u=="number"&&s<u){this.log("GRAFT: ignoring backed off peer %s",e),this.score.addPenalty(e,1),o=!1;let c=u+q.GossipsubGraftFloodThreshold-q.GossipsubPruneBackoff;s<c&&this.score.addPenalty(e,1),this._addBackoff(e,a),i.push(a);return}if(n<0){this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s",e,n,a),i.push(a),o=!1,this._addBackoff(e,a);return}if(f.size>=this._options.Dhi&&!this.outbound.get(e)){i.push(a),this._addBackoff(e,a);return}this.log("GRAFT: Add mesh link from %s in %s",e,a),this.score.graft(e,a),f.add(e)}),i.length?Promise.all(i.map(a=>this._makePrune(e,a,o))):[]}_handlePrune(e,r){let i=this.score.score(e);r.forEach(({topicID:n,backoff:s,peers:o})=>{if(!n)return;let a=this.mesh.get(n);if(!!a&&(this.log("PRUNE: Remove mesh link to %s in %s",e,n),this.score.prune(e,n),a.delete(e),typeof s=="number"&&s>0?this._doAddBackoff(e,n,s*1e3):this._addBackoff(e,n),o&&o.length)){if(i<this._options.scoreThresholds.acceptPXThreshold){this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]",e,i,n);return}this._pxConnect(o)}})}_addBackoff(e,r){this._doAddBackoff(e,r,q.GossipsubPruneBackoff)}_doAddBackoff(e,r,i){let n=this.backoff.get(r);n||(n=new Map,this.backoff.set(r,n));let s=this._now()+i;(n.get(e)??0)<s&&n.set(e,s)}_applyIwantPenalties(){this.gossipTracer.getBrokenPromises().forEach((e,r)=>{this.log("peer %s didn't follow up in %d IWANT requests; adding penalty",r,e),this.score.addPenalty(r,e)})}_clearBackoff(){if(this.heartbeatTicks%q.GossipsubPruneBackoffTicks!=0)return;let e=this._now();this.backoff.forEach((r,i)=>{r.forEach((n,s)=>{n<e&&r.delete(s)}),r.size===0&&this.backoff.delete(i)})}_directConnect(){if(this.heartbeatTicks%q.GossipsubDirectConnectTicks!=0)return;let e=[];this.direct.forEach(r=>{let i=this.peers.get(r);(!i||!i.isWritable)&&e.push(r)}),e.length&&e.forEach(r=>{this._connect(r)})}async _pxConnect(e){e.length>q.GossipsubPrunePeers&&((0,ve.shuffle)(e),e=e.slice(0,q.GossipsubPrunePeers));let r=[];await Promise.all(e.map(async i=>{if(!i.peerID)return;let s=dc.createFromBytes(i.peerID).toB58String();if(!this.peers.has(s)){if(!i.signedPeerRecord){r.push(s);return}try{let o=await ew.openAndCertify(i.signedPeerRecord,"libp2p-peer-record"),a=o.peerId.toB58String();if(s!==a){this.log("bogus peer record obtained through px: peer ID %s doesn't match expected peer %s",a,s);return}if(!await this._libp2p.peerStore.addressBook.consumePeerRecord(o)){this.log("bogus peer record obtained through px: could not add peer record to address book");return}r.push(s)}catch(o){this.log("bogus peer record obtained through px: invalid signature or not a peer record")}}})),!!r.length&&r.forEach(i=>this._connect(i))}async start(){if(await super.start(),this.score.start(),this._directPeerInitial=setTimeout(()=>{this.direct.forEach(e=>{this._connect(e)})},q.GossipsubDirectConnectInitialDelay),!this._heartbeatTimer){let e=this._heartbeat.bind(this),r=setTimeout(()=>{e(),this._heartbeatTimer.runPeriodically(e,this._options.heartbeatInterval)},q.GossipsubHeartbeatInitialDelay);this._heartbeatTimer={_intervalId:void 0,runPeriodically:(i,n)=>{this._heartbeatTimer._intervalId=setInterval(i,n)},cancel:()=>{clearTimeout(r),clearInterval(this._heartbeatTimer._intervalId)}}}}async stop(){await super.stop(),this._heartbeatTimer&&(this._heartbeatTimer.cancel(),this._heartbeatTimer=null),this.score.stop(),this.mesh=new Map,this.fanout=new Map,this.lastpub=new Map,this.gossip=new Map,this.control=new Map,this.peerhave=new Map,this.iasked=new Map,this.backoff=new Map,this.outbound=new Map,this.gossipTracer.clear(),this.seenCache.clear(),this.fastMsgIdCache&&this.fastMsgIdCache.clear(),clearTimeout(this._directPeerInitial)}_connect(e){this.log("Initiating connection with %s",e),this._libp2p.dialProtocol(dc.createFromB58String(e),this.multicodecs)}subscribe(e){super.subscribe(e),this.join(e)}unsubscribe(e){super.unsubscribe(e),this.leave(e)}join(e){if(!this.started)throw new Error("Gossipsub has not started");this.log("JOIN %s",e);let r=this.fanout.get(e);if(r)r.forEach(i=>{this.score.score(i)<0&&r.delete(i)}),r.size<this._options.D&&this.getGossipPeers(e,this._options.D-r.size,i=>!r.has(i)&&!this.direct.has(i)&&this.score.score(i)>=0).forEach(i=>r.add(i)),this.mesh.set(e,r),this.fanout.delete(e),this.lastpub.delete(e);else{let i=this.getGossipPeers(e,this._options.D,n=>!this.direct.has(n)&&this.score.score(n)>=0);this.mesh.set(e,i)}this.mesh.get(e).forEach(i=>{this.log("JOIN: Add mesh link to %s in %s",i,e),this._sendGraft(i,e)})}leave(e){if(!this.started)throw new Error("Gossipsub has not started");this.log("LEAVE %s",e);let r=this.mesh.get(e);r&&(r.forEach(i=>{this.log("LEAVE: Remove mesh link to %s in %s",i,e),this._sendPrune(i,e)}),this.mesh.delete(e))}async getCanonicalMsgIdStr(e){return this.fastMsgIdCache&&this.getFastMsgIdStr?this.getCachedMsgIdStr(e)??this.fastMsgIdCache.get(this.getFastMsgIdStr(e))??(0,ve.messageIdToString)(await this.getMsgId(e)):(0,ve.messageIdToString)(await this.getMsgId(e))}getCachedMsgIdStr(e){}async _publish(e){let r=await this.getCanonicalMsgIdStr(e);e.receivedFrom!==this.peerId.toB58String()&&(this.score.deliverMessage(e,r),this.gossipTracer.deliverMessage(r)),this.seenCache.put(r),this.messageCache.put(e,r);let i=new Set;e.topicIDs.forEach(s=>{let o=this.topics.get(s);if(!!o)if(this._options.floodPublish&&e.receivedFrom===this.peerId.toB58String())o.forEach(a=>{(this.direct.has(a)||this.score.score(a)>=this._options.scoreThresholds.publishThreshold)&&i.add(a)});else{this.direct.forEach(f=>{i.add(f)}),o.forEach(f=>{let u=this.peers.get(f);!u||u.protocol===q.FloodsubID&&this.score.score(f)>=this._options.scoreThresholds.publishThreshold&&i.add(f)});let a=this.mesh.get(s);if(!a||!a.size){if(a=this.fanout.get(s),!a){let f=this.getGossipPeers(s,this._options.D,u=>this.score.score(u)>=this._options.scoreThresholds.publishThreshold);f.size>0?(a=f,this.fanout.set(s,f)):a=new Set}this.lastpub.set(s,this._now())}a.forEach(f=>{i.add(f)})}});let n=(0,ve.createGossipRpc)([hc.utils.normalizeOutRpcMessage(e)]);i.forEach(s=>{s===e.receivedFrom||s===e.from||this._sendRpc(s,n)})}_sendGraft(e,r){let i=[{topicID:r}],n=(0,ve.createGossipRpc)([],{graft:i});this._sendRpc(e,n)}async _sendPrune(e,r){let i=[await this._makePrune(e,r,this._options.doPX)],n=(0,ve.createGossipRpc)([],{prune:i});this._sendRpc(e,n)}_sendRpc(e,r){let i=this.peers.get(e);if(!i||!i.isWritable)return;let n=this.control.get(e);n&&(this._piggybackControl(e,r,n),this.control.delete(e));let s=this.gossip.get(e);s&&(this._piggybackGossip(e,r,s),this.gossip.delete(e)),i.write(lc.RPC.encode(r).finish())}_piggybackControl(e,r,i){let n=(i.graft||[]).filter(({topicID:o})=>(o&&this.mesh.get(o)||new Set).has(e)),s=(i.prune||[]).filter(({topicID:o})=>!(o&&this.mesh.get(o)||new Set).has(e));!n.length&&!s.length||(r.control?(r.control.graft=r.control.graft&&r.control.graft.concat(n),r.control.prune=r.control.prune&&r.control.prune.concat(s)):r.control={ihave:[],iwant:[],graft:n,prune:s})}_piggybackGossip(e,r,i){r.control||(r.control={ihave:[],iwant:[],graft:[],prune:[]}),r.control.ihave=i}async _sendGraftPrune(e,r,i){let n=this._options.doPX;for(let[s,o]of e){let a=o.map(h=>({topicID:h})),f=[],u=r.get(s);u&&(f=await Promise.all(u.map(h=>this._makePrune(s,h,n&&!i.get(s)))),r.delete(s));let c=(0,ve.createGossipRpc)([],{graft:a,prune:f});this._sendRpc(s,c)}for(let[s,o]of r){let a=await Promise.all(o.map(u=>this._makePrune(s,u,n&&!i.get(s)))),f=(0,ve.createGossipRpc)([],{prune:a});this._sendRpc(s,f)}}_emitGossip(e,r){let i=this.messageCache.getGossipIDs(e);if(!i.length)return;(0,ve.shuffle)(i),i.length>q.GossipsubMaxIHaveLength&&this.log("too many messages for gossip; will truncate IHAVE list (%d messages)",i.length);let n=[],s=this.topics.get(e);if(!s)return;s.forEach(f=>{let u=this.peers.get(f);!u||!r.has(f)&&!this.direct.has(f)&&(0,ve.hasGossipProtocol)(u.protocol)&&this.score.score(f)>=this._options.scoreThresholds.gossipThreshold&&n.push(f)});let o=this._options.Dlazy,a=q.GossipsubGossipFactor*n.length;a>o&&(o=a),o>n.length?o=n.length:(0,ve.shuffle)(n),n.slice(0,o).forEach(f=>{let u=i;i.length>q.GossipsubMaxIHaveLength&&(u=(0,ve.shuffle)(u.slice()).slice(0,q.GossipsubMaxIHaveLength)),this._pushGossip(f,{topicID:e,messageIDs:u})})}_flush(){for(let[e,r]of this.gossip.entries()){this.gossip.delete(e);let i=(0,ve.createGossipRpc)([],{ihave:r});this._sendRpc(e,i)}for(let[e,r]of this.control.entries()){this.control.delete(e);let i=(0,ve.createGossipRpc)([],{graft:r.graft,prune:r.prune});this._sendRpc(e,i)}}_pushGossip(e,r){this.log("Add gossip to %s",e);let i=this.gossip.get(e)||[];this.gossip.set(e,i.concat(r))}_now(){return Date.now()}async _makePrune(e,r,i){if(this.peers.get(e).protocol===q.GossipsubIDv10)return{topicID:r,peers:[]};let n=q.GossipsubPruneBackoff/1e3;if(!i)return{topicID:r,peers:[],backoff:n};let s=this.getGossipPeers(r,q.GossipsubPrunePeers,a=>a!==e&&this.score.score(a)>=0),o=await Promise.all(Array.from(s).map(async a=>{let f=dc.createFromB58String(a);return{peerID:f.toBytes(),signedPeerRecord:await this._libp2p.peerStore.addressBook.getRawEnvelope(f)}}));return{topicID:r,peers:o,backoff:n}}_heartbeat(){let{D:e,Dlo:r,Dhi:i,Dscore:n,Dout:s,fanoutTTL:o}=this._options;this.heartbeatTicks++;let a=new Map,f=d=>{let p=a.get(d);return p===void 0&&(p=this.score.score(d),a.set(d,p)),p},u=new Map,c=new Map,h=new Map;this._clearBackoff(),this.peerhave.clear(),this.iasked.clear(),this._applyIwantPenalties(),this._directConnect(),this.mesh.forEach((d,p)=>{let y=b=>{this.log("HEARTBEAT: Remove mesh link to %s in %s",b,p),this.score.prune(b,p),this._addBackoff(b,p),d.delete(b);let E=c.get(b);E?E.push(p):c.set(b,[p])},v=b=>{this.log("HEARTBEAT: Add mesh link to %s in %s",b,p),this.score.graft(b,p),d.add(b);let E=u.get(b);E?E.push(p):u.set(b,[p])};if(d.forEach(b=>{let E=f(b);E<0&&(this.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s",b,E,p),y(b),h.set(b,!0))}),d.size<r){let b=this.backoff.get(p),E=e-d.size;this.getGossipPeers(p,E,D=>!d.has(D)&&!this.direct.has(D)&&(!b||!b.has(D))&&f(D)>=0).forEach(v)}if(d.size>i){let b=Array.from(d);b.sort((I,D)=>f(D)-f(I)),b=b.slice(0,n).concat((0,ve.shuffle)(b.slice(n)));let E=0;if(b.slice(0,e).forEach(I=>{this.outbound.get(I)&&E++}),E<s){let I=T=>{let R=b[T];for(let F=T;F>0;F--)b[F]=b[F-1];b[0]=R};if(E>0){let T=E;for(let R=1;R<e&&T>0;R++)this.outbound.get(b[R])&&(I(R),T--)}let D=e-E;for(let T=e;T<b.length&&D>0;T++)this.outbound.get(b[T])&&(I(T),D--)}b.slice(e).forEach(y)}if(d.size>=r){let b=0;if(d.forEach(E=>{this.outbound.get(E)&&b++}),b<s){let E=s-b,I=this.backoff.get(p);this.getGossipPeers(p,E,D=>!d.has(D)&&!this.direct.has(D)&&(!I||!I.has(D))&&f(D)>=0).forEach(v)}}if(this.heartbeatTicks%q.GossipsubOpportunisticGraftTicks==0&&d.size>1){let b=Array.from(d).sort((D,T)=>f(D)-f(T)),E=Math.floor(d.size/2),I=f(b[E]);if(I<this._options.scoreThresholds.opportunisticGraftThreshold){let D=this.backoff.get(p);this.getGossipPeers(p,q.GossipsubOpportunisticGraftPeers,R=>d.has(R)&&!this.direct.has(R)&&(!D||!D.has(R))&&f(R)>I).forEach(R=>{this.log("HEARTBEAT: Opportunistically graft peer %s on topic %s",R,p),v(R)})}}this._emitGossip(p,d)});let l=this._now();this.lastpub.forEach((d,p)=>{d+o<l&&(this.fanout.delete(p),this.lastpub.delete(p))}),this.fanout.forEach((d,p)=>{let y=this.topics.get(p);if(d.forEach(v=>{(!y.has(v)||f(v)<this._options.scoreThresholds.publishThreshold)&&d.delete(v)}),d.size<e){let v=e-d.size;this.getGossipPeers(p,v,E=>!d.has(E)&&!this.direct.has(E)&&f(E)>=this._options.scoreThresholds.publishThreshold).forEach(E=>{d.add(E)})}this._emitGossip(p,d)}),this._sendGraftPrune(u,c,h),this._flush(),this.messageCache.shift(),this.emit("gossipsub:heartbeat")}getGossipPeers(e,r,i=()=>!0){let n=this.topics.get(e);if(!n)return new Set;let s=[];return n.forEach(o=>{let a=this.peers.get(o);!a||(0,ve.hasGossipProtocol)(a.protocol)&&i(o)&&s.push(o)}),s=(0,ve.shuffle)(s),r>0&&s.length>r&&(s=s.slice(0,r)),new Set(s)}};Et.default=gc;gc.multicodec=q.GossipsubIDv11});return tw();})();
 /*!
  * The buffer module from node.js, for the browser.
  *
diff --git a/node_modules/libp2p-gossipsub/src/.index.js.~undo-tree~ b/node_modules/libp2p-gossipsub/src/.index.js.~undo-tree~
new file mode 100644
index 0000000..bf46419
--- /dev/null
+++ b/node_modules/libp2p-gossipsub/src/.index.js.~undo-tree~
@@ -0,0 +1,43 @@
+(undo-tree-save-format-version . 1)
+"e1e94d3254c122422997e27ce4b59eddce3c094c"
+[nil nil nil nil (25155 29976 157651 0) 0 nil]
+([nil nil ((#("d" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'd'" fontified t)) . 6749) (undo-tree-id0 . -1) (#("e" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ed'" fontified t)) . 6749) (#("n" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ndefined'" fontified t)) . 6749) (#("i" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ndefined'" fontified t)) . 6749) (#("f" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ndefined'" fontified t)) . 6749) (#("e" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ndefined'" fontified t)) . 6749) (#("d" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ndefined'" fontified t)) . 6749) (#("n" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'ndefined'" fontified t)) . 6749) (#("u" 0 1 (font-lock-face font-lock-constant-face fontified t)) . 6749) (t 25155 20894 161999 0)) nil (25155 29976 157648 0) 0 nil])
+([nil nil ((6749 . 6753)) nil (25155 29976 157609 0) 0 nil])
+([nil nil ((6746 . 6748) (t 25155 29976 159925 832000)) nil (25155 30027 156152 0) 0 nil])
+([nil nil ((#("?" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . 6748) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1)) nil (25155 30027 156148 0) 0 nil])
+([nil nil ((#("?" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -6748) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 6749) nil (25155 30027 155972 0) 0 nil])
+([nil nil ((6748 . 6749)) nil (25155 30027 155328 0) 0 nil])
+([nil nil ((nil rear-nonsticky nil 6767 . 6768) (nil fontified nil 6767 . 6768) (nil font-lock-face js2-object-property-access 6756 . 6767) (nil fontified nil 6756 . 6767) (nil fontified nil 6748 . 6756) (6748 . 6768)) nil (25155 30027 155327 0) 0 nil])
+([nil nil ((6768 . 6769)) nil (25155 30027 155320 0) 0 nil])
+([nil nil ((13570 . 13571) (t 25155 30027 158095 206000)) nil (25155 30090 629744 0) 0 nil])
+([nil nil ((#("?" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -13571) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) 13572) nil (25155 30090 629738 0) 0 nil])
+([nil nil ((13571 . 13572)) nil (25155 30090 629426 0) 0 nil])
+([nil nil ((nil rear-nonsticky nil 13591 . 13592) (nil fontified nil 13591 . 13592) (nil fontified nil 13589 . 13591) (nil fontified nil 13588 . 13589) (nil font-lock-face js2-function-call 13585 . 13588) (nil fontified nil 13585 . 13588) (nil fontified nil 13584 . 13585) (nil font-lock-face js2-object-property-access 13576 . 13584) (nil fontified nil 13576 . 13584) (nil fontified nil 13575 . 13576) (nil font-lock-face font-lock-builtin-face 13571 . 13575) (nil fontified nil 13571 . 13575) (13571 . 13592)) nil (25155 30090 629419 0) 0 nil])
+([nil nil ((#("?" 0 1 (fontified t)) . -13912) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) 13913 (t 25155 30090 631889 941000)) nil (25155 30132 796634 0) 0 nil])
+([nil nil ((13912 . 13913)) nil (25155 30132 796312 0) 0 nil])
+([nil nil ((nil rear-nonsticky nil 13931 . 13932) (nil fontified nil 13931 . 13932) (nil fontified nil 13929 . 13931) (nil fontified nil 13928 . 13929) (nil font-lock-face js2-function-call 13925 . 13928) (nil fontified nil 13925 . 13928) (nil fontified nil 13924 . 13925) (nil font-lock-face js2-object-property-access 13918 . 13924) (nil fontified nil 13918 . 13924) (nil fontified nil 13917 . 13918) (nil font-lock-face font-lock-builtin-face 13913 . 13917) (nil fontified nil 13913 . 13917) (13913 . 13932)) nil (25155 30132 796311 0) 0 nil])
+([nil nil ((13932 . 13933)) nil (25155 30132 796304 0) 0 nil])
+([nil nil ((22339 . 22340) (t 25155 30132 798897 367000)) nil (25155 30206 16901 0) 0 nil])
+([nil nil ((nil rear-nonsticky nil 22354 . 22355) (nil fontified nil 22354 . 22355) (nil fontified nil 22352 . 22354) (nil fontified nil 22351 . 22352) (nil font-lock-face js2-function-call 22348 . 22351) (nil fontified nil 22348 . 22351) (nil fontified nil 22340 . 22348) (22340 . 22355)) nil (25155 30206 16900 0) 0 nil])
+([nil nil ((#("?" 0 1 (fontified t)) . -22355) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) 22356) nil (25155 30206 16888 0) 0 nil])
+([nil nil ((22355 . 22357)) nil (25155 30206 16264 0) 0 nil])
+([nil nil ((18279 . 18281) (t 25155 30206 19232 674000)) nil (25155 30237 978628 0) 0 nil])
+([nil nil ((#(":" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -18280) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) 18281) nil (25155 30237 978616 0) 0 nil])
+([nil nil ((nil rear-nonsticky nil 18304 . 18305) (nil fontified nil 18304 . 18305) (nil fontified nil 18297 . 18304) (nil fontified nil 18296 . 18297) (nil font-lock-face js2-function-call 18293 . 18296) (nil fontified nil 18293 . 18296) (nil fontified nil 18292 . 18293) (nil font-lock-face js2-object-property-access 18285 . 18292) (nil fontified nil 18285 . 18292) (nil fontified nil 18284 . 18285) (nil font-lock-face font-lock-builtin-face 18280 . 18284) (nil fontified nil 18280 . 18284) (18280 . 18305)) nil (25155 30735 270786 0) 0 nil])
+([nil nil ((#("?" 0 1 (fontified t)) . -31193) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) (undo-tree-id12132 . -1) (undo-tree-id12133 . -1) (undo-tree-id12134 . -1) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1) (undo-tree-id12174 . -1) (undo-tree-id12175 . -1) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (undo-tree-id12182 . -1) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1) (undo-tree-id12185 . -1) (undo-tree-id12186 . -1) (undo-tree-id12187 . -1) (undo-tree-id12188 . -1) (undo-tree-id12189 . -1) (undo-tree-id12190 . -1) (undo-tree-id12191 . -1) (undo-tree-id12192 . -1) (undo-tree-id12193 . -1) (undo-tree-id12194 . -1) (undo-tree-id12195 . -1) (undo-tree-id12196 . -1) (undo-tree-id12197 . -1) (undo-tree-id12198 . -1) (undo-tree-id12199 . -1) (undo-tree-id12200 . -1) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) (undo-tree-id12282 . -1) (undo-tree-id12283 . -1) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -1) (undo-tree-id12287 . -1) (undo-tree-id12288 . -1) (undo-tree-id12289 . -1) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) (undo-tree-id12604 . -1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1) (undo-tree-id12617 . -1) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (undo-tree-id12661 . -1) (undo-tree-id12662 . -1) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (undo-tree-id12682 . -1) (undo-tree-id12683 . -1) (undo-tree-id12684 . -1) (undo-tree-id12685 . -1) (undo-tree-id12686 . -1) (undo-tree-id12687 . -1) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) (undo-tree-id13234 . -1) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) (undo-tree-id13278 . -1) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) (undo-tree-id13281 . -1) (undo-tree-id13282 . -1) (undo-tree-id13283 . -1) (undo-tree-id13284 . -1) (undo-tree-id13285 . -1) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -1) (undo-tree-id13291 . -1) (undo-tree-id13292 . -1) (undo-tree-id13293 . -1) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (undo-tree-id13324 . -1) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) (undo-tree-id13352 . -1) (undo-tree-id13353 . -1) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) (undo-tree-id13850 . -1) (undo-tree-id13851 . -1) (undo-tree-id13852 . -1) (undo-tree-id13853 . -1) (undo-tree-id13854 . -1) (undo-tree-id13855 . -1) (undo-tree-id13856 . -1) (undo-tree-id13857 . -1) (undo-tree-id13858 . -1) (undo-tree-id13859 . -1) (undo-tree-id13860 . -1) (undo-tree-id13861 . -1) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (undo-tree-id13864 . -1) (undo-tree-id13865 . -1) (undo-tree-id13866 . -1) (undo-tree-id13867 . -1) (undo-tree-id13868 . -1) (undo-tree-id13869 . -1) (undo-tree-id13870 . -1) (undo-tree-id13871 . -1) (undo-tree-id13872 . -1) (undo-tree-id13873 . -1) (undo-tree-id13874 . -1) (undo-tree-id13875 . -1) (undo-tree-id13876 . -1) (undo-tree-id13877 . -1) (undo-tree-id13878 . -1) (undo-tree-id13879 . -1) (undo-tree-id13880 . -1) (undo-tree-id13881 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13885 . -1) (undo-tree-id13886 . -1) (undo-tree-id13887 . -1) (undo-tree-id13888 . -1) (undo-tree-id13889 . -1) (undo-tree-id13890 . -1) (undo-tree-id13891 . -1) (undo-tree-id13892 . -1) (undo-tree-id13893 . -1) (undo-tree-id13894 . -1) (undo-tree-id13895 . -1) (undo-tree-id13896 . -1) (undo-tree-id13897 . -1) (undo-tree-id13898 . -1) (undo-tree-id13899 . -1) (undo-tree-id13900 . -1) (undo-tree-id13901 . -1) (undo-tree-id13902 . -1) (undo-tree-id13903 . -1) (undo-tree-id13904 . -1) (undo-tree-id13905 . -1) (undo-tree-id13906 . -1) (undo-tree-id13907 . -1) (undo-tree-id13908 . -1) (undo-tree-id13909 . -1) (undo-tree-id13910 . -1) (undo-tree-id13911 . -1) (undo-tree-id13912 . -1) (undo-tree-id13913 . -1) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (undo-tree-id13916 . -1) (undo-tree-id13917 . -1) (undo-tree-id13918 . -1) (undo-tree-id13919 . -1) (undo-tree-id13920 . -1) (undo-tree-id13921 . -1) (undo-tree-id13922 . -1) (undo-tree-id13923 . -1) (undo-tree-id13924 . -1) (undo-tree-id13925 . -1) (undo-tree-id13926 . -1) (undo-tree-id13927 . -1) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) (undo-tree-id13951 . -1) (undo-tree-id13952 . -1) (undo-tree-id13953 . -1) (undo-tree-id13954 . -1) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1) (undo-tree-id13959 . -1) (undo-tree-id13960 . -1) (undo-tree-id13961 . -1) (undo-tree-id13962 . -1) (undo-tree-id13963 . -1) (undo-tree-id13964 . -1) (undo-tree-id13965 . -1) (undo-tree-id13966 . -1) (undo-tree-id13967 . -1) (undo-tree-id13968 . -1) (undo-tree-id13969 . -1) (undo-tree-id13970 . -1) (undo-tree-id13971 . -1) (undo-tree-id13972 . -1) (undo-tree-id13973 . -1) (undo-tree-id13974 . -1) (undo-tree-id13975 . -1) (undo-tree-id13976 . -1) (undo-tree-id13977 . -1) (undo-tree-id13978 . -1) (undo-tree-id13979 . -1) (undo-tree-id13980 . -1) (undo-tree-id13981 . -1) (undo-tree-id13982 . -1) (undo-tree-id13983 . -1) (undo-tree-id13984 . -1) (undo-tree-id13985 . -1) (undo-tree-id13986 . -1) (undo-tree-id13987 . -1) (undo-tree-id13988 . -1) (undo-tree-id13989 . -1) (undo-tree-id13990 . -1) (undo-tree-id13991 . -1) (undo-tree-id13992 . -1) (undo-tree-id13993 . -1) (undo-tree-id13994 . -1) (undo-tree-id13995 . -1) (undo-tree-id13996 . -1) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) (undo-tree-id14013 . -1) (undo-tree-id14014 . -1) (undo-tree-id14015 . -1) (undo-tree-id14016 . -1) (undo-tree-id14017 . -1) (undo-tree-id14018 . -1) (undo-tree-id14019 . -1) (undo-tree-id14020 . -1) (undo-tree-id14021 . -1) (undo-tree-id14022 . -1) (undo-tree-id14023 . -1) (undo-tree-id14024 . -1) (undo-tree-id14025 . -1) (undo-tree-id14026 . -1) (undo-tree-id14027 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14031 . -1) (undo-tree-id14032 . -1) (undo-tree-id14033 . -1) (undo-tree-id14034 . -1) (undo-tree-id14035 . -1) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) (undo-tree-id14042 . -1) (undo-tree-id14043 . -1) (undo-tree-id14044 . -1) (undo-tree-id14045 . -1) (undo-tree-id14046 . -1) (undo-tree-id14047 . -1) (undo-tree-id14048 . -1) (undo-tree-id14049 . -1) (undo-tree-id14050 . -1) (undo-tree-id14051 . -1) (undo-tree-id14052 . -1) (undo-tree-id14053 . -1) (undo-tree-id14054 . -1) (undo-tree-id14055 . -1) (undo-tree-id14056 . -1) (undo-tree-id14057 . -1) (undo-tree-id14058 . -1) (undo-tree-id14059 . -1) (undo-tree-id14060 . -1) (undo-tree-id14061 . -1) (undo-tree-id14062 . -1) (undo-tree-id14063 . -1) (undo-tree-id14064 . -1) (undo-tree-id14065 . -1) (undo-tree-id14066 . -1) (undo-tree-id14067 . -1) (undo-tree-id14068 . -1) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) 31194) nil (25155 30866 727901 0) 0 nil] [nil nil ((18313 . 18316)) ((#(": 0" 0 2 (fontified t) 2 3 (fontified t face highlight-numbers-number)) . 18313) (undo-tree-id8035 . -3) (undo-tree-id8036 . -3) (undo-tree-id8037 . -3) (undo-tree-id8038 . -3) (undo-tree-id8039 . -3) (t 25155 30237 981072 369000)) (25155 30734 21082 0) 0 nil])
+([nil nil ((31257 . 31262) (#("    " 0 4 (fontified nil)) . -31206) (undo-tree-id8670 . -4) (undo-tree-id8671 . -4) (undo-tree-id8672 . -4) (undo-tree-id8673 . -4) (undo-tree-id8674 . -4) (undo-tree-id8675 . -4) (undo-tree-id8676 . -4) (undo-tree-id8677 . -4) (undo-tree-id8678 . -4) (undo-tree-id8679 . -4) (undo-tree-id8680 . -4) (undo-tree-id8681 . -4) (undo-tree-id8682 . -4) (undo-tree-id8683 . -4) (undo-tree-id8684 . -4) (undo-tree-id8685 . -4) (undo-tree-id8686 . -4) (undo-tree-id8687 . -4) (undo-tree-id8688 . -4) (undo-tree-id8689 . -4) (undo-tree-id8690 . -4) (undo-tree-id8691 . -4) (undo-tree-id8692 . -4) (undo-tree-id8693 . -4) (undo-tree-id8694 . -4) (undo-tree-id8695 . -4) (undo-tree-id8696 . -4) (undo-tree-id8697 . -4) (undo-tree-id8698 . -4) (undo-tree-id8699 . -4) (undo-tree-id8700 . -4) (undo-tree-id8701 . -4) (undo-tree-id8702 . -4) (undo-tree-id8703 . -4) (undo-tree-id8704 . -4) (undo-tree-id8705 . -4) (undo-tree-id8706 . -4) (undo-tree-id8707 . -4) (undo-tree-id8708 . -4) (undo-tree-id8709 . -4) (undo-tree-id8710 . -4) (undo-tree-id8711 . -4) (undo-tree-id8712 . -4) (undo-tree-id8713 . -4) (undo-tree-id8714 . -4) (undo-tree-id8715 . -4) (undo-tree-id8716 . -4) (undo-tree-id8717 . -4) (undo-tree-id8718 . -4) (undo-tree-id8719 . -4) (undo-tree-id8720 . -4) (undo-tree-id8721 . -4) (undo-tree-id8722 . -4) (undo-tree-id8723 . -4) (undo-tree-id8724 . -4) (undo-tree-id8725 . -4) (undo-tree-id8726 . -4) (undo-tree-id8727 . -4) (undo-tree-id8728 . -4) (undo-tree-id8729 . -4) (undo-tree-id8730 . -4) (undo-tree-id8731 . -4) (undo-tree-id8732 . -4) (undo-tree-id8733 . -4) (undo-tree-id8734 . -4) (undo-tree-id8735 . -4) (undo-tree-id8736 . -4) (undo-tree-id8737 . -4) (undo-tree-id8738 . -4) (undo-tree-id8739 . -4) (undo-tree-id8740 . -4) (undo-tree-id8741 . -4) (undo-tree-id8742 . -4) (undo-tree-id8743 . -4) (undo-tree-id8744 . -4) (undo-tree-id8745 . -4) (undo-tree-id8746 . -4) (undo-tree-id8747 . -4) (undo-tree-id8748 . -4) (undo-tree-id8749 . -4) (undo-tree-id8750 . -4) (undo-tree-id8751 . -4) (undo-tree-id8752 . -4) (undo-tree-id8753 . -4) (undo-tree-id8754 . -4) (undo-tree-id8755 . -4) (undo-tree-id8756 . -4) (undo-tree-id8757 . -4) (undo-tree-id8758 . -4) (undo-tree-id8759 . -4) (undo-tree-id8760 . -4) (undo-tree-id8761 . -4) (undo-tree-id8762 . -4) (undo-tree-id8763 . -4) (undo-tree-id8764 . -4) (undo-tree-id8765 . -4) (undo-tree-id8766 . -4) (undo-tree-id8767 . -4) (undo-tree-id8768 . -4) (undo-tree-id8769 . -4) (undo-tree-id8770 . -4) (undo-tree-id8771 . -4) (undo-tree-id8772 . -4) (undo-tree-id8773 . -4) (undo-tree-id8774 . -4) (undo-tree-id8775 . -4) (undo-tree-id8776 . -4) (undo-tree-id8777 . -4) (undo-tree-id8778 . -4) (undo-tree-id8779 . -4) (undo-tree-id8780 . -4) (undo-tree-id8781 . -4) (undo-tree-id8782 . -4) (undo-tree-id8783 . -4) (undo-tree-id8784 . -4) (undo-tree-id8785 . -4) (undo-tree-id8786 . -4) (undo-tree-id8787 . -4) (undo-tree-id8788 . -4) (undo-tree-id8789 . -4) (undo-tree-id8790 . -4) (undo-tree-id8791 . -4) (undo-tree-id8792 . -4) (undo-tree-id8793 . -4) (undo-tree-id8794 . -4) (undo-tree-id8795 . -4) (undo-tree-id8796 . -4) (undo-tree-id8797 . -4) (undo-tree-id8798 . -4) (undo-tree-id8799 . -4) (undo-tree-id8800 . -4) (undo-tree-id8801 . -4) (undo-tree-id8802 . -4) (undo-tree-id8803 . -4) (undo-tree-id8804 . -4) (undo-tree-id8805 . -4) (undo-tree-id8806 . -4) (undo-tree-id8807 . -4) (undo-tree-id8808 . -4) (undo-tree-id8809 . -4) (undo-tree-id8810 . -4) (undo-tree-id8811 . -4) (undo-tree-id8812 . -4) (undo-tree-id8813 . -4) (undo-tree-id8814 . -4) (undo-tree-id8815 . -4) (undo-tree-id8816 . -4) (undo-tree-id8817 . -4) (undo-tree-id8818 . -4) (undo-tree-id8819 . -4) (undo-tree-id8820 . -4) (undo-tree-id8821 . -4) (undo-tree-id8822 . -4) (undo-tree-id8823 . -4) (undo-tree-id8824 . -4) (undo-tree-id8825 . -4) (undo-tree-id8826 . -4) (undo-tree-id8827 . -4) (undo-tree-id8828 . -4) (undo-tree-id8829 . -4) (undo-tree-id8830 . -4) (undo-tree-id8831 . -4) (undo-tree-id8832 . -4) (undo-tree-id8833 . -4) (undo-tree-id8834 . -4) (undo-tree-id8835 . -4) (undo-tree-id8836 . -4) (undo-tree-id8837 . -4) (undo-tree-id8838 . -4) (undo-tree-id8839 . -4) (undo-tree-id8840 . -4) (undo-tree-id8841 . -4) (undo-tree-id8842 . -4) (undo-tree-id8843 . -4) (undo-tree-id8844 . -4) (undo-tree-id8845 . -4) (undo-tree-id8846 . -4) (undo-tree-id8847 . -4) (undo-tree-id8848 . -4) (undo-tree-id8849 . -4) (undo-tree-id8850 . -4) (undo-tree-id8851 . -4) (undo-tree-id8852 . -4) (undo-tree-id8853 . -4) (undo-tree-id8854 . -4) (undo-tree-id8855 . -4) (undo-tree-id8856 . -4) (undo-tree-id8857 . -4) (undo-tree-id8858 . -4) (undo-tree-id8859 . -4) (undo-tree-id8860 . -4) (undo-tree-id8861 . -4) (undo-tree-id8862 . -4) (undo-tree-id8863 . -4) (undo-tree-id8864 . -4) (undo-tree-id8865 . -4) (undo-tree-id8866 . -4) (undo-tree-id8867 . -4) (undo-tree-id8868 . -4) (undo-tree-id8869 . -4) (undo-tree-id8870 . -4) (undo-tree-id8871 . -4) (undo-tree-id8872 . -4) (undo-tree-id8873 . -4) (undo-tree-id8874 . -4) (undo-tree-id8875 . -4) (undo-tree-id8876 . -4) (undo-tree-id8877 . -4) (undo-tree-id8878 . -4) (undo-tree-id8879 . -4) (undo-tree-id8880 . -4) (undo-tree-id8881 . -4) (undo-tree-id8882 . -4) (undo-tree-id8883 . -4) (undo-tree-id8884 . -4) (undo-tree-id8885 . -4) (undo-tree-id8886 . -4) (undo-tree-id8887 . -4) (undo-tree-id8888 . -4) (undo-tree-id8889 . -4) (undo-tree-id8890 . -4) (undo-tree-id8891 . -4) (undo-tree-id8892 . -4) (undo-tree-id8893 . -4) (undo-tree-id8894 . -4) (undo-tree-id8895 . -4) (undo-tree-id8896 . -4) (undo-tree-id8897 . -4) (undo-tree-id8898 . -4) (undo-tree-id8899 . -4) (undo-tree-id8900 . -4) (undo-tree-id8901 . -4) (undo-tree-id8902 . -4) (undo-tree-id8903 . -4) (undo-tree-id8904 . -4) (undo-tree-id8905 . -4) (undo-tree-id8906 . -4) (undo-tree-id8907 . -4) (undo-tree-id8908 . -4) (undo-tree-id8909 . -4) (undo-tree-id8910 . -4) (undo-tree-id8911 . -4) (undo-tree-id8912 . -4) (undo-tree-id8913 . -4) (undo-tree-id8914 . -4) (undo-tree-id8915 . -4) (undo-tree-id8916 . -4) (undo-tree-id8917 . -4) (undo-tree-id8918 . -4) (undo-tree-id8919 . -4) (undo-tree-id8920 . -4) (undo-tree-id8921 . -4) (undo-tree-id8922 . -4) (undo-tree-id8923 . -4) (undo-tree-id8924 . -4) (undo-tree-id8925 . -4) (undo-tree-id8926 . -4) (undo-tree-id8927 . -4) (undo-tree-id8928 . -4) (undo-tree-id8929 . -4) (undo-tree-id8930 . -4) (undo-tree-id8931 . -4) (undo-tree-id8932 . -4) (undo-tree-id8933 . -4) (undo-tree-id8934 . -4) (undo-tree-id8935 . -4) (undo-tree-id8936 . -4) (undo-tree-id8937 . -4) (undo-tree-id8938 . -4) (undo-tree-id8939 . -4) (undo-tree-id8940 . -4) (undo-tree-id8941 . -4) (undo-tree-id8942 . -4) (undo-tree-id8943 . -4) (undo-tree-id8944 . -4) (undo-tree-id8945 . -4) (undo-tree-id8946 . -4) (undo-tree-id8947 . -4) (undo-tree-id8948 . -4) (undo-tree-id8949 . -4) (undo-tree-id8950 . -4) (undo-tree-id8951 . -4) (undo-tree-id8952 . -4) (undo-tree-id8953 . -4) (undo-tree-id8954 . -4) (undo-tree-id8955 . -4) (undo-tree-id8956 . -4) (undo-tree-id8957 . -4) (undo-tree-id8958 . -4) (undo-tree-id8959 . -4) (undo-tree-id8960 . -4) (undo-tree-id8961 . -4) (undo-tree-id8962 . -4) (undo-tree-id8963 . -4) (undo-tree-id8964 . -4) (undo-tree-id8965 . -4) (undo-tree-id8966 . -4) (undo-tree-id8967 . -4) (undo-tree-id8968 . -4) (undo-tree-id8969 . -4) (undo-tree-id8970 . -4) (undo-tree-id8971 . -4) (undo-tree-id8972 . -4) (undo-tree-id8973 . -4) (undo-tree-id8974 . -4) (undo-tree-id8975 . -4) (undo-tree-id8976 . -4) (undo-tree-id8977 . -4) (undo-tree-id8978 . -4) (undo-tree-id8979 . -4) (undo-tree-id8980 . -4) (undo-tree-id8981 . -4) (undo-tree-id8982 . -4) (undo-tree-id8983 . -4) (undo-tree-id8984 . -4) (undo-tree-id8985 . -4) (undo-tree-id8986 . -4) (undo-tree-id8987 . -4) (undo-tree-id8988 . -4) (undo-tree-id8989 . -4) (undo-tree-id8990 . -4) (undo-tree-id8991 . -4) (undo-tree-id8992 . -4) (undo-tree-id8993 . -4) (undo-tree-id8994 . -4) (undo-tree-id8995 . -4) (undo-tree-id8996 . -4) (undo-tree-id8997 . -4) (undo-tree-id8998 . -4) (undo-tree-id8999 . -4) (undo-tree-id9000 . -4) (undo-tree-id9001 . -4) (undo-tree-id9002 . -4) (undo-tree-id9003 . -4) (undo-tree-id9004 . -4) (undo-tree-id9005 . -4) (undo-tree-id9006 . -4) (undo-tree-id9007 . -4) (undo-tree-id9008 . -4) (undo-tree-id9009 . -4) (undo-tree-id9010 . -4) (undo-tree-id9011 . -4) (undo-tree-id9012 . -4) (undo-tree-id9013 . -4) (undo-tree-id9014 . -4) (undo-tree-id9015 . -4) (undo-tree-id9016 . -4) (undo-tree-id9017 . -4) (undo-tree-id9018 . -4) (undo-tree-id9019 . -4) (undo-tree-id9020 . -4) (undo-tree-id9021 . -4) (undo-tree-id9022 . -4) (undo-tree-id9023 . -4) (undo-tree-id9024 . -4) (undo-tree-id9025 . -4) (undo-tree-id9026 . -4) (undo-tree-id9027 . -4) (undo-tree-id9028 . -4) (undo-tree-id9029 . -4) (undo-tree-id9030 . -4) (undo-tree-id9031 . -4) (undo-tree-id9032 . -4) (undo-tree-id9033 . -4) (undo-tree-id9034 . -4) (undo-tree-id9035 . -4) (undo-tree-id9036 . -4) (undo-tree-id9037 . -4) (undo-tree-id9038 . -4) (undo-tree-id9039 . -4) (undo-tree-id9040 . -4) (undo-tree-id9041 . -4) (undo-tree-id9042 . -4) (undo-tree-id9043 . -4) (undo-tree-id9044 . -4) (undo-tree-id9045 . -4) (undo-tree-id9046 . -4) (undo-tree-id9047 . -4) (undo-tree-id9048 . -4) (undo-tree-id9049 . -4) (undo-tree-id9050 . -4) (undo-tree-id9051 . -4) (undo-tree-id9052 . -4) (undo-tree-id9053 . -4) (undo-tree-id9054 . -4) (undo-tree-id9055 . -4) (undo-tree-id9056 . -4) (undo-tree-id9057 . -4) (undo-tree-id9058 . -4) (undo-tree-id9059 . -4) (undo-tree-id9060 . -4) (undo-tree-id9061 . -4) (undo-tree-id9062 . -4) (undo-tree-id9063 . -4) (undo-tree-id9064 . -4) (undo-tree-id9065 . -4) (undo-tree-id9066 . -4) (undo-tree-id9067 . -4) (undo-tree-id9068 . -4) (undo-tree-id9069 . -4) (undo-tree-id9070 . -4) (undo-tree-id9071 . -4) (undo-tree-id9072 . -4) (undo-tree-id9073 . -4) (undo-tree-id9074 . -4) (undo-tree-id9075 . -4) (undo-tree-id9076 . -4) (undo-tree-id9077 . -4) (undo-tree-id9078 . -4) (undo-tree-id9079 . -4) (undo-tree-id9080 . -4) (undo-tree-id9081 . -4) (undo-tree-id9082 . -4) (undo-tree-id9083 . -4) (undo-tree-id9084 . -4) (undo-tree-id9085 . -4) (undo-tree-id9086 . -4) (undo-tree-id9087 . -4) (undo-tree-id9088 . -4) (undo-tree-id9089 . -4) (undo-tree-id9090 . -4) (undo-tree-id9091 . -4) (undo-tree-id9092 . -4) (undo-tree-id9093 . -4) (undo-tree-id9094 . -4) (undo-tree-id9095 . -4) (undo-tree-id9096 . -4) (undo-tree-id9097 . -4) (undo-tree-id9098 . -4) (undo-tree-id9099 . -4) (undo-tree-id9100 . -4) (undo-tree-id9101 . -4) (undo-tree-id9102 . -4) (undo-tree-id9103 . -4) (undo-tree-id9104 . -4) (undo-tree-id9105 . -4) (undo-tree-id9106 . -4) (undo-tree-id9107 . -4) (undo-tree-id9108 . -4) (undo-tree-id9109 . -4) (undo-tree-id9110 . -4) (undo-tree-id9111 . -4) (undo-tree-id9112 . -4) (undo-tree-id9113 . -4) (undo-tree-id9114 . -4) (undo-tree-id9115 . -4) (undo-tree-id9116 . -4) (undo-tree-id9117 . -4) (undo-tree-id9118 . -4) (undo-tree-id9119 . -4) (undo-tree-id9120 . -4) (undo-tree-id9121 . -4) (undo-tree-id9122 . -4) (undo-tree-id9123 . -4) (undo-tree-id9124 . -4) (undo-tree-id9125 . -4) (undo-tree-id9126 . -4) (undo-tree-id9127 . -4) (undo-tree-id9128 . -4) (undo-tree-id9129 . -4) (undo-tree-id9130 . -4) (undo-tree-id9131 . -4) (undo-tree-id9132 . -4) (undo-tree-id9133 . -4) (undo-tree-id9134 . -4) (undo-tree-id9135 . -4) (undo-tree-id9136 . -4) (undo-tree-id9137 . -4) (undo-tree-id9138 . -4) (undo-tree-id9139 . -4) (undo-tree-id9140 . -4) (undo-tree-id9141 . -4) (undo-tree-id9142 . -4) (undo-tree-id9143 . -4) (undo-tree-id9144 . -4) (undo-tree-id9145 . -4) (undo-tree-id9146 . -4) (undo-tree-id9147 . -4) (undo-tree-id9148 . -4) (undo-tree-id9149 . -4) (undo-tree-id9150 . -4) (undo-tree-id9151 . -4) (undo-tree-id9152 . -4) (undo-tree-id9153 . -4) (undo-tree-id9154 . -4) (undo-tree-id9155 . -4) (undo-tree-id9156 . -4) (undo-tree-id9157 . -4) (undo-tree-id9158 . -4) (undo-tree-id9159 . -4) (undo-tree-id9160 . -4) (undo-tree-id9161 . -4) (undo-tree-id9162 . -4) (undo-tree-id9163 . -4) (undo-tree-id9164 . -4) (undo-tree-id9165 . -4) (undo-tree-id9166 . -4) (undo-tree-id9167 . -4) (undo-tree-id9168 . -4) (undo-tree-id9169 . -4) (undo-tree-id9170 . -4) (undo-tree-id9171 . -4) (undo-tree-id9172 . -4) (undo-tree-id9173 . -4) (undo-tree-id9174 . -4) (undo-tree-id9175 . -4) (undo-tree-id9176 . -4) (undo-tree-id9177 . -4) (undo-tree-id9178 . -4) (undo-tree-id9179 . -4) (undo-tree-id9180 . -4) (undo-tree-id9181 . -4) (undo-tree-id9182 . -4) (undo-tree-id9183 . -4) (undo-tree-id9184 . -4) (undo-tree-id9185 . -4) (undo-tree-id9186 . -4) (undo-tree-id9187 . -4) (undo-tree-id9188 . -4) (undo-tree-id9189 . -4) (undo-tree-id9190 . -4) (undo-tree-id9191 . -4) (undo-tree-id9192 . -4) (undo-tree-id9193 . -4) (undo-tree-id9194 . -4) (undo-tree-id9195 . -4) (undo-tree-id9196 . -4) (undo-tree-id9197 . -4) (undo-tree-id9198 . -4) (undo-tree-id9199 . -4) (undo-tree-id9200 . -4) (undo-tree-id9201 . -4) (undo-tree-id9202 . -4) (undo-tree-id9203 . -4) (undo-tree-id9204 . -4) (undo-tree-id9205 . -4) (undo-tree-id9206 . -4) (undo-tree-id9207 . -4) (undo-tree-id9208 . -4) (undo-tree-id9209 . -4) (undo-tree-id9210 . -4) (undo-tree-id9211 . -4) (undo-tree-id9212 . -4) (undo-tree-id9213 . -4) (undo-tree-id9214 . -4) (undo-tree-id9215 . -4) (undo-tree-id9216 . -4) (undo-tree-id9217 . -4) (undo-tree-id9218 . -4) (undo-tree-id9219 . -4) (undo-tree-id9220 . -4) (undo-tree-id9221 . -4) (undo-tree-id9222 . -4) (undo-tree-id9223 . -4) (undo-tree-id9224 . -4) (undo-tree-id9225 . -4) (undo-tree-id9226 . -4) (undo-tree-id9227 . -4) (undo-tree-id9228 . -4) (undo-tree-id9229 . -4) (undo-tree-id9230 . -4) (undo-tree-id9231 . -4) (undo-tree-id9232 . -4) (undo-tree-id9233 . -4) (undo-tree-id9234 . -4) (undo-tree-id9235 . -4) (undo-tree-id9236 . -4) (undo-tree-id9237 . -4) (undo-tree-id9238 . -4) (undo-tree-id9239 . -4) (undo-tree-id9240 . -4) (undo-tree-id9241 . -4) (undo-tree-id9242 . -4) (undo-tree-id9243 . -4) (undo-tree-id9244 . -4) (undo-tree-id9245 . -4) (undo-tree-id9246 . -4) (undo-tree-id9247 . -4) (undo-tree-id9248 . -4) (undo-tree-id9249 . -4) (undo-tree-id9250 . -4) (undo-tree-id9251 . -4) (undo-tree-id9252 . -4) (undo-tree-id9253 . -4) (undo-tree-id9254 . -4) (undo-tree-id9255 . -4) (undo-tree-id9256 . -4) (undo-tree-id9257 . -4) (undo-tree-id9258 . -4) (undo-tree-id9259 . -4) (undo-tree-id9260 . -4) (undo-tree-id9261 . -4) (undo-tree-id9262 . -4) (undo-tree-id9263 . -4) (undo-tree-id9264 . -4) (undo-tree-id9265 . -4) (undo-tree-id9266 . -4) (undo-tree-id9267 . -4) (undo-tree-id9268 . -4) (undo-tree-id9269 . -4) (undo-tree-id9270 . -4) (undo-tree-id9271 . -4) (undo-tree-id9272 . -4) (undo-tree-id9273 . -4) (undo-tree-id9274 . -4) (undo-tree-id9275 . -4) (undo-tree-id9276 . -4) (undo-tree-id9277 . -4) (undo-tree-id9278 . -4) (undo-tree-id9279 . -4) (undo-tree-id9280 . -4) (undo-tree-id9281 . -4) (undo-tree-id9282 . -4) (undo-tree-id9283 . -4) (undo-tree-id9284 . -4) (undo-tree-id9285 . -4) (undo-tree-id9286 . -4) (undo-tree-id9287 . -4) (undo-tree-id9288 . -4) (undo-tree-id9289 . -4) (undo-tree-id9290 . -4) (undo-tree-id9291 . -4) (undo-tree-id9292 . -4) (undo-tree-id9293 . -4) (undo-tree-id9294 . -4) (undo-tree-id9295 . -4) (undo-tree-id9296 . -4) (undo-tree-id9297 . -4) (undo-tree-id9298 . -4) (undo-tree-id9299 . -4) (undo-tree-id9300 . -4) (undo-tree-id9301 . -4) (undo-tree-id9302 . -4) (undo-tree-id9303 . -4) (undo-tree-id9304 . -4) (undo-tree-id9305 . -4) (undo-tree-id9306 . -4) (undo-tree-id9307 . -4) (undo-tree-id9308 . -4) (undo-tree-id9309 . -4) (undo-tree-id9310 . -4) (undo-tree-id9311 . -4) (undo-tree-id9312 . -4) (undo-tree-id9313 . -4) (undo-tree-id9314 . -4) (undo-tree-id9315 . -4) (undo-tree-id9316 . -4) (undo-tree-id9317 . -4) (undo-tree-id9318 . -4) (undo-tree-id9319 . -4) (undo-tree-id9320 . -4) (undo-tree-id9321 . -4) (undo-tree-id9322 . -4) (undo-tree-id9323 . -4) (undo-tree-id9324 . -4) (undo-tree-id9325 . -4) (undo-tree-id9326 . -4) (undo-tree-id9327 . -4) (undo-tree-id9328 . -4) (undo-tree-id9329 . -4) (undo-tree-id9330 . -4) (undo-tree-id9331 . -4) (undo-tree-id9332 . -4) (undo-tree-id9333 . -4) (undo-tree-id9334 . -4) (undo-tree-id9335 . -4) (undo-tree-id9336 . -4) (undo-tree-id9337 . -4) (undo-tree-id9338 . -4) (undo-tree-id9339 . -4) (undo-tree-id9340 . -4) (undo-tree-id9341 . -4) (undo-tree-id9342 . -4) (undo-tree-id9343 . -4) (undo-tree-id9344 . -4) (undo-tree-id9345 . -4) (undo-tree-id9346 . -4) (undo-tree-id9347 . -4) (undo-tree-id9348 . -4) (undo-tree-id9349 . -4) (undo-tree-id9350 . -4) (undo-tree-id9351 . -4) (undo-tree-id9352 . -4) (undo-tree-id9353 . -4) (undo-tree-id9354 . -4) (undo-tree-id9355 . -4) (undo-tree-id9356 . -4) (undo-tree-id9357 . -4) (undo-tree-id9358 . -4) (undo-tree-id9359 . -4) (undo-tree-id9360 . -4) (undo-tree-id9361 . -4) (undo-tree-id9362 . -4) (undo-tree-id9363 . -4) (undo-tree-id9364 . -4) (undo-tree-id9365 . -4) (undo-tree-id9366 . -4) (undo-tree-id9367 . -4) (undo-tree-id9368 . -4) (undo-tree-id9369 . -4) (undo-tree-id9370 . -4) (undo-tree-id9371 . -4) (undo-tree-id9372 . -4) (undo-tree-id9373 . -4) (undo-tree-id9374 . -4) (undo-tree-id9375 . -4) (undo-tree-id9376 . -4) (undo-tree-id9377 . -4) (undo-tree-id9378 . -4) (undo-tree-id9379 . -4) (undo-tree-id9380 . -4) (undo-tree-id9381 . -4) (undo-tree-id9382 . -4) (undo-tree-id9383 . -4) (undo-tree-id9384 . -4) (undo-tree-id9385 . -4) (undo-tree-id9386 . -4) (undo-tree-id9387 . -4) (undo-tree-id9388 . -4) (undo-tree-id9389 . -4) (undo-tree-id9390 . -4) (undo-tree-id9391 . -4) (undo-tree-id9392 . -4) (undo-tree-id9393 . -4) (undo-tree-id9394 . -4) (undo-tree-id9395 . -4) (undo-tree-id9396 . -4) (undo-tree-id9397 . -4) (undo-tree-id9398 . -4) (undo-tree-id9399 . -4) (undo-tree-id9400 . -4) (undo-tree-id9401 . -4) (undo-tree-id9402 . -4) (undo-tree-id9403 . -4) (undo-tree-id9404 . -4) (undo-tree-id9405 . -4) (undo-tree-id9406 . -4) (undo-tree-id9407 . -4) (undo-tree-id9408 . -4) (undo-tree-id9409 . -4) (undo-tree-id9410 . -4) (undo-tree-id9411 . -4) (undo-tree-id9412 . -4) (undo-tree-id9413 . -4) (undo-tree-id9414 . -4) (undo-tree-id9415 . -4) (undo-tree-id9416 . -4) (undo-tree-id9417 . -4) (undo-tree-id9418 . -4) (undo-tree-id9419 . -4) (undo-tree-id9420 . -4) (undo-tree-id9421 . -4) (undo-tree-id9422 . -4) (undo-tree-id9423 . -4) (undo-tree-id9424 . -4) (undo-tree-id9425 . -4) (undo-tree-id9426 . -4) (undo-tree-id9427 . -4) (undo-tree-id9428 . -4) (undo-tree-id9429 . -4) (undo-tree-id9430 . -4) (undo-tree-id9431 . -4) (undo-tree-id9432 . -4) (undo-tree-id9433 . -4) (undo-tree-id9434 . -4) (undo-tree-id9435 . -4) (undo-tree-id9436 . -4) (undo-tree-id9437 . -4) (undo-tree-id9438 . -4) (undo-tree-id9439 . -4) (undo-tree-id9440 . -4) (undo-tree-id9441 . -4) (undo-tree-id9442 . -4) (undo-tree-id9443 . -4) (undo-tree-id9444 . -4) (undo-tree-id9445 . -4) (undo-tree-id9446 . -4) (undo-tree-id9447 . -4) (undo-tree-id9448 . -4) (undo-tree-id9449 . -4) (undo-tree-id9450 . -4) (undo-tree-id9451 . -4) (undo-tree-id9452 . -4) (undo-tree-id9453 . -4) (undo-tree-id9454 . -4) (undo-tree-id9455 . -4) (undo-tree-id9456 . -4) (undo-tree-id9457 . -4) (undo-tree-id9458 . -4) (undo-tree-id9459 . -4) (undo-tree-id9460 . -4) (undo-tree-id9461 . -4) (undo-tree-id9462 . -4) (undo-tree-id9463 . -4) (undo-tree-id9464 . -4) (undo-tree-id9465 . -4) (undo-tree-id9466 . -4) (undo-tree-id9467 . -4) (undo-tree-id9468 . -4) (undo-tree-id9469 . -4) (undo-tree-id9470 . -4) (undo-tree-id9471 . -4) (undo-tree-id9472 . -4) (undo-tree-id9473 . -4) (undo-tree-id9474 . -4) (undo-tree-id9475 . -4) (undo-tree-id9476 . -4) (undo-tree-id9477 . -4) (undo-tree-id9478 . -4) (undo-tree-id9479 . -4) (undo-tree-id9480 . -4) (undo-tree-id9481 . -4) (undo-tree-id9482 . -4) (undo-tree-id9483 . -4) (undo-tree-id9484 . -4) (undo-tree-id9485 . -4) (undo-tree-id9486 . -4) (undo-tree-id9487 . -4) (undo-tree-id9488 . -4) (undo-tree-id9489 . -4) (undo-tree-id9490 . -4) (undo-tree-id9491 . -4) (undo-tree-id9492 . -4) (undo-tree-id9493 . -4) (undo-tree-id9494 . -4) (undo-tree-id9495 . -4) (undo-tree-id9496 . -4) (undo-tree-id9497 . -4) (undo-tree-id9498 . -4) (undo-tree-id9499 . -4) (undo-tree-id9500 . -4) (undo-tree-id9501 . -4) (undo-tree-id9502 . -4) (undo-tree-id9503 . -4) (undo-tree-id9504 . -4) (undo-tree-id9505 . -4) (undo-tree-id9506 . -4) (undo-tree-id9507 . -4) (undo-tree-id9508 . -4) (undo-tree-id9509 . -4) (undo-tree-id9510 . -4) (undo-tree-id9511 . -4) (undo-tree-id9512 . -4) (undo-tree-id9513 . -4) (undo-tree-id9514 . -4) (undo-tree-id9515 . -4) (undo-tree-id9516 . -4) (undo-tree-id9517 . -4) (undo-tree-id9518 . -4) (undo-tree-id9519 . -4) (undo-tree-id9520 . -4) (undo-tree-id9521 . -4) (undo-tree-id9522 . -4) (undo-tree-id9523 . -4) (undo-tree-id9524 . -4) (undo-tree-id9525 . -4) (undo-tree-id9526 . -4) (undo-tree-id9527 . -4) (undo-tree-id9528 . -4) (undo-tree-id9529 . -4) (undo-tree-id9530 . -4) (undo-tree-id9531 . -4) (undo-tree-id9532 . -4) (undo-tree-id9533 . -4) (undo-tree-id9534 . -4) (undo-tree-id9535 . -4) (undo-tree-id9536 . -4) (undo-tree-id9537 . -4) (undo-tree-id9538 . -4) (undo-tree-id9539 . -4) (undo-tree-id9540 . -4) (undo-tree-id9541 . -4) (undo-tree-id9542 . -4) (undo-tree-id9543 . -4) (undo-tree-id9544 . -4) (undo-tree-id9545 . -4) (undo-tree-id9546 . -4) (undo-tree-id9547 . -4) (undo-tree-id9548 . -4) (undo-tree-id9549 . -4) (undo-tree-id9550 . -4) (undo-tree-id9551 . -4) (undo-tree-id9552 . -4) (undo-tree-id9553 . -4) (undo-tree-id9554 . -4) (undo-tree-id9555 . -4) (undo-tree-id9556 . -4) (undo-tree-id9557 . -4) (undo-tree-id9558 . -4) (undo-tree-id9559 . -4) (undo-tree-id9560 . -4) (undo-tree-id9561 . -4) (undo-tree-id9562 . -4) (undo-tree-id9563 . -4) (undo-tree-id9564 . -4) (undo-tree-id9565 . -4) (undo-tree-id9566 . -4) (undo-tree-id9567 . -4) (undo-tree-id9568 . -4) (undo-tree-id9569 . -4) (undo-tree-id9570 . -4) (undo-tree-id9571 . -4) (undo-tree-id9572 . -4) (undo-tree-id9573 . -4) (undo-tree-id9574 . -4) (undo-tree-id9575 . -4) (undo-tree-id9576 . -4) (undo-tree-id9577 . -4) (undo-tree-id9578 . -4) (undo-tree-id9579 . -4) (undo-tree-id9580 . -4) (undo-tree-id9581 . -4) (undo-tree-id9582 . -4) (undo-tree-id9583 . -4) (undo-tree-id9584 . -4) (undo-tree-id9585 . -4) (undo-tree-id9586 . -4) (undo-tree-id9587 . -4) (undo-tree-id9588 . -4) (undo-tree-id9589 . -4) (undo-tree-id9590 . -4) (undo-tree-id9591 . -4) (undo-tree-id9592 . -4) (undo-tree-id9593 . -4) (undo-tree-id9594 . -4) (undo-tree-id9595 . -4) (undo-tree-id9596 . -4) (undo-tree-id9597 . -4) (undo-tree-id9598 . -4) (undo-tree-id9599 . -4) (undo-tree-id9600 . -4) (undo-tree-id9601 . -4) (undo-tree-id9602 . -4) (undo-tree-id9603 . -4) (undo-tree-id9604 . -4) (undo-tree-id9605 . -4) (undo-tree-id9606 . -4) (undo-tree-id9607 . -4) (undo-tree-id9608 . -4) (undo-tree-id9609 . -4) (undo-tree-id9610 . -4) (undo-tree-id9611 . -4) (undo-tree-id9612 . -4) (undo-tree-id9613 . -4) (undo-tree-id9614 . -4) (undo-tree-id9615 . -4) (undo-tree-id9616 . -4) (undo-tree-id9617 . -4) (undo-tree-id9618 . -4) (undo-tree-id9619 . -4) (undo-tree-id9620 . -4) (undo-tree-id9621 . -4) (undo-tree-id9622 . -4) (undo-tree-id9623 . -4) (undo-tree-id9624 . -4) (undo-tree-id9625 . -4) (undo-tree-id9626 . -4) (undo-tree-id9627 . -4) (undo-tree-id9628 . -4) (undo-tree-id9629 . -4) (undo-tree-id9630 . -4) (undo-tree-id9631 . -4) (undo-tree-id9632 . -4) (undo-tree-id9633 . -4) (undo-tree-id9634 . -4) (undo-tree-id9635 . -4) (undo-tree-id9636 . -4) (undo-tree-id9637 . -4) (undo-tree-id9638 . -4) (undo-tree-id9639 . -4) (undo-tree-id9640 . -4) (undo-tree-id9641 . -4) (undo-tree-id9642 . -4) (undo-tree-id9643 . -4) (undo-tree-id9644 . -4) (undo-tree-id9645 . -4) (undo-tree-id9646 . -4) (undo-tree-id9647 . -4) (undo-tree-id9648 . -4) (undo-tree-id9649 . -4) (undo-tree-id9650 . -4) (undo-tree-id9651 . -4) (undo-tree-id9652 . -4) (undo-tree-id9653 . -4) (undo-tree-id9654 . -4) (undo-tree-id9655 . -4) (undo-tree-id9656 . -4) (undo-tree-id9657 . -4) (undo-tree-id9658 . -4) (undo-tree-id9659 . -4) (undo-tree-id9660 . -4) (undo-tree-id9661 . -4) (undo-tree-id9662 . -4) (undo-tree-id9663 . -4) (undo-tree-id9664 . -4) (undo-tree-id9665 . -4) (undo-tree-id9666 . -4) (undo-tree-id9667 . -4) (undo-tree-id9668 . -4) (undo-tree-id9669 . -4) (undo-tree-id9670 . -4) (undo-tree-id9671 . -4) (undo-tree-id9672 . -4) (undo-tree-id9673 . -4) (undo-tree-id9674 . -4) (undo-tree-id9675 . -4) (undo-tree-id9676 . -4) (undo-tree-id9677 . -4) (undo-tree-id9678 . -4) (undo-tree-id9679 . -4) (undo-tree-id9680 . -4) (undo-tree-id9681 . -4) (undo-tree-id9682 . -4) (undo-tree-id9683 . -4) (undo-tree-id9684 . -4) (undo-tree-id9685 . -4) (undo-tree-id9686 . -4) (undo-tree-id9687 . -4) (undo-tree-id9688 . -4) (undo-tree-id9689 . -4) (undo-tree-id9690 . -4) (undo-tree-id9691 . -4) (undo-tree-id9692 . -4) (undo-tree-id9693 . -4) (undo-tree-id9694 . -4) (undo-tree-id9695 . -4) (undo-tree-id9696 . -4) (undo-tree-id9697 . -4) (undo-tree-id9698 . -4) (undo-tree-id9699 . -4) (undo-tree-id9700 . -4) (undo-tree-id9701 . -4) (undo-tree-id9702 . -4) (undo-tree-id9703 . -4) (undo-tree-id9704 . -4) (undo-tree-id9705 . -4) (undo-tree-id9706 . -4) (undo-tree-id9707 . -4) (undo-tree-id9708 . -4) (undo-tree-id9709 . -4) (undo-tree-id9710 . -4) (undo-tree-id9711 . -4) (undo-tree-id9712 . -4) (undo-tree-id9713 . -4) (undo-tree-id9714 . -4) (undo-tree-id9715 . -4) (undo-tree-id9716 . -4) (undo-tree-id9717 . -4) (undo-tree-id9718 . -4) (undo-tree-id9719 . -4) (undo-tree-id9720 . -4) (undo-tree-id9721 . -4) (undo-tree-id9722 . -4) (undo-tree-id9723 . -4) (undo-tree-id9724 . -4) (undo-tree-id9725 . -4) (undo-tree-id9726 . -4) (undo-tree-id9727 . -4) (undo-tree-id9728 . -4) (undo-tree-id9729 . -4) (undo-tree-id9730 . -4) (undo-tree-id9731 . -4) (undo-tree-id9732 . -4) (undo-tree-id9733 . -4) (undo-tree-id9734 . -4) (undo-tree-id9735 . -4) (undo-tree-id9736 . -4) (undo-tree-id9737 . -4) (undo-tree-id9738 . -4) (undo-tree-id9739 . -4) (undo-tree-id9740 . -4) (undo-tree-id9741 . -4) (undo-tree-id9742 . -4) (undo-tree-id9743 . -4) (undo-tree-id9744 . -4) (undo-tree-id9745 . -4) (undo-tree-id9746 . -4) (undo-tree-id9747 . -4) (undo-tree-id9748 . -4) (undo-tree-id9749 . -4) (undo-tree-id9750 . -4) (undo-tree-id9751 . -4) (undo-tree-id9752 . -4) (undo-tree-id9753 . -4) (undo-tree-id9754 . -4) (undo-tree-id9755 . -4) (undo-tree-id9756 . -4) (undo-tree-id9757 . -4) (undo-tree-id9758 . -4) (undo-tree-id9759 . -4) (undo-tree-id9760 . -4) (undo-tree-id9761 . -4) (undo-tree-id9762 . -4) (undo-tree-id9763 . -4) (undo-tree-id9764 . -4) (undo-tree-id9765 . -4) (undo-tree-id9766 . -4) (undo-tree-id9767 . -4) (undo-tree-id9768 . -4) (undo-tree-id9769 . -4) (undo-tree-id9770 . -4) (undo-tree-id9771 . -4) (undo-tree-id9772 . -4) (undo-tree-id9773 . -4) (undo-tree-id9774 . -4) (undo-tree-id9775 . -4) (undo-tree-id9776 . -4) (undo-tree-id9777 . -4) (undo-tree-id9778 . -4) (undo-tree-id9779 . -4) (undo-tree-id9780 . -4) (undo-tree-id9781 . -4) (undo-tree-id9782 . -4) (undo-tree-id9783 . -4) (undo-tree-id9784 . -4) (undo-tree-id9785 . -4) (undo-tree-id9786 . -4) (undo-tree-id9787 . -4) (undo-tree-id9788 . -4) (undo-tree-id9789 . -4) (undo-tree-id9790 . -4) (undo-tree-id9791 . -4) (undo-tree-id9792 . -4) (undo-tree-id9793 . -4) (undo-tree-id9794 . -4) (undo-tree-id9795 . -4) (undo-tree-id9796 . -4) (undo-tree-id9797 . -4) (undo-tree-id9798 . -4) (undo-tree-id9799 . -4) (undo-tree-id9800 . -4) (undo-tree-id9801 . -4) (undo-tree-id9802 . -4) (undo-tree-id9803 . -4) (undo-tree-id9804 . -4) (undo-tree-id9805 . -4) (undo-tree-id9806 . -4) (undo-tree-id9807 . -4) (undo-tree-id9808 . -4) (undo-tree-id9809 . -4) (undo-tree-id9810 . -4) (undo-tree-id9811 . -4) (undo-tree-id9812 . -4) (undo-tree-id9813 . -4) (undo-tree-id9814 . -4) (undo-tree-id9815 . -4) (undo-tree-id9816 . -4) (undo-tree-id9817 . -4) (undo-tree-id9818 . -4) (undo-tree-id9819 . -4) (undo-tree-id9820 . -4) (undo-tree-id9821 . -4) (undo-tree-id9822 . -4) (undo-tree-id9823 . -4) (undo-tree-id9824 . -4) (undo-tree-id9825 . -4) (undo-tree-id9826 . -4) (undo-tree-id9827 . -4) (undo-tree-id9828 . -4) (undo-tree-id9829 . -4) (undo-tree-id9830 . -4) (undo-tree-id9831 . -4) (undo-tree-id9832 . -4) (undo-tree-id9833 . -4) (undo-tree-id9834 . -4) (undo-tree-id9835 . -4) (undo-tree-id9836 . -4) (undo-tree-id9837 . -4) (undo-tree-id9838 . -4) (undo-tree-id9839 . -4) (undo-tree-id9840 . -4) (undo-tree-id9841 . -4) (undo-tree-id9842 . -4) (undo-tree-id9843 . -4) (undo-tree-id9844 . -4) (undo-tree-id9845 . -4) (undo-tree-id9846 . -4) (undo-tree-id9847 . -4) (undo-tree-id9848 . -4) (undo-tree-id9849 . -4) (undo-tree-id9850 . -4) (undo-tree-id9851 . -4) (undo-tree-id9852 . -4) (undo-tree-id9853 . -4) (undo-tree-id9854 . -4) (undo-tree-id9855 . -4) (undo-tree-id9856 . -4) (undo-tree-id9857 . -4) (undo-tree-id9858 . -4) (undo-tree-id9859 . -4) (undo-tree-id9860 . -4) (undo-tree-id9861 . -4) (undo-tree-id9862 . -4) (undo-tree-id9863 . -4) (undo-tree-id9864 . -4) (undo-tree-id9865 . -4) (undo-tree-id9866 . -4) (undo-tree-id9867 . -4) (undo-tree-id9868 . -4) (undo-tree-id9869 . -4) (undo-tree-id9870 . -4) (undo-tree-id9871 . -4) (undo-tree-id9872 . -4) (undo-tree-id9873 . -4) (undo-tree-id9874 . -4) (undo-tree-id9875 . -4) (undo-tree-id9876 . -4) (undo-tree-id9877 . -4) (undo-tree-id9878 . -4) (undo-tree-id9879 . -4) (undo-tree-id9880 . -4) (undo-tree-id9881 . -4) (undo-tree-id9882 . -4) (undo-tree-id9883 . -4) (undo-tree-id9884 . -4) (undo-tree-id9885 . -4) (undo-tree-id9886 . -4) (undo-tree-id9887 . -4) (undo-tree-id9888 . -4) (undo-tree-id9889 . -4) (undo-tree-id9890 . -4) (undo-tree-id9891 . -4) (undo-tree-id9892 . -4) (undo-tree-id9893 . -4) (undo-tree-id9894 . -4) (undo-tree-id9895 . -4) (undo-tree-id9896 . -4) (undo-tree-id9897 . -4) (undo-tree-id9898 . -4) (undo-tree-id9899 . -4) (undo-tree-id9900 . -4) (undo-tree-id9901 . -4) (undo-tree-id9902 . -4) (undo-tree-id9903 . -4) (undo-tree-id9904 . -4) (undo-tree-id9905 . -4) (undo-tree-id9906 . -4) (undo-tree-id9907 . -4) (undo-tree-id9908 . -4) (undo-tree-id9909 . -4) (undo-tree-id9910 . -4) (undo-tree-id9911 . -4) (undo-tree-id9912 . -4) (undo-tree-id9913 . -4) (undo-tree-id9914 . -4) (undo-tree-id9915 . -4) (undo-tree-id9916 . -4) (undo-tree-id9917 . -4) (undo-tree-id9918 . -4) (undo-tree-id9919 . -4) (undo-tree-id9920 . -4) (undo-tree-id9921 . -4) (undo-tree-id9922 . -4) (undo-tree-id9923 . -4) (undo-tree-id9924 . -4) (undo-tree-id9925 . -4) (undo-tree-id9926 . -4) (undo-tree-id9927 . -4) (undo-tree-id9928 . -4) (undo-tree-id9929 . -4) (undo-tree-id9930 . -4) (undo-tree-id9931 . -4) (undo-tree-id9932 . -4) (undo-tree-id9933 . -4) (undo-tree-id9934 . -4) (undo-tree-id9935 . -4) (undo-tree-id9936 . -4) (undo-tree-id9937 . -4) (undo-tree-id9938 . -4) (undo-tree-id9939 . -4) (undo-tree-id9940 . -4) (undo-tree-id9941 . -4) (undo-tree-id9942 . -4) (undo-tree-id9943 . -4) (undo-tree-id9944 . -4) (undo-tree-id9945 . -4) (undo-tree-id9946 . -4) (undo-tree-id9947 . -4) (undo-tree-id9948 . -4) (undo-tree-id9949 . -4) (undo-tree-id9950 . -4) (undo-tree-id9951 . -4) (undo-tree-id9952 . -4) (undo-tree-id9953 . -4) (undo-tree-id9954 . -4) (undo-tree-id9955 . -4) (undo-tree-id9956 . -4) (undo-tree-id9957 . -4) (undo-tree-id9958 . -4) (undo-tree-id9959 . -4) (undo-tree-id9960 . -4) (undo-tree-id9961 . -4) (undo-tree-id9962 . -4) (undo-tree-id9963 . -4) (undo-tree-id9964 . -4) (undo-tree-id9965 . -4) (undo-tree-id9966 . -4) (undo-tree-id9967 . -4) (undo-tree-id9968 . -4) (undo-tree-id9969 . -4) (undo-tree-id9970 . -4) (undo-tree-id9971 . -4) (undo-tree-id9972 . -4) (undo-tree-id9973 . -4) (undo-tree-id9974 . -4) (undo-tree-id9975 . -4) (undo-tree-id9976 . -4) (undo-tree-id9977 . -4) (undo-tree-id9978 . -4) (undo-tree-id9979 . -4) (undo-tree-id9980 . -4) (undo-tree-id9981 . -4) (undo-tree-id9982 . -4) (undo-tree-id9983 . -4) (undo-tree-id9984 . -4) (undo-tree-id9985 . -4) (undo-tree-id9986 . -4) (undo-tree-id9987 . -4) (undo-tree-id9988 . -4) (undo-tree-id9989 . -4) (undo-tree-id9990 . -4) (undo-tree-id9991 . -4) (undo-tree-id9992 . -4) (undo-tree-id9993 . -4) (undo-tree-id9994 . -4) (undo-tree-id9995 . -4) (undo-tree-id9996 . -4) (undo-tree-id9997 . -4) (undo-tree-id9998 . -4) (undo-tree-id9999 . -4) (undo-tree-id10000 . -4) (undo-tree-id10001 . -4) (undo-tree-id10002 . -4) (undo-tree-id10003 . -4) (undo-tree-id10004 . -4) (undo-tree-id10005 . -4) (undo-tree-id10006 . -4) (undo-tree-id10007 . -4) (undo-tree-id10008 . -4) (undo-tree-id10009 . -4) (undo-tree-id10010 . -4) (undo-tree-id10011 . -4) (undo-tree-id10012 . -4) (undo-tree-id10013 . -4) (undo-tree-id10014 . -4) (undo-tree-id10015 . -4) (undo-tree-id10016 . -4) (undo-tree-id10017 . -4) (undo-tree-id10018 . -4) (undo-tree-id10019 . -4) (undo-tree-id10020 . -4) (undo-tree-id10021 . -4) (undo-tree-id10022 . -4) (undo-tree-id10023 . -4) (undo-tree-id10024 . -4) (undo-tree-id10025 . -4) (undo-tree-id10026 . -4) (undo-tree-id10027 . -4) (undo-tree-id10028 . -4) (undo-tree-id10029 . -4) (undo-tree-id10030 . -4) (undo-tree-id10031 . -4) (undo-tree-id10032 . -4) (undo-tree-id10033 . -4) (undo-tree-id10034 . -4) (undo-tree-id10035 . -4) (undo-tree-id10036 . -4) (undo-tree-id10037 . -4) (undo-tree-id10038 . -4) (undo-tree-id10039 . -4) (undo-tree-id10040 . -4) (undo-tree-id10041 . -4) (undo-tree-id10042 . -4) (undo-tree-id10043 . -4) (undo-tree-id10044 . -4) (undo-tree-id10045 . -4) (undo-tree-id10046 . -4) (undo-tree-id10047 . -4) (undo-tree-id10048 . -4) (undo-tree-id10049 . -4) (undo-tree-id10050 . -4) (undo-tree-id10051 . -4) (undo-tree-id10052 . -4) (undo-tree-id10053 . -4) (undo-tree-id10054 . -4) (undo-tree-id10055 . -4) (undo-tree-id10056 . -4) (undo-tree-id10057 . -4) (undo-tree-id10058 . -4) (undo-tree-id10059 . -4) (undo-tree-id10060 . -4) (undo-tree-id10061 . -4) (undo-tree-id10062 . -4) (undo-tree-id10063 . -4) (undo-tree-id10064 . -4) (undo-tree-id10065 . -4) (undo-tree-id10066 . -4) (undo-tree-id10067 . -4) (undo-tree-id10068 . -4) (undo-tree-id10069 . -4) (undo-tree-id10070 . -4) (undo-tree-id10071 . -4) (undo-tree-id10072 . -4) (undo-tree-id10073 . -4) (undo-tree-id10074 . -4) (undo-tree-id10075 . -4) (undo-tree-id10076 . -4) (undo-tree-id10077 . -4) (undo-tree-id10078 . -4) (undo-tree-id10079 . -4) (undo-tree-id10080 . -4) (undo-tree-id10081 . -4) (undo-tree-id10082 . -4) (undo-tree-id10083 . -4) (undo-tree-id10084 . -4) (undo-tree-id10085 . -4) (undo-tree-id10086 . -4) (undo-tree-id10087 . -4) (undo-tree-id10088 . -4) (undo-tree-id10089 . -4) (undo-tree-id10090 . -4) (undo-tree-id10091 . -4) (undo-tree-id10092 . -4) (undo-tree-id10093 . -4) (undo-tree-id10094 . -4) (undo-tree-id10095 . -4) (undo-tree-id10096 . -4) (undo-tree-id10097 . -4) (undo-tree-id10098 . -4) (undo-tree-id10099 . -4) (undo-tree-id10100 . -4) (undo-tree-id10101 . -4) (undo-tree-id10102 . -4) (undo-tree-id10103 . -4) (undo-tree-id10104 . -4) (undo-tree-id10105 . -4) (undo-tree-id10106 . -4) (undo-tree-id10107 . -4) (undo-tree-id10108 . -4) (undo-tree-id10109 . -4) (undo-tree-id10110 . -4) (undo-tree-id10111 . -4) (undo-tree-id10112 . -4) (undo-tree-id10113 . -4) (undo-tree-id10114 . -4) (undo-tree-id10115 . -4) (undo-tree-id10116 . -4) (undo-tree-id10117 . -4) (undo-tree-id10118 . -4) (undo-tree-id10119 . -4) (undo-tree-id10120 . -4) (undo-tree-id10121 . -4) (undo-tree-id10122 . -4) (undo-tree-id10123 . -4) (undo-tree-id10124 . -4) (undo-tree-id10125 . -4) (undo-tree-id10126 . -4) (undo-tree-id10127 . -4) (undo-tree-id10128 . -4) (undo-tree-id10129 . -4) (undo-tree-id10130 . -4) (undo-tree-id10131 . -4) (undo-tree-id10132 . -4) (undo-tree-id10133 . -4) (undo-tree-id10134 . -4) (undo-tree-id10135 . -4) (undo-tree-id10136 . -4) (undo-tree-id10137 . -4) (undo-tree-id10138 . -4) (undo-tree-id10139 . -4) (undo-tree-id10140 . -4) (undo-tree-id10141 . -4) (undo-tree-id10142 . -4) (undo-tree-id10143 . -4) (undo-tree-id10144 . -4) (undo-tree-id10145 . -4) (undo-tree-id10146 . -4) (undo-tree-id10147 . -4) (undo-tree-id10148 . -4) (undo-tree-id10149 . -4) (undo-tree-id10150 . -4) (undo-tree-id10151 . -4) (undo-tree-id10152 . -4) (undo-tree-id10153 . -4) (undo-tree-id10154 . -4) (undo-tree-id10155 . -4) (undo-tree-id10156 . -4) (undo-tree-id10157 . -4) (undo-tree-id10158 . -4) (undo-tree-id10159 . -4) (undo-tree-id10160 . -4) (undo-tree-id10161 . -4) (undo-tree-id10162 . -4) (undo-tree-id10163 . -4) (undo-tree-id10164 . -4) (undo-tree-id10165 . -4) (undo-tree-id10166 . -4) (undo-tree-id10167 . -4) (undo-tree-id10168 . -4) (undo-tree-id10169 . -4) (undo-tree-id10170 . -4) (undo-tree-id10171 . -4) (undo-tree-id10172 . -4) (undo-tree-id10173 . -4) (undo-tree-id10174 . -4) (undo-tree-id10175 . -4) (undo-tree-id10176 . -4) (undo-tree-id10177 . -4) (undo-tree-id10178 . -4) (undo-tree-id10179 . -4) (undo-tree-id10180 . -4) (undo-tree-id10181 . -4) (undo-tree-id10182 . -4) (undo-tree-id10183 . -4) (undo-tree-id10184 . -4) (undo-tree-id10185 . -4) (undo-tree-id10186 . -4) (undo-tree-id10187 . -4) (undo-tree-id10188 . -4) (undo-tree-id10189 . -4) (undo-tree-id10190 . -4) (undo-tree-id10191 . -4) (undo-tree-id10192 . -4) (undo-tree-id10193 . -4) (undo-tree-id10194 . -4) (undo-tree-id10195 . -4) (undo-tree-id10196 . -4) (undo-tree-id10197 . -4) (undo-tree-id10198 . -4) (undo-tree-id10199 . -4) (undo-tree-id10200 . -4) (undo-tree-id10201 . -4) (undo-tree-id10202 . -4) (undo-tree-id10203 . -4) (undo-tree-id10204 . -4) (undo-tree-id10205 . -4) (undo-tree-id10206 . -4) (undo-tree-id10207 . -4) (undo-tree-id10208 . -4) (undo-tree-id10209 . -4) (undo-tree-id10210 . -4) (undo-tree-id10211 . -4) (undo-tree-id10212 . -4) (undo-tree-id10213 . -4) (undo-tree-id10214 . -4) (undo-tree-id10215 . -4) (undo-tree-id10216 . -4) (undo-tree-id10217 . -4) (undo-tree-id10218 . -4) (undo-tree-id10219 . -4) (undo-tree-id10220 . -4) (undo-tree-id10221 . -4) (undo-tree-id10222 . -4) (undo-tree-id10223 . -4) (undo-tree-id10224 . -4) (undo-tree-id10225 . -4) (undo-tree-id10226 . -4) (undo-tree-id10227 . -4) (undo-tree-id10228 . -4) (undo-tree-id10229 . -4) (undo-tree-id10230 . -4) (undo-tree-id10231 . -4) (undo-tree-id10232 . -4) (undo-tree-id10233 . -4) (undo-tree-id10234 . -4) (undo-tree-id10235 . -4) (undo-tree-id10236 . -4) (undo-tree-id10237 . -4) (undo-tree-id10238 . -4) (undo-tree-id10239 . -4) (undo-tree-id10240 . -4) (undo-tree-id10241 . -4) (undo-tree-id10242 . -4) (undo-tree-id10243 . -4) (undo-tree-id10244 . -4) (undo-tree-id10245 . -4) (undo-tree-id10246 . -4) (undo-tree-id10247 . -4) (undo-tree-id10248 . -4) (undo-tree-id10249 . -4) (undo-tree-id10250 . -4) (undo-tree-id10251 . -4) (undo-tree-id10252 . -4) (undo-tree-id10253 . -4) (undo-tree-id10254 . -4) (undo-tree-id10255 . -4) (undo-tree-id10256 . -4) (undo-tree-id10257 . -4) (undo-tree-id10258 . -4) (undo-tree-id10259 . -4) (undo-tree-id10260 . -4) (undo-tree-id10261 . -4) (undo-tree-id10262 . -4) (undo-tree-id10263 . -4) (undo-tree-id10264 . -4) (undo-tree-id10265 . -4) (undo-tree-id10266 . -4) (undo-tree-id10267 . -4) (undo-tree-id10268 . -4) (undo-tree-id10269 . -4) (undo-tree-id10270 . -4) (undo-tree-id10271 . -4) (undo-tree-id10272 . -4) (undo-tree-id10273 . -4) (undo-tree-id10274 . -4) (undo-tree-id10275 . -4) (undo-tree-id10276 . -4) (undo-tree-id10277 . -4) (undo-tree-id10278 . -4) (undo-tree-id10279 . -4) (undo-tree-id10280 . -4) (undo-tree-id10281 . -4) (undo-tree-id10282 . -4) (undo-tree-id10283 . -4) (undo-tree-id10284 . -4) (undo-tree-id10285 . -4) (undo-tree-id10286 . -4) (undo-tree-id10287 . -4) (undo-tree-id10288 . -4) (undo-tree-id10289 . -4) (undo-tree-id10290 . -4) (undo-tree-id10291 . -4) (undo-tree-id10292 . -4) (undo-tree-id10293 . -4) (undo-tree-id10294 . -4) (undo-tree-id10295 . -4) (undo-tree-id10296 . -4) (undo-tree-id10297 . -4) (undo-tree-id10298 . -4) (undo-tree-id10299 . -4) (undo-tree-id10300 . -4) (undo-tree-id10301 . -4) (undo-tree-id10302 . -4) (undo-tree-id10303 . -4) (undo-tree-id10304 . -4) (undo-tree-id10305 . -4) (undo-tree-id10306 . -4) (undo-tree-id10307 . -4) (undo-tree-id10308 . -4) (undo-tree-id10309 . -4) (undo-tree-id10310 . -4) (undo-tree-id10311 . -4) (undo-tree-id10312 . -4) (undo-tree-id10313 . -4) (undo-tree-id10314 . -4) (undo-tree-id10315 . -4) (undo-tree-id10316 . -4) (undo-tree-id10317 . -4) (undo-tree-id10318 . -4) (undo-tree-id10319 . -4) (undo-tree-id10320 . -4) (undo-tree-id10321 . -4) (undo-tree-id10322 . -4) (undo-tree-id10323 . -4) (undo-tree-id10324 . -4) (undo-tree-id10325 . -4) (undo-tree-id10326 . -4) (undo-tree-id10327 . -4) (undo-tree-id10328 . -4) (undo-tree-id10329 . -4) (undo-tree-id10330 . -4) (undo-tree-id10331 . -4) (undo-tree-id10332 . -4) (undo-tree-id10333 . -4) (undo-tree-id10334 . -4) (undo-tree-id10335 . -4) (undo-tree-id10336 . -4) (undo-tree-id10337 . -4) (undo-tree-id10338 . -4) (undo-tree-id10339 . -4) (undo-tree-id10340 . -4) (undo-tree-id10341 . -4) (undo-tree-id10342 . -4) (undo-tree-id10343 . -4) (undo-tree-id10344 . -4) (undo-tree-id10345 . -4) (undo-tree-id10346 . -4) (undo-tree-id10347 . -4) (undo-tree-id10348 . -4) (undo-tree-id10349 . -4) (undo-tree-id10350 . -4) (undo-tree-id10351 . -4) (undo-tree-id10352 . -4) (undo-tree-id10353 . -4) (undo-tree-id10354 . -4) (undo-tree-id10355 . -4) (undo-tree-id10356 . -4) (undo-tree-id10357 . -4) (undo-tree-id10358 . -4) (undo-tree-id10359 . -4) (undo-tree-id10360 . -4) (undo-tree-id10361 . -4) (undo-tree-id10362 . -4) (undo-tree-id10363 . -4) (undo-tree-id10364 . -4) (undo-tree-id10365 . -4) (undo-tree-id10366 . -4) (undo-tree-id10367 . -4) (undo-tree-id10368 . -4) (undo-tree-id10369 . -4) (undo-tree-id10370 . -4) (undo-tree-id10371 . -4) (undo-tree-id10372 . -4) (undo-tree-id10373 . -4) (undo-tree-id10374 . -4) (undo-tree-id10375 . -4) (undo-tree-id10376 . -4) (undo-tree-id10377 . -4) (undo-tree-id10378 . -4) (undo-tree-id10379 . -4) (undo-tree-id10380 . -4) (undo-tree-id10381 . -4) (undo-tree-id10382 . -4) (undo-tree-id10383 . -4) (undo-tree-id10384 . -4) (undo-tree-id10385 . -4) (undo-tree-id10386 . -4) (undo-tree-id10387 . -4) (undo-tree-id10388 . -4) (undo-tree-id10389 . -4) (undo-tree-id10390 . -4) (undo-tree-id10391 . -4) (undo-tree-id10392 . -4) (undo-tree-id10393 . -4) (undo-tree-id10394 . -4) (undo-tree-id10395 . -4) (undo-tree-id10396 . -4) (undo-tree-id10397 . -4) (undo-tree-id10398 . -4) (undo-tree-id10399 . -4) (undo-tree-id10400 . -4) (undo-tree-id10401 . -4) (undo-tree-id10402 . -4) (undo-tree-id10403 . -4) (undo-tree-id10404 . -4) (undo-tree-id10405 . -4) (undo-tree-id10406 . -4) (undo-tree-id10407 . -4) (undo-tree-id10408 . -4) (undo-tree-id10409 . -4) (undo-tree-id10410 . -4) (undo-tree-id10411 . -4) (undo-tree-id10412 . -4) (undo-tree-id10413 . -4) (undo-tree-id10414 . -4) (undo-tree-id10415 . -4) (undo-tree-id10416 . -4) (undo-tree-id10417 . -4) (undo-tree-id10418 . -4) (undo-tree-id10419 . -4) (undo-tree-id10420 . -4) (undo-tree-id10421 . -4) (undo-tree-id10422 . -4) (undo-tree-id10423 . -4) (undo-tree-id10424 . -4) (undo-tree-id10425 . -4) (undo-tree-id10426 . -4) (undo-tree-id10427 . -4) (undo-tree-id10428 . -4) (undo-tree-id10429 . -4) (undo-tree-id10430 . -4) (undo-tree-id10431 . -4) (undo-tree-id10432 . -4) (undo-tree-id10433 . -4) (undo-tree-id10434 . -4) (undo-tree-id10435 . -4) (undo-tree-id10436 . -4) (undo-tree-id10437 . -4) (undo-tree-id10438 . -4) (undo-tree-id10439 . -4) (undo-tree-id10440 . -4) (undo-tree-id10441 . -4) (undo-tree-id10442 . -4) (undo-tree-id10443 . -4) (undo-tree-id10444 . -4) (undo-tree-id10445 . -4) (undo-tree-id10446 . -4) (undo-tree-id10447 . -4) (undo-tree-id10448 . -4) (undo-tree-id10449 . -4) (undo-tree-id10450 . -4) (undo-tree-id10451 . -4) (undo-tree-id10452 . -4) (undo-tree-id10453 . -4) (undo-tree-id10454 . -4) (undo-tree-id10455 . -4) (undo-tree-id10456 . -4) (undo-tree-id10457 . -4) (undo-tree-id10458 . -4) (undo-tree-id10459 . -4) (undo-tree-id10460 . -4) (undo-tree-id10461 . -4) (undo-tree-id10462 . -4) (undo-tree-id10463 . -4) (undo-tree-id10464 . -4) (undo-tree-id10465 . -4) (undo-tree-id10466 . -4) (undo-tree-id10467 . -4) (undo-tree-id10468 . -4) (undo-tree-id10469 . -4) (undo-tree-id10470 . -4) (undo-tree-id10471 . -4) (undo-tree-id10472 . -4) (undo-tree-id10473 . -4) (undo-tree-id10474 . -4) (undo-tree-id10475 . -4) (undo-tree-id10476 . -4) (undo-tree-id10477 . -4) (undo-tree-id10478 . -4) (undo-tree-id10479 . -4) (undo-tree-id10480 . -4) (undo-tree-id10481 . -4) (undo-tree-id10482 . -4) (undo-tree-id10483 . -4) (undo-tree-id10484 . -4) (undo-tree-id10485 . -4) (undo-tree-id10486 . -4) (undo-tree-id10487 . -4) (undo-tree-id10488 . -4) (undo-tree-id10489 . -4) (undo-tree-id10490 . -4) (undo-tree-id10491 . -4) (undo-tree-id10492 . -4) (undo-tree-id10493 . -4) (undo-tree-id10494 . -4) (undo-tree-id10495 . -4) (undo-tree-id10496 . -4) (undo-tree-id10497 . -4) (undo-tree-id10498 . -4) (undo-tree-id10499 . -4) (undo-tree-id10500 . -4) (undo-tree-id10501 . -4) (undo-tree-id10502 . -4) (undo-tree-id10503 . -4) (undo-tree-id10504 . -4) (undo-tree-id10505 . -4) (undo-tree-id10506 . -4) (undo-tree-id10507 . -4) (undo-tree-id10508 . -4) (undo-tree-id10509 . -4) (undo-tree-id10510 . -4) (undo-tree-id10511 . -4) (undo-tree-id10512 . -4) (undo-tree-id10513 . -4) (undo-tree-id10514 . -4) (undo-tree-id10515 . -4) (undo-tree-id10516 . -4) (undo-tree-id10517 . -4) (undo-tree-id10518 . -4) (undo-tree-id10519 . -4) (undo-tree-id10520 . -4) (undo-tree-id10521 . -4) (undo-tree-id10522 . -4) (undo-tree-id10523 . -4) (undo-tree-id10524 . -4) (undo-tree-id10525 . -4) (undo-tree-id10526 . -4) (undo-tree-id10527 . -4) (undo-tree-id10528 . -4) (undo-tree-id10529 . -4) (undo-tree-id10530 . -4) (undo-tree-id10531 . -4) (undo-tree-id10532 . -4) (undo-tree-id10533 . -4) (undo-tree-id10534 . -4) (undo-tree-id10535 . -4) (undo-tree-id10536 . -4) (undo-tree-id10537 . -4) (undo-tree-id10538 . -4) (undo-tree-id10539 . -4) (undo-tree-id10540 . -4) (undo-tree-id10541 . -4) (undo-tree-id10542 . -4) (undo-tree-id10543 . -4) (undo-tree-id10544 . -4) (undo-tree-id10545 . -4) (undo-tree-id10546 . -4) (undo-tree-id10547 . -4) (undo-tree-id10548 . -4) (undo-tree-id10549 . -4) (undo-tree-id10550 . -4) (undo-tree-id10551 . -4) (undo-tree-id10552 . -4) (undo-tree-id10553 . -4) (undo-tree-id10554 . -4) (undo-tree-id10555 . -4) (undo-tree-id10556 . -4) (undo-tree-id10557 . -4) (undo-tree-id10558 . -4) (undo-tree-id10559 . -4) (undo-tree-id10560 . -4) (undo-tree-id10561 . -4) (undo-tree-id10562 . -4) (undo-tree-id10563 . -4) (undo-tree-id10564 . -4) (undo-tree-id10565 . -4) (undo-tree-id10566 . -4) (undo-tree-id10567 . -4) (undo-tree-id10568 . -4) (undo-tree-id10569 . -4) (undo-tree-id10570 . -4) (undo-tree-id10571 . -4) (undo-tree-id10572 . -4) (undo-tree-id10573 . -4) (undo-tree-id10574 . -4) (undo-tree-id10575 . -4) (undo-tree-id10576 . -4) (undo-tree-id10577 . -4) (undo-tree-id10578 . -4) (undo-tree-id10579 . -4) (undo-tree-id10580 . -4) (undo-tree-id10581 . -4) (undo-tree-id10582 . -4) (undo-tree-id10583 . -4) (undo-tree-id10584 . -4) (undo-tree-id10585 . -4) (undo-tree-id10586 . -4) (undo-tree-id10587 . -4) (undo-tree-id10588 . -4) (undo-tree-id10589 . -4) (undo-tree-id10590 . -4) (undo-tree-id10591 . -4) (undo-tree-id10592 . -4) (undo-tree-id10593 . -4) (undo-tree-id10594 . -4) (undo-tree-id10595 . -4) (undo-tree-id10596 . -4) (undo-tree-id10597 . -4) (undo-tree-id10598 . -4) (undo-tree-id10599 . -4) (undo-tree-id10600 . -4) (undo-tree-id10601 . -4) (undo-tree-id10602 . -4) (undo-tree-id10603 . -4) (undo-tree-id10604 . -4) (undo-tree-id10605 . -4) (undo-tree-id10606 . -4) (undo-tree-id10607 . -4) (undo-tree-id10608 . -4) (undo-tree-id10609 . -4) (undo-tree-id10610 . -4) (undo-tree-id10611 . -4) (undo-tree-id10612 . -4) (undo-tree-id10613 . -4) (undo-tree-id10614 . -4) (undo-tree-id10615 . -4) (undo-tree-id10616 . -4) (undo-tree-id10617 . -4) (undo-tree-id10618 . -4) (undo-tree-id10619 . -4) (undo-tree-id10620 . -4) (undo-tree-id10621 . -4) (undo-tree-id10622 . -4) (undo-tree-id10623 . -4) (undo-tree-id10624 . -4) (undo-tree-id10625 . -4) (undo-tree-id10626 . -4) (undo-tree-id10627 . -4) (undo-tree-id10628 . -4) (undo-tree-id10629 . -4) (undo-tree-id10630 . -4) (undo-tree-id10631 . -4) (undo-tree-id10632 . -4) (undo-tree-id10633 . -4) (undo-tree-id10634 . -4) (undo-tree-id10635 . -4) (undo-tree-id10636 . -4) (undo-tree-id10637 . -4) (undo-tree-id10638 . -4) (undo-tree-id10639 . -4) (undo-tree-id10640 . -4) (undo-tree-id10641 . -4) (undo-tree-id10642 . -4) (undo-tree-id10643 . -4) (undo-tree-id10644 . -4) (undo-tree-id10645 . -4) (undo-tree-id10646 . -4) (undo-tree-id10647 . -4) (undo-tree-id10648 . -4) (undo-tree-id10649 . -4) (undo-tree-id10650 . -4) (undo-tree-id10651 . -4) (undo-tree-id10652 . -4) (undo-tree-id10653 . -4) (undo-tree-id10654 . -4) (undo-tree-id10655 . -4) (undo-tree-id10656 . -4) (undo-tree-id10657 . -4) (undo-tree-id10658 . -4) (undo-tree-id10659 . -4) (undo-tree-id10660 . -4) (undo-tree-id10661 . -4) (31260 . 31261)) nil (25155 30866 721235 0) 0 nil])
+([nil nil ((#("    " 0 4 (fontified nil)) . -31210) (undo-tree-id5531 . -4) (undo-tree-id5532 . -4) (undo-tree-id5533 . -4) (undo-tree-id5534 . -4) (undo-tree-id5535 . -4) (undo-tree-id5536 . -4) (undo-tree-id5537 . -4) (undo-tree-id5538 . -4) (undo-tree-id5539 . -4) (undo-tree-id5540 . -4) (undo-tree-id5541 . -4) (undo-tree-id5542 . -4) (undo-tree-id5543 . -4) (undo-tree-id5544 . -4) (undo-tree-id5545 . -4) (undo-tree-id5546 . -4) (undo-tree-id5547 . -4) (undo-tree-id5548 . -4) (undo-tree-id5549 . -4) (undo-tree-id5550 . -4) (undo-tree-id5551 . -4) (undo-tree-id5552 . -4) (undo-tree-id5553 . -4) (undo-tree-id5554 . -4) (undo-tree-id5555 . -4) (undo-tree-id5556 . -4) (undo-tree-id5557 . -4) (undo-tree-id5558 . -4) (undo-tree-id5559 . -4) (undo-tree-id5560 . -4) (undo-tree-id5561 . -4) (undo-tree-id5562 . -4) (undo-tree-id5563 . -4) (undo-tree-id5564 . -4) (undo-tree-id5565 . -4) (undo-tree-id5566 . -4) (undo-tree-id5567 . -4) (undo-tree-id5568 . -4) (undo-tree-id5569 . -4) (undo-tree-id5570 . -4) (undo-tree-id5571 . -4) (undo-tree-id5572 . -4) (undo-tree-id5573 . -4) (undo-tree-id5574 . -4) (undo-tree-id5575 . -4) (undo-tree-id5576 . -4) (undo-tree-id5577 . -4) (undo-tree-id5578 . -4) (undo-tree-id5579 . -4) (undo-tree-id5580 . -4) (undo-tree-id5581 . -4) (undo-tree-id5582 . -4) (undo-tree-id5583 . -4) (undo-tree-id5584 . -4) (undo-tree-id5585 . -4) (undo-tree-id5586 . -4) (undo-tree-id5587 . -4) (undo-tree-id5588 . -4) (undo-tree-id5589 . -4) (undo-tree-id5590 . -4) (undo-tree-id5591 . -4) (undo-tree-id5592 . -4) (undo-tree-id5593 . -4) (undo-tree-id5594 . -4) (undo-tree-id5595 . -4) (undo-tree-id5596 . -4) (undo-tree-id5597 . -4) (undo-tree-id5598 . -4) (undo-tree-id5599 . -4) (undo-tree-id5600 . -4) (undo-tree-id5601 . -4) (undo-tree-id5602 . -4) (undo-tree-id5603 . -4) (undo-tree-id5604 . -4) (undo-tree-id5605 . -4) (undo-tree-id5606 . -4) (undo-tree-id5607 . -4) (undo-tree-id5608 . -4) (undo-tree-id5609 . -4) (undo-tree-id5610 . -4) (undo-tree-id5611 . -4) (undo-tree-id5612 . -4) (undo-tree-id5613 . -4) (undo-tree-id5614 . -4) (undo-tree-id5615 . -4) (undo-tree-id5616 . -4) (undo-tree-id5617 . -4) (undo-tree-id5618 . -4) (undo-tree-id5619 . -4) (undo-tree-id5620 . -4) (undo-tree-id5621 . -4) (undo-tree-id5622 . -4) (undo-tree-id5623 . -4) (undo-tree-id5624 . -4) (undo-tree-id5625 . -4) (undo-tree-id5626 . -4) (undo-tree-id5627 . -4) (undo-tree-id5628 . -4) (undo-tree-id5629 . -4) (undo-tree-id5630 . -4) (undo-tree-id5631 . -4) (undo-tree-id5632 . -4) (undo-tree-id5633 . -4) (undo-tree-id5634 . -4) (undo-tree-id5635 . -4) (undo-tree-id5636 . -4) (undo-tree-id5637 . -4) (undo-tree-id5638 . -4) (undo-tree-id5639 . -4) (undo-tree-id5640 . -4) (undo-tree-id5641 . -4) (undo-tree-id5642 . -4) (undo-tree-id5643 . -4) (undo-tree-id5644 . -4) (undo-tree-id5645 . -4) (undo-tree-id5646 . -4) (undo-tree-id5647 . -4) (undo-tree-id5648 . -4) (undo-tree-id5649 . -4) (undo-tree-id5650 . -4) (undo-tree-id5651 . -4) (undo-tree-id5652 . -4) (undo-tree-id5653 . -4) (undo-tree-id5654 . -4) (undo-tree-id5655 . -4) (undo-tree-id5656 . -4) (undo-tree-id5657 . -4) (undo-tree-id5658 . -4) (undo-tree-id5659 . -4) (undo-tree-id5660 . -4) (undo-tree-id5661 . -4) (undo-tree-id5662 . -4) (undo-tree-id5663 . -4) (undo-tree-id5664 . -4) (undo-tree-id5665 . -4) (undo-tree-id5666 . -4) (undo-tree-id5667 . -4) (undo-tree-id5668 . -4) (undo-tree-id5669 . -4) (undo-tree-id5670 . -4) (undo-tree-id5671 . -4) (undo-tree-id5672 . -4) (undo-tree-id5673 . -4) (undo-tree-id5674 . -4) (undo-tree-id5675 . -4) (undo-tree-id5676 . -4) (undo-tree-id5677 . -4) (undo-tree-id5678 . -4) (undo-tree-id5679 . -4) (undo-tree-id5680 . -4) (undo-tree-id5681 . -4) (undo-tree-id5682 . -4) (undo-tree-id5683 . -4) (undo-tree-id5684 . -4) (undo-tree-id5685 . -4) (undo-tree-id5686 . -4) (undo-tree-id5687 . -4) (undo-tree-id5688 . -4) (undo-tree-id5689 . -4) (undo-tree-id5690 . -4) (undo-tree-id5691 . -4) (undo-tree-id5692 . -4) (undo-tree-id5693 . -4) (undo-tree-id5694 . -4) (undo-tree-id5695 . -4) (undo-tree-id5696 . -4) (31214 . 31216) (#("(" 0 1 (fontified nil)) . -31214) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (31214 . 31215) (t 25155 30237 981072 369000)) ((#("(" 0 1 (fontified nil)) . 31214) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (31214 . 31215) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face) help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . 31214) (undo-tree-id6594 . -2) (undo-tree-id6595 . -2) (undo-tree-id6596 . -2) (undo-tree-id6597 . -2) (undo-tree-id6598 . -2) (undo-tree-id6599 . -2) (undo-tree-id6600 . -2) (undo-tree-id6601 . -2) (undo-tree-id6602 . -2) (undo-tree-id6603 . -2) (undo-tree-id6604 . -2) (undo-tree-id6605 . -2) (undo-tree-id6606 . -2) (undo-tree-id6607 . -2) (undo-tree-id6608 . -2) (undo-tree-id6609 . -2) (undo-tree-id6610 . -2) (undo-tree-id6611 . -2) (undo-tree-id6612 . -2) (undo-tree-id6613 . -2) (undo-tree-id6614 . -2) (undo-tree-id6615 . -2) (undo-tree-id6616 . -2) (undo-tree-id6617 . -2) (undo-tree-id6618 . -2) (undo-tree-id6619 . -2) (undo-tree-id6620 . -2) (undo-tree-id6621 . -2) (undo-tree-id6622 . -2) (undo-tree-id6623 . -2) (undo-tree-id6624 . -2) (undo-tree-id6625 . -2) (undo-tree-id6626 . -2) (undo-tree-id6627 . -2) (undo-tree-id6628 . -2) (undo-tree-id6629 . -2) (undo-tree-id6630 . -2) (undo-tree-id6631 . -2) (undo-tree-id6632 . -2) (undo-tree-id6633 . -2) (undo-tree-id6634 . -2) (undo-tree-id6635 . -2) (undo-tree-id6636 . -2) (undo-tree-id6637 . -2) (undo-tree-id6638 . -2) (undo-tree-id6639 . -2) (undo-tree-id6640 . -2) (undo-tree-id6641 . -2) (undo-tree-id6642 . -2) (undo-tree-id6643 . -2) (undo-tree-id6644 . -2) (undo-tree-id6645 . -2) (undo-tree-id6646 . -2) (undo-tree-id6647 . -2) (undo-tree-id6648 . -2) (undo-tree-id6649 . -2) (undo-tree-id6650 . -2) (undo-tree-id6651 . -2) (undo-tree-id6652 . -2) (undo-tree-id6653 . -2) (undo-tree-id6654 . -2) (undo-tree-id6655 . -2) (undo-tree-id6656 . -2) (undo-tree-id6657 . -2) (undo-tree-id6658 . -2) (undo-tree-id6659 . -2) (undo-tree-id6660 . -2) (undo-tree-id6661 . -2) (undo-tree-id6662 . -2) (undo-tree-id6663 . -2) (undo-tree-id6664 . -2) (undo-tree-id6665 . -2) (undo-tree-id6666 . -2) (undo-tree-id6667 . -2) (undo-tree-id6668 . -2) (undo-tree-id6669 . -2) (undo-tree-id6670 . -2) (undo-tree-id6671 . -2) (undo-tree-id6672 . -2) (undo-tree-id6673 . -2) (undo-tree-id6674 . -2) (undo-tree-id6675 . -2) (undo-tree-id6676 . -2) (undo-tree-id6677 . -2) (undo-tree-id6678 . -2) (undo-tree-id6679 . -2) (undo-tree-id6680 . -2) (undo-tree-id6681 . -2) (undo-tree-id6682 . -2) (undo-tree-id6683 . -2) (undo-tree-id6684 . -2) (undo-tree-id6685 . -2) (undo-tree-id6686 . -2) (undo-tree-id6687 . -2) (undo-tree-id6688 . -2) (undo-tree-id6689 . -2) (undo-tree-id6690 . -2) (undo-tree-id6691 . -2) (undo-tree-id6692 . -2) (undo-tree-id6693 . -2) (undo-tree-id6694 . -2) (undo-tree-id6695 . -2) (undo-tree-id6696 . -2) (undo-tree-id6697 . -2) (undo-tree-id6698 . -2) (undo-tree-id6699 . -2) (undo-tree-id6700 . -2) (undo-tree-id6701 . -2) (undo-tree-id6702 . -2) (undo-tree-id6703 . -2) (undo-tree-id6704 . -2) (undo-tree-id6705 . -2) (undo-tree-id6706 . -2) (undo-tree-id6707 . -2) (undo-tree-id6708 . -2) (undo-tree-id6709 . -2) (undo-tree-id6710 . -2) (undo-tree-id6711 . -2) (undo-tree-id6712 . -2) (undo-tree-id6713 . -2) (undo-tree-id6714 . -2) (undo-tree-id6715 . -2) (undo-tree-id6716 . -2) (undo-tree-id6717 . -2) (undo-tree-id6718 . -2) (undo-tree-id6719 . -2) (undo-tree-id6720 . -2) (undo-tree-id6721 . -2) (undo-tree-id6722 . -2) (undo-tree-id6723 . -2) (undo-tree-id6724 . -2) (undo-tree-id6725 . -2) (undo-tree-id6726 . -2) (undo-tree-id6727 . -2) (undo-tree-id6728 . -2) (undo-tree-id6729 . -2) (undo-tree-id6730 . -2) (undo-tree-id6731 . -2) (undo-tree-id6732 . -2) (undo-tree-id6733 . -2) (undo-tree-id6734 . -2) (undo-tree-id6735 . -2) (undo-tree-id6736 . -2) (undo-tree-id6737 . -2) (undo-tree-id6738 . -2) (undo-tree-id6739 . -2) (undo-tree-id6740 . -2) (undo-tree-id6741 . -2) (undo-tree-id6742 . -2) (undo-tree-id6743 . -2) (undo-tree-id6744 . -2) (undo-tree-id6745 . -2) (undo-tree-id6746 . -2) (undo-tree-id6747 . -2) (undo-tree-id6748 . -2) (undo-tree-id6749 . -2) (undo-tree-id6750 . -2) (undo-tree-id6751 . -2) (undo-tree-id6752 . -2) (undo-tree-id6753 . -2) (undo-tree-id6754 . -2) (undo-tree-id6755 . -2) (undo-tree-id6756 . -2) (undo-tree-id6757 . -2) (undo-tree-id6758 . -2) (undo-tree-id6759 . -2) (undo-tree-id6760 . -2) (undo-tree-id6761 . -2) (undo-tree-id6762 . -2) (undo-tree-id6763 . -2) (undo-tree-id6764 . -2) (undo-tree-id6765 . -2) (undo-tree-id6766 . -2) (undo-tree-id6767 . -2) (undo-tree-id6768 . -2) (undo-tree-id6769 . -2) (undo-tree-id6770 . -2) (undo-tree-id6771 . -2) (undo-tree-id6772 . -2) (undo-tree-id6773 . -2) (undo-tree-id6774 . -2) (undo-tree-id6775 . -2) (undo-tree-id6776 . -2) (undo-tree-id6777 . -2) (undo-tree-id6778 . -2) (undo-tree-id6779 . -2) (undo-tree-id6780 . -2) (undo-tree-id6781 . -2) (undo-tree-id6782 . -2) (undo-tree-id6783 . -2) (undo-tree-id6784 . -2) (undo-tree-id6785 . -2) (undo-tree-id6786 . -2) (undo-tree-id6787 . -2) (undo-tree-id6788 . -2) (undo-tree-id6789 . -2) (undo-tree-id6790 . -2) (undo-tree-id6791 . -2) (undo-tree-id6792 . -2) (undo-tree-id6793 . -2) (undo-tree-id6794 . -2) (undo-tree-id6795 . -2) (undo-tree-id6796 . -2) (undo-tree-id6797 . -2) (undo-tree-id6798 . -2) (undo-tree-id6799 . -2) (undo-tree-id6800 . -2) (undo-tree-id6801 . -2) (undo-tree-id6802 . -2) (undo-tree-id6803 . -2) (undo-tree-id6804 . -2) (undo-tree-id6805 . -2) (undo-tree-id6806 . -2) (undo-tree-id6807 . -2) (undo-tree-id6808 . -2) (undo-tree-id6809 . -2) (undo-tree-id6810 . -2) (undo-tree-id6811 . -2) (undo-tree-id6812 . -2) (undo-tree-id6813 . -2) (undo-tree-id6814 . -2) (undo-tree-id6815 . -2) (undo-tree-id6816 . -2) (undo-tree-id6817 . -2) (undo-tree-id6818 . -2) (undo-tree-id6819 . -2) (undo-tree-id6820 . -2) (undo-tree-id6821 . -2) (undo-tree-id6822 . -2) (undo-tree-id6823 . -2) (undo-tree-id6824 . -2) (undo-tree-id6825 . -2) (undo-tree-id6826 . -2) (undo-tree-id6827 . -2) (undo-tree-id6828 . -2) (undo-tree-id6829 . -2) (undo-tree-id6830 . -2) (undo-tree-id6831 . -2) (undo-tree-id6832 . -2) (undo-tree-id6833 . -2) (undo-tree-id6834 . -2) (undo-tree-id6835 . -2) (undo-tree-id6836 . -2) (undo-tree-id6837 . -2) (undo-tree-id6838 . -2) (undo-tree-id6839 . -2) (undo-tree-id6840 . -2) (undo-tree-id6841 . -2) (undo-tree-id6842 . -2) (undo-tree-id6843 . -2) (undo-tree-id6844 . -2) (undo-tree-id6845 . -2) (undo-tree-id6846 . -2) (undo-tree-id6847 . -2) (undo-tree-id6848 . -2) (undo-tree-id6849 . -2) (undo-tree-id6850 . -2) (undo-tree-id6851 . -2) (undo-tree-id6852 . -2) (undo-tree-id6853 . -2) (undo-tree-id6854 . -2) (undo-tree-id6855 . -2) (undo-tree-id6856 . -2) (undo-tree-id6857 . -2) (undo-tree-id6858 . -2) (undo-tree-id6859 . -2) (undo-tree-id6860 . -2) (undo-tree-id6861 . -2) (undo-tree-id6862 . -2) (undo-tree-id6863 . -2) (undo-tree-id6864 . -2) (undo-tree-id6865 . -2) (undo-tree-id6866 . -2) (undo-tree-id6867 . -2) (undo-tree-id6868 . -2) (undo-tree-id6869 . -2) (undo-tree-id6870 . -2) (undo-tree-id6871 . -2) (undo-tree-id6872 . -2) (undo-tree-id6873 . -2) (undo-tree-id6874 . -2) (undo-tree-id6875 . -2) (undo-tree-id6876 . -2) (undo-tree-id6877 . -2) (undo-tree-id6878 . -2) (undo-tree-id6879 . -2) (undo-tree-id6880 . -2) (undo-tree-id6881 . -2) (undo-tree-id6882 . -2) (undo-tree-id6883 . -2) (undo-tree-id6884 . -2) (undo-tree-id6885 . -2) (undo-tree-id6886 . -2) (undo-tree-id6887 . -2) (undo-tree-id6888 . -2) (undo-tree-id6889 . -2) (undo-tree-id6890 . -2) (undo-tree-id6891 . -2) (undo-tree-id6892 . -2) (undo-tree-id6893 . -2) (undo-tree-id6894 . -2) (undo-tree-id6895 . -2) (undo-tree-id6896 . -2) (undo-tree-id6897 . -2) (undo-tree-id6898 . -2) (undo-tree-id6899 . -2) (undo-tree-id6900 . -2) (undo-tree-id6901 . -2) (undo-tree-id6902 . -2) (undo-tree-id6903 . -2) (undo-tree-id6904 . -2) (undo-tree-id6905 . -2) (undo-tree-id6906 . -2) (undo-tree-id6907 . -2) (undo-tree-id6908 . -2) (undo-tree-id6909 . -2) (undo-tree-id6910 . -2) (undo-tree-id6911 . -2) (undo-tree-id6912 . -2) (undo-tree-id6913 . -2) (undo-tree-id6914 . -2) (undo-tree-id6915 . -2) (undo-tree-id6916 . -2) (undo-tree-id6917 . -2) (undo-tree-id6918 . -2) (undo-tree-id6919 . -2) (undo-tree-id6920 . -2) (undo-tree-id6921 . -2) (undo-tree-id6922 . -2) (undo-tree-id6923 . -2) (undo-tree-id6924 . -2) (undo-tree-id6925 . -2) (undo-tree-id6926 . -2) (undo-tree-id6927 . -2) (undo-tree-id6928 . -2) (undo-tree-id6929 . -2) (undo-tree-id6930 . -2) (undo-tree-id6931 . -2) (undo-tree-id6932 . -2) (undo-tree-id6933 . -2) (undo-tree-id6934 . -2) (undo-tree-id6935 . -2) (undo-tree-id6936 . -2) (undo-tree-id6937 . -2) (undo-tree-id6938 . -2) (undo-tree-id6939 . -2) (undo-tree-id6940 . -2) (undo-tree-id6941 . -2) (undo-tree-id6942 . -2) (undo-tree-id6943 . -2) (undo-tree-id6944 . -2) (undo-tree-id6945 . -2) (undo-tree-id6946 . -2) (undo-tree-id6947 . -2) (undo-tree-id6948 . -2) (undo-tree-id6949 . -2) (undo-tree-id6950 . -2) (undo-tree-id6951 . -2) (undo-tree-id6952 . -2) (undo-tree-id6953 . -2) (undo-tree-id6954 . -2) (undo-tree-id6955 . -2) (undo-tree-id6956 . -2) (undo-tree-id6957 . -2) (undo-tree-id6958 . -2) (undo-tree-id6959 . -2) (undo-tree-id6960 . -2) (undo-tree-id6961 . -2) (undo-tree-id6962 . -2) (undo-tree-id6963 . -2) (undo-tree-id6964 . -2) (undo-tree-id6965 . -2) (undo-tree-id6966 . -2) (undo-tree-id6967 . -2) (undo-tree-id6968 . -2) (undo-tree-id6969 . -2) (undo-tree-id6970 . -2) (undo-tree-id6971 . -2) (undo-tree-id6972 . -2) (undo-tree-id6973 . -2) (undo-tree-id6974 . -2) (undo-tree-id6975 . -2) (undo-tree-id6976 . -2) (undo-tree-id6977 . -2) (undo-tree-id6978 . -2) (undo-tree-id6979 . -2) (undo-tree-id6980 . -2) (undo-tree-id6981 . -2) (undo-tree-id6982 . -2) (undo-tree-id6983 . -2) (undo-tree-id6984 . -2) (undo-tree-id6985 . -2) (undo-tree-id6986 . -2) (undo-tree-id6987 . -2) (undo-tree-id6988 . -2) (undo-tree-id6989 . -2) (undo-tree-id6990 . -2) (undo-tree-id6991 . -2) (undo-tree-id6992 . -2) (undo-tree-id6993 . -2) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -2) (undo-tree-id7549 . -2) (undo-tree-id7550 . -2) (undo-tree-id7551 . -2) (undo-tree-id7552 . -2) (undo-tree-id7553 . -2) (undo-tree-id7554 . -2) (undo-tree-id7555 . -2) (undo-tree-id7556 . -2) (undo-tree-id7557 . -2) (undo-tree-id7558 . -2) (undo-tree-id7559 . -2) (undo-tree-id7560 . -2) (undo-tree-id7561 . -2) (undo-tree-id7562 . -2) (undo-tree-id7563 . -2) (undo-tree-id7564 . -2) (undo-tree-id7565 . -2) (undo-tree-id7566 . -2) (undo-tree-id7567 . -2) (undo-tree-id7568 . -2) (undo-tree-id7569 . -2) (undo-tree-id7570 . -2) (undo-tree-id7571 . -2) (undo-tree-id7572 . -2) (undo-tree-id7573 . -2) (undo-tree-id7574 . -2) (undo-tree-id7575 . -2) (undo-tree-id7576 . -2) (undo-tree-id7577 . -2) (undo-tree-id7578 . -2) (undo-tree-id7579 . -2) (undo-tree-id7580 . -2) (undo-tree-id7581 . -2) (undo-tree-id7582 . -2) (undo-tree-id7583 . -2) (undo-tree-id7584 . -2) (undo-tree-id7585 . -2) (undo-tree-id7586 . -2) (undo-tree-id7587 . -2) (undo-tree-id7588 . -2) (undo-tree-id7589 . -2) (undo-tree-id7590 . -2) (undo-tree-id7591 . -2) (undo-tree-id7592 . -2) (undo-tree-id7593 . -2) (undo-tree-id7594 . -2) (undo-tree-id7595 . -2) (undo-tree-id7596 . -2) (undo-tree-id7597 . -2) (undo-tree-id7598 . -2) (undo-tree-id7599 . -2) (undo-tree-id7600 . -2) (undo-tree-id7601 . -2) (undo-tree-id7602 . -2) (undo-tree-id7603 . -2) (undo-tree-id7604 . -2) (undo-tree-id7605 . -2) (undo-tree-id7606 . -2) (undo-tree-id7607 . -2) (undo-tree-id7608 . -2) (undo-tree-id7609 . -2) (undo-tree-id7610 . -2) (undo-tree-id7611 . -2) (undo-tree-id7612 . -2) (undo-tree-id7613 . -2) (undo-tree-id7614 . -2) (undo-tree-id7615 . -2) (undo-tree-id7616 . -2) (undo-tree-id7617 . -2) (undo-tree-id7618 . -2) (undo-tree-id7619 . -2) (undo-tree-id7620 . -2) (undo-tree-id7621 . -2) (undo-tree-id7622 . -2) (undo-tree-id7623 . -2) (undo-tree-id7624 . -2) (undo-tree-id7625 . -2) (undo-tree-id7626 . -2) (undo-tree-id7627 . -2) (undo-tree-id7628 . -2) (undo-tree-id7629 . -2) (undo-tree-id7630 . -2) (undo-tree-id7631 . -2) (undo-tree-id7632 . -2) (undo-tree-id7633 . -2) (undo-tree-id7634 . -2) (undo-tree-id7635 . -2) (undo-tree-id7636 . -2) (undo-tree-id7637 . -2) (undo-tree-id7638 . -2) (undo-tree-id7639 . -2) (undo-tree-id7640 . -2) (undo-tree-id7641 . -2) (undo-tree-id7642 . -2) (undo-tree-id7643 . -2) (undo-tree-id7644 . -2) (undo-tree-id7645 . -2) (undo-tree-id7646 . -2) (undo-tree-id7647 . -2) (undo-tree-id7648 . -2) (undo-tree-id7649 . -2) (undo-tree-id7650 . -2) (undo-tree-id7651 . -2) (undo-tree-id7652 . -2) (undo-tree-id7653 . -2) (undo-tree-id7654 . -2) (undo-tree-id7655 . -2) (undo-tree-id7656 . -2) (undo-tree-id7657 . -2) (undo-tree-id7658 . -2) (undo-tree-id7659 . -2) (undo-tree-id7660 . -2) (undo-tree-id7661 . -2) (undo-tree-id7662 . -2) (undo-tree-id7663 . -2) (undo-tree-id7664 . -2) (undo-tree-id7665 . -2) (undo-tree-id7666 . -2) (undo-tree-id7667 . -2) (undo-tree-id7668 . -2) (undo-tree-id7669 . -2) (undo-tree-id7670 . -2) (undo-tree-id7671 . -2) (undo-tree-id7672 . -2) (undo-tree-id7673 . -2) (undo-tree-id7674 . -2) (undo-tree-id7675 . -2) (undo-tree-id7676 . -2) (undo-tree-id7677 . -2) (undo-tree-id7678 . -2) (undo-tree-id7679 . -2) (undo-tree-id7680 . -2) (undo-tree-id7681 . -2) (undo-tree-id7682 . -2) (undo-tree-id7683 . -2) (undo-tree-id7684 . -2) (undo-tree-id7685 . -2) (undo-tree-id7686 . -2) (undo-tree-id7687 . -2) (undo-tree-id7688 . -2) (undo-tree-id7689 . -2) (undo-tree-id7690 . -2) (undo-tree-id7691 . -2) (undo-tree-id7692 . -2) (undo-tree-id7693 . -2) (undo-tree-id7694 . -2) (undo-tree-id7695 . -2) (undo-tree-id7696 . -2) (undo-tree-id7697 . -2) (undo-tree-id7698 . -2) (undo-tree-id7699 . -2) (undo-tree-id7700 . -2) (undo-tree-id7701 . -2) (undo-tree-id7702 . -2) (undo-tree-id7703 . -2) (undo-tree-id7704 . -2) (undo-tree-id7705 . -2) (undo-tree-id7706 . -1) (undo-tree-id7707 . -2) (undo-tree-id7708 . -1) (undo-tree-id7709 . -2) (undo-tree-id7710 . -1) (undo-tree-id7711 . -2) (undo-tree-id7712 . -1) (undo-tree-id7713 . -2) (undo-tree-id7714 . -1) (undo-tree-id7715 . -2) (undo-tree-id7716 . -1) (undo-tree-id7717 . -2) (undo-tree-id7718 . -1) (undo-tree-id7719 . -2) (undo-tree-id7720 . -2) (undo-tree-id7721 . -2) (undo-tree-id7722 . -2) (undo-tree-id7723 . -2) (undo-tree-id7724 . -2) (undo-tree-id7725 . -2) (undo-tree-id7726 . -2) (undo-tree-id7727 . -2) (undo-tree-id7728 . -2) (undo-tree-id7729 . -2) (undo-tree-id7730 . -2) (undo-tree-id7731 . -2) (undo-tree-id7732 . -2) (undo-tree-id7733 . -2) (undo-tree-id7734 . -2) (undo-tree-id7735 . -2) (undo-tree-id7736 . -2) (undo-tree-id7737 . -2) (undo-tree-id7738 . -2) (undo-tree-id7739 . -2) (undo-tree-id7740 . -2) (undo-tree-id7741 . -2) (undo-tree-id7742 . -2) (undo-tree-id7743 . -2) (undo-tree-id7744 . -2) (undo-tree-id7745 . -2) (undo-tree-id7746 . -2) (undo-tree-id7747 . -2) (undo-tree-id7748 . -2) (undo-tree-id7749 . -2) (undo-tree-id7750 . -2) (undo-tree-id7751 . -2) (undo-tree-id7752 . -2) (undo-tree-id7753 . -2) (undo-tree-id7754 . -2) (undo-tree-id7755 . -2) (undo-tree-id7756 . -2) (undo-tree-id7757 . -2) (undo-tree-id7758 . -2) (undo-tree-id7759 . -2) (undo-tree-id7760 . -2) (undo-tree-id7761 . -2) (undo-tree-id7762 . -2) (undo-tree-id7763 . -2) (undo-tree-id7764 . -2) (undo-tree-id7765 . -2) (undo-tree-id7766 . -2) (undo-tree-id7767 . -2) (undo-tree-id7768 . -2) (undo-tree-id7769 . -2) (undo-tree-id7770 . -2) (undo-tree-id7771 . -2) (undo-tree-id7772 . -2) (undo-tree-id7773 . -2) (undo-tree-id7774 . -2) (undo-tree-id7775 . -2) (undo-tree-id7776 . -2) (undo-tree-id7777 . -2) (undo-tree-id7778 . -2) (undo-tree-id7779 . -2) (undo-tree-id7780 . -2) (undo-tree-id7781 . -2) (undo-tree-id7782 . -2) (undo-tree-id7783 . -2) (undo-tree-id7784 . -2) (undo-tree-id7785 . -2) (undo-tree-id7786 . -2) (undo-tree-id7787 . -2) (undo-tree-id7788 . -2) (undo-tree-id7789 . -2) (undo-tree-id7790 . -2) (undo-tree-id7791 . -2) (undo-tree-id7792 . -2) (undo-tree-id7793 . -2) (undo-tree-id7794 . -2) (undo-tree-id7795 . -2) (undo-tree-id7796 . -2) (undo-tree-id7797 . -2) (undo-tree-id7798 . -2) (undo-tree-id7799 . -2) (undo-tree-id7800 . -2) (undo-tree-id7801 . -2) (undo-tree-id7802 . -2) (undo-tree-id7803 . -2) (undo-tree-id7804 . -2) (undo-tree-id7805 . -2) (undo-tree-id7806 . -2) (undo-tree-id7807 . -2) (undo-tree-id7808 . -2) (undo-tree-id7809 . -2) (undo-tree-id7810 . -2) (undo-tree-id7811 . -2) (undo-tree-id7812 . -2) (undo-tree-id7813 . -2) (undo-tree-id7814 . -2) (undo-tree-id7815 . -2) (undo-tree-id7816 . -2) (undo-tree-id7817 . -2) (undo-tree-id7818 . -2) (undo-tree-id7819 . -2) (undo-tree-id7820 . -2) (undo-tree-id7821 . -2) (undo-tree-id7822 . -2) (undo-tree-id7823 . -2) (undo-tree-id7824 . -2) (undo-tree-id7825 . -2) (undo-tree-id7826 . -2) (undo-tree-id7827 . -2) (undo-tree-id7828 . -2) (undo-tree-id7829 . -2) (undo-tree-id7830 . -2) (undo-tree-id7831 . -2) (undo-tree-id7832 . -2) (undo-tree-id7833 . -2) (undo-tree-id7834 . -2) (undo-tree-id7835 . -2) (undo-tree-id7836 . -2) (undo-tree-id7837 . -2) (undo-tree-id7838 . -2) (undo-tree-id7839 . -2) (undo-tree-id7840 . -2) (undo-tree-id7841 . -2) (undo-tree-id7842 . -2) (undo-tree-id7843 . -2) (undo-tree-id7844 . -2) (undo-tree-id7845 . -2) (undo-tree-id7846 . -2) (undo-tree-id7847 . -2) (undo-tree-id7848 . -2) (undo-tree-id7849 . -2) (undo-tree-id7850 . -2) (undo-tree-id7851 . -2) (undo-tree-id7852 . -2) (undo-tree-id7853 . -2) (undo-tree-id7854 . -2) (undo-tree-id7855 . -2) (undo-tree-id7856 . -2) (undo-tree-id7857 . -2) (undo-tree-id7858 . -2) (undo-tree-id7859 . -2) (undo-tree-id7860 . -2) (undo-tree-id7861 . -2) (undo-tree-id7862 . -2) (undo-tree-id7863 . -2) (undo-tree-id7864 . -2) (undo-tree-id7865 . -2) (undo-tree-id7866 . -2) (undo-tree-id7867 . -2) (undo-tree-id7868 . -2) (undo-tree-id7869 . -2) (undo-tree-id7870 . -2) (undo-tree-id7871 . -2) (undo-tree-id7872 . -2) (undo-tree-id7873 . -2) (undo-tree-id7874 . -2) (undo-tree-id7875 . -2) (undo-tree-id7876 . -2) (undo-tree-id7877 . -2) (undo-tree-id7878 . -2) (undo-tree-id7879 . -2) (undo-tree-id7880 . -2) (undo-tree-id7881 . -2) (undo-tree-id7882 . -2) (undo-tree-id7883 . -2) (undo-tree-id7884 . -2) (undo-tree-id7885 . -2) (undo-tree-id7886 . -2) (undo-tree-id7887 . -2) (undo-tree-id7888 . -2) (undo-tree-id7889 . -2) (undo-tree-id7890 . -2) (undo-tree-id7891 . -2) (undo-tree-id7892 . -2) (undo-tree-id7893 . -2) (undo-tree-id7894 . -2) (undo-tree-id7895 . -2) (undo-tree-id7896 . -2) (undo-tree-id7897 . -2) (undo-tree-id7898 . -2) (undo-tree-id7899 . -2) (undo-tree-id7900 . -2) (undo-tree-id7901 . -2) (undo-tree-id7902 . -2) (undo-tree-id7903 . -2) (undo-tree-id7904 . -2) (undo-tree-id7905 . -2) (undo-tree-id7906 . -2) (undo-tree-id7907 . -2) (undo-tree-id7908 . -2) (undo-tree-id7909 . -2) (undo-tree-id7910 . -2) (undo-tree-id7911 . -2) (undo-tree-id7912 . -2) (undo-tree-id7913 . -2) (undo-tree-id7914 . -2) (undo-tree-id7915 . -2) (undo-tree-id7916 . -2) (undo-tree-id7917 . -2) (undo-tree-id7918 . -2) (undo-tree-id7919 . -2) (undo-tree-id7920 . -2) (undo-tree-id7921 . -2) (undo-tree-id7922 . -2) (undo-tree-id7923 . -2) (undo-tree-id7924 . -2) (undo-tree-id7925 . -2) (undo-tree-id7926 . -2) (undo-tree-id7927 . -2) (undo-tree-id7928 . -2) (undo-tree-id7929 . -2) (undo-tree-id7930 . -2) (undo-tree-id7931 . -2) (undo-tree-id7932 . -2) (undo-tree-id7933 . -2) (undo-tree-id7934 . -2) (undo-tree-id7935 . -2) (undo-tree-id7936 . -2) (undo-tree-id7937 . -2) (undo-tree-id7938 . -2) (undo-tree-id7939 . -2) (undo-tree-id7940 . -2) (undo-tree-id7941 . -2) (undo-tree-id7942 . -2) (undo-tree-id7943 . -2) (undo-tree-id7944 . -2) (undo-tree-id7945 . -2) (undo-tree-id7946 . -2) (undo-tree-id7947 . -2) (undo-tree-id7948 . -2) (undo-tree-id7949 . -2) (undo-tree-id7950 . -2) (undo-tree-id7951 . -2) (undo-tree-id7952 . -2) (undo-tree-id7953 . -2) (undo-tree-id7954 . -2) (undo-tree-id7955 . -2) (undo-tree-id7956 . -2) (undo-tree-id7957 . -2) (undo-tree-id7958 . -2) (undo-tree-id7959 . -2) (undo-tree-id7960 . -2) (undo-tree-id7961 . -2) (undo-tree-id7962 . -2) (undo-tree-id7963 . -2) (undo-tree-id7964 . -2) (undo-tree-id7965 . -2) (undo-tree-id7966 . -2) (undo-tree-id7967 . -2) (undo-tree-id7968 . -2) (undo-tree-id7969 . -2) (undo-tree-id7970 . -2) (undo-tree-id7971 . -2) (undo-tree-id7972 . -2) (undo-tree-id7973 . -2) (undo-tree-id7974 . -2) (undo-tree-id7975 . -2) (undo-tree-id7976 . -2) (undo-tree-id7977 . -2) (undo-tree-id7978 . -2) (undo-tree-id7979 . -2) (undo-tree-id7980 . -2) (undo-tree-id7981 . -2) (undo-tree-id7982 . -2) (undo-tree-id7983 . -2) (undo-tree-id7984 . -2) (undo-tree-id7985 . -2) (undo-tree-id7986 . -2) (undo-tree-id7987 . -2) (undo-tree-id7988 . -2) (undo-tree-id7989 . -2) (undo-tree-id7990 . -2) (undo-tree-id7991 . -2) (undo-tree-id7992 . -2) (undo-tree-id7993 . -2) (undo-tree-id7994 . -2) (undo-tree-id7995 . -2) (undo-tree-id7996 . -2) (undo-tree-id7997 . -2) (undo-tree-id7998 . -2) (undo-tree-id7999 . -2) (undo-tree-id8000 . -2) (undo-tree-id8001 . -2) (undo-tree-id8002 . -2) (undo-tree-id8003 . -2) (undo-tree-id8004 . -2) (undo-tree-id8005 . -2) (undo-tree-id8006 . -2) (undo-tree-id8007 . -2) (undo-tree-id8008 . -2) (undo-tree-id8009 . -2) (undo-tree-id8010 . -2) (undo-tree-id8011 . -2) (undo-tree-id8012 . -2) (undo-tree-id8013 . -2) (undo-tree-id8014 . -2) (undo-tree-id8015 . -2) (undo-tree-id8016 . -2) (undo-tree-id8017 . -2) (undo-tree-id8018 . -2) (undo-tree-id8019 . -2) (undo-tree-id8020 . -2) (undo-tree-id8021 . -2) (undo-tree-id8022 . -2) (undo-tree-id8023 . -2) (undo-tree-id8024 . -2) (undo-tree-id8025 . -2) (undo-tree-id8026 . -2) (undo-tree-id8027 . -2) (undo-tree-id8028 . -2) (undo-tree-id8029 . -2) (undo-tree-id8030 . -2) (undo-tree-id8031 . -2) (undo-tree-id8032 . -2) (undo-tree-id8033 . -1) (undo-tree-id8034 . -2) (31210 . 31214)) (25155 30733 410402 0) 0 nil] [nil nil ((#("?" 0 1 (fontified t)) . -31196) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) 31197 (t 25155 30237 981072 369000)) ((31196 . 31197)) (25155 30688 753826 0) 0 nil])
+([nil nil ((#("?" 0 1 (fontified t)) . -31264) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) 31265) nil (25155 30866 717263 0) 0 nil])
+([nil nil ((#("    " 0 4 (help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error) fontified nil)) . -31278) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (31338 . 31339)) ((#(")" 0 1 (fontified nil face (rainbow-delimiters-mismatched-face) help-echo "missing ; before statement" cursor-sensor-functions (js2-echo-error))) . 31338) (undo-tree-id6107 . 1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (31278 . 31282)) (25155 30732 90450 0) 0 nil])
+nil
+([nil nil ((31334 . 31339) (#("    " 0 4 (fontified nil)) . -31277) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (31337 . 31338)) nil (25155 30866 716655 0) 0 nil])
+([nil nil ((31334 . 31339)) (("
+    " . 31334) (undo-tree-id5700 . -5) (undo-tree-id5701 . -5) (undo-tree-id5702 . -5) (undo-tree-id5703 . -5) (undo-tree-id5704 . -5) (undo-tree-id5705 . -5) (undo-tree-id5706 . -5) (undo-tree-id5707 . -5) (undo-tree-id5708 . -5) (undo-tree-id5709 . -5) (undo-tree-id5710 . -5) (undo-tree-id5711 . -5) (undo-tree-id5712 . -5) (undo-tree-id5713 . -5) (undo-tree-id5714 . -5) (undo-tree-id5715 . -5) (undo-tree-id5716 . -5) (undo-tree-id5717 . -5) (undo-tree-id5718 . -5) (undo-tree-id5719 . -5) (undo-tree-id5720 . -5) (undo-tree-id5721 . -5) (undo-tree-id5722 . -5) (undo-tree-id5723 . -5) (undo-tree-id5724 . -5) (undo-tree-id5725 . -5) (undo-tree-id5726 . -5) (undo-tree-id5727 . -5) (undo-tree-id5728 . -5) (undo-tree-id5729 . -5) (undo-tree-id5730 . -5) (undo-tree-id5731 . -5) (undo-tree-id5732 . -5) (undo-tree-id5733 . -5) (undo-tree-id5734 . -5) (undo-tree-id5735 . -5) (undo-tree-id5736 . -5) (undo-tree-id5737 . -5) (undo-tree-id5738 . -5) (undo-tree-id5739 . -5) (undo-tree-id5740 . -5) (undo-tree-id5741 . -5) (undo-tree-id5742 . -5) (undo-tree-id5743 . -5) (undo-tree-id5744 . -5) (undo-tree-id5745 . -5) (undo-tree-id5746 . -5) (undo-tree-id5747 . -5) (undo-tree-id5748 . -5) (undo-tree-id5749 . -5) (undo-tree-id5750 . -5) (undo-tree-id5751 . -5) (undo-tree-id5752 . -5) (undo-tree-id5753 . -5) (undo-tree-id5754 . -5) (undo-tree-id5755 . -5) (undo-tree-id5756 . -5) (undo-tree-id5757 . -5) (undo-tree-id5758 . -5) (undo-tree-id5759 . -5) (undo-tree-id5760 . -5) (undo-tree-id5761 . -5) (undo-tree-id5762 . -5) (undo-tree-id5763 . -5) (undo-tree-id5764 . -5) (undo-tree-id5765 . -5) (undo-tree-id5766 . -5) (undo-tree-id5767 . -5) (undo-tree-id5768 . -5) (undo-tree-id5769 . -5) (undo-tree-id5770 . -5) (undo-tree-id5771 . -5) (undo-tree-id5772 . -5) (undo-tree-id5773 . -5) (undo-tree-id5774 . -5) (undo-tree-id5775 . -5) (undo-tree-id5776 . -5) (undo-tree-id5777 . -5) (undo-tree-id5778 . -5) (undo-tree-id5779 . -5) (undo-tree-id5780 . -5) (undo-tree-id5781 . -5) (undo-tree-id5782 . -5) (undo-tree-id5783 . -5) (undo-tree-id5784 . -5) (undo-tree-id5785 . -5) (undo-tree-id5786 . -5) (undo-tree-id5787 . -5) (undo-tree-id5788 . -5) (undo-tree-id5789 . -5) (undo-tree-id5790 . -5) (undo-tree-id5791 . -5) (undo-tree-id5792 . -5) (undo-tree-id5793 . -5) (undo-tree-id5794 . -5) (undo-tree-id5795 . -5) (undo-tree-id5796 . -5) (undo-tree-id5797 . -5) (undo-tree-id5798 . -5) (undo-tree-id5799 . -5) (undo-tree-id5800 . -5) (undo-tree-id5801 . -5) (undo-tree-id5802 . -5) (undo-tree-id5803 . -5) (undo-tree-id5804 . -5) (undo-tree-id5805 . -5) (undo-tree-id5806 . -5) (undo-tree-id5807 . -5) (undo-tree-id5808 . -5) (undo-tree-id5809 . -5) (undo-tree-id5810 . -5) (undo-tree-id5811 . -5) (undo-tree-id5812 . -5) (undo-tree-id5813 . -5) (undo-tree-id5814 . -5) (undo-tree-id5815 . -5) (undo-tree-id5816 . -5) (undo-tree-id5817 . -5) (undo-tree-id5818 . -5) (undo-tree-id5819 . -5) (undo-tree-id5820 . -5) (undo-tree-id5821 . -5) (undo-tree-id5822 . -5) (undo-tree-id5823 . -5) (undo-tree-id5824 . -5) (undo-tree-id5825 . -5) (undo-tree-id5826 . -5) (undo-tree-id5827 . -5) (undo-tree-id5828 . -5) (undo-tree-id5829 . -5) (undo-tree-id5830 . -5) (undo-tree-id5831 . -5) (undo-tree-id5832 . -5) (undo-tree-id5833 . -5) (undo-tree-id5834 . -5) (undo-tree-id5835 . -5) (undo-tree-id5836 . -5) (undo-tree-id5837 . -5) (undo-tree-id5838 . -5) (undo-tree-id5839 . -5) (undo-tree-id5840 . -5) (undo-tree-id5841 . -5) (undo-tree-id5842 . -5) (undo-tree-id5843 . -5) (undo-tree-id5844 . -5) (undo-tree-id5845 . -5) (undo-tree-id5846 . -5) (undo-tree-id5847 . -5) (undo-tree-id5848 . -5) (undo-tree-id5849 . -5) (undo-tree-id5850 . -5) (undo-tree-id5851 . -5) (undo-tree-id5852 . -5) (undo-tree-id5853 . -5) (undo-tree-id5854 . -5) (undo-tree-id5855 . -5) (undo-tree-id5856 . -5) (undo-tree-id5857 . -5) (undo-tree-id5858 . -5) (undo-tree-id5859 . -5) (undo-tree-id5860 . -5) (undo-tree-id5861 . -5) (undo-tree-id5862 . -5) (undo-tree-id5863 . -5) (undo-tree-id5864 . -5) (undo-tree-id5865 . -5) (undo-tree-id5866 . -5) (undo-tree-id5867 . -5) (undo-tree-id5868 . -5) (undo-tree-id5869 . -5) (undo-tree-id5870 . -5) (undo-tree-id5871 . -5) (undo-tree-id5872 . -5) (undo-tree-id5873 . -5) (undo-tree-id5874 . -5) (undo-tree-id5875 . -5) (undo-tree-id5876 . -5) (undo-tree-id5877 . -5) (undo-tree-id5878 . -5) (undo-tree-id5879 . -5) (undo-tree-id5880 . -5) (undo-tree-id5881 . -5) (undo-tree-id5882 . -5) (undo-tree-id5883 . -5) (undo-tree-id5884 . -5) (undo-tree-id5885 . -5) (undo-tree-id5886 . -5) (undo-tree-id5887 . -5) (undo-tree-id5888 . -5) (undo-tree-id5889 . -5) (undo-tree-id5890 . -5) (undo-tree-id5891 . -5) (undo-tree-id5892 . -5) (undo-tree-id5893 . -5) (undo-tree-id5894 . -5) (undo-tree-id5895 . -5) (undo-tree-id5896 . -5) (undo-tree-id5897 . -5) (undo-tree-id5898 . -5) (undo-tree-id5899 . -5) (undo-tree-id5900 . -5) (undo-tree-id5901 . -5) (undo-tree-id5902 . -5) (undo-tree-id5903 . -5) (undo-tree-id5904 . -5) (undo-tree-id5905 . -5) (undo-tree-id5906 . -5) (undo-tree-id5907 . -5) (undo-tree-id5908 . -5) (undo-tree-id5909 . -5) (undo-tree-id5910 . -5) (undo-tree-id5911 . -5) (undo-tree-id5912 . -5) (undo-tree-id5913 . -5) (undo-tree-id5914 . -5) (undo-tree-id5915 . -5) (undo-tree-id5916 . -5) (undo-tree-id5917 . -5) (undo-tree-id5918 . -5) (undo-tree-id5919 . -5) (undo-tree-id5920 . -5) (undo-tree-id5921 . -5) (undo-tree-id5922 . -5) (undo-tree-id5923 . -5) (undo-tree-id5924 . -5) (undo-tree-id5925 . -5) (undo-tree-id5926 . -5) (undo-tree-id5927 . -5) (undo-tree-id5928 . -5) (undo-tree-id5929 . -5) (undo-tree-id5930 . -5) (undo-tree-id5931 . -5) (undo-tree-id5932 . -5) (undo-tree-id5933 . -5) (undo-tree-id5934 . -5) (undo-tree-id5935 . -5) (undo-tree-id5936 . -5) (undo-tree-id5937 . -5) (undo-tree-id5938 . -5) (undo-tree-id5939 . -5) (undo-tree-id5940 . -5) (undo-tree-id5941 . -5) (undo-tree-id5942 . -5) (undo-tree-id5943 . -5) (undo-tree-id5944 . -5) (undo-tree-id5945 . -5) (undo-tree-id5946 . -5) (undo-tree-id5947 . -5) (undo-tree-id5948 . -5) (undo-tree-id5949 . -5) (undo-tree-id5950 . -5) (undo-tree-id5951 . -5) (undo-tree-id5952 . -5) (undo-tree-id5953 . -5) (undo-tree-id5954 . -5) (undo-tree-id5955 . -5) (undo-tree-id5956 . -5) (undo-tree-id5957 . -5) (undo-tree-id5958 . -5) (undo-tree-id5959 . -5) (undo-tree-id5960 . -5) (undo-tree-id5961 . -5) (undo-tree-id5962 . -5) (undo-tree-id5963 . -5) (undo-tree-id5964 . -5) (undo-tree-id5965 . -5) (undo-tree-id5966 . -5) (undo-tree-id5967 . -5) (undo-tree-id5968 . -5) (undo-tree-id5969 . -5) (undo-tree-id5970 . -5) (undo-tree-id5971 . -5) (undo-tree-id5972 . -5) (undo-tree-id5973 . -5) (undo-tree-id5974 . -5) (undo-tree-id5975 . -5) (undo-tree-id5976 . -5) (undo-tree-id5977 . -5) (undo-tree-id5978 . -5) (undo-tree-id5979 . -5) (undo-tree-id5980 . -5) (undo-tree-id5981 . -5) (undo-tree-id5982 . -5) (undo-tree-id5983 . -5) (undo-tree-id5984 . -5) (undo-tree-id5985 . -5) (undo-tree-id5986 . -5) (undo-tree-id5987 . -5) (undo-tree-id5988 . -5) (undo-tree-id5989 . -5) (undo-tree-id5990 . -5) (undo-tree-id5991 . -5) (undo-tree-id5992 . -5) (undo-tree-id5993 . -5) (undo-tree-id5994 . -5) (undo-tree-id5995 . -5) (undo-tree-id5996 . -5) (undo-tree-id5997 . -5) (undo-tree-id5998 . -5) (undo-tree-id5999 . -5) (undo-tree-id6000 . -5) (undo-tree-id6001 . -5) (undo-tree-id6002 . -5) (undo-tree-id6003 . -5) (undo-tree-id6004 . -5) (undo-tree-id6005 . -5) (undo-tree-id6006 . -5) (undo-tree-id6007 . -5) (undo-tree-id6008 . -5) (undo-tree-id6009 . -5) (undo-tree-id6010 . -5) (undo-tree-id6011 . -5) (undo-tree-id6012 . -5) (undo-tree-id6013 . -5) (undo-tree-id6014 . -5) (undo-tree-id6015 . -5) (undo-tree-id6016 . -5) (undo-tree-id6017 . -5) (undo-tree-id6018 . -5) (undo-tree-id6019 . -5) (undo-tree-id6020 . -5) (undo-tree-id6021 . -5) (undo-tree-id6022 . -5) (undo-tree-id6023 . -5) (undo-tree-id6024 . -5) (undo-tree-id6025 . -5) (undo-tree-id6026 . -5) (undo-tree-id6027 . -5) (undo-tree-id6028 . -5) (undo-tree-id6029 . -5) (undo-tree-id6030 . -5) (undo-tree-id6031 . -5) (undo-tree-id6032 . -5) (undo-tree-id6033 . -5) (undo-tree-id6034 . -5) (undo-tree-id6035 . -5) (undo-tree-id6036 . -5) (undo-tree-id6037 . -5) (undo-tree-id6038 . -5) (undo-tree-id6039 . -5) (undo-tree-id6040 . -5) (undo-tree-id6041 . -5) (undo-tree-id6042 . -5) (undo-tree-id6043 . -5) (undo-tree-id6044 . -5) (undo-tree-id6045 . -5) (undo-tree-id6046 . -5) (undo-tree-id6047 . -5) (undo-tree-id6048 . -5) (undo-tree-id6049 . -5) (undo-tree-id6050 . -5) (undo-tree-id6051 . -5) (undo-tree-id6052 . -5) (undo-tree-id6053 . -5) (undo-tree-id6054 . -5) (undo-tree-id6055 . -5) (undo-tree-id6056 . -5) (undo-tree-id6057 . -5) (undo-tree-id6058 . -5) (undo-tree-id6059 . -5) (undo-tree-id6060 . -5) (undo-tree-id6061 . -5) (undo-tree-id6062 . -5) (undo-tree-id6063 . -5) (undo-tree-id6064 . -5) (undo-tree-id6065 . -5) (undo-tree-id6066 . -5) (undo-tree-id6067 . -5) (undo-tree-id6068 . -5) (undo-tree-id6069 . -5) (undo-tree-id6070 . -5) (undo-tree-id6071 . -5) (undo-tree-id6072 . -5) (undo-tree-id6073 . -5) (undo-tree-id6074 . -5) (undo-tree-id6075 . -5) (undo-tree-id6076 . -5) (undo-tree-id6077 . -5) (undo-tree-id6078 . -5) (undo-tree-id6079 . -5) (undo-tree-id6080 . -5) (undo-tree-id6081 . -5) (undo-tree-id6082 . -5) (undo-tree-id6083 . -5) (undo-tree-id6084 . -5) (undo-tree-id6085 . -5) (undo-tree-id6086 . -5) (undo-tree-id6087 . -5) (undo-tree-id6088 . -5) (undo-tree-id6089 . -5) (undo-tree-id6090 . -5) (undo-tree-id6091 . -5) (undo-tree-id6092 . -5) (undo-tree-id6093 . -5) (undo-tree-id6094 . -5) (undo-tree-id6095 . -5) (undo-tree-id6096 . -5) (undo-tree-id6097 . -5) (undo-tree-id6098 . -5) (undo-tree-id6099 . -5) (undo-tree-id6100 . -5) (undo-tree-id6101 . -5) (undo-tree-id6102 . -5) (undo-tree-id6103 . -5) (undo-tree-id6104 . -5) (undo-tree-id6105 . -5) (undo-tree-id6106 . -5)) (25155 30731 577716 0) 0 nil])
+([nil current ((18313 . 18319) (t 25155 30866 737751 706000)) nil (25155 30916 863917 0) 0 nil])
+([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face) help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -31211) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . 1) (undo-tree-id4979 . 1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) 31212) ((31211 . 31212)) (25155 30731 39123 0) 0 nil])
+nil
+([nil nil ((31211 . 31228)) ((#("
+                " 0 17 (fontified t)) . 31211) (undo-tree-id5699 . 17)) (25155 30730 297432 0) 0 nil])
+([nil nil ((31351 . 31363) (#("    " 0 4 (fontified t)) . 31351) (undo-tree-id4410 . -4) (undo-tree-id4411 . -4) (undo-tree-id4412 . -4) (undo-tree-id4413 . -4) (undo-tree-id4414 . -4) (undo-tree-id4415 . -4) (undo-tree-id4416 . -4) (undo-tree-id4417 . -4) (undo-tree-id4418 . -4) (undo-tree-id4419 . -4) (undo-tree-id4420 . -4) (undo-tree-id4421 . -4) (undo-tree-id4422 . -4) (undo-tree-id4423 . -4) (undo-tree-id4424 . -4) (undo-tree-id4425 . -4) (undo-tree-id4426 . -4) (undo-tree-id4427 . -4) (undo-tree-id4428 . -4) (undo-tree-id4429 . -4) (undo-tree-id4430 . -4) (undo-tree-id4431 . -4) (undo-tree-id4432 . -4) (undo-tree-id4433 . -4) (undo-tree-id4434 . -4) (undo-tree-id4435 . -4) (undo-tree-id4436 . -4) (undo-tree-id4437 . -4) (undo-tree-id4438 . -4) (undo-tree-id4439 . -4) (undo-tree-id4440 . -4) (undo-tree-id4441 . -4) (undo-tree-id4442 . -4) (undo-tree-id4443 . -4) (undo-tree-id4444 . -4) (undo-tree-id4445 . -4) (undo-tree-id4446 . -4) (undo-tree-id4447 . -4) (undo-tree-id4448 . -4) (undo-tree-id4449 . -4) (undo-tree-id4450 . -4) (undo-tree-id4451 . -4) (undo-tree-id4452 . -4) (undo-tree-id4453 . -4) (undo-tree-id4454 . -4) (undo-tree-id4455 . -4) (undo-tree-id4456 . -4) (undo-tree-id4457 . -4) (undo-tree-id4458 . -4) (undo-tree-id4459 . -4) (undo-tree-id4460 . -4) (undo-tree-id4461 . -4) (undo-tree-id4462 . -4) (undo-tree-id4463 . -4) (undo-tree-id4464 . -4) (undo-tree-id4465 . -4) (undo-tree-id4466 . -4) (undo-tree-id4467 . -4) (undo-tree-id4468 . -4) (undo-tree-id4469 . -4) (undo-tree-id4470 . -4) (undo-tree-id4471 . -4) (undo-tree-id4472 . -4) (undo-tree-id4473 . -4) (undo-tree-id4474 . -4) (undo-tree-id4475 . -4) (undo-tree-id4476 . -4) (undo-tree-id4477 . -4) (undo-tree-id4478 . -4) (undo-tree-id4479 . -4) (undo-tree-id4480 . -4) (undo-tree-id4481 . -4) (undo-tree-id4482 . -4) (undo-tree-id4483 . -4) (undo-tree-id4484 . -4) (undo-tree-id4485 . -4) (undo-tree-id4486 . -4) (undo-tree-id4487 . -4) (undo-tree-id4488 . -4) (undo-tree-id4489 . -4) (undo-tree-id4490 . -4) (undo-tree-id4491 . -4) (undo-tree-id4492 . -4) (undo-tree-id4493 . -4) (undo-tree-id4494 . -4) (undo-tree-id4495 . -4) (undo-tree-id4496 . -4) (undo-tree-id4497 . -4) (undo-tree-id4498 . -4) (undo-tree-id4499 . -4) (undo-tree-id4500 . -4) (undo-tree-id4501 . -4) (undo-tree-id4502 . -4) (undo-tree-id4503 . -4) (undo-tree-id4504 . -4) (undo-tree-id4505 . -4) (undo-tree-id4506 . -4) (undo-tree-id4507 . -4) (undo-tree-id4508 . -4) (undo-tree-id4509 . -4) (undo-tree-id4510 . -4) (undo-tree-id4511 . -4) (undo-tree-id4512 . -4) (undo-tree-id4513 . -4) (undo-tree-id4514 . -4) (undo-tree-id4515 . -4) (undo-tree-id4516 . -4) (undo-tree-id4517 . -4) (undo-tree-id4518 . -4) (undo-tree-id4519 . -4) (undo-tree-id4520 . -4) (undo-tree-id4521 . -4) (undo-tree-id4522 . -4) (undo-tree-id4523 . -4) (undo-tree-id4524 . -4) (undo-tree-id4525 . -4) (undo-tree-id4526 . -4) (undo-tree-id4527 . -4) (undo-tree-id4528 . -4) (undo-tree-id4529 . -4) (undo-tree-id4530 . -4) (undo-tree-id4531 . -4) (undo-tree-id4532 . -4) (undo-tree-id4533 . -4) (undo-tree-id4534 . -4) (undo-tree-id4535 . -4) (undo-tree-id4536 . -4) (undo-tree-id4537 . -4) (undo-tree-id4538 . -4) (undo-tree-id4539 . -4) (undo-tree-id4540 . -4) (undo-tree-id4541 . -4) (undo-tree-id4542 . -4) (undo-tree-id4543 . -4) (undo-tree-id4544 . -4) (undo-tree-id4545 . -4) (undo-tree-id4546 . -4) (undo-tree-id4547 . -4) (undo-tree-id4548 . -4) (undo-tree-id4549 . -4) (undo-tree-id4550 . -4) (undo-tree-id4551 . -4) (undo-tree-id4552 . -4) (undo-tree-id4553 . -4) (undo-tree-id4554 . -4) (undo-tree-id4555 . -4) (undo-tree-id4556 . -4) (undo-tree-id4557 . -4) (undo-tree-id4558 . -4) (undo-tree-id4559 . -4) (undo-tree-id4560 . -4) (undo-tree-id4561 . -4) (undo-tree-id4562 . -4) (undo-tree-id4563 . -4) (undo-tree-id4564 . -4) (undo-tree-id4565 . -4) (undo-tree-id4566 . -4) (undo-tree-id4567 . -4) (undo-tree-id4568 . -4) (undo-tree-id4569 . -4) (undo-tree-id4570 . -4) (undo-tree-id4571 . -4) (undo-tree-id4572 . -4) (undo-tree-id4573 . -4) (undo-tree-id4574 . -4) (undo-tree-id4575 . -4) (undo-tree-id4576 . -4) (undo-tree-id4577 . -4) (undo-tree-id4578 . -4) (undo-tree-id4579 . -4) (undo-tree-id4580 . -4) (undo-tree-id4581 . -4) (undo-tree-id4582 . -4) (undo-tree-id4583 . -4) (undo-tree-id4584 . -4) (undo-tree-id4585 . -4) (undo-tree-id4586 . -4) (undo-tree-id4587 . -4) (undo-tree-id4588 . -4) (undo-tree-id4589 . -4) (undo-tree-id4590 . -4) (undo-tree-id4591 . -4) (undo-tree-id4592 . -4) (undo-tree-id4593 . -4) (undo-tree-id4594 . -4) (undo-tree-id4595 . -4) (undo-tree-id4596 . -4) (undo-tree-id4597 . -4) (undo-tree-id4598 . -4) (undo-tree-id4599 . -4) (undo-tree-id4600 . -4) (undo-tree-id4601 . -4) (undo-tree-id4602 . -4) (undo-tree-id4603 . -4) (undo-tree-id4604 . -4) (undo-tree-id4605 . -4) (undo-tree-id4606 . -4) (undo-tree-id4607 . -4) (undo-tree-id4608 . -4) (undo-tree-id4609 . -4) (undo-tree-id4610 . -4) (undo-tree-id4611 . -4) (undo-tree-id4612 . -4) (undo-tree-id4613 . -4) (undo-tree-id4614 . -4) (undo-tree-id4615 . -4) (undo-tree-id4616 . -4) (undo-tree-id4617 . -4) (undo-tree-id4618 . -4) (undo-tree-id4619 . -4) (undo-tree-id4620 . -4) (undo-tree-id4621 . -4) (undo-tree-id4622 . -4) (undo-tree-id4623 . -4) (undo-tree-id4624 . -4) (undo-tree-id4625 . -4) (undo-tree-id4626 . -4) (undo-tree-id4627 . -4) (undo-tree-id4628 . -4) (undo-tree-id4629 . -4) (undo-tree-id4630 . -4) (undo-tree-id4631 . -4) (undo-tree-id4632 . -4) (undo-tree-id4633 . -4) (undo-tree-id4634 . -4) (undo-tree-id4635 . -4) (undo-tree-id4636 . -4) (undo-tree-id4637 . -4) (undo-tree-id4638 . -4) (undo-tree-id4639 . -4) (undo-tree-id4640 . -4) (undo-tree-id4641 . -4) (undo-tree-id4642 . -4) (undo-tree-id4643 . -4) (undo-tree-id4644 . -4) (undo-tree-id4645 . -4) (undo-tree-id4646 . -4) (undo-tree-id4647 . -4) (undo-tree-id4648 . -4) (undo-tree-id4649 . -4) (undo-tree-id4650 . -4) (undo-tree-id4651 . -4) (undo-tree-id4652 . -4) (undo-tree-id4653 . -4) (undo-tree-id4654 . -4) (undo-tree-id4655 . -4) (undo-tree-id4656 . -4) (undo-tree-id4657 . -4) (undo-tree-id4658 . -4) (undo-tree-id4659 . -4) (undo-tree-id4660 . -4) (undo-tree-id4661 . -4) (undo-tree-id4662 . -4) (undo-tree-id4663 . -4) (undo-tree-id4664 . -4) (undo-tree-id4665 . -4) (undo-tree-id4666 . -4) (undo-tree-id4667 . -4) (undo-tree-id4668 . -4) (undo-tree-id4669 . -4) (undo-tree-id4670 . -4) (undo-tree-id4671 . -4) (undo-tree-id4672 . -4) (undo-tree-id4673 . -4) (undo-tree-id4674 . -4) (undo-tree-id4675 . -4) (undo-tree-id4676 . -4) (undo-tree-id4677 . -4) (undo-tree-id4678 . -4) (undo-tree-id4679 . -4) (undo-tree-id4680 . -4) (undo-tree-id4681 . -4) (undo-tree-id4682 . -4) (undo-tree-id4683 . -4) (undo-tree-id4684 . -4) (undo-tree-id4685 . -4) (undo-tree-id4686 . -4) (undo-tree-id4687 . -4) (undo-tree-id4688 . -4) (undo-tree-id4689 . -4) (undo-tree-id4690 . -4) (undo-tree-id4691 . -4) (undo-tree-id4692 . -4) (undo-tree-id4693 . -4) (undo-tree-id4694 . -4) (undo-tree-id4695 . -4) (undo-tree-id4696 . -4) (undo-tree-id4697 . -4) (undo-tree-id4698 . -4) (undo-tree-id4699 . -4) (undo-tree-id4700 . -4) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -4) (undo-tree-id4704 . -4) (undo-tree-id4705 . -4) (undo-tree-id4706 . -4) (undo-tree-id4707 . -4) (undo-tree-id4708 . -4) (undo-tree-id4709 . -4) (undo-tree-id4710 . -4) (undo-tree-id4711 . -4) (undo-tree-id4712 . -4) (undo-tree-id4713 . -4) (undo-tree-id4714 . -4) (undo-tree-id4715 . -4) (undo-tree-id4716 . -4) (undo-tree-id4717 . -4) (undo-tree-id4718 . -4) (undo-tree-id4719 . -4) (undo-tree-id4720 . -4) (undo-tree-id4721 . -4) (undo-tree-id4722 . -4) (undo-tree-id4723 . -4) (undo-tree-id4724 . -4) (undo-tree-id4725 . -4) (undo-tree-id4726 . -4) (undo-tree-id4727 . -4) (undo-tree-id4728 . -4) (undo-tree-id4729 . -4) (undo-tree-id4730 . -4) (undo-tree-id4731 . -4) (undo-tree-id4732 . -4) (undo-tree-id4733 . -4) (undo-tree-id4734 . -4) (undo-tree-id4735 . -4) (undo-tree-id4736 . -4) (undo-tree-id4737 . -4) (undo-tree-id4738 . -4) (undo-tree-id4739 . -4) (undo-tree-id4740 . -4) (undo-tree-id4741 . -4) (undo-tree-id4742 . -4) (undo-tree-id4743 . -4) (undo-tree-id4744 . -4) (undo-tree-id4745 . -4) (undo-tree-id4746 . -4) (undo-tree-id4747 . -4) (undo-tree-id4748 . -4) (undo-tree-id4749 . -4) (undo-tree-id4750 . -4) (undo-tree-id4751 . -4) (undo-tree-id4752 . -4) (undo-tree-id4753 . -4) (undo-tree-id4754 . -4) (undo-tree-id4755 . -4) (undo-tree-id4756 . -4) (undo-tree-id4757 . -4) (undo-tree-id4758 . -4) (undo-tree-id4759 . -4) (undo-tree-id4760 . -4) (undo-tree-id4761 . -4) (undo-tree-id4762 . -4) (undo-tree-id4763 . -4) (undo-tree-id4764 . -4) (undo-tree-id4765 . -4) (undo-tree-id4766 . -4) (undo-tree-id4767 . -4) (undo-tree-id4768 . -4) (undo-tree-id4769 . -4) (undo-tree-id4770 . -4) (undo-tree-id4771 . -4) (undo-tree-id4772 . -4) (undo-tree-id4773 . -4) (undo-tree-id4774 . -4) (undo-tree-id4775 . -4) (undo-tree-id4776 . -4) (undo-tree-id4777 . -4) (undo-tree-id4778 . -4) (undo-tree-id4779 . -4) (undo-tree-id4780 . -4) (undo-tree-id4781 . -4) (undo-tree-id4782 . -4) (undo-tree-id4783 . -4) (undo-tree-id4784 . -4) (undo-tree-id4785 . -4) (undo-tree-id4786 . -4) (undo-tree-id4787 . -4) (undo-tree-id4788 . -4) (undo-tree-id4789 . -4) (undo-tree-id4790 . -4) (undo-tree-id4791 . -4) (undo-tree-id4792 . -4) (undo-tree-id4793 . -4) (undo-tree-id4794 . -4) (undo-tree-id4795 . -4) (undo-tree-id4796 . -4) (undo-tree-id4797 . -4) (undo-tree-id4798 . -4) (undo-tree-id4799 . -4) (undo-tree-id4800 . -4) (undo-tree-id4801 . -4) (undo-tree-id4802 . -4) (undo-tree-id4803 . -4) (undo-tree-id4804 . -4) (undo-tree-id4805 . -4) (undo-tree-id4806 . -4) (undo-tree-id4807 . -4) (undo-tree-id4808 . -4) 31356) ((31351 . 31355) (#("            " 0 12 (fontified t)) . 31351)) (25155 30729 848306 0) 0 nil])
+([nil nil ((#("?" 0 1 (fontified t)) . -31196) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) 31197) ((31196 . 31197)) (25155 30729 843272 0) 0 nil])
+nil
diff --git a/node_modules/libp2p-gossipsub/src/.message-cache.js.~undo-tree~ b/node_modules/libp2p-gossipsub/src/.message-cache.js.~undo-tree~
new file mode 100644
index 0000000..a81fb04
--- /dev/null
+++ b/node_modules/libp2p-gossipsub/src/.message-cache.js.~undo-tree~
@@ -0,0 +1,7 @@
+(undo-tree-save-format-version . 1)
+"cfcf32f505738ffee5eb61bfe69b8bc3c27777f2"
+[nil nil nil nil (25155 30985 524356 0) 0 nil]
+([nil nil ((#("?" 0 1 (fontified t)) . -1423) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) 1424 (t 25155 20894 161999 0)) nil (25155 30985 524335 0) 0 nil])
+([nil nil ((1424 . 1425)) nil (25155 30985 523168 0) 0 nil])
+([nil current ((nil rear-nonsticky nil 1437 . 1438) (nil fontified nil 1437 . 1438) (nil fontified nil 1436 . 1437) (nil fontified nil 1435 . 1436) (nil fontified nil 1434 . 1435) (nil font-lock-face js2-function-call 1431 . 1434) (nil fontified nil 1431 . 1434) (nil fontified nil 1424 . 1431) (1424 . 1438)) nil (25155 30985 523162 0) 0 nil])
+nil
diff --git a/node_modules/libp2p-gossipsub/src/.tracer.js.~undo-tree~ b/node_modules/libp2p-gossipsub/src/.tracer.js.~undo-tree~
new file mode 100644
index 0000000..baebaf5
--- /dev/null
+++ b/node_modules/libp2p-gossipsub/src/.tracer.js.~undo-tree~
@@ -0,0 +1,8 @@
+(undo-tree-save-format-version . 1)
+"ba5e51e45d880ab26d07309dc018b4802d360b97"
+[nil nil nil nil (25155 31050 729141 0) 0 nil]
+([nil nil ((#("?" 0 1 (fontified t)) . -2018) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) 2019 (t 25155 20894 161999 0)) nil (25155 31050 729120 0) 0 nil])
+([nil nil ((2018 . 2019)) nil (25155 31050 727943 0) 0 nil])
+([nil nil ((nil rear-nonsticky nil 2031 . 2032) (nil fontified nil 2031 . 2032) (nil fontified nil 2030 . 2031) (nil fontified nil 2029 . 2030) (nil font-lock-face js2-function-call 2026 . 2029) (nil fontified nil 2026 . 2029) (nil fontified nil 2019 . 2026) (2019 . 2032)) nil (25155 31050 727941 0) 0 nil])
+([nil current ((2032 . 2033)) nil (25155 31050 727934 0) 0 nil])
+nil
diff --git a/node_modules/libp2p-gossipsub/src/constants.d.ts.map b/node_modules/libp2p-gossipsub/src/constants.d.ts.map
deleted file mode 100644
index db0aa92..0000000
--- a/node_modules/libp2p-gossipsub/src/constants.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"constants.d.ts","sourceRoot":"","sources":["../ts/constants.ts"],"names":[],"mappings":"AAEA,eAAO,MAAM,MAAM,OAAO,CAAA;AAC1B,eAAO,MAAM,MAAM,QAAc,CAAA;AAIjC,eAAO,MAAM,UAAU,oBAAoB,CAAA;AAE3C;;;GAGG;AACH,eAAO,MAAM,cAAc,mBAAmB,CAAA;AAE9C;;;;GAIG;AACH,eAAO,MAAM,cAAc,mBAAmB,CAAA;AAI9C;;;;GAIG;AACH,eAAO,MAAM,UAAU,IAAI,CAAA;AAE3B;;;;GAIG;AACH,eAAO,MAAM,YAAY,IAAI,CAAA;AAE7B;;;GAGG;AACH,eAAO,MAAM,YAAY,KAAK,CAAA;AAE9B;;;;GAIG;AACH,eAAO,MAAM,eAAe,IAAI,CAAA;AAEhC;;;;;;;GAOG;AACH,eAAO,MAAM,aAAa,IAAI,CAAA;AAI9B;;;GAGG;AACH,eAAO,MAAM,sBAAsB,IAAI,CAAA;AAEvC;;;;;;;;;GASG;AACH,eAAO,MAAM,sBAAsB,IAAI,CAAA;AAEvC;;;;;GAKG;AACH,eAAO,MAAM,cAAc,IAAI,CAAA;AAE/B;;;;GAIG;AACH,eAAO,MAAM,qBAAqB,OAAO,CAAA;AAEzC;;;;GAIG;AACH,eAAO,MAAM,6BAA6B,IAAI,CAAA;AAI9C;;;GAGG;AACH,eAAO,MAAM,8BAA8B,MAAM,CAAA;AAEjD;;GAEG;AACH,eAAO,MAAM,0BAA0B,OAAS,CAAA;AAEhD;;;;GAIG;AACH,eAAO,MAAM,kBAAkB,QAAS,CAAA;AAExC;;;;;GAKG;AACH,eAAO,MAAM,mBAAmB,KAAK,CAAA;AAErC;;;;;;;GAOG;AACH,eAAO,MAAM,qBAAqB,QAAS,CAAA;AAE3C;;;GAGG;AACH,eAAO,MAAM,0BAA0B,KAAK,CAAA;AAE5C;;GAEG;AACH,eAAO,MAAM,mBAAmB,IAAI,CAAA;AAEpC;;GAEG;AACH,eAAO,MAAM,8BAA8B,MAAM,CAAA;AAEjD;;GAEG;AACH,eAAO,MAAM,0BAA0B,QAAc,CAAA;AAErD;;;GAGG;AACH,eAAO,MAAM,2BAA2B,MAAM,CAAA;AAE9C;;GAEG;AACH,eAAO,MAAM,kCAAkC,OAAS,CAAA;AAExD;;;;;GAKG;AACH,eAAO,MAAM,gCAAgC,KAAK,CAAA;AAElD;;GAEG;AACH,eAAO,MAAM,gCAAgC,IAAI,CAAA;AAEjD;;;GAGG;AACH,eAAO,MAAM,4BAA4B,QAAc,CAAA;AAEvD;;;;;;GAMG;AACH,eAAO,MAAM,uBAAuB,OAAO,CAAA;AAE3C;;GAEG;AACH,eAAO,MAAM,yBAAyB,KAAK,CAAA;AAE3C;;;;GAIG;AACH,eAAO,MAAM,0BAA0B,QAAa,CAAA;AAEpD;;GAEG;AACH,eAAO,MAAM,gBAAgB,QAAc,CAAA;AAE3C,eAAO,MAAM,iBAAiB,QAAa,CAAA;AAE3C,eAAO,MAAM,0BAA0B,+BAA+B,CAAA;AACtE,eAAO,MAAM,0BAA0B,+BAA+B,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/constants.js b/node_modules/libp2p-gossipsub/src/constants.js
index 13ba101..b72a95b 100644
--- a/node_modules/libp2p-gossipsub/src/constants.js
+++ b/node_modules/libp2p-gossipsub/src/constants.js
@@ -180,7 +180,7 @@ exports.GossipsubIWantFollowupTime = 3 * exports.second;
 /**
  * Time in milliseconds to keep message ids in the seen cache
  */
-exports.GossipsubSeenTTL = 30 * exports.second;
+exports.GossipsubSeenTTL = 2 * exports.minute;
 exports.TimeCacheDuration = 120 * 1000;
 exports.ERR_TOPIC_VALIDATOR_REJECT = 'ERR_TOPIC_VALIDATOR_REJECT';
 exports.ERR_TOPIC_VALIDATOR_IGNORE = 'ERR_TOPIC_VALIDATOR_IGNORE';
diff --git a/node_modules/libp2p-gossipsub/src/get-gossip-peers.d.ts b/node_modules/libp2p-gossipsub/src/get-gossip-peers.d.ts
deleted file mode 100644
index 5080375..0000000
--- a/node_modules/libp2p-gossipsub/src/get-gossip-peers.d.ts
+++ /dev/null
@@ -1,13 +0,0 @@
-import Gossipsub = require('./index');
-/**
- * Given a topic, returns up to count peers subscribed to that topic
- * that pass an optional filter function
- *
- * @param {Gossipsub} router
- * @param {String} topic
- * @param {Number} count
- * @param {Function} [filter] a function to filter acceptable peers
- * @returns {Set<string>}
- *
- */
-export declare function getGossipPeers(router: Gossipsub, topic: string, count: number, filter?: (id: string) => boolean): Set<string>;
diff --git a/node_modules/libp2p-gossipsub/src/get-gossip-peers.d.ts.map b/node_modules/libp2p-gossipsub/src/get-gossip-peers.d.ts.map
deleted file mode 100644
index cb3a337..0000000
--- a/node_modules/libp2p-gossipsub/src/get-gossip-peers.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"get-gossip-peers.d.ts","sourceRoot":"","sources":["../ts/get-gossip-peers.ts"],"names":[],"mappings":"AACA,OAAO,SAAS,GAAG,QAAQ,SAAS,CAAC,CAAA;AAErC;;;;;;;;;;GAUG;AACH,wBAAgB,cAAc,CAC5B,MAAM,EAAE,SAAS,EACjB,KAAK,EAAE,MAAM,EACb,KAAK,EAAE,MAAM,EACb,MAAM,GAAE,CAAC,EAAE,EAAE,MAAM,KAAK,OAAoB,GAC3C,GAAG,CAAC,MAAM,CAAC,CA6Bb"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/get-gossip-peers.js b/node_modules/libp2p-gossipsub/src/get-gossip-peers.js
deleted file mode 100644
index 24ec81d..0000000
--- a/node_modules/libp2p-gossipsub/src/get-gossip-peers.js
+++ /dev/null
@@ -1,41 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.getGossipPeers = void 0;
-const utils_1 = require("./utils");
-/**
- * Given a topic, returns up to count peers subscribed to that topic
- * that pass an optional filter function
- *
- * @param {Gossipsub} router
- * @param {String} topic
- * @param {Number} count
- * @param {Function} [filter] a function to filter acceptable peers
- * @returns {Set<string>}
- *
- */
-function getGossipPeers(router, topic, count, filter = () => true) {
-    const peersInTopic = router.topics.get(topic);
-    if (!peersInTopic) {
-        return new Set();
-    }
-    // Adds all peers using our protocol
-    // that also pass the filter function
-    let peers = [];
-    peersInTopic.forEach((id) => {
-        const peerStreams = router.peers.get(id);
-        if (!peerStreams) {
-            return;
-        }
-        if (utils_1.hasGossipProtocol(peerStreams.protocol) &&
-            filter(id)) {
-            peers.push(id);
-        }
-    });
-    // Pseudo-randomly shuffles peers
-    peers = utils_1.shuffle(peers);
-    if (count > 0 && peers.length > count) {
-        peers = peers.slice(0, count);
-    }
-    return new Set(peers);
-}
-exports.getGossipPeers = getGossipPeers;
diff --git a/node_modules/libp2p-gossipsub/src/heartbeat.d.ts b/node_modules/libp2p-gossipsub/src/heartbeat.d.ts
deleted file mode 100644
index 22617b3..0000000
--- a/node_modules/libp2p-gossipsub/src/heartbeat.d.ts
+++ /dev/null
@@ -1,28 +0,0 @@
-/// <reference types="node" />
-import Gossipsub = require('./index');
-export declare class Heartbeat {
-    gossipsub: Gossipsub;
-    _heartbeatTimer: {
-        _intervalId: NodeJS.Timeout | undefined;
-        runPeriodically(fn: () => void, period: number): void;
-        cancel(): void;
-    } | null;
-    /**
-     * @param {Object} gossipsub
-     * @constructor
-     */
-    constructor(gossipsub: Gossipsub);
-    start(): void;
-    /**
-     * Unmounts the gossipsub protocol and shuts down every connection
-     * @override
-     * @returns {void}
-     */
-    stop(): void;
-    /**
-     * Maintains the mesh and fanout maps in gossipsub.
-     *
-     * @returns {void}
-     */
-    _heartbeat(): void;
-}
diff --git a/node_modules/libp2p-gossipsub/src/heartbeat.d.ts.map b/node_modules/libp2p-gossipsub/src/heartbeat.d.ts.map
deleted file mode 100644
index fa4a5e5..0000000
--- a/node_modules/libp2p-gossipsub/src/heartbeat.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"heartbeat.d.ts","sourceRoot":"","sources":["../ts/heartbeat.ts"],"names":[],"mappings":";AAGA,OAAO,SAAS,GAAG,QAAQ,SAAS,CAAC,CAAA;AAGrC,qBAAa,SAAS;IACpB,SAAS,EAAE,SAAS,CAAA;IACpB,eAAe,EAAE;QACf,WAAW,EAAE,MAAM,CAAC,OAAO,GAAG,SAAS,CAAA;QACvC,eAAe,CAAE,EAAE,EAAE,MAAM,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,CAAA;QACtD,MAAM,IAAK,IAAI,CAAA;KAChB,GAAG,IAAI,CAAA;IAER;;;OAGG;gBACU,SAAS,EAAE,SAAS;IAIjC,KAAK,IAAK,IAAI;IAwBd;;;;OAIG;IACH,IAAI,IAAK,IAAI;IASb;;;;OAIG;IACH,UAAU,IAAK,IAAI;CAgRpB"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/heartbeat.js b/node_modules/libp2p-gossipsub/src/heartbeat.js
deleted file mode 100644
index 2d0602c..0000000
--- a/node_modules/libp2p-gossipsub/src/heartbeat.js
+++ /dev/null
@@ -1,294 +0,0 @@
-"use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || function (mod) {
-    if (mod && mod.__esModule) return mod;
-    var result = {};
-    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
-    __setModuleDefault(result, mod);
-    return result;
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Heartbeat = void 0;
-const constants = __importStar(require("./constants"));
-const get_gossip_peers_1 = require("./get-gossip-peers");
-const utils_1 = require("./utils");
-// eslint-disable-next-line @typescript-eslint/ban-ts-comment
-class Heartbeat {
-    /**
-     * @param {Object} gossipsub
-     * @constructor
-     */
-    constructor(gossipsub) {
-        this.gossipsub = gossipsub;
-    }
-    start() {
-        if (this._heartbeatTimer) {
-            return;
-        }
-        const heartbeat = this._heartbeat.bind(this);
-        const timeout = setTimeout(() => {
-            heartbeat();
-            this._heartbeatTimer.runPeriodically(heartbeat, this.gossipsub._options.heartbeatInterval);
-        }, constants.GossipsubHeartbeatInitialDelay);
-        this._heartbeatTimer = {
-            _intervalId: undefined,
-            runPeriodically: (fn, period) => {
-                this._heartbeatTimer._intervalId = setInterval(fn, period);
-            },
-            cancel: () => {
-                clearTimeout(timeout);
-                clearInterval(this._heartbeatTimer._intervalId);
-            }
-        };
-    }
-    /**
-     * Unmounts the gossipsub protocol and shuts down every connection
-     * @override
-     * @returns {void}
-     */
-    stop() {
-        if (!this._heartbeatTimer) {
-            return;
-        }
-        this._heartbeatTimer.cancel();
-        this._heartbeatTimer = null;
-    }
-    /**
-     * Maintains the mesh and fanout maps in gossipsub.
-     *
-     * @returns {void}
-     */
-    _heartbeat() {
-        const { D, Dlo, Dhi, Dscore, Dout, fanoutTTL } = this.gossipsub._options;
-        this.gossipsub.heartbeatTicks++;
-        // cache scores throught the heartbeat
-        const scores = new Map();
-        const getScore = (id) => {
-            let s = scores.get(id);
-            if (s === undefined) {
-                s = this.gossipsub.score.score(id);
-                scores.set(id, s);
-            }
-            return s;
-        };
-        // peer id => topic[]
-        const tograft = new Map();
-        // peer id => topic[]
-        const toprune = new Map();
-        // peer id => don't px
-        const noPX = new Map();
-        // clean up expired backoffs
-        this.gossipsub._clearBackoff();
-        // clean up peerhave/iasked counters
-        this.gossipsub.peerhave.clear();
-        this.gossipsub.iasked.clear();
-        // apply IWANT request penalties
-        this.gossipsub._applyIwantPenalties();
-        // ensure direct peers are connected
-        this.gossipsub._directConnect();
-        // maintain the mesh for topics we have joined
-        this.gossipsub.mesh.forEach((peers, topic) => {
-            // prune/graft helper functions (defined per topic)
-            const prunePeer = (id) => {
-                this.gossipsub.log('HEARTBEAT: Remove mesh link to %s in %s', id, topic);
-                // update peer score
-                this.gossipsub.score.prune(id, topic);
-                // add prune backoff record
-                this.gossipsub._addBackoff(id, topic);
-                // remove peer from mesh
-                peers.delete(id);
-                // add to toprune
-                const topics = toprune.get(id);
-                if (!topics) {
-                    toprune.set(id, [topic]);
-                }
-                else {
-                    topics.push(topic);
-                }
-            };
-            const graftPeer = (id) => {
-                this.gossipsub.log('HEARTBEAT: Add mesh link to %s in %s', id, topic);
-                // update peer score
-                this.gossipsub.score.graft(id, topic);
-                // add peer to mesh
-                peers.add(id);
-                // add to tograft
-                const topics = tograft.get(id);
-                if (!topics) {
-                    tograft.set(id, [topic]);
-                }
-                else {
-                    topics.push(topic);
-                }
-            };
-            // drop all peers with negative score, without PX
-            peers.forEach(id => {
-                const score = getScore(id);
-                if (score < 0) {
-                    this.gossipsub.log('HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s', id, score, topic);
-                    prunePeer(id);
-                    noPX.set(id, true);
-                }
-            });
-            // do we have enough peers?
-            if (peers.size < Dlo) {
-                const backoff = this.gossipsub.backoff.get(topic);
-                const ineed = D - peers.size;
-                const peersSet = get_gossip_peers_1.getGossipPeers(this.gossipsub, topic, ineed, id => {
-                    // filter out mesh peers, direct peers, peers we are backing off, peers with negative score
-                    return !peers.has(id) && !this.gossipsub.direct.has(id) && (!backoff || !backoff.has(id)) && getScore(id) >= 0;
-                });
-                peersSet.forEach(graftPeer);
-            }
-            // do we have to many peers?
-            if (peers.size > Dhi) {
-                let peersArray = Array.from(peers);
-                // sort by score
-                peersArray.sort((a, b) => getScore(b) - getScore(a));
-                // We keep the first D_score peers by score and the remaining up to D randomly
-                // under the constraint that we keep D_out peers in the mesh (if we have that many)
-                peersArray = peersArray.slice(0, Dscore).concat(utils_1.shuffle(peersArray.slice(Dscore)));
-                // count the outbound peers we are keeping
-                let outbound = 0;
-                peersArray.slice(0, D).forEach(p => {
-                    if (this.gossipsub.outbound.get(p)) {
-                        outbound++;
-                    }
-                });
-                // if it's less than D_out, bubble up some outbound peers from the random selection
-                if (outbound < Dout) {
-                    const rotate = (i) => {
-                        // rotate the peersArray to the right and put the ith peer in the front
-                        const p = peersArray[i];
-                        for (let j = i; j > 0; j--) {
-                            peersArray[j] = peersArray[j - 1];
-                        }
-                        peersArray[0] = p;
-                    };
-                    // first bubble up all outbound peers already in the selection to the front
-                    if (outbound > 0) {
-                        let ihave = outbound;
-                        for (let i = 1; i < D && ihave > 0; i++) {
-                            if (this.gossipsub.outbound.get(peersArray[i])) {
-                                rotate(i);
-                                ihave--;
-                            }
-                        }
-                    }
-                    // now bubble up enough outbound peers outside the selection to the front
-                    let ineed = D - outbound;
-                    for (let i = D; i < peersArray.length && ineed > 0; i++) {
-                        if (this.gossipsub.outbound.get(peersArray[i])) {
-                            rotate(i);
-                            ineed--;
-                        }
-                    }
-                }
-                // prune the excess peers
-                peersArray.slice(D).forEach(prunePeer);
-            }
-            // do we have enough outbound peers?
-            if (peers.size >= Dlo) {
-                // count the outbound peers we have
-                let outbound = 0;
-                peers.forEach(p => {
-                    if (this.gossipsub.outbound.get(p)) {
-                        outbound++;
-                    }
-                });
-                // if it's less than D_out, select some peers with outbound connections and graft them
-                if (outbound < Dout) {
-                    const ineed = Dout - outbound;
-                    const backoff = this.gossipsub.backoff.get(topic);
-                    get_gossip_peers_1.getGossipPeers(this.gossipsub, topic, ineed, (id) => {
-                        // filter our current mesh peers, direct peers, peers we are backing off, peers with negative score
-                        return !peers.has(id) && !this.gossipsub.direct.has(id) && (!backoff || !backoff.has(id)) && getScore(id) >= 0;
-                    }).forEach(graftPeer);
-                }
-            }
-            // should we try to improve the mesh with opportunistic grafting?
-            if (this.gossipsub.heartbeatTicks % constants.GossipsubOpportunisticGraftTicks === 0 && peers.size > 1) {
-                // Opportunistic grafting works as follows: we check the median score of peers in the
-                // mesh; if this score is below the opportunisticGraftThreshold, we select a few peers at
-                // random with score over the median.
-                // The intention is to (slowly) improve an underperforming mesh by introducing good
-                // scoring peers that may have been gossiping at us. This allows us to get out of sticky
-                // situations where we are stuck with poor peers and also recover from churn of good peers.
-                // now compute the median peer score in the mesh
-                const peersList = Array.from(peers)
-                    .sort((a, b) => getScore(a) - getScore(b));
-                const medianIndex = Math.floor(peers.size / 2);
-                const medianScore = getScore(peersList[medianIndex]);
-                // if the median score is below the threshold, select a better peer (if any) and GRAFT
-                if (medianScore < this.gossipsub._options.scoreThresholds.opportunisticGraftThreshold) {
-                    const backoff = this.gossipsub.backoff.get(topic);
-                    const peersToGraft = get_gossip_peers_1.getGossipPeers(this.gossipsub, topic, constants.GossipsubOpportunisticGraftPeers, (id) => {
-                        // filter out current mesh peers, direct peers, peers we are backing off, peers below or at threshold
-                        return peers.has(id) && !this.gossipsub.direct.has(id) && (!backoff || !backoff.has(id)) && getScore(id) > medianScore;
-                    });
-                    peersToGraft.forEach(id => {
-                        this.gossipsub.log('HEARTBEAT: Opportunistically graft peer %s on topic %s', id, topic);
-                        graftPeer(id);
-                    });
-                }
-            }
-            // 2nd arg are mesh peers excluded from gossip. We have already pushed
-            // messages to them, so its redundant to gossip IHAVEs.
-            this.gossipsub._emitGossip(topic, peers);
-        });
-        // expire fanout for topics we haven't published to in a while
-        const now = this.gossipsub._now();
-        this.gossipsub.lastpub.forEach((lastpb, topic) => {
-            if ((lastpb + fanoutTTL) < now) {
-                this.gossipsub.fanout.delete(topic);
-                this.gossipsub.lastpub.delete(topic);
-            }
-        });
-        // maintain our fanout for topics we are publishing but we have not joined
-        this.gossipsub.fanout.forEach((fanoutPeers, topic) => {
-            // checks whether our peers are still in the topic and have a score above the publish threshold
-            const topicPeers = this.gossipsub.topics.get(topic);
-            fanoutPeers.forEach(id => {
-                if (!topicPeers.has(id) ||
-                    getScore(id) < this.gossipsub._options.scoreThresholds.publishThreshold) {
-                    fanoutPeers.delete(id);
-                }
-            });
-            // do we need more peers?
-            if (fanoutPeers.size < D) {
-                const ineed = D - fanoutPeers.size;
-                const peersSet = get_gossip_peers_1.getGossipPeers(this.gossipsub, topic, ineed, (id) => {
-                    // filter out existing fanout peers, direct peers, and peers with score above the publish threshold
-                    return !fanoutPeers.has(id) &&
-                        !this.gossipsub.direct.has(id) &&
-                        getScore(id) >= this.gossipsub._options.scoreThresholds.publishThreshold;
-                });
-                peersSet.forEach(id => {
-                    fanoutPeers.add(id);
-                });
-            }
-            // 2nd arg are fanout peers excluded from gossip.
-            // We have already pushed messages to them, so its redundant to gossip IHAVEs
-            this.gossipsub._emitGossip(topic, fanoutPeers);
-        });
-        // send coalesced GRAFT/PRUNE messages (will piggyback gossip)
-        this.gossipsub._sendGraftPrune(tograft, toprune, noPX);
-        // flush pending gossip that wasn't piggybacked above
-        this.gossipsub._flush();
-        // advance the message history window
-        this.gossipsub.messageCache.shift();
-        this.gossipsub.emit('gossipsub:heartbeat');
-    }
-}
-exports.Heartbeat = Heartbeat;
diff --git a/node_modules/libp2p-gossipsub/src/index.d.ts b/node_modules/libp2p-gossipsub/src/index.d.ts
index d2624b2..5220def 100644
--- a/node_modules/libp2p-gossipsub/src/index.d.ts
+++ b/node_modules/libp2p-gossipsub/src/index.d.ts
@@ -2,7 +2,6 @@
 import Pubsub, { InMessage } from 'libp2p-interfaces/src/pubsub';
 import { MessageCache } from './message-cache';
 import { RPC, IRPC } from './message/rpc';
-import { Heartbeat } from './heartbeat';
 import { PeerScore, PeerScoreParams, PeerScoreThresholds } from './score';
 import { IWantTracer } from './tracer';
 import { AddrInfo, MessageIdFunction } from './interfaces';
@@ -11,7 +10,8 @@ import { Debugger } from 'debug';
 import Libp2p from 'libp2p';
 import PeerStreams from 'libp2p-interfaces/src/pubsub/peer-streams';
 import PeerId = require('peer-id');
-interface GossipInputOptions {
+export declare const multicodec: string;
+export interface GossipInputOptions {
     emitSelf: boolean;
     canRelayMessage: boolean;
     gossipIncoming: boolean;
@@ -83,28 +83,76 @@ interface AcceptFromWhitelistEntry {
     acceptUntil: number;
 }
 declare type FastMsgIdFn = (msg: InMessage) => string;
-declare class Gossipsub extends Pubsub {
+export default class Gossipsub extends Pubsub {
     peers: Map<string, PeerStreams>;
+    /** Direct peers */
     direct: Set<string>;
+    /** Cache of seen messages */
     seenCache: SimpleTimeCache<void>;
+    /**
+     * Map of peer id and AcceptRequestWhileListEntry
+     */
     acceptFromWhitelist: Map<string, AcceptFromWhitelistEntry>;
     topics: Map<string, Set<string>>;
+    /**
+     * Map of topic meshes
+     * topic => peer id set
+     */
     mesh: Map<string, Set<string>>;
+    /**
+     * Map of topics to set of peers. These mesh peers are the ones to which we are publishing without a topic membership
+     * topic => peer id set
+     */
     fanout: Map<string, Set<string>>;
+    /**
+     * Map of last publish time for fanout topics
+     * topic => last publish time
+     */
     lastpub: Map<string, number>;
+    /**
+     * Map of pending messages to gossip
+     * peer id => control messages
+     */
     gossip: Map<string, RPC.IControlIHave[]>;
+    /**
+     * Map of control messages
+     * peer id => control message
+     */
     control: Map<string, RPC.IControlMessage>;
+    /**
+     * Number of IHAVEs received from peer in the last heartbeat
+     */
     peerhave: Map<string, number>;
+    /** Number of messages we have asked from peer in the last heartbeat */
     iasked: Map<string, number>;
+    /** Prune backoff map */
     backoff: Map<string, Map<string, number>>;
+    /**
+     * Connection direction cache, marks peers with outbound connections
+     * peer id => direction
+     */
     outbound: Map<string, boolean>;
     defaultMsgIdFn: MessageIdFunction;
+    /**
+     * A fast message id function used for internal message de-duplication
+     */
     getFastMsgIdStr: FastMsgIdFn | undefined;
+    /** Maps fast message-id to canonical message-id */
     fastMsgIdCache: SimpleTimeCache<string> | undefined;
+    /**
+     * A message cache that contains the messages for last few hearbeat ticks
+     */
     messageCache: MessageCache;
+    /** Peer score tracking */
     score: PeerScore;
-    heartbeat: Heartbeat;
+    /**
+     * Number of heartbeats since the beginning of time
+     * This allows us to amortize some resource cleanup -- eg: backoff cleanup
+     */
     heartbeatTicks: number;
+    /**
+     * Tracks IHAVE/IWANT promises broken by peers
+     */
     gossipTracer: IWantTracer;
     multicodecs: string[];
     started: boolean;
@@ -118,6 +166,11 @@ declare class Gossipsub extends Pubsub {
     };
     emit: (event: string | symbol, ...args: any[]) => boolean;
     static multicodec: string;
+    _heartbeatTimer: {
+        _intervalId: NodeJS.Timeout | undefined;
+        runPeriodically(fn: () => void, period: number): void;
+        cancel(): void;
+    } | null;
     /**
      * @param {Libp2p} libp2p
      * @param {Object} [options]
@@ -140,180 +193,123 @@ declare class Gossipsub extends Pubsub {
      * Decode a Uint8Array into an RPC object
      * Overrided to use an extended protocol-specific protobuf decoder
      * @override
-     * @param {Uint8Array} bytes
-     * @returns {RPC}
      */
     _decodeRpc(bytes: Uint8Array): RPC;
     /**
      * Encode an RPC object into a Uint8Array
      * Overrided to use an extended protocol-specific protobuf encoder
      * @override
-     * @param {RPC} rpc
-     * @returns {Uint8Array}
      */
     _encodeRpc(rpc: RPC): Uint8Array;
     /**
      * Add a peer to the router
      * @override
-     * @param {PeerId} peerId
-     * @param {string} protocol
-     * @returns {PeerStreams}
      */
     _addPeer(peerId: PeerId, protocol: string): PeerStreams;
     /**
      * Removes a peer from the router
      * @override
-     * @param {PeerId} peer
-     * @returns {PeerStreams | undefined}
      */
     _removePeer(peerId: PeerId): PeerStreams | undefined;
     /**
      * Handles an rpc request from a peer
      *
      * @override
-     * @param {String} idB58Str
-     * @param {PeerStreams} peerStreams
-     * @param {RPC} rpc
-     * @returns {Promise<boolean>}
      */
     _processRpc(id: string, peerStreams: PeerStreams, rpc: RPC): Promise<boolean>;
     /**
      * Handles an rpc control message from a peer
-     * @param {string} id peer id
-     * @param {RPC.IControlMessage} controlMsg
-     * @returns {void}
      */
     _processRpcControlMessage(id: string, controlMsg: RPC.IControlMessage): Promise<void>;
     /**
      * Process incoming message,
      * emitting locally and forwarding on to relevant floodsub and gossipsub peers
      * @override
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
      */
     _processRpcMessage(msg: InMessage): Promise<void>;
     /**
      * Whether to accept a message from a peer
      * @override
-     * @param {string} id
-     * @returns {boolean}
      */
     _acceptFrom(id: string): boolean;
     /**
      * Validate incoming message
      * @override
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
      */
     validate(msg: InMessage): Promise<void>;
     /**
      * Handles IHAVE messages
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlIHave>} ihave
-     * @returns {RPC.IControlIWant}
      */
     _handleIHave(id: string, ihave: RPC.IControlIHave[]): RPC.IControlIWant[];
     /**
      * Handles IWANT messages
      * Returns messages to send back to peer
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlIWant>} iwant
-     * @returns {Array<RPC.IMessage>}
      */
     _handleIWant(id: string, iwant: RPC.IControlIWant[]): RPC.IMessage[];
     /**
      * Handles Graft messages
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlGraft>} graft
-     * @return {Promise<RPC.IControlPrune[]>}
      */
     _handleGraft(id: string, graft: RPC.IControlGraft[]): Promise<RPC.IControlPrune[]>;
     /**
      * Handles Prune messages
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlPrune>} prune
-     * @returns {void}
      */
     _handlePrune(id: string, prune: RPC.IControlPrune[]): void;
     /**
      * Add standard backoff log for a peer in a topic
-     * @param {string} id
-     * @param {string} topic
-     * @returns {void}
      */
     _addBackoff(id: string, topic: string): void;
     /**
      * Add backoff expiry interval for a peer in a topic
-     * @param {string} id
-     * @param {string} topic
-     * @param {number} interval backoff duration in milliseconds
-     * @returns {void}
+     * @param interval backoff duration in milliseconds
      */
     _doAddBackoff(id: string, topic: string, interval: number): void;
     /**
      * Apply penalties from broken IHAVE/IWANT promises
-     * @returns {void}
      */
     _applyIwantPenalties(): void;
     /**
      * Clear expired backoff expiries
-     * @returns {void}
      */
     _clearBackoff(): void;
     /**
      * Maybe reconnect to direct peers
-     * @returns {void}
      */
     _directConnect(): void;
     /**
      * Maybe attempt connection given signed peer records
-     * @param {RPC.IPeerInfo[]} peers
-     * @returns {Promise<void>}
      */
     _pxConnect(peers: RPC.IPeerInfo[]): Promise<void>;
     /**
      * Mounts the gossipsub protocol onto the libp2p node and sends our
      * our subscriptions to every peer connected
      * @override
-     * @returns {Promise<void>}
      */
     start(): Promise<void>;
     /**
      * Unmounts the gossipsub protocol and shuts down every connection
      * @override
-     * @returns {Promise<void>}
      */
     stop(): Promise<void>;
     /**
      * Connect to a peer using the gossipsub protocol
-     * @param {string} id
-     * @returns {void}
      */
     _connect(id: string): void;
     /**
      * Subscribes to a topic
      * @override
-     * @param {string} topic
-     * @returns {void}
      */
     subscribe(topic: string): void;
     /**
      * Unsubscribe to a topic
      * @override
-     * @param {string} topic
-     * @returns {void}
      */
     unsubscribe(topic: string): void;
     /**
      * Join topic
-     * @param {string} topic
-     * @returns {void}
      */
     join(topic: string): void;
     /**
      * Leave topic
-     * @param {string} topic
-     * @returns {void}
      */
     leave(topic: string): void;
     /**
@@ -321,38 +317,26 @@ declare class Gossipsub extends Pubsub {
      *
      * If a fast message-id is set: Try 1. the application cache 2. the fast cache 3. `getMsgId()`
      * If a fast message-id is NOT set: Just `getMsgId()`
-     * @param {InMessage} msg
-     * @returns {Promise<string>}
      */
     getCanonicalMsgIdStr(msg: InMessage): Promise<string>;
     /**
      * An application should override this function to return its cached message id string without computing it.
      * Return undefined if message id is not found.
      * If a fast message id function is not defined, this function is ignored.
-     * @param {InMessage} msg
-     * @returns {string | undefined}
      */
     getCachedMsgIdStr(msg: InMessage): string | undefined;
     /**
      * Publish messages
      *
      * @override
-     * @param {InMessage} msg
-     * @returns {void}
      */
     _publish(msg: InMessage): Promise<void>;
     /**
      * Sends a GRAFT message to a peer
-     * @param {string} id peer id
-     * @param {string} topic
-     * @returns {void}
      */
     _sendGraft(id: string, topic: string): void;
     /**
      * Sends a PRUNE message to a peer
-     * @param {string} id peer id
-     * @param {string} topic
-     * @returns {Promise<void>}
      */
     _sendPrune(id: string, topic: string): Promise<void>;
     /**
@@ -363,15 +347,13 @@ declare class Gossipsub extends Pubsub {
     _piggybackGossip(id: string, outRpc: IRPC, ihave: RPC.IControlIHave[]): void;
     /**
      * Send graft and prune messages
-     * @param {Map<string, Array<string>>} tograft peer id => topic[]
-     * @param {Map<string, Array<string>>} toprune peer id => topic[]
+     * @param tograft peer id => topic[]
+     * @param toprune peer id => topic[]
      */
     _sendGraftPrune(tograft: Map<string, string[]>, toprune: Map<string, string[]>, noPX: Map<string, boolean>): Promise<void>;
     /**
      * Emits gossip to peers in a particular topic
-     * @param {string} topic
-     * @param {Set<string>} exclude peers to exclude
-     * @returns {void}
+     * @param exclude peers to exclude
      */
     _emitGossip(topic: string, exclude: Set<string>): void;
     /**
@@ -380,23 +362,26 @@ declare class Gossipsub extends Pubsub {
     _flush(): void;
     /**
      * Adds new IHAVE messages to pending gossip
-     * @param {PeerStreams} peerStreams
-     * @param {Array<RPC.IControlIHave>} controlIHaveMsgs
-     * @returns {void}
      */
     _pushGossip(id: string, controlIHaveMsgs: RPC.IControlIHave): void;
     /**
      * Returns the current time in milliseconds
-     * @returns {number}
      */
     _now(): number;
     /**
      * Make a PRUNE control message for a peer in a topic
-     * @param {string} id
-     * @param {string} topic
-     * @param {boolean} doPX
-     * @returns {Promise<RPC.IControlPrune>}
      */
     _makePrune(id: string, topic: string, doPX: boolean): Promise<RPC.IControlPrune>;
+    /**
+     * Maintains the mesh and fanout maps in gossipsub.
+     */
+    _heartbeat(): void;
+    /**
+     * Given a topic, returns up to count peers subscribed to that topic
+     * that pass an optional filter function
+     *
+     * @param filter a function to filter acceptable peers
+     */
+    private getGossipPeers;
 }
-export = Gossipsub;
+export {};
diff --git a/node_modules/libp2p-gossipsub/src/index.d.ts.map b/node_modules/libp2p-gossipsub/src/index.d.ts.map
deleted file mode 100644
index f0e9c81..0000000
--- a/node_modules/libp2p-gossipsub/src/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../ts/index.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,EAAE,EAAE,SAAS,EAAS,MAAM,8BAA8B,CAAA;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAA;AAC9C,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,eAAe,CAAA;AAEzC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AAGvC,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,mBAAmB,EAAoD,MAAM,SAAS,CAAA;AAC3H,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAA;AACtC,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAA;AAC1D,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAChC,OAAO,MAAM,MAAM,QAAQ,CAAA;AAE3B,OAAO,WAAW,MAAM,2CAA2C,CAAA;AAGnE,OAAO,SAAS,GAAG,QAAQ,YAAY,CAAC,CAAA;AACxC,OAAO,MAAM,GAAG,QAAQ,SAAS,CAAC,CAAA;AAKlC,UAAU,kBAAkB;IAC1B,QAAQ,EAAE,OAAO,CAAA;IACjB,eAAe,EAAE,OAAO,CAAA;IACxB,cAAc,EAAE,OAAO,CAAA;IACvB,kBAAkB,EAAE,OAAO,CAAA;IAC3B,YAAY,EAAE,OAAO,CAAA;IACrB,IAAI,EAAE,OAAO,CAAA;IACb,OAAO,EAAE,iBAAiB,CAAA;IAC1B,YAAY,EAAE,YAAY,CAAA;IAC1B,qBAAqB,EAAE,YAAY,GAAG,cAAc,GAAG,SAAS,CAAA;IAChE,WAAW,EAAE,OAAO,CAAC,eAAe,CAAC,CAAA;IACrC,eAAe,EAAE,OAAO,CAAC,mBAAmB,CAAC,CAAA;IAC7C,WAAW,EAAE,QAAQ,EAAE,CAAA;IACvB;;OAEG;IACH,CAAC,EAAE,MAAM,CAAA;IACT;;OAEG;IACH,GAAG,EAAE,MAAM,CAAA;IACX;;OAEG;IACH,GAAG,EAAE,MAAM,CAAA;IACX;;OAEG;IACH,MAAM,EAAE,MAAM,CAAA;IACd;;OAEG;IACH,IAAI,EAAE,MAAM,CAAA;IACZ;;OAEG;IACH,KAAK,EAAE,MAAM,CAAA;IACb;;OAEG;IACH,iBAAiB,EAAE,MAAM,CAAA;IACzB;;;;OAIG;IACH,SAAS,EAAE,MAAM,CAAA;IACjB;;OAEG;IACH,YAAY,EAAE,MAAM,CAAA;IACpB;;OAEG;IACH,YAAY,EAAE,MAAM,CAAA;IACpB;;OAEG;IACH,OAAO,EAAE,MAAM,CAAA;CAChB;AAED,UAAU,aAAc,SAAQ,kBAAkB;IAChD,WAAW,EAAE,eAAe,CAAA;IAC5B,eAAe,EAAE,mBAAmB,CAAA;CACrC;AAED,cAAM,SAAU,SAAQ,MAAM;IAC5B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;IAC/B,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;IACnB,SAAS,EAAE,SAAS,CAAA;IACpB,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;IAChC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;IAC9B,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;IAChC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC5B,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,aAAa,EAAE,CAAC,CAAA;IACxC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,eAAe,CAAC,CAAA;IACzC,QAAQ,EAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC5B,MAAM,EAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC1B,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IACzC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IAC9B,cAAc,EAAE,iBAAiB,CAAA;IACjC,QAAQ,EAAE,iBAAiB,CAAA;IAC3B,YAAY,EAAE,YAAY,CAAA;IAC1B,KAAK,EAAE,SAAS,CAAA;IAChB,SAAS,EAAE,SAAS,CAAA;IACpB,cAAc,EAAE,MAAM,CAAA;IACtB,YAAY,EAAE,WAAW,CAAA;IACzB,WAAW,EAAE,MAAM,EAAE,CAAA;IACrB,OAAO,EAAE,OAAO,CAAA;IAChB,MAAM,EAAE,MAAM,CAAA;IACd,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;IAC1B,OAAO,EAAE,MAAM,CAAA;IACf,QAAQ,EAAE,aAAa,CAAA;IACvB,kBAAkB,EAAE,MAAM,CAAC,OAAO,CAAA;IAClC,GAAG,EAAE,QAAQ,GAAG;QAAE,GAAG,EAAE,QAAQ,CAAA;KAAE,CAAA;IAEjC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,OAAO,CAAA;IAEzD,OAAc,UAAU,EAAE,MAAM,CAA2B;IAG3D;;;;;;;;;;;;;;;OAeG;gBAED,MAAM,EAAE,MAAM,EACd,OAAO,GAAE,OAAO,CAAC,kBAAkB,CAAM;IA2J3C;;;;;;OAMG;IACH,UAAU,CAAE,KAAK,EAAE,UAAU;IAI7B;;;;;;OAMG;IACH,UAAU,CAAE,GAAG,EAAE,GAAG;IAIpB;;;;;;OAMG;IACH,QAAQ,CAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,GAAG,WAAW;IAqBxD;;;;;OAKG;IACH,WAAW,CAAE,MAAM,EAAE,MAAM,GAAG,WAAW,GAAG,SAAS;IA6BrD;;;;;;;;OAQG;IACG,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;IAUpF;;;;;OAKG;IACH,yBAAyB,CAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC,eAAe,GAAG,IAAI;IAkB7E;;;;;;OAMG;IACG,kBAAkB,CAAE,GAAG,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAexD;;;;;OAKG;IACH,WAAW,CAAE,EAAE,EAAE,MAAM,GAAG,OAAO;IAIjC;;;;;OAKG;IACG,QAAQ,CAAE,OAAO,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAUlD;;;;;OAKG;IACH,YAAY,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE;IAgF1E;;;;;;OAMG;IACH,YAAY,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC,QAAQ,EAAE;IA2CrE;;;;;OAKG;IACH,YAAY,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE;IA0F1E;;;;;OAKG;IACH,YAAY,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,IAAI;IAmC3D;;;;;OAKG;IACH,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAI7C;;;;;;OAMG;IACH,aAAa,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,GAAG,IAAI;IAajE;;;OAGG;IACH,oBAAoB,IAAK,IAAI;IAO7B;;;OAGG;IACH,aAAa,IAAK,IAAI;IAmBtB;;;OAGG;IACH,cAAc,IAAK,IAAI;IAqBvB;;;;OAIG;IACG,UAAU,CAAE,KAAK,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAwDxD;;;;;OAKG;IACH,KAAK,IAAK,IAAI;IAYd;;;;OAIG;IACH,IAAI,IAAK,IAAI;IAkBb;;;;OAIG;IACH,QAAQ,CAAE,EAAE,EAAE,MAAM,GAAG,IAAI;IAK3B;;;;;OAKG;IACH,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAK/B;;;;;OAKG;IACH,WAAW,CAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAKjC;;;;OAIG;IACH,IAAI,CAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAsC1B;;;;OAIG;IACH,KAAK,CAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAiB3B;;;;;;OAMG;IACG,QAAQ,CAAE,GAAG,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAyF9C;;;;;OAKG;IACH,UAAU,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAS5C;;;;;OAKG;IACH,UAAU,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAS5C;;OAEG;IACH,QAAQ,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI;IAuBzC,iBAAiB,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,eAAe,GAAG,IAAI;IAkB7E,gBAAgB,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,EAAE,GAAG,IAAI;IAO7E;;;;OAIG;IACH,eAAe,CAAE,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,IAAI;IAsBlH;;;;;OAKG;IACH,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI;IAkEvD;;OAEG;IACH,MAAM,IAAK,IAAI;IAef;;;;;OAKG;IACH,WAAW,CAAE,EAAE,EAAE,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAC,aAAa,GAAG,IAAI;IAMnE;;;OAGG;IACH,IAAI,IAAK,MAAM;IAIf;;;;;;OAMG;IACH,UAAU,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,GAAG,GAAG,CAAC,aAAa;CAmCzE;AAED,SAAS,SAAS,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/index.js b/node_modules/libp2p-gossipsub/src/index.js
index c57bc59..4f2a71d 100644
--- a/node_modules/libp2p-gossipsub/src/index.js
+++ b/node_modules/libp2p-gossipsub/src/index.js
@@ -1,7 +1,11 @@
 "use strict";
 var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
-    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+    var desc = Object.getOwnPropertyDescriptor(m, k);
+    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
+      desc = { enumerable: true, get: function() { return m[k]; } };
+    }
+    Object.defineProperty(o, k2, desc);
 }) : (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     o[k2] = m[k];
@@ -18,21 +22,12 @@ var __importStar = (this && this.__importStar) || function (mod) {
     __setModuleDefault(result, mod);
     return result;
 };
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.multicodec = void 0;
 const pubsub_1 = __importStar(require("libp2p-interfaces/src/pubsub"));
 const message_cache_1 = require("./message-cache");
 const rpc_1 = require("./message/rpc");
 const constants = __importStar(require("./constants"));
-const heartbeat_1 = require("./heartbeat");
-const get_gossip_peers_1 = require("./get-gossip-peers");
 const utils_1 = require("./utils");
 const score_1 = require("./score");
 const tracer_1 = require("./tracer");
@@ -42,6 +37,7 @@ const PeerId = require("peer-id");
 // @ts-ignore
 const Envelope = require("libp2p/src/record/envelope");
 const constants_1 = require("./constants");
+exports.multicodec = constants.GossipsubIDv11;
 class Gossipsub extends pubsub_1.default {
     // TODO: add remaining props
     /**
@@ -62,109 +58,80 @@ class Gossipsub extends pubsub_1.default {
      * @constructor
      */
     constructor(libp2p, options = {}) {
-        var _a;
         const multicodecs = [constants.GossipsubIDv11, constants.GossipsubIDv10];
-        const opts = Object.assign(Object.assign({ gossipIncoming: true, fallbackToFloodsub: true, floodPublish: true, doPX: false, directPeers: [], D: constants.GossipsubD, Dlo: constants.GossipsubDlo, Dhi: constants.GossipsubDhi, Dscore: constants.GossipsubDscore, Dout: constants.GossipsubDout, Dlazy: constants.GossipsubDlazy, heartbeatInterval: constants.GossipsubHeartbeatInterval, fanoutTTL: constants.GossipsubFanoutTTL, mcacheLength: constants.GossipsubHistoryLength, mcacheGossip: constants.GossipsubHistoryGossip, seenTTL: constants.GossipsubSeenTTL }, options), { scoreParams: score_1.createPeerScoreParams(options.scoreParams), scoreThresholds: score_1.createPeerScoreThresholds(options.scoreThresholds) });
+        const opts = {
+            gossipIncoming: true,
+            fallbackToFloodsub: true,
+            floodPublish: true,
+            doPX: false,
+            directPeers: [],
+            D: constants.GossipsubD,
+            Dlo: constants.GossipsubDlo,
+            Dhi: constants.GossipsubDhi,
+            Dscore: constants.GossipsubDscore,
+            Dout: constants.GossipsubDout,
+            Dlazy: constants.GossipsubDlazy,
+            heartbeatInterval: constants.GossipsubHeartbeatInterval,
+            fanoutTTL: constants.GossipsubFanoutTTL,
+            mcacheLength: constants.GossipsubHistoryLength,
+            mcacheGossip: constants.GossipsubHistoryGossip,
+            seenTTL: constants.GossipsubSeenTTL,
+            ...options,
+            scoreParams: (0, score_1.createPeerScoreParams)(options.scoreParams),
+            scoreThresholds: (0, score_1.createPeerScoreThresholds)(options.scoreThresholds)
+        };
         // Also wants to get notified of peers connected using floodsub
         if (opts.fallbackToFloodsub) {
             multicodecs.push(constants.FloodsubID);
         }
-        super(Object.assign({ debugName: 'libp2p:gossipsub', multicodecs,
-            libp2p }, opts));
-        this._options = opts;
-        /**
-         * Direct peers
-         * @type {Set<string>}
-         */
-        this.direct = new Set(opts.directPeers.map(p => p.id.toB58String()));
+        super({
+            debugName: 'libp2p:gossipsub',
+            multicodecs,
+            libp2p,
+            ...opts
+        });
         /**
          * Map of peer id and AcceptRequestWhileListEntry
-         *
-         * @type {Map<string, AcceptFromWhitelistEntry}
          */
         this.acceptFromWhitelist = new Map();
-        // set direct peer addresses in the address book
-        opts.directPeers.forEach(p => {
-            libp2p.peerStore.addressBook.add(p.id, p.addrs);
-        });
-        /**
-         * Cache of seen messages
-         *
-         * @type {SimpleTimeCache}
-         */
-        this.seenCache = new time_cache_1.SimpleTimeCache({ validityMs: opts.seenTTL });
         /**
          * Map of topic meshes
          * topic => peer id set
-         *
-         * @type {Map<string, Set<string>>}
          */
         this.mesh = new Map();
         /**
          * Map of topics to set of peers. These mesh peers are the ones to which we are publishing without a topic membership
          * topic => peer id set
-         *
-         * @type {Map<string, Set<string>>}
          */
         this.fanout = new Map();
         /**
          * Map of last publish time for fanout topics
          * topic => last publish time
-         *
-         * @type {Map<string, number>}
          */
         this.lastpub = new Map();
         /**
          * Map of pending messages to gossip
          * peer id => control messages
-         *
-         * @type {Map<string, Array<RPC.IControlIHave object>> }
          */
         this.gossip = new Map();
         /**
          * Map of control messages
          * peer id => control message
-         *
-         * @type {Map<string, RPC.IControlMessage object>}
          */
         this.control = new Map();
         /**
          * Number of IHAVEs received from peer in the last heartbeat
-         * @type {Map<string, number>}
          */
         this.peerhave = new Map();
-        /**
-         * Number of messages we have asked from peer in the last heartbeat
-         * @type {Map<string, number>}
-         */
+        /** Number of messages we have asked from peer in the last heartbeat */
         this.iasked = new Map();
-        /**
-         * Prune backoff map
-         */
+        /** Prune backoff map */
         this.backoff = new Map();
         /**
          * Connection direction cache, marks peers with outbound connections
          * peer id => direction
-         *
-         * @type {Map<string, boolean>}
          */
         this.outbound = new Map();
-        /**
-         * A message cache that contains the messages for last few hearbeat ticks
-         */
-        this.messageCache = options.messageCache || new message_cache_1.MessageCache(opts.mcacheGossip, opts.mcacheLength);
-        /**
-         * A fast message id function used for internal message de-duplication
-         */
-        this.getFastMsgIdStr = (_a = options.fastMsgIdFn) !== null && _a !== void 0 ? _a : undefined;
-        /**
-         * Maps fast message-id to canonical message-id
-         */
-        this.fastMsgIdCache = options.fastMsgIdFn ? new time_cache_1.SimpleTimeCache({ validityMs: opts.seenTTL }) : undefined;
-        /**
-         * A heartbeat timer that maintains the mesh
-         */
-        this.heartbeat = new heartbeat_1.Heartbeat(this);
         /**
          * Number of heartbeats since the beginning of time
          * This allows us to amortize some resource cleanup -- eg: backoff cleanup
@@ -174,21 +141,26 @@ class Gossipsub extends pubsub_1.default {
          * Tracks IHAVE/IWANT promises broken by peers
          */
         this.gossipTracer = new tracer_1.IWantTracer();
+        this._options = opts;
+        this.direct = new Set(opts.directPeers.map((p) => p.id.toB58String()));
+        // set direct peer addresses in the address book
+        opts.directPeers.forEach((p) => {
+            libp2p.peerStore.addressBook.add(p.id, p.addrs);
+        });
+        this.seenCache = new time_cache_1.SimpleTimeCache({ validityMs: opts.seenTTL });
+        this.messageCache = options.messageCache || new message_cache_1.MessageCache(opts.mcacheGossip, opts.mcacheLength);
+        this.getFastMsgIdStr = options.fastMsgIdFn ? options.fastMsgIdFn  : null;
+        this.fastMsgIdCache = options.fastMsgIdFn ? new time_cache_1.SimpleTimeCache({ validityMs: opts.seenTTL }) : undefined;
         /**
          * libp2p
          */
         this._libp2p = libp2p;
-        /**
-         * Peer score tracking
-         */
         this.score = new score_1.PeerScore(this._options.scoreParams, libp2p.connectionManager);
     }
     /**
      * Decode a Uint8Array into an RPC object
      * Overrided to use an extended protocol-specific protobuf decoder
      * @override
-     * @param {Uint8Array} bytes
-     * @returns {RPC}
      */
     _decodeRpc(bytes) {
         return rpc_1.RPC.decode(bytes);
@@ -197,8 +169,6 @@ class Gossipsub extends pubsub_1.default {
      * Encode an RPC object into a Uint8Array
      * Overrided to use an extended protocol-specific protobuf encoder
      * @override
-     * @param {RPC} rpc
-     * @returns {Uint8Array}
      */
     _encodeRpc(rpc) {
         return rpc_1.RPC.encode(rpc).finish();
@@ -206,9 +176,6 @@ class Gossipsub extends pubsub_1.default {
     /**
      * Add a peer to the router
      * @override
-     * @param {PeerId} peerId
-     * @param {string} protocol
-     * @returns {PeerStreams}
      */
     _addPeer(peerId, protocol) {
         const p = super._addPeer(peerId, protocol);
@@ -218,7 +185,7 @@ class Gossipsub extends pubsub_1.default {
         let outbound = false;
         for (const c of this._libp2p.connectionManager.getAll(peerId)) {
             if (c.stat.direction === 'outbound') {
-                if (Array.from(c.registry.values()).some(rvalue => protocol === rvalue.protocol)) {
+                if (Array.from(c.registry.values()).some((rvalue) => protocol === rvalue.protocol)) {
                     outbound = true;
                     break;
                 }
@@ -230,8 +197,6 @@ class Gossipsub extends pubsub_1.default {
     /**
      * Removes a peer from the router
      * @override
-     * @param {PeerId} peer
-     * @returns {PeerStreams | undefined}
      */
     _removePeer(peerId) {
         const peerStreams = super._removePeer(peerId);
@@ -261,90 +226,67 @@ class Gossipsub extends pubsub_1.default {
      * Handles an rpc request from a peer
      *
      * @override
-     * @param {String} idB58Str
-     * @param {PeerStreams} peerStreams
-     * @param {RPC} rpc
-     * @returns {Promise<boolean>}
      */
-    _processRpc(id, peerStreams, rpc) {
-        const _super = Object.create(null, {
-            _processRpc: { get: () => super._processRpc }
-        });
-        return __awaiter(this, void 0, void 0, function* () {
-            if (yield _super._processRpc.call(this, id, peerStreams, rpc)) {
-                if (rpc.control) {
-                    yield this._processRpcControlMessage(id, rpc.control);
-                }
-                return true;
+    async _processRpc(id, peerStreams, rpc) {
+        if (await super._processRpc(id, peerStreams, rpc)) {
+            if (rpc.control) {
+                await this._processRpcControlMessage(id, rpc.control);
             }
-            return false;
-        });
+            return true;
+        }
+        return false;
     }
     /**
      * Handles an rpc control message from a peer
-     * @param {string} id peer id
-     * @param {RPC.IControlMessage} controlMsg
-     * @returns {void}
      */
-    _processRpcControlMessage(id, controlMsg) {
-        return __awaiter(this, void 0, void 0, function* () {
-            if (!controlMsg) {
-                return;
-            }
-            const iwant = controlMsg.ihave ? this._handleIHave(id, controlMsg.ihave) : [];
-            const ihave = controlMsg.iwant ? this._handleIWant(id, controlMsg.iwant) : [];
-            const prune = controlMsg.graft ? yield this._handleGraft(id, controlMsg.graft) : [];
-            controlMsg.prune && this._handlePrune(id, controlMsg.prune);
-            if (!iwant.length && !ihave.length && !prune.length) {
-                return;
-            }
-            const outRpc = utils_1.createGossipRpc(ihave, { iwant, prune });
-            this._sendRpc(id, outRpc);
-        });
+    async _processRpcControlMessage(id, controlMsg) {
+        if (controlMsg === undefined) {
+            return;
+        }
+        const iwant = controlMsg.ihave ? this._handleIHave(id, controlMsg.ihave) : [];
+        const ihave = controlMsg.iwant ? this._handleIWant(id, controlMsg.iwant) : [];
+        const prune = controlMsg.graft ? await this._handleGraft(id, controlMsg.graft) : [];
+        controlMsg.prune && this._handlePrune(id, controlMsg.prune);
+        if (!iwant.length && !ihave.length && !prune.length) {
+            return;
+        }
+        const outRpc = (0, utils_1.createGossipRpc)(ihave, { iwant, prune });
+        this._sendRpc(id, outRpc);
     }
     /**
      * Process incoming message,
      * emitting locally and forwarding on to relevant floodsub and gossipsub peers
      * @override
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
      */
-    _processRpcMessage(msg) {
-        const _super = Object.create(null, {
-            _processRpcMessage: { get: () => super._processRpcMessage }
-        });
-        return __awaiter(this, void 0, void 0, function* () {
-            let canonicalMsgIdStr;
-            if (this.getFastMsgIdStr && this.fastMsgIdCache) {
-                // check duplicate
-                const fastMsgIdStr = yield this.getFastMsgIdStr(msg);
-                canonicalMsgIdStr = this.fastMsgIdCache.get(fastMsgIdStr);
-                if (canonicalMsgIdStr !== undefined) {
-                    this.score.duplicateMessage(msg, canonicalMsgIdStr);
-                    return;
-                }
-                canonicalMsgIdStr = utils_1.messageIdToString(yield this.getMsgId(msg));
-                this.fastMsgIdCache.put(fastMsgIdStr, canonicalMsgIdStr);
+    async _processRpcMessage(msg) {
+        let canonicalMsgIdStr;
+        if (this.getFastMsgIdStr && this.fastMsgIdCache) {
+            // check duplicate
+            const fastMsgIdStr = this.getFastMsgIdStr(msg);
+            canonicalMsgIdStr = this.fastMsgIdCache.get(fastMsgIdStr);
+            if (canonicalMsgIdStr !== undefined) {
+                this.score.duplicateMessage(msg, canonicalMsgIdStr);
+                return;
             }
-            else {
-                // check duplicate
-                canonicalMsgIdStr = utils_1.messageIdToString(yield this.getMsgId(msg));
-                if (this.seenCache.has(canonicalMsgIdStr)) {
-                    this.score.duplicateMessage(msg, canonicalMsgIdStr);
-                    return;
-                }
+            canonicalMsgIdStr = (0, utils_1.messageIdToString)(await this.getMsgId(msg));
+            this.fastMsgIdCache.put(fastMsgIdStr, canonicalMsgIdStr);
+        }
+        else {
+            // check duplicate
+            canonicalMsgIdStr = (0, utils_1.messageIdToString)(await this.getMsgId(msg));
+            if (this.seenCache.has(canonicalMsgIdStr)) {
+                this.score.duplicateMessage(msg, canonicalMsgIdStr);
+                return;
             }
-            // put in cache
-            this.seenCache.put(canonicalMsgIdStr);
-            yield this.score.validateMessage(canonicalMsgIdStr);
-            yield _super._processRpcMessage.call(this, msg);
-        });
+        }
+        // put in cache
+        this.seenCache.put(canonicalMsgIdStr);
+        await this.score.validateMessage(canonicalMsgIdStr);
+        await super._processRpcMessage(msg);
     }
     /**
      * Whether to accept a message from a peer
      * @override
-     * @param {string} id
-     * @returns {boolean}
      */
     _acceptFrom(id) {
         if (this.direct.has(id)) {
@@ -352,9 +294,7 @@ class Gossipsub extends pubsub_1.default {
         }
         const now = Date.now();
         const entry = this.acceptFromWhitelist.get(id);
-        if (entry &&
-            entry.messagesAccepted < constants_1.ACCEPT_FROM_WHITELIST_MAX_MESSAGES &&
-            entry.acceptUntil >= now) {
+        if (entry && entry.messagesAccepted < constants_1.ACCEPT_FROM_WHITELIST_MAX_MESSAGES && entry.acceptUntil >= now) {
             entry.messagesAccepted += 1;
             return true;
         }
@@ -375,30 +315,20 @@ class Gossipsub extends pubsub_1.default {
     /**
      * Validate incoming message
      * @override
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
      */
-    validate(msg) {
-        const _super = Object.create(null, {
-            validate: { get: () => super.validate }
-        });
-        return __awaiter(this, void 0, void 0, function* () {
-            try {
-                yield _super.validate.call(this, msg);
-            }
-            catch (e) {
-                const canonicalMsgIdStr = yield this.getCanonicalMsgIdStr(msg);
-                this.score.rejectMessage(msg, canonicalMsgIdStr, e.code);
-                this.gossipTracer.rejectMessage(canonicalMsgIdStr, e.code);
-                throw e;
-            }
-        });
+    async validate(msg) {
+        try {
+            await super.validate(msg);
+        }
+        catch (e) {
+            const canonicalMsgIdStr = await this.getCanonicalMsgIdStr(msg);
+            this.score.rejectMessage(msg, canonicalMsgIdStr, e.code);
+            this.gossipTracer.rejectMessage(canonicalMsgIdStr, e.code);
+            throw e;
+        }
     }
     /**
      * Handles IHAVE messages
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlIHave>} ihave
-     * @returns {RPC.IControlIWant}
      */
     _handleIHave(id, ihave) {
         if (!ihave.length) {
@@ -411,13 +341,13 @@ class Gossipsub extends pubsub_1.default {
             return [];
         }
         // IHAVE flood protection
-        const peerhave = (this.peerhave.get(id) || 0) + 1;
+        const peerhave = (this.peerhave.get(id) ? this.peerhave.get(id): 0) + 1;
         this.peerhave.set(id, peerhave);
         if (peerhave > constants.GossipsubMaxIHaveMessages) {
             this.log('IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring', id, peerhave);
             return [];
         }
-        const iasked = this.iasked.get(id) || 0;
+        const iasked = this.iasked.get(id) ? this.iasked.get(id): 0;
         if (iasked >= constants.GossipsubMaxIHaveLength) {
             this.log('IHAVE: peer %s has already advertised too many messages (%d); ignoring', id, iasked);
             return [];
@@ -429,7 +359,7 @@ class Gossipsub extends pubsub_1.default {
                 return;
             }
             messageIDs.forEach((msgId) => {
-                const msgIdStr = utils_1.messageIdToString(msgId);
+                const msgIdStr = (0, utils_1.messageIdToString)(msgId);
                 if (this.seenCache.has(msgIdStr)) {
                     return;
                 }
@@ -446,21 +376,20 @@ class Gossipsub extends pubsub_1.default {
         this.log('IHAVE: Asking for %d out of %d messages from %s', iask, iwant.size, id);
         let iwantList = Array.from(iwant.values());
         // ask in random order
-        utils_1.shuffle(iwantList);
+        (0, utils_1.shuffle)(iwantList);
         // truncate to the messages we are actually asking for and update the iasked counter
         iwantList = iwantList.slice(0, iask);
         this.iasked.set(id, iasked + iask);
         this.gossipTracer.addPromise(id, iwantList);
-        return [{
+        return [
+            {
                 messageIDs: iwantList
-            }];
+            }
+        ];
     }
     /**
      * Handles IWANT messages
      * Returns messages to send back to peer
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlIWant>} iwant
-     * @returns {Array<RPC.IMessage>}
      */
     _handleIWant(id, iwant) {
         if (!iwant.length) {
@@ -475,18 +404,19 @@ class Gossipsub extends pubsub_1.default {
         // @type {Map<string, Message>}
         const ihave = new Map();
         iwant.forEach(({ messageIDs }) => {
-            messageIDs && messageIDs.forEach((msgId) => {
-                const msgIdStr = utils_1.messageIdToString(msgId);
-                const [msg, count] = this.messageCache.getForPeer(msgIdStr, id);
-                if (!msg) {
-                    return;
-                }
-                if (count > constants.GossipsubGossipRetransmission) {
-                    this.log('IWANT: Peer %s has asked for message %s too many times: ignoring request', id, msgId);
-                    return;
-                }
-                ihave.set(msgIdStr, msg);
-            });
+            messageIDs &&
+                messageIDs.forEach((msgId) => {
+                    const msgIdStr = (0, utils_1.messageIdToString)(msgId);
+                    const [msg, count] = this.messageCache.getForPeer(msgIdStr, id);
+                    if (!msg) {
+                        return;
+                    }
+                    if (count > constants.GossipsubGossipRetransmission) {
+                        this.log('IWANT: Peer %s has asked for message %s too many times: ignoring request', id, msgId);
+                        return;
+                    }
+                    ihave.set(msgIdStr, msg);
+                });
         });
         if (!ihave.size) {
             return [];
@@ -496,95 +426,86 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Handles Graft messages
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlGraft>} graft
-     * @return {Promise<RPC.IControlPrune[]>}
      */
-    _handleGraft(id, graft) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const prune = [];
-            const score = this.score.score(id);
-            const now = this._now();
-            let doPX = this._options.doPX;
-            graft.forEach(({ topicID }) => {
-                var _a;
-                if (!topicID) {
-                    return;
-                }
-                const peersInMesh = this.mesh.get(topicID);
-                if (!peersInMesh) {
-                    // don't do PX when there is an unknown topic to avoid leaking our peers
-                    doPX = false;
-                    // spam hardening: ignore GRAFTs for unknown topics
-                    return;
-                }
-                // check if peer is already in the mesh; if so do nothing
-                if (peersInMesh.has(id)) {
-                    return;
-                }
-                // we don't GRAFT to/from direct peers; complain loudly if this happens
-                if (this.direct.has(id)) {
-                    this.log('GRAFT: ignoring request from direct peer %s', id);
-                    // this is possibly a bug from a non-reciprical configuration; send a PRUNE
-                    prune.push(topicID);
-                    // but don't px
-                    doPX = false;
-                    return;
-                }
-                // make sure we are not backing off that peer
-                const expire = (_a = this.backoff.get(topicID)) === null || _a === void 0 ? void 0 : _a.get(id);
-                if (typeof expire === 'number' && now < expire) {
-                    this.log('GRAFT: ignoring backed off peer %s', id);
-                    // add behavioral penalty
+    async _handleGraft(id, graft) {
+        const prune = [];
+        const score = this.score.score(id);
+        const now = this._now();
+        let doPX = this._options.doPX;
+        graft.forEach(({ topicID }) => {
+            if (!topicID) {
+                return;
+            }
+            const peersInMesh = this.mesh.get(topicID);
+            if (!peersInMesh) {
+                // don't do PX when there is an unknown topic to avoid leaking our peers
+                doPX = false;
+                // spam hardening: ignore GRAFTs for unknown topics
+                return;
+            }
+            // check if peer is already in the mesh; if so do nothing
+            if (peersInMesh.has(id)) {
+                return;
+            }
+            // we don't GRAFT to/from direct peers; complain loudly if this happens
+            if (this.direct.has(id)) {
+                this.log('GRAFT: ignoring request from direct peer %s', id);
+                // this is possibly a bug from a non-reciprical configuration; send a PRUNE
+                prune.push(topicID);
+                // but don't px
+                doPX = false;
+                return;
+            }
+            // make sure we are not backing off that peer
+            const expire = this.backoff.get(topicID)? this.backoff.get(topicID).get(id): null;
+            if (typeof expire === 'number' && now < expire) {
+                this.log('GRAFT: ignoring backed off peer %s', id);
+                // add behavioral penalty
+                this.score.addPenalty(id, 1);
+                // no PX
+                doPX = false;
+                // check the flood cutoff -- is the GRAFT coming too fast?
+                const floodCutoff = expire + constants.GossipsubGraftFloodThreshold - constants.GossipsubPruneBackoff;
+                if (now < floodCutoff) {
+                    // extra penalty
                     this.score.addPenalty(id, 1);
-                    // no PX
-                    doPX = false;
-                    // check the flood cutoff -- is the GRAFT coming too fast?
-                    const floodCutoff = expire + constants.GossipsubGraftFloodThreshold - constants.GossipsubPruneBackoff;
-                    if (now < floodCutoff) {
-                        // extra penalty
-                        this.score.addPenalty(id, 1);
-                    }
-                    // refresh the backoff
-                    this._addBackoff(id, topicID);
-                    prune.push(topicID);
-                    return;
                 }
-                // check the score
-                if (score < 0) {
-                    // we don't GRAFT peers with negative score
-                    this.log('GRAFT: ignoring peer %s with negative score: score=%d, topic=%s', id, score, topicID);
-                    // we do send them PRUNE however, because it's a matter of protocol correctness
-                    prune.push(topicID);
-                    // but we won't PX to them
-                    doPX = false;
-                    // add/refresh backoff so that we don't reGRAFT too early even if the score decays
-                    this._addBackoff(id, topicID);
-                    return;
-                }
-                // check the number of mesh peers; if it is at (or over) Dhi, we only accept grafts
-                // from peers with outbound connections; this is a defensive check to restrict potential
-                // mesh takeover attacks combined with love bombing
-                if (peersInMesh.size >= this._options.Dhi && !this.outbound.get(id)) {
-                    prune.push(topicID);
-                    this._addBackoff(id, topicID);
-                    return;
-                }
-                this.log('GRAFT: Add mesh link from %s in %s', id, topicID);
-                this.score.graft(id, topicID);
-                peersInMesh.add(id);
-            });
-            if (!prune.length) {
-                return [];
+                // refresh the backoff
+                this._addBackoff(id, topicID);
+                prune.push(topicID);
+                return;
             }
-            return Promise.all(prune.map(topic => this._makePrune(id, topic, doPX)));
+            // check the score
+            if (score < 0) {
+                // we don't GRAFT peers with negative score
+                this.log('GRAFT: ignoring peer %s with negative score: score=%d, topic=%s', id, score, topicID);
+                // we do send them PRUNE however, because it's a matter of protocol correctness
+                prune.push(topicID);
+                // but we won't PX to them
+                doPX = false;
+                // add/refresh backoff so that we don't reGRAFT too early even if the score decays
+                this._addBackoff(id, topicID);
+                return;
+            }
+            // check the number of mesh peers; if it is at (or over) Dhi, we only accept grafts
+            // from peers with outbound connections; this is a defensive check to restrict potential
+            // mesh takeover attacks combined with love bombing
+            if (peersInMesh.size >= this._options.Dhi && !this.outbound.get(id)) {
+                prune.push(topicID);
+                this._addBackoff(id, topicID);
+                return;
+            }
+            this.log('GRAFT: Add mesh link from %s in %s', id, topicID);
+            this.score.graft(id, topicID);
+            peersInMesh.add(id);
         });
+        if (!prune.length) {
+            return [];
+        }
+        return Promise.all(prune.map((topic) => this._makePrune(id, topic, doPX)));
     }
     /**
      * Handles Prune messages
-     * @param {string} id peer id
-     * @param {Array<RPC.IControlPrune>} prune
-     * @returns {void}
      */
     _handlePrune(id, prune) {
         const score = this.score.score(id);
@@ -619,19 +540,13 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Add standard backoff log for a peer in a topic
-     * @param {string} id
-     * @param {string} topic
-     * @returns {void}
      */
     _addBackoff(id, topic) {
         this._doAddBackoff(id, topic, constants.GossipsubPruneBackoff);
     }
     /**
      * Add backoff expiry interval for a peer in a topic
-     * @param {string} id
-     * @param {string} topic
-     * @param {number} interval backoff duration in milliseconds
-     * @returns {void}
+     * @param interval backoff duration in milliseconds
      */
     _doAddBackoff(id, topic, interval) {
         let backoff = this.backoff.get(topic);
@@ -640,24 +555,22 @@ class Gossipsub extends pubsub_1.default {
             this.backoff.set(topic, backoff);
         }
         const expire = this._now() + interval;
-        const existingExpire = backoff.get(id) || 0;
+        const existingExpire = backoff.get(id) ? backoff.get(id) : 0;
         if (existingExpire < expire) {
             backoff.set(id, expire);
         }
     }
     /**
      * Apply penalties from broken IHAVE/IWANT promises
-     * @returns {void}
      */
     _applyIwantPenalties() {
         this.gossipTracer.getBrokenPromises().forEach((count, p) => {
-            this.log('peer %s didn\'t follow up in %d IWANT requests; adding penalty', p, count);
+            this.log("peer %s didn't follow up in %d IWANT requests; adding penalty", p, count);
             this.score.addPenalty(p, count);
         });
     }
     /**
      * Clear expired backoff expiries
-     * @returns {void}
      */
     _clearBackoff() {
         // we only clear once every GossipsubPruneBackoffTicks ticks to avoid iterating over the maps too much
@@ -678,7 +591,6 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Maybe reconnect to direct peers
-     * @returns {void}
      */
     _directConnect() {
         // we only do this every few ticks to allow pending connections to complete and account for
@@ -687,124 +599,125 @@ class Gossipsub extends pubsub_1.default {
             return;
         }
         const toconnect = [];
-        this.direct.forEach(id => {
+        this.direct.forEach((id) => {
             const peer = this.peers.get(id);
             if (!peer || !peer.isWritable) {
                 toconnect.push(id);
             }
         });
         if (toconnect.length) {
-            toconnect.forEach(id => {
+            toconnect.forEach((id) => {
                 this._connect(id);
             });
         }
     }
     /**
      * Maybe attempt connection given signed peer records
-     * @param {RPC.IPeerInfo[]} peers
-     * @returns {Promise<void>}
      */
-    _pxConnect(peers) {
-        return __awaiter(this, void 0, void 0, function* () {
-            if (peers.length > constants.GossipsubPrunePeers) {
-                utils_1.shuffle(peers);
-                peers = peers.slice(0, constants.GossipsubPrunePeers);
+    async _pxConnect(peers) {
+        if (peers.length > constants.GossipsubPrunePeers) {
+            (0, utils_1.shuffle)(peers);
+            peers = peers.slice(0, constants.GossipsubPrunePeers);
+        }
+        const toconnect = [];
+        await Promise.all(peers.map(async (pi) => {
+            if (!pi.peerID) {
+                return;
             }
-            const toconnect = [];
-            yield Promise.all(peers.map((pi) => __awaiter(this, void 0, void 0, function* () {
-                if (!pi.peerID) {
-                    return;
-                }
-                const p = PeerId.createFromBytes(pi.peerID);
-                const id = p.toB58String();
-                if (this.peers.has(id)) {
+            const p = PeerId.createFromBytes(pi.peerID);
+            const id = p.toB58String();
+            if (this.peers.has(id)) {
+                return;
+            }
+            if (!pi.signedPeerRecord) {
+                toconnect.push(id);
+                return;
+            }
+            // The peer sent us a signed record
+            // This is not a record from the peer who sent the record, but another peer who is connected with it
+            // Ensure that it is valid
+            try {
+                const envelope = await Envelope.openAndCertify(pi.signedPeerRecord, 'libp2p-peer-record');
+                const eid = envelope.peerId.toB58String();
+                if (id !== eid) {
+                    this.log("bogus peer record obtained through px: peer ID %s doesn't match expected peer %s", eid, id);
                     return;
                 }
-                if (!pi.signedPeerRecord) {
-                    toconnect.push(id);
+                if (!(await this._libp2p.peerStore.addressBook.consumePeerRecord(envelope))) {
+                    this.log('bogus peer record obtained through px: could not add peer record to address book');
                     return;
                 }
-                // The peer sent us a signed record
-                // This is not a record from the peer who sent the record, but another peer who is connected with it
-                // Ensure that it is valid
-                try {
-                    const envelope = yield Envelope.openAndCertify(pi.signedPeerRecord, 'libp2p-peer-record');
-                    const eid = envelope.peerId.toB58String();
-                    if (id !== eid) {
-                        this.log('bogus peer record obtained through px: peer ID %s doesn\'t match expected peer %s', eid, id);
-                        return;
-                    }
-                    if (!this._libp2p.peerStore.addressBook.consumePeerRecord(envelope)) {
-                        this.log('bogus peer record obtained through px: could not add peer record to address book');
-                        return;
-                    }
-                    toconnect.push(id);
-                }
-                catch (e) {
-                    this.log('bogus peer record obtained through px: invalid signature or not a peer record');
-                }
-            })));
-            if (!toconnect.length) {
-                return;
+                toconnect.push(id);
             }
-            toconnect.forEach(id => this._connect(id));
-        });
+            catch (e) {
+                this.log('bogus peer record obtained through px: invalid signature or not a peer record');
+            }
+        }));
+        if (!toconnect.length) {
+            return;
+        }
+        toconnect.forEach((id) => this._connect(id));
     }
     /**
      * Mounts the gossipsub protocol onto the libp2p node and sends our
      * our subscriptions to every peer connected
      * @override
-     * @returns {Promise<void>}
      */
-    start() {
-        const _super = Object.create(null, {
-            start: { get: () => super.start }
-        });
-        return __awaiter(this, void 0, void 0, function* () {
-            yield _super.start.call(this);
-            this.heartbeat.start();
-            this.score.start();
-            // connect to direct peers
-            this._directPeerInitial = setTimeout(() => {
-                this.direct.forEach(id => {
-                    this._connect(id);
-                });
-            }, constants.GossipsubDirectConnectInitialDelay);
-        });
+    async start() {
+        await super.start();
+        this.score.start();
+        // connect to direct peers
+        this._directPeerInitial = setTimeout(() => {
+            this.direct.forEach((id) => {
+                this._connect(id);
+            });
+        }, constants.GossipsubDirectConnectInitialDelay);
+        if (!this._heartbeatTimer) {
+            const heartbeat = this._heartbeat.bind(this);
+            const timeout = setTimeout(() => {
+                heartbeat();
+                this._heartbeatTimer.runPeriodically(heartbeat, this._options.heartbeatInterval);
+            }, constants.GossipsubHeartbeatInitialDelay);
+            this._heartbeatTimer = {
+                _intervalId: undefined,
+                runPeriodically: (fn, period) => {
+                    this._heartbeatTimer._intervalId = setInterval(fn, period);
+                },
+                cancel: () => {
+                    clearTimeout(timeout);
+                    clearInterval(this._heartbeatTimer._intervalId);
+                }
+            };
+        }
     }
     /**
      * Unmounts the gossipsub protocol and shuts down every connection
      * @override
-     * @returns {Promise<void>}
      */
-    stop() {
-        const _super = Object.create(null, {
-            stop: { get: () => super.stop }
-        });
-        return __awaiter(this, void 0, void 0, function* () {
-            yield _super.stop.call(this);
-            this.heartbeat.stop();
-            this.score.stop();
-            this.mesh = new Map();
-            this.fanout = new Map();
-            this.lastpub = new Map();
-            this.gossip = new Map();
-            this.control = new Map();
-            this.peerhave = new Map();
-            this.iasked = new Map();
-            this.backoff = new Map();
-            this.outbound = new Map();
-            this.gossipTracer.clear();
-            this.seenCache.clear();
-            if (this.fastMsgIdCache)
-                this.fastMsgIdCache.clear();
-            clearTimeout(this._directPeerInitial);
-        });
+    async stop() {
+        await super.stop();
+        if (this._heartbeatTimer) {
+            this._heartbeatTimer.cancel();
+            this._heartbeatTimer = null;
+        }
+        this.score.stop();
+        this.mesh = new Map();
+        this.fanout = new Map();
+        this.lastpub = new Map();
+        this.gossip = new Map();
+        this.control = new Map();
+        this.peerhave = new Map();
+        this.iasked = new Map();
+        this.backoff = new Map();
+        this.outbound = new Map();
+        this.gossipTracer.clear();
+        this.seenCache.clear();
+        if (this.fastMsgIdCache)
+            this.fastMsgIdCache.clear();
+        clearTimeout(this._directPeerInitial);
     }
     /**
      * Connect to a peer using the gossipsub protocol
-     * @param {string} id
-     * @returns {void}
      */
     _connect(id) {
         this.log('Initiating connection with %s', id);
@@ -813,8 +726,6 @@ class Gossipsub extends pubsub_1.default {
     /**
      * Subscribes to a topic
      * @override
-     * @param {string} topic
-     * @returns {void}
      */
     subscribe(topic) {
         super.subscribe(topic);
@@ -823,8 +734,6 @@ class Gossipsub extends pubsub_1.default {
     /**
      * Unsubscribe to a topic
      * @override
-     * @param {string} topic
-     * @returns {void}
      */
     unsubscribe(topic) {
         super.unsubscribe(topic);
@@ -832,8 +741,6 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Join topic
-     * @param {string} topic
-     * @returns {void}
      */
     join(topic) {
         if (!this.started) {
@@ -844,24 +751,24 @@ class Gossipsub extends pubsub_1.default {
         if (fanoutPeers) {
             // these peers have a score above the publish threshold, which may be negative
             // so drop the ones with a negative score
-            fanoutPeers.forEach(id => {
+            fanoutPeers.forEach((id) => {
                 if (this.score.score(id) < 0) {
                     fanoutPeers.delete(id);
                 }
             });
             if (fanoutPeers.size < this._options.D) {
                 // we need more peers; eager, as this would get fixed in the next heartbeat
-                get_gossip_peers_1.getGossipPeers(this, topic, this._options.D - fanoutPeers.size, (id) => {
+                this.getGossipPeers(topic, this._options.D - fanoutPeers.size, (id) => {
                     // filter our current peers, direct peers, and peers with negative scores
                     return !fanoutPeers.has(id) && !this.direct.has(id) && this.score.score(id) >= 0;
-                }).forEach(id => fanoutPeers.add(id));
+                }).forEach((id) => fanoutPeers.add(id));
             }
             this.mesh.set(topic, fanoutPeers);
             this.fanout.delete(topic);
             this.lastpub.delete(topic);
         }
         else {
-            const peers = get_gossip_peers_1.getGossipPeers(this, topic, this._options.D, (id) => {
+            const peers = this.getGossipPeers(topic, this._options.D, (id) => {
                 // filter direct peers and peers with negative score
                 return !this.direct.has(id) && this.score.score(id) >= 0;
             });
@@ -874,8 +781,6 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Leave topic
-     * @param {string} topic
-     * @returns {void}
      */
     leave(topic) {
         if (!this.started) {
@@ -897,22 +802,18 @@ class Gossipsub extends pubsub_1.default {
      *
      * If a fast message-id is set: Try 1. the application cache 2. the fast cache 3. `getMsgId()`
      * If a fast message-id is NOT set: Just `getMsgId()`
-     * @param {InMessage} msg
-     * @returns {Promise<string>}
      */
-    getCanonicalMsgIdStr(msg) {
-        var _a, _b;
-        return __awaiter(this, void 0, void 0, function* () {
-            return (this.fastMsgIdCache && this.getFastMsgIdStr)
-                ? (_b = (_a = this.getCachedMsgIdStr(msg)) !== null && _a !== void 0 ? _a : this.fastMsgIdCache.get(this.getFastMsgIdStr(msg))) !== null && _b !== void 0 ? _b : utils_1.messageIdToString(yield this.getMsgId(msg)) : utils_1.messageIdToString(yield this.getMsgId(msg));
-        });
+    async getCanonicalMsgIdStr(msg) {
+        return this.fastMsgIdCache && this.getFastMsgIdStr
+            ? this.getCachedMsgIdStr(msg) ?
+            this.fastMsgIdCache.get(this.getFastMsgIdStr(msg)): null ?
+            (0, utils_1.messageIdToString)(await this.getMsgId(msg)): null
+            : (0, utils_1.messageIdToString)(await this.getMsgId(msg));
     }
     /**
      * An application should override this function to return its cached message id string without computing it.
      * Return undefined if message id is not found.
      * If a fast message id function is not defined, this function is ignored.
-     * @param {InMessage} msg
-     * @returns {string | undefined}
      */
     getCachedMsgIdStr(msg) {
         return undefined;
@@ -921,118 +822,104 @@ class Gossipsub extends pubsub_1.default {
      * Publish messages
      *
      * @override
-     * @param {InMessage} msg
-     * @returns {void}
      */
-    _publish(msg) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const msgIdStr = yield this.getCanonicalMsgIdStr(msg);
-            if (msg.receivedFrom !== this.peerId.toB58String()) {
-                this.score.deliverMessage(msg, msgIdStr);
-                this.gossipTracer.deliverMessage(msgIdStr);
+    async _publish(msg) {
+        const msgIdStr = await this.getCanonicalMsgIdStr(msg);
+        if (msg.receivedFrom !== this.peerId.toB58String()) {
+            this.score.deliverMessage(msg, msgIdStr);
+            this.gossipTracer.deliverMessage(msgIdStr);
+        }
+        // put in seen cache
+        this.seenCache.put(msgIdStr);
+        this.messageCache.put(msg, msgIdStr);
+        const tosend = new Set();
+        msg.topicIDs.forEach((topic) => {
+            const peersInTopic = this.topics.get(topic);
+            if (!peersInTopic) {
+                return;
             }
-            // put in seen cache
-            this.seenCache.put(msgIdStr);
-            this.messageCache.put(msg, msgIdStr);
-            const tosend = new Set();
-            msg.topicIDs.forEach((topic) => {
-                const peersInTopic = this.topics.get(topic);
-                if (!peersInTopic) {
-                    return;
-                }
-                if (this._options.floodPublish && msg.from === this.peerId.toB58String()) {
-                    // flood-publish behavior
-                    // send to direct peers and _all_ peers meeting the publishThreshold
-                    peersInTopic.forEach(id => {
-                        if (this.direct.has(id) || this.score.score(id) >= this._options.scoreThresholds.publishThreshold) {
-                            tosend.add(id);
-                        }
-                    });
-                }
-                else {
-                    // non-flood-publish behavior
-                    // send to direct peers, subscribed floodsub peers
-                    // and some mesh peers above publishThreshold
-                    // direct peers
-                    this.direct.forEach(id => {
+            if (this._options.floodPublish && msg.receivedFrom === this.peerId.toB58String()) {
+                // flood-publish behavior
+                // send to direct peers and _all_ peers meeting the publishThreshold
+                peersInTopic.forEach((id) => {
+                    if (this.direct.has(id) || this.score.score(id) >= this._options.scoreThresholds.publishThreshold) {
                         tosend.add(id);
-                    });
-                    // floodsub peers
-                    peersInTopic.forEach((id) => {
-                        const score = this.score.score(id);
-                        const peerStreams = this.peers.get(id);
-                        if (!peerStreams) {
-                            return;
-                        }
-                        if (peerStreams.protocol === constants.FloodsubID && score >= this._options.scoreThresholds.publishThreshold) {
-                            tosend.add(id);
+                    }
+                });
+            }
+            else {
+                // non-flood-publish behavior
+                // send to direct peers, subscribed floodsub peers
+                // and some mesh peers above publishThreshold
+                // direct peers
+                this.direct.forEach((id) => {
+                    tosend.add(id);
+                });
+                // floodsub peers
+                peersInTopic.forEach((id) => {
+                    const peerStreams = this.peers.get(id);
+                    if (!peerStreams) {
+                        return;
+                    }
+                    if (peerStreams.protocol === constants.FloodsubID &&
+                        this.score.score(id) >= this._options.scoreThresholds.publishThreshold) {
+                        tosend.add(id);
+                    }
+                });
+                // Gossipsub peers handling
+                let meshPeers = this.mesh.get(topic);
+                if (!meshPeers || !meshPeers.size) {
+                    // We are not in the mesh for topic, use fanout peers
+                    meshPeers = this.fanout.get(topic);
+                    if (!meshPeers) {
+                        // If we are not in the fanout, then pick peers in topic above the publishThreshold
+                        const peers = this.getGossipPeers(topic, this._options.D, (id) => {
+                            return this.score.score(id) >= this._options.scoreThresholds.publishThreshold;
+                        });
+                        if (peers.size > 0) {
+                            meshPeers = peers;
+                            this.fanout.set(topic, peers);
                         }
-                    });
-                    // Gossipsub peers handling
-                    let meshPeers = this.mesh.get(topic);
-                    if (!meshPeers || !meshPeers.size) {
-                        // We are not in the mesh for topic, use fanout peers
-                        meshPeers = this.fanout.get(topic);
-                        if (!meshPeers) {
-                            // If we are not in the fanout, then pick peers in topic above the publishThreshold
-                            const peers = get_gossip_peers_1.getGossipPeers(this, topic, this._options.D, id => {
-                                return this.score.score(id) >= this._options.scoreThresholds.publishThreshold;
-                            });
-                            if (peers.size > 0) {
-                                meshPeers = peers;
-                                this.fanout.set(topic, peers);
-                            }
-                            else {
-                                meshPeers = new Set();
-                            }
+                        else {
+                            meshPeers = new Set();
                         }
-                        // Store the latest publishing time
-                        this.lastpub.set(topic, this._now());
                     }
-                    meshPeers.forEach((peer) => {
-                        tosend.add(peer);
-                    });
-                }
-            });
-            // Publish messages to peers
-            const rpc = utils_1.createGossipRpc([
-                pubsub_1.utils.normalizeOutRpcMessage(msg)
-            ]);
-            tosend.forEach((id) => {
-                if (id === msg.from) {
-                    return;
+                    // Store the latest publishing time
+                    this.lastpub.set(topic, this._now());
                 }
-                this._sendRpc(id, rpc);
-            });
+                meshPeers.forEach((peer) => {
+                    tosend.add(peer);
+                });
+            }
+        });
+        // Publish messages to peers
+        const rpc = (0, utils_1.createGossipRpc)([pubsub_1.utils.normalizeOutRpcMessage(msg)]);
+        tosend.forEach((id) => {
+            if (id === msg.receivedFrom || id === msg.from) {
+                return;
+            }
+            this._sendRpc(id, rpc);
         });
     }
     /**
      * Sends a GRAFT message to a peer
-     * @param {string} id peer id
-     * @param {string} topic
-     * @returns {void}
      */
     _sendGraft(id, topic) {
-        const graft = [{
+        const graft = [
+            {
                 topicID: topic
-            }];
-        const out = utils_1.createGossipRpc([], { graft });
+            }
+        ];
+        const out = (0, utils_1.createGossipRpc)([], { graft });
         this._sendRpc(id, out);
     }
     /**
      * Sends a PRUNE message to a peer
-     * @param {string} id peer id
-     * @param {string} topic
-     * @returns {Promise<void>}
      */
-    _sendPrune(id, topic) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const prune = [
-                yield this._makePrune(id, topic, this._options.doPX)
-            ];
-            const out = utils_1.createGossipRpc([], { prune });
-            this._sendRpc(id, out);
-        });
+    async _sendPrune(id, topic) {
+        const prune = [await this._makePrune(id, topic, this._options.doPX)];
+        const out = (0, utils_1.createGossipRpc)([], { prune });
+        this._sendRpc(id, out);
     }
     /**
      * @override
@@ -1057,10 +944,8 @@ class Gossipsub extends pubsub_1.default {
         peerStreams.write(rpc_1.RPC.encode(outRpc).finish());
     }
     _piggybackControl(id, outRpc, ctrl) {
-        const tograft = (ctrl.graft || [])
-            .filter(({ topicID }) => (topicID && this.mesh.get(topicID) || new Set()).has(id));
-        const toprune = (ctrl.prune || [])
-            .filter(({ topicID }) => !(topicID && this.mesh.get(topicID) || new Set()).has(id));
+        const tograft = (ctrl.graft || []).filter(({ topicID }) => ((topicID && this.mesh.get(topicID)) || new Set()).has(id));
+        const toprune = (ctrl.prune || []).filter(({ topicID }) => !((topicID && this.mesh.get(topicID)) || new Set()).has(id));
         if (!tograft.length && !toprune.length) {
             return;
         }
@@ -1080,36 +965,32 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Send graft and prune messages
-     * @param {Map<string, Array<string>>} tograft peer id => topic[]
-     * @param {Map<string, Array<string>>} toprune peer id => topic[]
+     * @param tograft peer id => topic[]
+     * @param toprune peer id => topic[]
      */
-    _sendGraftPrune(tograft, toprune, noPX) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const doPX = this._options.doPX;
-            for (const [id, topics] of tograft) {
-                const graft = topics.map((topicID) => ({ topicID }));
-                let prune = [];
-                // If a peer also has prunes, process them now
-                const pruning = toprune.get(id);
-                if (pruning) {
-                    prune = yield Promise.all(pruning.map((topicID) => this._makePrune(id, topicID, doPX && !noPX.get(id))));
-                    toprune.delete(id);
-                }
-                const outRpc = utils_1.createGossipRpc([], { graft, prune });
-                this._sendRpc(id, outRpc);
-            }
-            for (const [id, topics] of toprune) {
-                const prune = yield Promise.all(topics.map((topicID) => this._makePrune(id, topicID, doPX && !noPX.get(id))));
-                const outRpc = utils_1.createGossipRpc([], { prune });
-                this._sendRpc(id, outRpc);
+    async _sendGraftPrune(tograft, toprune, noPX) {
+        const doPX = this._options.doPX;
+        for (const [id, topics] of tograft) {
+            const graft = topics.map((topicID) => ({ topicID }));
+            let prune = [];
+            // If a peer also has prunes, process them now
+            const pruning = toprune.get(id);
+            if (pruning) {
+                prune = await Promise.all(pruning.map((topicID) => this._makePrune(id, topicID, doPX && !noPX.get(id))));
+                toprune.delete(id);
             }
-        });
+            const outRpc = (0, utils_1.createGossipRpc)([], { graft, prune });
+            this._sendRpc(id, outRpc);
+        }
+        for (const [id, topics] of toprune) {
+            const prune = await Promise.all(topics.map((topicID) => this._makePrune(id, topicID, doPX && !noPX.get(id))));
+            const outRpc = (0, utils_1.createGossipRpc)([], { prune });
+            this._sendRpc(id, outRpc);
+        }
     }
     /**
      * Emits gossip to peers in a particular topic
-     * @param {string} topic
-     * @param {Set<string>} exclude peers to exclude
-     * @returns {void}
+     * @param exclude peers to exclude
      */
     _emitGossip(topic, exclude) {
         const messageIDs = this.messageCache.getGossipIDs(topic);
@@ -1117,7 +998,7 @@ class Gossipsub extends pubsub_1.default {
             return;
         }
         // shuffle to emit in random order
-        utils_1.shuffle(messageIDs);
+        (0, utils_1.shuffle)(messageIDs);
         // if we are emitting more than GossipsubMaxIHaveLength ids, truncate the list
         if (messageIDs.length > constants.GossipsubMaxIHaveLength) {
             // we do the truncation (with shuffling) per peer below
@@ -1133,14 +1014,14 @@ class Gossipsub extends pubsub_1.default {
             // no topic peers, no gossip
             return;
         }
-        topicPeers.forEach(id => {
+        topicPeers.forEach((id) => {
             const peerStreams = this.peers.get(id);
             if (!peerStreams) {
                 return;
             }
             if (!exclude.has(id) &&
                 !this.direct.has(id) &&
-                utils_1.hasGossipProtocol(peerStreams.protocol) &&
+                (0, utils_1.hasGossipProtocol)(peerStreams.protocol) &&
                 this.score.score(id) >= this._options.scoreThresholds.gossipThreshold) {
                 peersToGossip.push(id);
             }
@@ -1154,16 +1035,16 @@ class Gossipsub extends pubsub_1.default {
             target = peersToGossip.length;
         }
         else {
-            utils_1.shuffle(peersToGossip);
+            (0, utils_1.shuffle)(peersToGossip);
         }
         // Emit the IHAVE gossip to the selected peers up to the target
-        peersToGossip.slice(0, target).forEach(id => {
+        peersToGossip.slice(0, target).forEach((id) => {
             let peerMessageIDs = messageIDs;
             if (messageIDs.length > constants.GossipsubMaxIHaveLength) {
                 // shuffle and slice message IDs per peer so that we emit a different set for each peer
                 // we have enough reduncancy in the system that this will significantly increase the message
                 // coverage when we do truncate
-                peerMessageIDs = utils_1.shuffle(peerMessageIDs.slice()).slice(0, constants.GossipsubMaxIHaveLength);
+                peerMessageIDs = (0, utils_1.shuffle)(peerMessageIDs.slice()).slice(0, constants.GossipsubMaxIHaveLength);
             }
             this._pushGossip(id, {
                 topicID: topic,
@@ -1178,21 +1059,18 @@ class Gossipsub extends pubsub_1.default {
         // send gossip first, which will also piggyback control
         for (const [peer, ihave] of this.gossip.entries()) {
             this.gossip.delete(peer);
-            const out = utils_1.createGossipRpc([], { ihave });
+            const out = (0, utils_1.createGossipRpc)([], { ihave });
             this._sendRpc(peer, out);
         }
         // send the remaining control messages
         for (const [peer, control] of this.control.entries()) {
             this.control.delete(peer);
-            const out = utils_1.createGossipRpc([], { graft: control.graft, prune: control.prune });
+            const out = (0, utils_1.createGossipRpc)([], { graft: control.graft, prune: control.prune });
             this._sendRpc(peer, out);
         }
     }
     /**
      * Adds new IHAVE messages to pending gossip
-     * @param {PeerStreams} peerStreams
-     * @param {Array<RPC.IControlIHave>} controlIHaveMsgs
-     * @returns {void}
      */
     _pushGossip(id, controlIHaveMsgs) {
         this.log('Add gossip to %s', id);
@@ -1201,59 +1079,304 @@ class Gossipsub extends pubsub_1.default {
     }
     /**
      * Returns the current time in milliseconds
-     * @returns {number}
      */
     _now() {
         return Date.now();
     }
     /**
      * Make a PRUNE control message for a peer in a topic
-     * @param {string} id
-     * @param {string} topic
-     * @param {boolean} doPX
-     * @returns {Promise<RPC.IControlPrune>}
      */
-    _makePrune(id, topic, doPX) {
-        return __awaiter(this, void 0, void 0, function* () {
-            if (this.peers.get(id).protocol === constants.GossipsubIDv10) {
-                // Gossipsub v1.0 -- no backoff, the peer won't be able to parse it anyway
-                return {
-                    topicID: topic,
-                    peers: []
-                };
-            }
-            // backoff is measured in seconds
-            // GossipsubPruneBackoff is measured in milliseconds
-            const backoff = constants.GossipsubPruneBackoff / 1000;
-            if (!doPX) {
-                return {
-                    topicID: topic,
-                    peers: [],
-                    backoff: backoff
-                };
-            }
-            // select peers for Peer eXchange
-            const peers = get_gossip_peers_1.getGossipPeers(this, topic, constants.GossipsubPrunePeers, (xid) => {
-                return xid !== id && this.score.score(xid) >= 0;
-            });
-            const px = yield Promise.all(Array.from(peers).map((p) => __awaiter(this, void 0, void 0, function* () {
-                // see if we have a signed record to send back; if we don't, just send
-                // the peer ID and let the pruned peer find them in the DHT -- we can't trust
-                // unsigned address records through PX anyways
-                // Finding signed records in the DHT is not supported at the time of writing in js-libp2p
-                const peerId = PeerId.createFromB58String(p);
-                return {
-                    peerID: peerId.toBytes(),
-                    signedPeerRecord: yield this._libp2p.peerStore.addressBook.getRawEnvelope(peerId)
-                };
-            })));
+    async _makePrune(id, topic, doPX) {
+        if (this.peers.get(id).protocol === constants.GossipsubIDv10) {
+            // Gossipsub v1.0 -- no backoff, the peer won't be able to parse it anyway
             return {
                 topicID: topic,
-                peers: px,
+                peers: []
+            };
+        }
+        // backoff is measured in seconds
+        // GossipsubPruneBackoff is measured in milliseconds
+        const backoff = constants.GossipsubPruneBackoff / 1000;
+        if (!doPX) {
+            return {
+                topicID: topic,
+                peers: [],
                 backoff: backoff
             };
+        }
+        // select peers for Peer eXchange
+        const peers = this.getGossipPeers(topic, constants.GossipsubPrunePeers, (xid) => {
+            return xid !== id && this.score.score(xid) >= 0;
         });
+        const px = await Promise.all(Array.from(peers).map(async (p) => {
+            // see if we have a signed record to send back; if we don't, just send
+            // the peer ID and let the pruned peer find them in the DHT -- we can't trust
+            // unsigned address records through PX anyways
+            // Finding signed records in the DHT is not supported at the time of writing in js-libp2p
+            const peerId = PeerId.createFromB58String(p);
+            return {
+                peerID: peerId.toBytes(),
+                signedPeerRecord: await this._libp2p.peerStore.addressBook.getRawEnvelope(peerId)
+            };
+        }));
+        return {
+            topicID: topic,
+            peers: px,
+            backoff: backoff
+        };
+    }
+    /**
+     * Maintains the mesh and fanout maps in gossipsub.
+     */
+    _heartbeat() {
+        const { D, Dlo, Dhi, Dscore, Dout, fanoutTTL } = this._options;
+        this.heartbeatTicks++;
+        // cache scores throught the heartbeat
+        const scores = new Map();
+        const getScore = (id) => {
+            let s = scores.get(id);
+            if (s === undefined) {
+                s = this.score.score(id);
+                scores.set(id, s);
+            }
+            return s;
+        };
+        // peer id => topic[]
+        const tograft = new Map();
+        // peer id => topic[]
+        const toprune = new Map();
+        // peer id => don't px
+        const noPX = new Map();
+        // clean up expired backoffs
+        this._clearBackoff();
+        // clean up peerhave/iasked counters
+        this.peerhave.clear();
+        this.iasked.clear();
+        // apply IWANT request penalties
+        this._applyIwantPenalties();
+        // ensure direct peers are connected
+        this._directConnect();
+        // maintain the mesh for topics we have joined
+        this.mesh.forEach((peers, topic) => {
+            // prune/graft helper functions (defined per topic)
+            const prunePeer = (id) => {
+                this.log('HEARTBEAT: Remove mesh link to %s in %s', id, topic);
+                // update peer score
+                this.score.prune(id, topic);
+                // add prune backoff record
+                this._addBackoff(id, topic);
+                // remove peer from mesh
+                peers.delete(id);
+                // add to toprune
+                const topics = toprune.get(id);
+                if (!topics) {
+                    toprune.set(id, [topic]);
+                }
+                else {
+                    topics.push(topic);
+                }
+            };
+            const graftPeer = (id) => {
+                this.log('HEARTBEAT: Add mesh link to %s in %s', id, topic);
+                // update peer score
+                this.score.graft(id, topic);
+                // add peer to mesh
+                peers.add(id);
+                // add to tograft
+                const topics = tograft.get(id);
+                if (!topics) {
+                    tograft.set(id, [topic]);
+                }
+                else {
+                    topics.push(topic);
+                }
+            };
+            // drop all peers with negative score, without PX
+            peers.forEach((id) => {
+                const score = getScore(id);
+                if (score < 0) {
+                    this.log('HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s', id, score, topic);
+                    prunePeer(id);
+                    noPX.set(id, true);
+                }
+            });
+            // do we have enough peers?
+            if (peers.size < Dlo) {
+                const backoff = this.backoff.get(topic);
+                const ineed = D - peers.size;
+                const peersSet = this.getGossipPeers(topic, ineed, (id) => {
+                    // filter out mesh peers, direct peers, peers we are backing off, peers with negative score
+                    return !peers.has(id) && !this.direct.has(id) && (!backoff || !backoff.has(id)) && getScore(id) >= 0;
+                });
+                peersSet.forEach(graftPeer);
+            }
+            // do we have to many peers?
+            if (peers.size > Dhi) {
+                let peersArray = Array.from(peers);
+                // sort by score
+                peersArray.sort((a, b) => getScore(b) - getScore(a));
+                // We keep the first D_score peers by score and the remaining up to D randomly
+                // under the constraint that we keep D_out peers in the mesh (if we have that many)
+                peersArray = peersArray.slice(0, Dscore).concat((0, utils_1.shuffle)(peersArray.slice(Dscore)));
+                // count the outbound peers we are keeping
+                let outbound = 0;
+                peersArray.slice(0, D).forEach((p) => {
+                    if (this.outbound.get(p)) {
+                        outbound++;
+                    }
+                });
+                // if it's less than D_out, bubble up some outbound peers from the random selection
+                if (outbound < Dout) {
+                    const rotate = (i) => {
+                        // rotate the peersArray to the right and put the ith peer in the front
+                        const p = peersArray[i];
+                        for (let j = i; j > 0; j--) {
+                            peersArray[j] = peersArray[j - 1];
+                        }
+                        peersArray[0] = p;
+                    };
+                    // first bubble up all outbound peers already in the selection to the front
+                    if (outbound > 0) {
+                        let ihave = outbound;
+                        for (let i = 1; i < D && ihave > 0; i++) {
+                            if (this.outbound.get(peersArray[i])) {
+                                rotate(i);
+                                ihave--;
+                            }
+                        }
+                    }
+                    // now bubble up enough outbound peers outside the selection to the front
+                    let ineed = D - outbound;
+                    for (let i = D; i < peersArray.length && ineed > 0; i++) {
+                        if (this.outbound.get(peersArray[i])) {
+                            rotate(i);
+                            ineed--;
+                        }
+                    }
+                }
+                // prune the excess peers
+                peersArray.slice(D).forEach(prunePeer);
+            }
+            // do we have enough outbound peers?
+            if (peers.size >= Dlo) {
+                // count the outbound peers we have
+                let outbound = 0;
+                peers.forEach((p) => {
+                    if (this.outbound.get(p)) {
+                        outbound++;
+                    }
+                });
+                // if it's less than D_out, select some peers with outbound connections and graft them
+                if (outbound < Dout) {
+                    const ineed = Dout - outbound;
+                    const backoff = this.backoff.get(topic);
+                    this.getGossipPeers(topic, ineed, (id) => {
+                        // filter our current mesh peers, direct peers, peers we are backing off, peers with negative score
+                        return !peers.has(id) && !this.direct.has(id) && (!backoff || !backoff.has(id)) && getScore(id) >= 0;
+                    }).forEach(graftPeer);
+                }
+            }
+            // should we try to improve the mesh with opportunistic grafting?
+            if (this.heartbeatTicks % constants.GossipsubOpportunisticGraftTicks === 0 && peers.size > 1) {
+                // Opportunistic grafting works as follows: we check the median score of peers in the
+                // mesh; if this score is below the opportunisticGraftThreshold, we select a few peers at
+                // random with score over the median.
+                // The intention is to (slowly) improve an underperforming mesh by introducing good
+                // scoring peers that may have been gossiping at us. This allows us to get out of sticky
+                // situations where we are stuck with poor peers and also recover from churn of good peers.
+                // now compute the median peer score in the mesh
+                const peersList = Array.from(peers).sort((a, b) => getScore(a) - getScore(b));
+                const medianIndex = Math.floor(peers.size / 2);
+                const medianScore = getScore(peersList[medianIndex]);
+                // if the median score is below the threshold, select a better peer (if any) and GRAFT
+                if (medianScore < this._options.scoreThresholds.opportunisticGraftThreshold) {
+                    const backoff = this.backoff.get(topic);
+                    const peersToGraft = this.getGossipPeers(topic, constants.GossipsubOpportunisticGraftPeers, (id) => {
+                        // filter out current mesh peers, direct peers, peers we are backing off, peers below or at threshold
+                        return (peers.has(id) && !this.direct.has(id) && (!backoff || !backoff.has(id)) && getScore(id) > medianScore);
+                    });
+                    peersToGraft.forEach((id) => {
+                        this.log('HEARTBEAT: Opportunistically graft peer %s on topic %s', id, topic);
+                        graftPeer(id);
+                    });
+                }
+            }
+            // 2nd arg are mesh peers excluded from gossip. We have already pushed
+            // messages to them, so its redundant to gossip IHAVEs.
+            this._emitGossip(topic, peers);
+        });
+        // expire fanout for topics we haven't published to in a while
+        const now = this._now();
+        this.lastpub.forEach((lastpb, topic) => {
+            if (lastpb + fanoutTTL < now) {
+                this.fanout.delete(topic);
+                this.lastpub.delete(topic);
+            }
+        });
+        // maintain our fanout for topics we are publishing but we have not joined
+        this.fanout.forEach((fanoutPeers, topic) => {
+            // checks whether our peers are still in the topic and have a score above the publish threshold
+            const topicPeers = this.topics.get(topic);
+            fanoutPeers.forEach((id) => {
+                if (!topicPeers.has(id) || getScore(id) < this._options.scoreThresholds.publishThreshold) {
+                    fanoutPeers.delete(id);
+                }
+            });
+            // do we need more peers?
+            if (fanoutPeers.size < D) {
+                const ineed = D - fanoutPeers.size;
+                const peersSet = this.getGossipPeers(topic, ineed, (id) => {
+                    // filter out existing fanout peers, direct peers, and peers with score above the publish threshold
+                    return (!fanoutPeers.has(id) &&
+                        !this.direct.has(id) &&
+                        getScore(id) >= this._options.scoreThresholds.publishThreshold);
+                });
+                peersSet.forEach((id) => {
+                    fanoutPeers.add(id);
+                });
+            }
+            // 2nd arg are fanout peers excluded from gossip.
+            // We have already pushed messages to them, so its redundant to gossip IHAVEs
+            this._emitGossip(topic, fanoutPeers);
+        });
+        // send coalesced GRAFT/PRUNE messages (will piggyback gossip)
+        this._sendGraftPrune(tograft, toprune, noPX);
+        // flush pending gossip that wasn't piggybacked above
+        this._flush();
+        // advance the message history window
+        this.messageCache.shift();
+        this.emit('gossipsub:heartbeat');
+    }
+    /**
+     * Given a topic, returns up to count peers subscribed to that topic
+     * that pass an optional filter function
+     *
+     * @param filter a function to filter acceptable peers
+     */
+    getGossipPeers(topic, count, filter = () => true) {
+        const peersInTopic = this.topics.get(topic);
+        if (!peersInTopic) {
+            return new Set();
+        }
+        // Adds all peers using our protocol
+        // that also pass the filter function
+        let peers = [];
+        peersInTopic.forEach((id) => {
+            const peerStreams = this.peers.get(id);
+            if (!peerStreams) {
+                return;
+            }
+            if ((0, utils_1.hasGossipProtocol)(peerStreams.protocol) && filter(id)) {
+                peers.push(id);
+            }
+        });
+        // Pseudo-randomly shuffles peers
+        peers = (0, utils_1.shuffle)(peers);
+        if (count > 0 && peers.length > count) {
+            peers = peers.slice(0, count);
+        }
+        return new Set(peers);
     }
 }
+exports.default = Gossipsub;
 Gossipsub.multicodec = constants.GossipsubIDv11;
-module.exports = Gossipsub;
diff --git a/node_modules/libp2p-gossipsub/src/interfaces.d.ts.map b/node_modules/libp2p-gossipsub/src/interfaces.d.ts.map
deleted file mode 100644
index a5fa3b1..0000000
--- a/node_modules/libp2p-gossipsub/src/interfaces.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"interfaces.d.ts","sourceRoot":"","sources":["../ts/interfaces.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAA;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AACrC,OAAO,MAAM,GAAG,QAAQ,SAAS,CAAC,CAAA;AAElC,MAAM,WAAW,QAAQ;IACvB,EAAE,EAAE,MAAM,CAAA;IACV,KAAK,EAAE,SAAS,EAAE,CAAA;CACnB;AAED,oBAAY,iBAAiB,GAAG,CAAC,GAAG,EAAE,SAAS,KAAK,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/message-cache.d.ts b/node_modules/libp2p-gossipsub/src/message-cache.d.ts
index 5362692..f414005 100644
--- a/node_modules/libp2p-gossipsub/src/message-cache.d.ts
+++ b/node_modules/libp2p-gossipsub/src/message-cache.d.ts
@@ -10,51 +10,27 @@ export declare class MessageCache {
     history: CacheEntry[][];
     gossip: number;
     msgIdFn: MessageIdFunction;
-    /**
-     * @param {Number} gossip
-     * @param {Number} history
-     * @param {msgIdFn} msgIdFn a function that returns message id from a message
-     *
-     * @constructor
-     */
     constructor(gossip: number, history: number);
     /**
      * Adds a message to the current window and the cache
-     *
-     * @param {string} msgIdStr
-     * @param {RPC.Message} msg
-     * @returns {Promise<void>}
      */
     put(msg: InMessage, msgIdStr: string): Promise<void>;
     /**
      * Retrieves a message from the cache by its ID, if it is still present
-     *
-     * @param {Uint8Array} msgId
-     * @returns {Message}
      */
     get(msgId: Uint8Array): InMessage | undefined;
     /**
      * Retrieves a message from the cache by its ID, if it is present
      * for a specific peer.
      * Returns the message and the number of times the peer has requested the message
-     *
-     * @param {string} msgIdStr
-     * @param {string} p
-     * @returns {[InMessage | undefined, number]}
      */
     getForPeer(msgIdStr: string, p: string): [InMessage | undefined, number];
     /**
      * Retrieves a list of message IDs for a given topic
-     *
-     * @param {String} topic
-     *
-     * @returns {Array<Uint8Array>}
      */
     getGossipIDs(topic: string): Uint8Array[];
     /**
      * Shifts the current window, discarding messages older than this.history.length of the cache
-     *
-     * @returns {void}
      */
     shift(): void;
 }
diff --git a/node_modules/libp2p-gossipsub/src/message-cache.d.ts.map b/node_modules/libp2p-gossipsub/src/message-cache.d.ts.map
deleted file mode 100644
index d59cd5f..0000000
--- a/node_modules/libp2p-gossipsub/src/message-cache.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"message-cache.d.ts","sourceRoot":"","sources":["../ts/message-cache.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAA;AACxD,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAA;AAGhD,MAAM,WAAW,UAAU;IACzB,KAAK,EAAE,UAAU,CAAA;IACjB,MAAM,EAAE,MAAM,EAAE,CAAA;CACjB;AAED,qBAAa,YAAY;IACvB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IAC5B,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IACxC,OAAO,EAAE,UAAU,EAAE,EAAE,CAAA;IACvB,MAAM,EAAE,MAAM,CAAA;IACd,OAAO,EAAE,iBAAiB,CAAA;IAE1B;;;;;;OAMG;gBACU,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB;IA2BxE;;;;;OAKG;IACG,GAAG,CAAE,GAAG,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAOzC;;;;OAIG;IACH,QAAQ,CAAE,GAAG,EAAE,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU;IAI3D;;;;;OAKG;IACH,GAAG,CAAE,KAAK,EAAE,UAAU,GAAG,SAAS,GAAG,SAAS;IAI9C;;;;;;;;OAQG;IACH,UAAU,CAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,GAAG,CAAC,SAAS,GAAG,SAAS,EAAE,MAAM,CAAC;IAkB1E;;;;;;OAMG;IACH,YAAY,CAAE,KAAK,EAAE,MAAM,GAAG,UAAU,EAAE;IAgB1C;;;;OAIG;IACH,KAAK,IAAK,IAAI;CAWf"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/message-cache.js b/node_modules/libp2p-gossipsub/src/message-cache.js
index f9c982e..4fb6106 100644
--- a/node_modules/libp2p-gossipsub/src/message-cache.js
+++ b/node_modules/libp2p-gossipsub/src/message-cache.js
@@ -1,73 +1,35 @@
 "use strict";
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.MessageCache = void 0;
 const utils_1 = require("./utils");
 class MessageCache {
-    /**
-     * @param {Number} gossip
-     * @param {Number} history
-     * @param {msgIdFn} msgIdFn a function that returns message id from a message
-     *
-     * @constructor
-     */
     constructor(gossip, history) {
-        /**
-         * @type {Map<string, RPC.Message>}
-         */
         this.msgs = new Map();
         this.peertx = new Map();
-        /**
-         * @type {Array<Array<CacheEntry>>}
-         */
         this.history = [];
         for (let i = 0; i < history; i++) {
             this.history[i] = [];
         }
-        /**
-         * @type {Number}
-         */
         this.gossip = gossip;
     }
     /**
      * Adds a message to the current window and the cache
-     *
-     * @param {string} msgIdStr
-     * @param {RPC.Message} msg
-     * @returns {Promise<void>}
      */
-    put(msg, msgIdStr) {
-        return __awaiter(this, void 0, void 0, function* () {
-            this.msgs.set(msgIdStr, msg);
-            const msgId = utils_1.messageIdFromString(msgIdStr);
-            this.history[0].push({ msgId: msgId, topics: msg.topicIDs });
-        });
+    async put(msg, msgIdStr) {
+        this.msgs.set(msgIdStr, msg);
+        const msgId = (0, utils_1.messageIdFromString)(msgIdStr);
+        this.history[0].push({ msgId: msgId, topics: msg.topicIDs });
     }
     /**
      * Retrieves a message from the cache by its ID, if it is still present
-     *
-     * @param {Uint8Array} msgId
-     * @returns {Message}
      */
     get(msgId) {
-        return this.msgs.get(utils_1.messageIdToString(msgId));
+        return this.msgs.get((0, utils_1.messageIdToString)(msgId));
     }
     /**
      * Retrieves a message from the cache by its ID, if it is present
      * for a specific peer.
      * Returns the message and the number of times the peer has requested the message
-     *
-     * @param {string} msgIdStr
-     * @param {string} p
-     * @returns {[InMessage | undefined, number]}
      */
     getForPeer(msgIdStr, p) {
         const msg = this.msgs.get(msgIdStr);
@@ -79,16 +41,12 @@ class MessageCache {
             peertx = new Map();
             this.peertx.set(msgIdStr, peertx);
         }
-        const count = (peertx.get(p) || 0) + 1;
+        const count = (peertx.get(p) ? peertx.get(p) :0) + 1;
         peertx.set(p, count);
         return [msg, count];
     }
     /**
      * Retrieves a list of message IDs for a given topic
-     *
-     * @param {String} topic
-     *
-     * @returns {Array<Uint8Array>}
      */
     getGossipIDs(topic) {
         const msgIds = [];
@@ -106,13 +64,11 @@ class MessageCache {
     }
     /**
      * Shifts the current window, discarding messages older than this.history.length of the cache
-     *
-     * @returns {void}
      */
     shift() {
         const last = this.history[this.history.length - 1];
         last.forEach((entry) => {
-            const msgIdStr = utils_1.messageIdToString(entry.msgId);
+            const msgIdStr = (0, utils_1.messageIdToString)(entry.msgId);
             this.msgs.delete(msgIdStr);
             this.peertx.delete(msgIdStr);
         });
diff --git a/node_modules/libp2p-gossipsub/src/message/index.d.ts b/node_modules/libp2p-gossipsub/src/message/index.d.ts
deleted file mode 100644
index 1c8ad0f..0000000
--- a/node_modules/libp2p-gossipsub/src/message/index.d.ts
+++ /dev/null
@@ -1,108 +0,0 @@
-/**
- * Subscription Options
- */
-export interface SubOpts {
-    /**
-     * Whether to subscribe of unsubscribe
-     * true for subscribe, false for unsubscribe
-     */
-    subscribe?: boolean;
-    /**
-     * Topic ID
-     */
-    topicID?: string;
-}
-/**
- * Pubsub message
- */
-export interface Message {
-    /**
-     * Peer id of the author of the message
-     *
-     * Note: This is not necessarily the peer who sent the RPC this message is contained in
-     */
-    from?: Uint8Array;
-    /**
-     * Opaque blob of data
-     */
-    data?: Uint8Array;
-    /**
-     * 64-bit big-endian uint
-     *
-     * No two messages on a topic from the same peer should have the same seqno value
-     */
-    seqno?: Uint8Array;
-    /**
-     * Set of topics being published to
-     */
-    topicIDs: string[];
-    /**
-     * Signature of the message
-     *
-     * The signature is computed over the marshalled message protobuf excluding the key field
-     * The protobuf bloc is prefixed by the string `libp2p-pubsub:` before signing
-     */
-    signature?: Uint8Array;
-    /**
-     * Signing key
-     */
-    key?: Uint8Array;
-}
-/**
- * IHAVE control message
- * Sent to notify a peer with a list of messages that were recently seen by the local router in the included topic id
- */
-export interface ControlIHave {
-    topicID?: string;
-    messageIDs: Uint8Array[];
-}
-/**
- * IWANT control message
- * Sent to request the full content of messages whose IDs were announced by a remote peer in an IHAVE message
- */
-export interface ControlIWant {
-    messageIDs: Uint8Array[];
-}
-/**
- * GRAFT control message
- * Sent to notify a peer that it has been added to the local router's mesh for the included topic id
- */
-export interface ControlGraft {
-    topicID?: string;
-}
-/**
- * PRUNE control message
- * Sent to notify a peer that it has been removed from the local router's mesh for the included topic id
- */
-export interface ControlPrune {
-    topicID?: string;
-    peers: PeerInfo[];
-    backoff?: number;
-}
-export interface PeerInfo {
-    peerID?: Uint8Array;
-    signedPeerRecord?: Uint8Array;
-}
-/**
- * Gossip control message container
- */
-export interface ControlMessage {
-    ihave: ControlIHave[];
-    iwant: ControlIWant[];
-    graft: ControlGraft[];
-    prune: ControlPrune[];
-}
-/**
- * Gossipsub RPC message
- */
-export interface RPC {
-    subscriptions: SubOpts[];
-    msgs: Message[];
-    control?: ControlMessage;
-}
-interface ProtoCodec<T> {
-    encode(obj: T): Uint8Array;
-    decode(buf: Uint8Array): T;
-}
-export declare const RPCCodec: ProtoCodec<RPC>;
-export {};
diff --git a/node_modules/libp2p-gossipsub/src/message/index.js b/node_modules/libp2p-gossipsub/src/message/index.js
deleted file mode 100644
index 61d2055..0000000
--- a/node_modules/libp2p-gossipsub/src/message/index.js
+++ /dev/null
@@ -1,12 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.RPCCodec = void 0;
-const rpc_proto_1 = __importDefault(require("./rpc.proto"));
-// eslint-disable-next-line @typescript-eslint/ban-ts-comment
-// @ts-ignore
-const protons = require("protons");
-const rpcProto = protons(rpc_proto_1.default);
-exports.RPCCodec = rpcProto.RPC;
diff --git a/node_modules/libp2p-gossipsub/src/message/rpc.proto.d.ts b/node_modules/libp2p-gossipsub/src/message/rpc.proto.d.ts
deleted file mode 100644
index 1d4763e..0000000
--- a/node_modules/libp2p-gossipsub/src/message/rpc.proto.d.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-declare const _default: "\nmessage RPC {\n  repeated SubOpts subscriptions = 1;\n  repeated Message msgs = 2;\n  optional ControlMessage control = 3;\n\n  message SubOpts {\n    optional bool subscribe = 1; // subscribe or unsubcribe\n    optional string topicID = 2;\n  }\n\n  message Message {\n    optional bytes from = 1;\n    optional bytes data = 2;\n    optional bytes seqno = 3;\n    repeated string topicIDs = 4; \n    optional bytes signature = 5;\n    optional bytes key = 6;\n  }\n\n  message ControlMessage {\n    repeated ControlIHave ihave = 1;\n    repeated ControlIWant iwant = 2;\n    repeated ControlGraft graft = 3;\n    repeated ControlPrune prune = 4;\n  }\n\n  message ControlIHave {\n    optional string topicID = 1;\n    repeated bytes messageIDs = 2;\n  }\n\n  message ControlIWant {\n    repeated bytes messageIDs = 1;  \n  }\n\n  message ControlGraft {\n    optional string topicID = 1;\n  }\n\n  message ControlPrune {\n    optional string topicID = 1;\n    repeated PeerInfo peers = 2;\n    optional uint64 backoff = 3;\n  }\n\n  message PeerInfo {\n    optional bytes peerID = 1;\n    optional bytes signedPeerRecord = 2;\n  }\n}";
-export default _default;
diff --git a/node_modules/libp2p-gossipsub/src/message/rpc.proto.js b/node_modules/libp2p-gossipsub/src/message/rpc.proto.js
deleted file mode 100644
index 88be4f5..0000000
--- a/node_modules/libp2p-gossipsub/src/message/rpc.proto.js
+++ /dev/null
@@ -1,53 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.default = `
-message RPC {
-  repeated SubOpts subscriptions = 1;
-  repeated Message msgs = 2;
-  optional ControlMessage control = 3;
-
-  message SubOpts {
-    optional bool subscribe = 1; // subscribe or unsubcribe
-    optional string topicID = 2;
-  }
-
-  message Message {
-    optional bytes from = 1;
-    optional bytes data = 2;
-    optional bytes seqno = 3;
-    repeated string topicIDs = 4; 
-    optional bytes signature = 5;
-    optional bytes key = 6;
-  }
-
-  message ControlMessage {
-    repeated ControlIHave ihave = 1;
-    repeated ControlIWant iwant = 2;
-    repeated ControlGraft graft = 3;
-    repeated ControlPrune prune = 4;
-  }
-
-  message ControlIHave {
-    optional string topicID = 1;
-    repeated bytes messageIDs = 2;
-  }
-
-  message ControlIWant {
-    repeated bytes messageIDs = 1;  
-  }
-
-  message ControlGraft {
-    optional string topicID = 1;
-  }
-
-  message ControlPrune {
-    optional string topicID = 1;
-    repeated PeerInfo peers = 2;
-    optional uint64 backoff = 3;
-  }
-
-  message PeerInfo {
-    optional bytes peerID = 1;
-    optional bytes signedPeerRecord = 2;
-  }
-}`;
diff --git a/node_modules/libp2p-gossipsub/src/score/compute-score.d.ts.map b/node_modules/libp2p-gossipsub/src/score/compute-score.d.ts.map
deleted file mode 100644
index 1c09d8e..0000000
--- a/node_modules/libp2p-gossipsub/src/score/compute-score.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"compute-score.d.ts","sourceRoot":"","sources":["../../ts/score/compute-score.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAA;AACxC,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AAErD,wBAAgB,YAAY,CAC1B,IAAI,EAAE,MAAM,EACZ,MAAM,EAAE,SAAS,EACjB,MAAM,EAAE,eAAe,EACvB,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,GAChC,MAAM,CAkFR"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/compute-score.js b/node_modules/libp2p-gossipsub/src/score/compute-score.js
index d274c81..e73d9f1 100644
--- a/node_modules/libp2p-gossipsub/src/score/compute-score.js
+++ b/node_modules/libp2p-gossipsub/src/score/compute-score.js
@@ -7,7 +7,7 @@ function computeScore(peer, pstats, params, peerIPs) {
     Object.entries(pstats.topics).forEach(([topic, tstats]) => {
         // the topic parameters
         const topicParams = params.topics[topic];
-        if (!topicParams) {
+        if (topicParams === undefined) {
             // we are not scoring this topic
             return;
         }
@@ -50,7 +50,7 @@ function computeScore(peer, pstats, params, peerIPs) {
     const p5 = params.appSpecificScore(peer);
     score += p5 * params.appSpecificWeight;
     // P6: IP colocation factor
-    pstats.ips.forEach(ip => {
+    pstats.ips.forEach((ip) => {
         if (params.IPColocationFactorWhitelist.has(ip)) {
             return;
         }
diff --git a/node_modules/libp2p-gossipsub/src/score/constants.d.ts.map b/node_modules/libp2p-gossipsub/src/score/constants.d.ts.map
deleted file mode 100644
index 46edd48..0000000
--- a/node_modules/libp2p-gossipsub/src/score/constants.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"constants.d.ts","sourceRoot":"","sources":["../../ts/score/constants.ts"],"names":[],"mappings":"AAAA,eAAO,MAAM,6BAA6B,kCAAkC,CAAA;AAC5E,eAAO,MAAM,iCAAiC,sCAAsC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/index.d.ts.map b/node_modules/libp2p-gossipsub/src/score/index.d.ts.map
deleted file mode 100644
index 27f8ba3..0000000
--- a/node_modules/libp2p-gossipsub/src/score/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../ts/score/index.ts"],"names":[],"mappings":"AAAA,cAAc,qBAAqB,CAAA;AACnC,cAAc,yBAAyB,CAAA;AACvC,cAAc,cAAc,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/index.js b/node_modules/libp2p-gossipsub/src/score/index.js
index 534d364..bcedde4 100644
--- a/node_modules/libp2p-gossipsub/src/score/index.js
+++ b/node_modules/libp2p-gossipsub/src/score/index.js
@@ -1,7 +1,11 @@
 "use strict";
 var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
-    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+    var desc = Object.getOwnPropertyDescriptor(m, k);
+    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
+      desc = { enumerable: true, get: function() { return m[k]; } };
+    }
+    Object.defineProperty(o, k2, desc);
 }) : (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     o[k2] = m[k];
diff --git a/node_modules/libp2p-gossipsub/src/score/message-deliveries.d.ts.map b/node_modules/libp2p-gossipsub/src/score/message-deliveries.d.ts.map
deleted file mode 100644
index e109ea1..0000000
--- a/node_modules/libp2p-gossipsub/src/score/message-deliveries.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"message-deliveries.d.ts","sourceRoot":"","sources":["../../ts/score/message-deliveries.ts"],"names":[],"mappings":"AAIA,oBAAY,oBAAoB;IAC9B;;OAEG;IACH,OAAO,IAAA;IACP;;OAEG;IACH,KAAK,IAAA;IACL;;OAEG;IACH,OAAO,IAAA;IACP;;OAEG;IACH,OAAO,IAAA;CACR;AAED,MAAM,WAAW,cAAc;IAC7B,MAAM,EAAE,oBAAoB,CAAA;IAC5B,SAAS,EAAE,MAAM,CAAA;IACjB,SAAS,EAAE,MAAM,CAAA;IACjB,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;CACnB;AAOD;;;;GAIG;AACH,qBAAa,iBAAiB;IAC5B,OAAO,CAAC,OAAO,CAA6B;IAC5C,OAAO,CAAC,KAAK,CAA4B;;IAOzC,YAAY,CAAE,KAAK,EAAE,UAAU,GAAG,cAAc;IA2BhD,EAAE,IAAK,IAAI;IAYX,KAAK,IAAK,IAAI;CAIf"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score-params.d.ts.map b/node_modules/libp2p-gossipsub/src/score/peer-score-params.d.ts.map
deleted file mode 100644
index 21ab7cd..0000000
--- a/node_modules/libp2p-gossipsub/src/score/peer-score-params.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"peer-score-params.d.ts","sourceRoot":"","sources":["../../ts/score/peer-score-params.ts"],"names":[],"mappings":"AASA,MAAM,WAAW,eAAe;IAC9B;;OAEG;IACH,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAA;IAExC;;;OAGG;IACH,aAAa,EAAE,MAAM,CAAA;IAErB;;OAEG;IACH,gBAAgB,EAAE,CAAC,CAAC,EAAE,MAAM,KAAK,MAAM,CAAA;IACvC,iBAAiB,EAAE,MAAM,CAAA;IAEzB;;;;;;;;;OASG;IACH,wBAAwB,EAAE,MAAM,CAAA;IAChC,2BAA2B,EAAE,MAAM,CAAA;IACnC,2BAA2B,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;IAExC;;;;;;;;;OASG;IACH,sBAAsB,EAAE,MAAM,CAAA;IAC9B,qBAAqB,EAAE,MAAM,CAAA;IAE7B;;OAEG;IACH,aAAa,EAAE,MAAM,CAAA;IAErB;;OAEG;IACH,WAAW,EAAE,MAAM,CAAA;IAEnB;;OAEG;IACH,WAAW,EAAE,MAAM,CAAA;CACpB;AAED,MAAM,WAAW,gBAAgB;IAC/B;;OAEG;IACH,WAAW,EAAE,MAAM,CAAA;IAEnB;;;;;OAKG;IACH,gBAAgB,EAAE,MAAM,CAAA;IACxB,iBAAiB,EAAE,MAAM,CAAA;IACzB,aAAa,EAAE,MAAM,CAAA;IAErB;;;;;;OAMG;IACH,4BAA4B,EAAE,MAAM,CAAA;IACpC,2BAA2B,EAAE,MAAM,CAAA;IACnC,yBAAyB,EAAE,MAAM,CAAA;IAEjC;;;;;;;;;;;;;;;OAeG;IACH,2BAA2B,EAAE,MAAM,CAAA;IACnC,0BAA0B,EAAE,MAAM,CAAA;IAClC,wBAAwB,EAAE,MAAM,CAAA;IAChC,8BAA8B,EAAE,MAAM,CAAA;IACtC,2BAA2B,EAAE,MAAM,CAAA;IACnC,+BAA+B,EAAE,MAAM,CAAA;IAEvC;;;;;OAKG;IACH,wBAAwB,EAAE,MAAM,CAAA;IAChC,uBAAuB,EAAE,MAAM,CAAA;IAE/B;;;;;;OAMG;IACH,8BAA8B,EAAE,MAAM,CAAA;IACtC,6BAA6B,EAAE,MAAM,CAAA;CACtC;AAED,eAAO,MAAM,sBAAsB,EAAE,eAapC,CAAA;AAED,eAAO,MAAM,uBAAuB,EAAE,gBAsBrC,CAAA;AAED,wBAAgB,qBAAqB,CAAE,CAAC,GAAE,OAAO,CAAC,eAAe,CAAM,GAAG,eAAe,CAYxF;AAED,wBAAgB,sBAAsB,CAAE,CAAC,GAAE,OAAO,CAAC,gBAAgB,CAAM,GAAG,gBAAgB,CAK3F;AAGD,wBAAgB,uBAAuB,CAAE,CAAC,EAAE,eAAe,GAAG,IAAI,CAuEjE;AAED,wBAAgB,wBAAwB,CAAE,CAAC,EAAE,gBAAgB,GAAG,IAAI,CAwHnE"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score-params.js b/node_modules/libp2p-gossipsub/src/score/peer-score-params.js
index 77535fd..a88973f 100644
--- a/node_modules/libp2p-gossipsub/src/score/peer-score-params.js
+++ b/node_modules/libp2p-gossipsub/src/score/peer-score-params.js
@@ -39,17 +39,23 @@ exports.defaultTopicScoreParams = {
     invalidMessageDeliveriesDecay: 0.3
 };
 function createPeerScoreParams(p = {}) {
-    return Object.assign(Object.assign(Object.assign({}, exports.defaultPeerScoreParams), p), { topics: p.topics
-            ? Object.entries(p.topics)
-                .reduce((topics, [topic, topicScoreParams]) => {
+    return {
+        ...exports.defaultPeerScoreParams,
+        ...p,
+        topics: p.topics
+            ? Object.entries(p.topics).reduce((topics, [topic, topicScoreParams]) => {
                 topics[topic] = createTopicScoreParams(topicScoreParams);
                 return topics;
             }, {})
-            : {} });
+            : {}
+    };
 }
 exports.createPeerScoreParams = createPeerScoreParams;
 function createTopicScoreParams(p = {}) {
-    return Object.assign(Object.assign({}, exports.defaultTopicScoreParams), p);
+    return {
+        ...exports.defaultTopicScoreParams,
+        ...p
+    };
 }
 exports.createTopicScoreParams = createTopicScoreParams;
 // peer score parameter validation
@@ -116,7 +122,8 @@ function validateTopicScoreParams(p) {
     if (p.firstMessageDeliveriesWeight < 0) {
         throw errcode(new Error('invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)'), constants_1.ERR_INVALID_PEER_SCORE_PARAMS);
     }
-    if (p.firstMessageDeliveriesWeight !== 0 && (p.firstMessageDeliveriesDecay <= 0 || p.firstMessageDeliveriesDecay >= 1)) {
+    if (p.firstMessageDeliveriesWeight !== 0 &&
+        (p.firstMessageDeliveriesDecay <= 0 || p.firstMessageDeliveriesDecay >= 1)) {
         throw errcode(new Error('invalid FirstMessageDeliveriesDecay; must be between 0 and 1'), constants_1.ERR_INVALID_PEER_SCORE_PARAMS);
     }
     if (p.firstMessageDeliveriesWeight !== 0 && p.firstMessageDeliveriesCap <= 0) {
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.d.ts.map b/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.d.ts.map
deleted file mode 100644
index 0706186..0000000
--- a/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"peer-score-thresholds.d.ts","sourceRoot":"","sources":["../../ts/score/peer-score-thresholds.ts"],"names":[],"mappings":"AASA,MAAM,WAAW,mBAAmB;IAClC;;;OAGG;IACH,eAAe,EAAE,MAAM,CAAA;IAEvB;;;OAGG;IACH,gBAAgB,EAAE,MAAM,CAAA;IAExB;;;OAGG;IACH,iBAAiB,EAAE,MAAM,CAAA;IAEzB;;;OAGG;IACH,iBAAiB,EAAE,MAAM,CAAA;IAEzB;;;OAGG;IACH,2BAA2B,EAAE,MAAM,CAAA;CACpC;AAED,eAAO,MAAM,0BAA0B,EAAE,mBAMxC,CAAA;AAED,wBAAgB,yBAAyB,CAAE,CAAC,GAAE,OAAO,CAAC,mBAAmB,CAAM,GAAG,mBAAmB,CAKpG;AAED,wBAAgB,2BAA2B,CAAE,CAAC,EAAE,mBAAmB,GAAG,IAAI,CA+BzE"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.js b/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.js
index b799b7b..b5a83f4 100644
--- a/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.js
+++ b/node_modules/libp2p-gossipsub/src/score/peer-score-thresholds.js
@@ -13,7 +13,10 @@ exports.defaultPeerScoreThresholds = {
     opportunisticGraftThreshold: 20
 };
 function createPeerScoreThresholds(p = {}) {
-    return Object.assign(Object.assign({}, exports.defaultPeerScoreThresholds), p);
+    return {
+        ...exports.defaultPeerScoreThresholds,
+        ...p
+    };
 }
 exports.createPeerScoreThresholds = createPeerScoreThresholds;
 function validatePeerScoreThresholds(p) {
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts b/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts
index d630253..a5079e0 100644
--- a/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts
+++ b/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts
@@ -36,128 +36,68 @@ export declare class PeerScore {
     constructor(params: PeerScoreParams, connectionManager: ConnectionManager);
     /**
      * Start PeerScore instance
-     * @returns {void}
      */
     start(): void;
     /**
      * Stop PeerScore instance
-     * @returns {void}
      */
     stop(): void;
     /**
      * Periodic maintenance
-     * @returns {void}
      */
     background(): void;
     /**
      * Decays scores, and purges score records for disconnected peers once their expiry has elapsed.
-     * @returns {void}
      */
     _refreshScores(): void;
     /**
      * Return the score for a peer
-     * @param {string} id
-     * @returns {Number}
      */
     score(id: string): number;
     /**
      * Apply a behavioural penalty to a peer
-     * @param {string} id
-     * @param {Number} penalty
-     * @returns {void}
      */
     addPenalty(id: string, penalty: number): void;
-    /**
-     * @param {string} id
-     * @returns {void}
-     */
     addPeer(id: string): void;
-    /**
-     * @param {string} id
-     * @returns {void}
-     */
     removePeer(id: string): void;
-    /**
-     * @param {string} id
-     * @param {String} topic
-     * @returns {void}
-     */
     graft(id: string, topic: string): void;
-    /**
-     * @param {string} id
-     * @param {string} topic
-     * @returns {void}
-     */
     prune(id: string, topic: string): void;
     /**
      * @param {InMessage} message
      * @returns {Promise<void>}
      */
     validateMessage(msgIdStr: string): Promise<void>;
-    /**
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
-     */
     deliverMessage(msg: InMessage, msgIdStr: string): Promise<void>;
-    /**
-     * @param {InMessage} msg
-     * @param {string} reason
-     * @returns {Promise<void>}
-     */
     rejectMessage(msg: InMessage, msgIdStr: string, reason: string): Promise<void>;
-    /**
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
-     */
     duplicateMessage(msg: InMessage, msgIdStr: string): Promise<void>;
     /**
      * Increments the "invalid message deliveries" counter for all scored topics the message is published in.
-     * @param {string} id
-     * @param {InMessage} msg
-     * @returns {void}
      */
     _markInvalidMessageDelivery(id: string, msg: InMessage): void;
     /**
      * Increments the "first message deliveries" counter for all scored topics the message is published in,
      * as well as the "mesh message deliveries" counter, if the peer is in the mesh for the topic.
-     * @param {string} id
-     * @param {InMessage} msg
-     * @returns {void}
      */
     _markFirstMessageDelivery(id: string, msg: InMessage): void;
     /**
      * Increments the "mesh message deliveries" counter for messages we've seen before,
      * as long the message was received within the P3 window.
-     * @param {string} id
-     * @param {InMessage} msg
-     * @param {number} validatedTime
-     * @returns {void}
      */
     _markDuplicateMessageDelivery(id: string, msg: InMessage, validatedTime?: number): void;
     /**
      * Gets the current IPs for a peer.
-     * @param {string} id
-     * @returns {Array<string>}
      */
     _getIPs(id: string): string[];
     /**
      * Adds tracking for the new IPs in the list, and removes tracking from the obsolete IPs.
-     * @param {string} id
-     * @param {Array<string>} newIPs
-     * @param {Array<string>} oldIPs
-     * @returns {void}
      */
     _setIPs(id: string, newIPs: string[], oldIPs: string[]): void;
     /**
      * Removes an IP list from the tracking list for a peer.
-     * @param {string} id
-     * @param {Array<string>} ips
-     * @returns {void}
      */
     _removeIPs(id: string, ips: string[]): void;
     /**
      * Update all peer IPs to currently open connections
-     * @returns {void}
      */
     _updateIPs(): void;
 }
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts.map b/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts.map
deleted file mode 100644
index 72f8cb4..0000000
--- a/node_modules/libp2p-gossipsub/src/score/peer-score.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"peer-score.d.ts","sourceRoot":"","sources":["../../ts/score/peer-score.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,eAAe,EAA2B,MAAM,qBAAqB,CAAA;AAC9E,OAAO,EAAE,SAAS,EAAqC,MAAM,cAAc,CAAA;AAE3E,OAAO,EAAE,iBAAiB,EAAwB,MAAM,sBAAsB,CAAA;AAC9E,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAA;AAGjD,OAAO,iBAAiB,MAAM,+BAA+B,CAAA;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAA;AAWxD,qBAAa,SAAS;IACpB;;OAEG;IACH,MAAM,EAAE,eAAe,CAAA;IACvB;;OAEG;IACH,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IACjC;;OAEG;IACH,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;IACjC;;OAEG;IACH,eAAe,EAAE,iBAAiB,CAAA;IAClC;;OAEG;IACH,KAAK,EAAE,iBAAiB,CAAA;IACxB,kBAAkB,EAAE,iBAAiB,CAAA;IACrC,mBAAmB,CAAC,EAAE,MAAM,CAAC,OAAO,CAAA;gBAEvB,MAAM,EAAE,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB;IAUpG;;;OAGG;IACH,KAAK,IAAK,IAAI;IASd;;;OAGG;IACH,IAAI,IAAK,IAAI;IAab;;;OAGG;IACH,UAAU,IAAK,IAAI;IAMnB;;;OAGG;IACH,cAAc,IAAK,IAAI;IA6DvB;;;;OAIG;IACH,KAAK,CAAE,EAAE,EAAE,MAAM,GAAG,MAAM;IAQ1B;;;;;OAKG;IACH,UAAU,CAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,GAAG,IAAI;IAQ9C;;;OAGG;IACH,OAAO,CAAE,EAAE,EAAE,MAAM,GAAG,IAAI;IAc1B;;;OAGG;IACH,UAAU,CAAE,EAAE,EAAE,MAAM,GAAG,IAAI;IAgC7B;;;;OAIG;IACH,KAAK,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAiBvC;;;;OAIG;IACH,KAAK,CAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI;IAoBvC;;;OAGG;IACG,eAAe,CAAE,OAAO,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAIzD;;;OAGG;IACG,cAAc,CAAE,OAAO,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IA4BxD;;;;OAIG;IACG,aAAa,CAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;IAoCvE;;;OAGG;IACG,gBAAgB,CAAE,OAAO,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IA2B1D;;;;;OAKG;IACH,2BAA2B,CAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,GAAG,IAAI;IAgBlE;;;;;;OAMG;IACH,yBAAyB,CAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,GAAG,IAAI;IA8BhE;;;;;;;OAOG;IACH,6BAA6B,CAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,SAAI,GAAG,IAAI;IAmCvF;;;;OAIG;IACH,OAAO,CAAE,EAAE,EAAE,MAAM,GAAG,MAAM,EAAE;IAK9B;;;;;;OAMG;IACH,OAAO,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI;IA2C9D;;;;;OAKG;IACH,UAAU,CAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,IAAI;IAc5C;;;OAGG;IACH,UAAU,IAAK,IAAI;CAOpB"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-score.js b/node_modules/libp2p-gossipsub/src/score/peer-score.js
index de466a2..261ec29 100644
--- a/node_modules/libp2p-gossipsub/src/score/peer-score.js
+++ b/node_modules/libp2p-gossipsub/src/score/peer-score.js
@@ -1,13 +1,4 @@
 "use strict";
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
@@ -25,7 +16,7 @@ const { ERR_INVALID_SIGNATURE, ERR_MISSING_SIGNATURE } = pubsubErrors.codes;
 const log = debug('libp2p:gossipsub:score');
 class PeerScore {
     constructor(params, connectionManager) {
-        peer_score_params_1.validatePeerScoreParams(params);
+        (0, peer_score_params_1.validatePeerScoreParams)(params);
         this.params = params;
         this._connectionManager = connectionManager;
         this.peerStats = new Map();
@@ -35,7 +26,6 @@ class PeerScore {
     }
     /**
      * Start PeerScore instance
-     * @returns {void}
      */
     start() {
         if (this._backgroundInterval) {
@@ -47,7 +37,6 @@ class PeerScore {
     }
     /**
      * Stop PeerScore instance
-     * @returns {void}
      */
     stop() {
         if (!this._backgroundInterval) {
@@ -63,7 +52,6 @@ class PeerScore {
     }
     /**
      * Periodic maintenance
-     * @returns {void}
      */
     background() {
         this._refreshScores();
@@ -72,7 +60,6 @@ class PeerScore {
     }
     /**
      * Decays scores, and purges score records for disconnected peers once their expiry has elapsed.
-     * @returns {void}
      */
     _refreshScores() {
         const now = Date.now();
@@ -93,7 +80,7 @@ class PeerScore {
             }
             Object.entries(pstats.topics).forEach(([topic, tstats]) => {
                 const tparams = this.params.topics[topic];
-                if (!tparams) {
+                if (tparams === undefined) {
                     // we are not scoring this topic
                     // should be unreachable, we only add scored topics to pstats
                     return;
@@ -133,8 +120,6 @@ class PeerScore {
     }
     /**
      * Return the score for a peer
-     * @param {string} id
-     * @returns {Number}
      */
     score(id) {
         const pstats = this.peerStats.get(id);
@@ -150,16 +135,13 @@ class PeerScore {
         const { score, cacheUntil } = cacheEntry;
         if (cacheUntil > now && score !== null)
             return score;
-        cacheEntry.score = compute_score_1.computeScore(id, pstats, this.params, this.peerIPs);
+        cacheEntry.score = (0, compute_score_1.computeScore)(id, pstats, this.params, this.peerIPs);
         // decayInterval is used to refresh score so we don't want to cache more than that
         cacheEntry.cacheUntil = now + this.params.decayInterval;
         return cacheEntry.score;
     }
     /**
      * Apply a behavioural penalty to a peer
-     * @param {string} id
-     * @param {Number} penalty
-     * @returns {void}
      */
     addPenalty(id, penalty) {
         const pstats = this.peerStats.get(id);
@@ -169,14 +151,10 @@ class PeerScore {
         pstats.behaviourPenalty += penalty;
         this.scoreCache.set(id, { score: null, cacheUntil: 0 });
     }
-    /**
-     * @param {string} id
-     * @returns {void}
-     */
     addPeer(id) {
         // create peer stats (not including topic stats for each topic to be scored)
         // topic stats will be added as needed
-        const pstats = peer_stats_1.createPeerStats({
+        const pstats = (0, peer_stats_1.createPeerStats)({
             connected: true
         });
         this.peerStats.set(id, pstats);
@@ -185,10 +163,6 @@ class PeerScore {
         this._setIPs(id, ips, pstats.ips);
         pstats.ips = ips;
     }
-    /**
-     * @param {string} id
-     * @returns {void}
-     */
     removePeer(id) {
         const pstats = this.peerStats.get(id);
         if (!pstats) {
@@ -213,21 +187,17 @@ class PeerScore {
                 tstats.meshFailurePenalty += deficit * deficit;
             }
             tstats.inMesh = false;
+            tstats.meshMessageDeliveriesActive = false;
         });
         pstats.connected = false;
         pstats.expire = Date.now() + this.params.retainScore;
     }
-    /**
-     * @param {string} id
-     * @param {String} topic
-     * @returns {void}
-     */
     graft(id, topic) {
         const pstats = this.peerStats.get(id);
         if (!pstats) {
             return;
         }
-        const tstats = peer_stats_1.ensureTopicStats(topic, pstats, this.params);
+        const tstats = (0, peer_stats_1.ensureTopicStats)(topic, pstats, this.params);
         if (!tstats) {
             return;
         }
@@ -237,17 +207,12 @@ class PeerScore {
         tstats.meshMessageDeliveriesActive = false;
         this.scoreCache.set(id, { score: null, cacheUntil: 0 });
     }
-    /**
-     * @param {string} id
-     * @param {string} topic
-     * @returns {void}
-     */
     prune(id, topic) {
         const pstats = this.peerStats.get(id);
         if (!pstats) {
             return;
         }
-        const tstats = peer_stats_1.ensureTopicStats(topic, pstats, this.params);
+        const tstats = (0, peer_stats_1.ensureTopicStats)(topic, pstats, this.params);
         if (!tstats) {
             return;
         }
@@ -258,121 +223,98 @@ class PeerScore {
             tstats.meshFailurePenalty += deficit * deficit;
         }
         tstats.inMesh = false;
+        tstats.meshMessageDeliveriesActive = false;
         this.scoreCache.set(id, { score: null, cacheUntil: 0 });
     }
     /**
      * @param {InMessage} message
      * @returns {Promise<void>}
      */
-    validateMessage(msgIdStr) {
-        return __awaiter(this, void 0, void 0, function* () {
-            this.deliveryRecords.ensureRecord(msgIdStr);
-        });
+    async validateMessage(msgIdStr) {
+        this.deliveryRecords.ensureRecord(msgIdStr);
     }
-    /**
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
-     */
-    deliverMessage(msg, msgIdStr) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const id = msg.receivedFrom;
-            this._markFirstMessageDelivery(id, msg);
-            const drec = this.deliveryRecords.ensureRecord(msgIdStr);
-            const now = Date.now();
-            // defensive check that this is the first delivery trace -- delivery status should be unknown
-            if (drec.status !== message_deliveries_1.DeliveryRecordStatus.unknown) {
-                log('unexpected delivery: message from %s was first seen %s ago and has delivery status %d', id, now - drec.firstSeen, message_deliveries_1.DeliveryRecordStatus[drec.status]);
-                return;
+    async deliverMessage(msg, msgIdStr) {
+        const id = msg.receivedFrom;
+        this._markFirstMessageDelivery(id, msg);
+        const drec = this.deliveryRecords.ensureRecord(msgIdStr);
+        const now = Date.now();
+        // defensive check that this is the first delivery trace -- delivery status should be unknown
+        if (drec.status !== message_deliveries_1.DeliveryRecordStatus.unknown) {
+            log('unexpected delivery: message from %s was first seen %s ago and has delivery status %d', id, now - drec.firstSeen, message_deliveries_1.DeliveryRecordStatus[drec.status]);
+            return;
+        }
+        // mark the message as valid and reward mesh peers that have already forwarded it to us
+        drec.status = message_deliveries_1.DeliveryRecordStatus.valid;
+        drec.validated = now;
+        drec.peers.forEach((p) => {
+            // this check is to make sure a peer can't send us a message twice and get a double count
+            // if it is a first delivery.
+            if (p !== id) {
+                this._markDuplicateMessageDelivery(p, msg);
             }
-            // mark the message as valid and reward mesh peers that have already forwarded it to us
-            drec.status = message_deliveries_1.DeliveryRecordStatus.valid;
-            drec.validated = now;
-            drec.peers.forEach(p => {
-                // this check is to make sure a peer can't send us a message twice and get a double count
-                // if it is a first delivery.
-                if (p !== id) {
-                    this._markDuplicateMessageDelivery(p, msg);
-                }
-            });
         });
     }
-    /**
-     * @param {InMessage} msg
-     * @param {string} reason
-     * @returns {Promise<void>}
-     */
-    rejectMessage(msg, msgIdStr, reason) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const id = msg.receivedFrom;
-            switch (reason) {
-                case ERR_MISSING_SIGNATURE:
-                case ERR_INVALID_SIGNATURE:
-                    this._markInvalidMessageDelivery(id, msg);
-                    return;
-            }
-            const drec = this.deliveryRecords.ensureRecord(msgIdStr);
-            // defensive check that this is the first rejection -- delivery status should be unknown
-            if (drec.status !== message_deliveries_1.DeliveryRecordStatus.unknown) {
-                log('unexpected rejection: message from %s was first seen %s ago and has delivery status %d', id, Date.now() - drec.firstSeen, message_deliveries_1.DeliveryRecordStatus[drec.status]);
+    async rejectMessage(msg, msgIdStr, reason) {
+        const id = msg.receivedFrom;
+        switch (reason) {
+            case ERR_MISSING_SIGNATURE:
+            case ERR_INVALID_SIGNATURE:
+                this._markInvalidMessageDelivery(id, msg);
                 return;
-            }
-            switch (reason) {
-                case constants_1.ERR_TOPIC_VALIDATOR_IGNORE:
-                    // we were explicitly instructed by the validator to ignore the message but not penalize the peer
-                    drec.status = message_deliveries_1.DeliveryRecordStatus.ignored;
-                    return;
-            }
-            // mark the message as invalid and penalize peers that have already forwarded it.
-            drec.status = message_deliveries_1.DeliveryRecordStatus.invalid;
-            this._markInvalidMessageDelivery(id, msg);
-            drec.peers.forEach(p => {
-                this._markInvalidMessageDelivery(p, msg);
-            });
-        });
-    }
-    /**
-     * @param {InMessage} msg
-     * @returns {Promise<void>}
-     */
-    duplicateMessage(msg, msgIdStr) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const id = msg.receivedFrom;
-            const drec = this.deliveryRecords.ensureRecord(msgIdStr);
-            if (drec.peers.has(id)) {
-                // we have already seen this duplicate
+        }
+        const drec = this.deliveryRecords.ensureRecord(msgIdStr);
+        // defensive check that this is the first rejection -- delivery status should be unknown
+        if (drec.status !== message_deliveries_1.DeliveryRecordStatus.unknown) {
+            log('unexpected rejection: message from %s was first seen %s ago and has delivery status %d', id, Date.now() - drec.firstSeen, message_deliveries_1.DeliveryRecordStatus[drec.status]);
+            return;
+        }
+        switch (reason) {
+            case constants_1.ERR_TOPIC_VALIDATOR_IGNORE:
+                // we were explicitly instructed by the validator to ignore the message but not penalize the peer
+                drec.status = message_deliveries_1.DeliveryRecordStatus.ignored;
                 return;
-            }
-            switch (drec.status) {
-                case message_deliveries_1.DeliveryRecordStatus.unknown:
-                    // the message is being validated; track the peer delivery and wait for
-                    // the Deliver/Reject/Ignore notification.
-                    drec.peers.add(id);
-                    break;
-                case message_deliveries_1.DeliveryRecordStatus.valid:
-                    // mark the peer delivery time to only count a duplicate delivery once.
-                    drec.peers.add(id);
-                    this._markDuplicateMessageDelivery(id, msg, drec.validated);
-                    break;
-                case message_deliveries_1.DeliveryRecordStatus.invalid:
-                    // we no longer track delivery time
-                    this._markInvalidMessageDelivery(id, msg);
-                    break;
-            }
+        }
+        // mark the message as invalid and penalize peers that have already forwarded it.
+        drec.status = message_deliveries_1.DeliveryRecordStatus.invalid;
+        this._markInvalidMessageDelivery(id, msg);
+        drec.peers.forEach((p) => {
+            this._markInvalidMessageDelivery(p, msg);
         });
     }
+    async duplicateMessage(msg, msgIdStr) {
+        const id = msg.receivedFrom;
+        const drec = this.deliveryRecords.ensureRecord(msgIdStr);
+        if (drec.peers.has(id)) {
+            // we have already seen this duplicate
+            return;
+        }
+        switch (drec.status) {
+            case message_deliveries_1.DeliveryRecordStatus.unknown:
+                // the message is being validated; track the peer delivery and wait for
+                // the Deliver/Reject/Ignore notification.
+                drec.peers.add(id);
+                break;
+            case message_deliveries_1.DeliveryRecordStatus.valid:
+                // mark the peer delivery time to only count a duplicate delivery once.
+                drec.peers.add(id);
+                this._markDuplicateMessageDelivery(id, msg, drec.validated);
+                break;
+            case message_deliveries_1.DeliveryRecordStatus.invalid:
+                // we no longer track delivery time
+                this._markInvalidMessageDelivery(id, msg);
+                break;
+        }
+    }
     /**
      * Increments the "invalid message deliveries" counter for all scored topics the message is published in.
-     * @param {string} id
-     * @param {InMessage} msg
-     * @returns {void}
      */
     _markInvalidMessageDelivery(id, msg) {
         const pstats = this.peerStats.get(id);
         if (!pstats) {
             return;
         }
-        msg.topicIDs.forEach(topic => {
-            const tstats = peer_stats_1.ensureTopicStats(topic, pstats, this.params);
+        msg.topicIDs.forEach((topic) => {
+            const tstats = (0, peer_stats_1.ensureTopicStats)(topic, pstats, this.params);
             if (!tstats) {
                 return;
             }
@@ -383,17 +325,14 @@ class PeerScore {
     /**
      * Increments the "first message deliveries" counter for all scored topics the message is published in,
      * as well as the "mesh message deliveries" counter, if the peer is in the mesh for the topic.
-     * @param {string} id
-     * @param {InMessage} msg
-     * @returns {void}
      */
     _markFirstMessageDelivery(id, msg) {
         const pstats = this.peerStats.get(id);
         if (!pstats) {
             return;
         }
-        msg.topicIDs.forEach(topic => {
-            const tstats = peer_stats_1.ensureTopicStats(topic, pstats, this.params);
+        msg.topicIDs.forEach((topic) => {
+            const tstats = (0, peer_stats_1.ensureTopicStats)(topic, pstats, this.params);
             if (!tstats) {
                 return;
             }
@@ -416,10 +355,6 @@ class PeerScore {
     /**
      * Increments the "mesh message deliveries" counter for messages we've seen before,
      * as long the message was received within the P3 window.
-     * @param {string} id
-     * @param {InMessage} msg
-     * @param {number} validatedTime
-     * @returns {void}
      */
     _markDuplicateMessageDelivery(id, msg, validatedTime = 0) {
         const pstats = this.peerStats.get(id);
@@ -427,8 +362,8 @@ class PeerScore {
             return;
         }
         const now = validatedTime ? Date.now() : 0;
-        msg.topicIDs.forEach(topic => {
-            const tstats = peer_stats_1.ensureTopicStats(topic, pstats, this.params);
+        msg.topicIDs.forEach((topic) => {
+            const tstats = (0, peer_stats_1.ensureTopicStats)(topic, pstats, this.params);
             if (!tstats) {
                 return;
             }
@@ -452,19 +387,12 @@ class PeerScore {
     }
     /**
      * Gets the current IPs for a peer.
-     * @param {string} id
-     * @returns {Array<string>}
      */
     _getIPs(id) {
-        return this._connectionManager.getAll(peer_id_1.default.createFromB58String(id))
-            .map(c => c.remoteAddr.toOptions().host);
+        return this._connectionManager.getAll(peer_id_1.default.createFromB58String(id)).map((c) => c.remoteAddr.toOptions().host);
     }
     /**
      * Adds tracking for the new IPs in the list, and removes tracking from the obsolete IPs.
-     * @param {string} id
-     * @param {Array<string>} newIPs
-     * @param {Array<string>} oldIPs
-     * @returns {void}
      */
     _setIPs(id, newIPs, oldIPs) {
         // add the new IPs to the tracking
@@ -509,12 +437,9 @@ class PeerScore {
     }
     /**
      * Removes an IP list from the tracking list for a peer.
-     * @param {string} id
-     * @param {Array<string>} ips
-     * @returns {void}
      */
     _removeIPs(id, ips) {
-        ips.forEach(ip => {
+        ips.forEach((ip) => {
             const peers = this.peerIPs.get(ip);
             if (!peers) {
                 return;
@@ -528,7 +453,6 @@ class PeerScore {
     }
     /**
      * Update all peer IPs to currently open connections
-     * @returns {void}
      */
     _updateIPs() {
         this.peerStats.forEach((pstats, id) => {
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-stats.d.ts.map b/node_modules/libp2p-gossipsub/src/score/peer-stats.d.ts.map
deleted file mode 100644
index b354e53..0000000
--- a/node_modules/libp2p-gossipsub/src/score/peer-stats.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"peer-stats.d.ts","sourceRoot":"","sources":["../../ts/score/peer-stats.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AAErD,MAAM,WAAW,SAAS;IACxB;;OAEG;IACH,SAAS,EAAE,OAAO,CAAA;IAElB;;OAEG;IACH,MAAM,EAAE,MAAM,CAAA;IAEd;;OAEG;IACH,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;IAElC;;OAEG;IACH,GAAG,EAAE,MAAM,EAAE,CAAA;IAEb;;OAEG;IACH,gBAAgB,EAAE,MAAM,CAAA;CACzB;AAED,MAAM,WAAW,UAAU;IACzB;;OAEG;IACH,MAAM,EAAE,OAAO,CAAA;IAEf;;OAEG;IACH,SAAS,EAAE,MAAM,CAAA;IAEjB;;;OAGG;IACH,QAAQ,EAAE,MAAM,CAAA;IAEhB;;OAEG;IACH,sBAAsB,EAAE,MAAM,CAAA;IAE9B;;OAEG;IACH,qBAAqB,EAAE,MAAM,CAAA;IAE7B;;OAEG;IACH,2BAA2B,EAAE,OAAO,CAAA;IAEpC;;OAEG;IACH,kBAAkB,EAAE,MAAM,CAAA;IAE1B;;OAEG;IACH,wBAAwB,EAAE,MAAM,CAAA;CACjC;AAED,wBAAgB,eAAe,CAAE,EAAE,GAAE,OAAO,CAAC,SAAS,CAAM,GAAG,SAAS,CAevE;AAED,wBAAgB,gBAAgB,CAAE,EAAE,GAAE,OAAO,CAAC,UAAU,CAAM,GAAG,UAAU,CAY1E;AAED,wBAAgB,gBAAgB,CAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,GAAG,UAAU,GAAG,SAAS,CAU/G"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/peer-stats.js b/node_modules/libp2p-gossipsub/src/score/peer-stats.js
index 0070616..4858a3c 100644
--- a/node_modules/libp2p-gossipsub/src/score/peer-stats.js
+++ b/node_modules/libp2p-gossipsub/src/score/peer-stats.js
@@ -2,25 +2,41 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ensureTopicStats = exports.createTopicStats = exports.createPeerStats = void 0;
 function createPeerStats(ps = {}) {
-    return Object.assign(Object.assign({ connected: false, expire: 0, ips: [], behaviourPenalty: 0 }, ps), { topics: ps.topics
-            ? Object.entries(ps.topics)
-                .reduce((topics, [topic, topicStats]) => {
+    return {
+        connected: false,
+        expire: 0,
+        ips: [],
+        behaviourPenalty: 0,
+        ...ps,
+        topics: ps.topics
+            ? Object.entries(ps.topics).reduce((topics, [topic, topicStats]) => {
                 topics[topic] = createTopicStats(topicStats);
                 return topics;
             }, {})
-            : {} });
+            : {}
+    };
 }
 exports.createPeerStats = createPeerStats;
 function createTopicStats(ts = {}) {
-    return Object.assign({ inMesh: false, graftTime: 0, meshTime: 0, firstMessageDeliveries: 0, meshMessageDeliveries: 0, meshMessageDeliveriesActive: false, meshFailurePenalty: 0, invalidMessageDeliveries: 0 }, ts);
+    return {
+        inMesh: false,
+        graftTime: 0,
+        meshTime: 0,
+        firstMessageDeliveries: 0,
+        meshMessageDeliveries: 0,
+        meshMessageDeliveriesActive: false,
+        meshFailurePenalty: 0,
+        invalidMessageDeliveries: 0,
+        ...ts
+    };
 }
 exports.createTopicStats = createTopicStats;
 function ensureTopicStats(topic, ps, params) {
     let ts = ps.topics[topic];
-    if (ts) {
+    if (ts !== undefined) {
         return ts;
     }
-    if (!params.topics[topic]) {
+    if (params.topics[topic] === undefined) {
         return undefined;
     }
     ps.topics[topic] = ts = createTopicStats();
diff --git a/node_modules/libp2p-gossipsub/src/score/score-param-decay.d.ts.map b/node_modules/libp2p-gossipsub/src/score/score-param-decay.d.ts.map
deleted file mode 100644
index 8ddd569..0000000
--- a/node_modules/libp2p-gossipsub/src/score/score-param-decay.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"score-param-decay.d.ts","sourceRoot":"","sources":["../../ts/score/score-param-decay.ts"],"names":[],"mappings":"AAGA;;;GAGG;AACH,wBAAgB,mBAAmB,CAAE,KAAK,EAAE,MAAM,GAAG,MAAM,CAE1D;AAED;;GAEG;AACH,wBAAgB,2BAA2B,CAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,GAAG,MAAM,CAKrG"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/score/score-param-decay.js b/node_modules/libp2p-gossipsub/src/score/score-param-decay.js
index 8f6528d..4e845a1 100644
--- a/node_modules/libp2p-gossipsub/src/score/score-param-decay.js
+++ b/node_modules/libp2p-gossipsub/src/score/score-param-decay.js
@@ -18,6 +18,6 @@ function scoreParameterDecayWithBase(decay, base, decayToZero) {
     // the decay is linear, so after n ticks the value is factor^n
     // so factor^n = decayToZero => factor = decayToZero^(1/n)
     const ticks = decay / base;
-    return Math.pow(decayToZero, (1 / ticks));
+    return decayToZero ** (1 / ticks);
 }
 exports.scoreParameterDecayWithBase = scoreParameterDecayWithBase;
diff --git a/node_modules/libp2p-gossipsub/src/tracer.d.ts b/node_modules/libp2p-gossipsub/src/tracer.d.ts
index ecd87c5..40b7827 100644
--- a/node_modules/libp2p-gossipsub/src/tracer.d.ts
+++ b/node_modules/libp2p-gossipsub/src/tracer.d.ts
@@ -12,31 +12,21 @@ export declare class IWantTracer {
      * Map per message id, per peer, promise expiration time
      */
     promises: Map<string, Map<string, number>>;
-    constructor();
     /**
      * Track a promise to deliver a message from a list of msgIds we are requesting
-     * @param {string} p peer id
-     * @param {string[]} msgIds
-     * @returns {void}
      */
     addPromise(p: string, msgIds: Uint8Array[]): void;
     /**
      * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.
-     * @returns {Map<string, number>}
      */
     getBrokenPromises(): Map<string, number>;
     /**
      * Someone delivered a message, stop tracking promises for it
-     * @param {string} msgIdStr
-     * @returns {Promise<void>}
      */
     deliverMessage(msgIdStr: string): Promise<void>;
     /**
      * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,
      * unless its an obviously invalid message.
-     * @param {string} msgIdStr
-     * @param {string} reason
-     * @returns {Promise<void>}
      */
     rejectMessage(msgIdStr: string, reason: string): Promise<void>;
     clear(): void;
diff --git a/node_modules/libp2p-gossipsub/src/tracer.d.ts.map b/node_modules/libp2p-gossipsub/src/tracer.d.ts.map
deleted file mode 100644
index f911cae..0000000
--- a/node_modules/libp2p-gossipsub/src/tracer.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"tracer.d.ts","sourceRoot":"","sources":["../ts/tracer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAA;AACxD,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAA;AAShD;;;;;;;GAOG;AACH,qBAAa,WAAW;IACtB,QAAQ,EAAE,iBAAiB,CAAA;IAC3B;;;OAGG;IACH,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;gBAC7B,QAAQ,EAAE,iBAAiB;IAKxC;;;;;OAKG;IACH,UAAU,CAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI;IAiBlD;;;OAGG;IACH,iBAAiB,IAAK,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;IAuBzC;;;;OAIG;IACG,cAAc,CAAE,GAAG,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;IAMpD;;;;;;OAMG;IACG,aAAa,CAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;IAYnE,KAAK,IAAK,IAAI;CAGf"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/tracer.js b/node_modules/libp2p-gossipsub/src/tracer.js
index d936393..100b919 100644
--- a/node_modules/libp2p-gossipsub/src/tracer.js
+++ b/node_modules/libp2p-gossipsub/src/tracer.js
@@ -1,13 +1,4 @@
 "use strict";
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.IWantTracer = void 0;
 const constants_1 = require("./constants");
@@ -24,19 +15,20 @@ const { ERR_INVALID_SIGNATURE, ERR_MISSING_SIGNATURE } = pubsubErrors.codes;
  */
 class IWantTracer {
     constructor() {
+        /**
+         * Promises to deliver a message
+         * Map per message id, per peer, promise expiration time
+         */
         this.promises = new Map();
     }
     /**
      * Track a promise to deliver a message from a list of msgIds we are requesting
-     * @param {string} p peer id
-     * @param {string[]} msgIds
-     * @returns {void}
      */
     addPromise(p, msgIds) {
         // pick msgId randomly from the list
         const ix = Math.floor(Math.random() * msgIds.length);
         const msgId = msgIds[ix];
-        const msgIdStr = utils_1.messageIdToString(msgId);
+        const msgIdStr = (0, utils_1.messageIdToString)(msgId);
         let peers = this.promises.get(msgIdStr);
         if (!peers) {
             peers = new Map();
@@ -48,7 +40,6 @@ class IWantTracer {
     }
     /**
      * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.
-     * @returns {Map<string, number>}
      */
     getBrokenPromises() {
         const now = Date.now();
@@ -58,7 +49,7 @@ class IWantTracer {
                 // the promise has been broken
                 if (expire < now) {
                     // add 1 to result
-                    result.set(p, (result.get(p) || 0) + 1);
+                    result.set(p, (result.get(p) ? result.get(p): 0) + 1);
                     // delete from tracked promises
                     peers.delete(p);
                 }
@@ -72,30 +63,21 @@ class IWantTracer {
     }
     /**
      * Someone delivered a message, stop tracking promises for it
-     * @param {string} msgIdStr
-     * @returns {Promise<void>}
      */
-    deliverMessage(msgIdStr) {
-        return __awaiter(this, void 0, void 0, function* () {
-            this.promises.delete(msgIdStr);
-        });
+    async deliverMessage(msgIdStr) {
+        this.promises.delete(msgIdStr);
     }
     /**
      * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,
      * unless its an obviously invalid message.
-     * @param {string} msgIdStr
-     * @param {string} reason
-     * @returns {Promise<void>}
      */
-    rejectMessage(msgIdStr, reason) {
-        return __awaiter(this, void 0, void 0, function* () {
-            switch (reason) {
-                case ERR_INVALID_SIGNATURE:
-                case ERR_MISSING_SIGNATURE:
-                    return;
-            }
-            this.promises.delete(msgIdStr);
-        });
+    async rejectMessage(msgIdStr, reason) {
+        switch (reason) {
+            case ERR_INVALID_SIGNATURE:
+            case ERR_MISSING_SIGNATURE:
+                return;
+        }
+        this.promises.delete(msgIdStr);
     }
     clear() {
         this.promises.clear();
diff --git a/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts b/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts
index 64dc167..6470374 100644
--- a/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts
+++ b/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts
@@ -1,8 +1,5 @@
 import { RPC, IRPC } from '../message/rpc';
 /**
  * Create a gossipsub RPC object
- * @param {Array<RPC.IMessage>} msgs
- * @param {Partial<RPC.IControlMessage>} control
- * @returns {IRPC}
  */
 export declare function createGossipRpc(msgs?: RPC.IMessage[], control?: Partial<RPC.IControlMessage>): IRPC;
diff --git a/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts.map b/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts.map
deleted file mode 100644
index 1dd205c..0000000
--- a/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"create-gossip-rpc.d.ts","sourceRoot":"","sources":["../../ts/utils/create-gossip-rpc.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAA;AAE1C;;;;;GAKG;AACH,wBAAgB,eAAe,CAAE,IAAI,GAAE,GAAG,CAAC,QAAQ,EAAO,EAAE,OAAO,GAAE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAM,GAAG,IAAI,CAY5G"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.js b/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.js
index 87f36dc..49fc9e6 100644
--- a/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.js
+++ b/node_modules/libp2p-gossipsub/src/utils/create-gossip-rpc.js
@@ -3,15 +3,18 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.createGossipRpc = void 0;
 /**
  * Create a gossipsub RPC object
- * @param {Array<RPC.IMessage>} msgs
- * @param {Partial<RPC.IControlMessage>} control
- * @returns {IRPC}
  */
 function createGossipRpc(msgs = [], control = {}) {
     return {
         subscriptions: [],
         msgs: msgs,
-        control: Object.assign({ ihave: [], iwant: [], graft: [], prune: [] }, control)
+        control: {
+            ihave: [],
+            iwant: [],
+            graft: [],
+            prune: [],
+            ...control
+        }
     };
 }
 exports.createGossipRpc = createGossipRpc;
diff --git a/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.d.ts.map b/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.d.ts.map
deleted file mode 100644
index 97c09b3..0000000
--- a/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"has-gossip-protocol.d.ts","sourceRoot":"","sources":["../../ts/utils/has-gossip-protocol.ts"],"names":[],"mappings":"AAEA,wBAAgB,iBAAiB,CAAE,QAAQ,EAAE,MAAM,GAAG,OAAO,CAI5D"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.js b/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.js
index 8e83d64..d26c4cd 100644
--- a/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.js
+++ b/node_modules/libp2p-gossipsub/src/utils/has-gossip-protocol.js
@@ -3,6 +3,6 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.hasGossipProtocol = void 0;
 const constants_1 = require("../constants");
 function hasGossipProtocol(protocol) {
-    return (protocol === constants_1.GossipsubIDv10 || protocol === constants_1.GossipsubIDv11);
+    return protocol === constants_1.GossipsubIDv10 || protocol === constants_1.GossipsubIDv11;
 }
 exports.hasGossipProtocol = hasGossipProtocol;
diff --git a/node_modules/libp2p-gossipsub/src/utils/index.d.ts.map b/node_modules/libp2p-gossipsub/src/utils/index.d.ts.map
deleted file mode 100644
index 02255af..0000000
--- a/node_modules/libp2p-gossipsub/src/utils/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../ts/utils/index.ts"],"names":[],"mappings":"AAAA,cAAc,qBAAqB,CAAA;AACnC,cAAc,WAAW,CAAA;AACzB,cAAc,uBAAuB,CAAA;AACrC,cAAc,qBAAqB,CAAA"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/utils/index.js b/node_modules/libp2p-gossipsub/src/utils/index.js
index 10aaed7..fcfb5c0 100644
--- a/node_modules/libp2p-gossipsub/src/utils/index.js
+++ b/node_modules/libp2p-gossipsub/src/utils/index.js
@@ -1,7 +1,11 @@
 "use strict";
 var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
-    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+    var desc = Object.getOwnPropertyDescriptor(m, k);
+    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
+      desc = { enumerable: true, get: function() { return m[k]; } };
+    }
+    Object.defineProperty(o, k2, desc);
 }) : (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     o[k2] = m[k];
diff --git a/node_modules/libp2p-gossipsub/src/utils/messageIdToString.d.ts.map b/node_modules/libp2p-gossipsub/src/utils/messageIdToString.d.ts.map
deleted file mode 100644
index 9116c9e..0000000
--- a/node_modules/libp2p-gossipsub/src/utils/messageIdToString.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"messageIdToString.d.ts","sourceRoot":"","sources":["../../ts/utils/messageIdToString.ts"],"names":[],"mappings":"AAEA,wBAAgB,iBAAiB,CAAE,KAAK,EAAE,UAAU,GAAG,MAAM,CAE5D"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/utils/messageIdToString.js b/node_modules/libp2p-gossipsub/src/utils/messageIdToString.js
index 63c31bf..e42080e 100644
--- a/node_modules/libp2p-gossipsub/src/utils/messageIdToString.js
+++ b/node_modules/libp2p-gossipsub/src/utils/messageIdToString.js
@@ -4,10 +4,10 @@ exports.messageIdFromString = exports.messageIdToString = void 0;
 const from_string_1 = require("uint8arrays/from-string");
 const to_string_1 = require("uint8arrays/to-string");
 function messageIdToString(msgId) {
-    return to_string_1.toString(msgId, 'base64');
+    return (0, to_string_1.toString)(msgId, 'base64');
 }
 exports.messageIdToString = messageIdToString;
 function messageIdFromString(msgId) {
-    return from_string_1.fromString(msgId, 'base64');
+    return (0, from_string_1.fromString)(msgId, 'base64');
 }
 exports.messageIdFromString = messageIdFromString;
diff --git a/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts b/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts
index 526e863..c61eee9 100644
--- a/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts
+++ b/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts
@@ -2,8 +2,5 @@
  * Pseudo-randomly shuffles an array
  *
  * Mutates the input array
- *
- * @param {Array} arr
- * @returns {Array}
  */
 export declare function shuffle<T>(arr: T[]): T[];
diff --git a/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts.map b/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts.map
deleted file mode 100644
index b8a6b7d..0000000
--- a/node_modules/libp2p-gossipsub/src/utils/shuffle.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"shuffle.d.ts","sourceRoot":"","sources":["../../ts/utils/shuffle.ts"],"names":[],"mappings":"AAEA;;;;;;;GAOG;AACH,wBAAgB,OAAO,CAAC,CAAC,EAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAezC"}
\ No newline at end of file
diff --git a/node_modules/libp2p-gossipsub/src/utils/shuffle.js b/node_modules/libp2p-gossipsub/src/utils/shuffle.js
index 00607b2..38c4447 100644
--- a/node_modules/libp2p-gossipsub/src/utils/shuffle.js
+++ b/node_modules/libp2p-gossipsub/src/utils/shuffle.js
@@ -5,9 +5,6 @@ exports.shuffle = void 0;
  * Pseudo-randomly shuffles an array
  *
  * Mutates the input array
- *
- * @param {Array} arr
- * @returns {Array}
  */
 function shuffle(arr) {
     if (arr.length <= 1) {
diff --git a/node_modules/libp2p-gossipsub/src/utils/time-cache.js b/node_modules/libp2p-gossipsub/src/utils/time-cache.js
index b2fb35e..353b2a1 100644
--- a/node_modules/libp2p-gossipsub/src/utils/time-cache.js
+++ b/node_modules/libp2p-gossipsub/src/utils/time-cache.js
@@ -8,8 +8,8 @@ exports.SimpleTimeCache = void 0;
  */
 class SimpleTimeCache {
     constructor(options) {
-        this.lastPruneTime = 0;
         this.entries = new Map();
+        this.lastPruneTime = 0;
         this.validityMs = options.validityMs;
         // allow negative validityMs so that this does not cache anything, spec test compliance.spec.js
         // sends duplicate messages and expect peer to receive all. Application likely uses positive validityMs
@@ -39,7 +39,7 @@ class SimpleTimeCache {
     }
     get(key) {
         const value = this.entries.get(key);
-        return (value && value.validUntilMs >= Date.now()) ? value.value : undefined;
+        return value && value.validUntilMs >= Date.now() ? value.value : undefined;
     }
     clear() {
         this.entries = new Map();
